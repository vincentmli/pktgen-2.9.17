cscope 15 /home/backup/dpdk/pktgen-dpdk.old/dpdk/examples/pktgen-dpdk               0001736765
	@app/cmd-functions.c

95 
	~"cmd-fun˘i⁄s.h
"

97 
	~<°dio.h
>

98 
	~<ãrmios.h
>

99 
	~<°rög.h
>

100 
	~<uni°d.h
>

102 
	~<cmdlöe_rdlöe.h
>

103 
	~<cmdlöe_∑r£_°rög.h
>

104 
	~<cmdlöe_∑r£_ùaddr.h
>

105 
	~<cmdlöe.h
>

106 
	~<πe_©omic.h
>

107 
	~<πe_dev¨gs.h
>

109 
	~"pktgí.h
"

111 
	~"wr_c›yright_öfo.h
"

112 
	~"pktgí-cmds.h
"

113 
	~"pktgí-maö.h
"

114 
	~"Õktgílib.h
"

115 
	~"pktgí-di•œy.h
"

116 
	~"pktgí-øndom.h
"

117 
	~"pktgí-log.h
"

119 
cmdlöe_∑r£_˘x_t
 
	gmaö_˘x
[];

134 
	$cmd_p‹t_di•œy
(*
buff
, 
uöt32_t
 
Àn
, 
uöt64_t
 
p‹éi°
) {

135 *
p
 = 
buff
;

136 
uöt32_t
 
bô
 = 0, 
fú°
, 
comma
 = 0;

138 
buff
[0] = '\0';

139 
bô
 < ((
p‹éi°
) << 3) ) {

140 i‡–(
p‹éi°
 & (1ULL << 
bô
++)) == 0)

142 
fú°
 = (
bô
 - 1);

143  (
p‹éi°
 & (1ULL << 
bô
)) )

144 
bô
++;

145 i‡(
fú°
 =(
bô
 - 1) )

146 
	`¢¥ötf
(
p
, 
Àn
 - 
	`°æí
(

147 
buff
), "%s%d", (
comma
) ? "," : "",

148 
fú°
);

150 
	`¢¥ötf
(
p
, 
Àn
 - 
	`°æí
(

151 
buff
), "%s%d-%d", (
comma
Ë? "," : "", 
fú°
,

152 (
bô
 - 1));

154 
p
 = 
buff
 + 
	`°æí
(buff);

155 i‡(
	`°æí
(
buff
Ë> (
Àn
 - 5) )

157 
comma
 = 1;

159  
buff
;

160 
	}
}

163 c⁄° *
	ghñp_öfo
[] = {

221 #ifde‡
INCLUDE_PING6


336 
NULL


352 
	$cmdlöe_∑u£
(
cmdlöe
 *
˛
, c⁄° *
msg
)

354 
c
 = '\0';

355 
n
;

357 
	`cmdlöe_¥ötf
(
˛
, "%s", 
msg
);

358 
n
 = 
	`ªad
(
˛
->
s_ö
, &
c
, 1);

359 i‡(
n
 < 0)

361 
	`cmdlöe_¥ötf
(
˛
, "\r");

362 
	`wr_s¸n_eﬁ
();

363  (
c
 == 0x1b) ? 1 : 0;

364 
	}
}

366 
	scmd_hñp_ªsu…
 {

367 
cmdlöe_fixed_°rög_t
 
	mhñp
;

383 
	$cmd_hñp_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

384 
cmdlöe
 *
˛
,

385 *
d©a
 
__πe_unu£d
)

387 
i
, 
∑u£d
;

389 
∑u£d
 = 
	`wr_s¸n_is_∑u£d
();

391 i‡(!
∑u£d
)

392 
	`wr_s¸n_∑u£
();

393 
	`wr_s¸n_£tw
(1);

394 
	`wr_s¸n_˛s
();

396 
	`wr_s¸n_pos
(0, 0);

397 
	`cmdlöe_¥ötf
(
˛
, "%s%s\n", 
hñp_öfo
[1], 
	`wr_c›yright_msg
());

398 
	`wr_s¸n_pos
(3, 0);

399 
i
 = 2; 
hñp_öfo
[i] !
NULL
; i++) {

400 i‡(
	`°rcmp
(
hñp_öfo
[
i
], "<<PageBreak>>") == 0) {

401 i‡(
	`cmdlöe_∑u£
(
˛
,

403 
Àave
;

404 
	`wr_s¸n_˛s
();

405 
	`wr_s¸n_pos
(0, 0);

406 
	`cmdlöe_¥ötf
(
˛
,

408 
hñp_öfo
[1],

409 
	`wr_c›yright_msg
());

410 
	`wr_s¸n_pos
(3, 0);

413 
	`cmdlöe_¥ötf
(
˛
, "%s\n", 
hñp_öfo
[
i
]);

416 
	`cmdlöe_∑u£
(
˛
, " <Press ReturnÅo Continue or ESC>");

417 
Àave
:

418 i‡(!
∑u£d
) {

419 
	`wr_s¸n_£tw
(
pktgí
.
œ°_row
 + 1);

420 
	`wr_s¸n_ªsume
();

421 
	`pktgí_ªdi•œy
(1);

423 
	}
}

425 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_hñp
 =

426 
TOKEN_STRING_INITIALIZER
(
cmd_hñp_ªsu…
, 
hñp
, "help");

428 
cmdlöe_∑r£_ö°_t
 
	gcmd_hñp
 = {

429 .
f
 = 
cmd_hñp_∑r£d
,

430 .
	gd©a
 = 
NULL
,

431 .
	ghñp_°r
 = "show help",

432 .
	gtokís
 = {

433 (*)&
cmd_hñp_hñp
,

434 
NULL
,

440 
	scmd_theme_°©e_ªsu…
 {

441 
cmdlöe_fixed_°rög_t
 
	mtheme
;

442 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

458 
	$cmd_theme_°©e_∑r£d
(*
∑r£d_ªsu…
,

459 
cmdlöe
 *
˛
 
__πe_unu£d
,

460 *
d©a
 
__πe_unu£d
)

462 
cmd_theme_°©e_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

464 
	`pktgí_theme_°©e
(
ªs
->
⁄Off
);

465 
	`pktgí_˛s
();

466 
	}
}

468 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_theme
 =

469 
TOKEN_STRING_INITIALIZER
(
cmd_theme_°©e_ªsu…
, 
theme
, "theme");

470 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_⁄Off
 =

471 
TOKEN_STRING_INITIALIZER
(
cmd_theme_°©e_ªsu…
,

472 
⁄Off
,

475 
cmdlöe_∑r£_ö°_t
 
	gcmd_theme_°©e
 = {

476 .
f
 = 
cmd_theme_°©e_∑r£d
,

477 .
	gd©a
 = 
NULL
,

478 .
	ghñp_°r
 = "theme <state>",

479 .
	gtokís
 = {

480 (*)&
cmd_theme_theme
,

481 (*)&
cmd_theme_⁄Off
,

482 
NULL
,

488 
	scmd_theme_ªsu…
 {

489 
cmdlöe_fixed_°rög_t
 
	mtheme
;

490 
cmdlöe_fixed_°rög_t
 
	môem
;

491 
cmdlöe_fixed_°rög_t
 
	mfg
;

492 
cmdlöe_fixed_°rög_t
 
	mbg
;

493 
cmdlöe_fixed_°rög_t
 
	m©å
;

509 
	$cmd_theme_∑r£d
(*
∑r£d_ªsu…
,

510 
cmdlöe
 *
˛
 
__πe_unu£d
,

511 *
d©a
 
__πe_unu£d
)

513 
cmd_theme_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

515 
	`pktgí_£t_theme_ôem
(
ªs
->
ôem
,Ñes->
fg
,Ñes->
bg
,Ñes->
©å
);

516 
	}
}

518 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_d©a
 =

519 
TOKEN_STRING_INITIALIZER
(
cmd_theme_ªsu…
, 
theme
, "theme");

520 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_ôem
 =

521 
TOKEN_STRING_INITIALIZER
(
cmd_theme_ªsu…
, 
ôem
, 
NULL
);

522 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_fg
 =

523 
TOKEN_STRING_INITIALIZER
(
cmd_theme_ªsu…
, 
fg
, 
NULL
);

524 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_bg
 =

525 
TOKEN_STRING_INITIALIZER
(
cmd_theme_ªsu…
, 
bg
, 
NULL
);

526 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_©å
 =

527 
TOKEN_STRING_INITIALIZER
(
cmd_theme_ªsu…
, 
©å
, 
NULL
);

529 
cmdlöe_∑r£_ö°_t
 
	gcmd_theme
 = {

530 .
f
 = 
cmd_theme_∑r£d
,

531 .
	gd©a
 = 
NULL
,

532 .
	ghñp_°r
 = "theme <item> <fg> <bg> <attr>",

533 .
	gtokís
 = {

534 (*)&
cmd_theme_d©a
,

535 (*)&
cmd_theme_ôem
,

536 (*)&
cmd_theme_fg
,

537 (*)&
cmd_theme_bg
,

538 (*)&
cmd_theme_©å
,

539 
NULL
,

545 
	scmd_theme_show_ªsu…
 {

546 
cmdlöe_fixed_°rög_t
 
	mtheme_show
;

562 
	$cmd_theme_show_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

563 
cmdlöe
 *
˛
 
__πe_unu£d
,

564 *
d©a
 
__πe_unu£d
)

566 
	`pktgí_theme_show
();

567 
	}
}

569 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_show_d©a
 =

570 
TOKEN_STRING_INITIALIZER
(
cmd_theme_show_ªsu…
,

571 
theme_show
,

574 
cmdlöe_∑r£_ö°_t
 
	gcmd_theme_show
 = {

575 .
f
 = 
cmd_theme_show_∑r£d
,

576 .
	gd©a
 = 
NULL
,

577 .
	ghñp_°r
 = "theme.show",

578 .
	gtokís
 = {

579 (*)&
cmd_theme_show_d©a
,

580 
NULL
,

586 
	scmd_theme_ßve_ªsu…
 {

587 
cmdlöe_fixed_°rög_t
 
	mtheme_ßve
;

588 
cmdlöe_fixed_°rög_t
 
	mfûíame
;

604 
	$cmd_theme_ßve_∑r£d
(*
∑r£d_ªsu…
,

605 
cmdlöe
 *
˛
 
__πe_unu£d
,

606 *
d©a
 
__πe_unu£d
)

608 
cmd_theme_ßve_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

610 
	`pktgí_theme_ßve
(
ªs
->
fûíame
);

611 
	}
}

613 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_ßve_d©a
 =

614 
TOKEN_STRING_INITIALIZER
(
cmd_theme_ßve_ªsu…
,

615 
theme_ßve
,

617 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_theme_ßve_fûíame
 =

618 
TOKEN_STRING_INITIALIZER
(
cmd_theme_ßve_ªsu…
, 
fûíame
, 
NULL
);

620 
cmdlöe_∑r£_ö°_t
 
	gcmd_theme_ßve
 = {

621 .
f
 = 
cmd_theme_ßve_∑r£d
,

622 .
	gd©a
 = 
NULL
,

623 .
	ghñp_°r
 = "theme.save filename",

624 .
	gtokís
 = {

625 (*)&
cmd_theme_ßve_d©a
,

626 (*)&
cmd_theme_ßve_fûíame
,

627 
NULL
,

633 
	scmd_ßve_ªsu…
 {

634 
cmdlöe_fixed_°rög_t
 
	mßve
;

635 
cmdlöe_fixed_°rög_t
 
	mfûíame
;

651 
	$cmd_ßve_∑r£d
(*
∑r£d_ªsu…
,

652 
cmdlöe
 *
˛
 
__πe_unu£d
,

653 *
d©a
 
__πe_unu£d
)

655 
cmd_ßve_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

657 
	`pktgí_ßve
(
ªs
->
fûíame
);

658 
	}
}

660 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_ßve_d©a
 =

661 
TOKEN_STRING_INITIALIZER
(
cmd_ßve_ªsu…
, 
ßve
, "save");

662 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_ßve_fûíame
 =

663 
TOKEN_STRING_INITIALIZER
(
cmd_ßve_ªsu…
, 
fûíame
, 
NULL
);

665 
cmdlöe_∑r£_ö°_t
 
	gcmd_ßve
 = {

666 .
f
 = 
cmd_ßve_∑r£d
,

667 .
	gd©a
 = 
NULL
,

668 .
	ghñp_°r
 = "save filename",

669 .
	gtokís
 = {

670 (*)&
cmd_ßve_d©a
,

671 (*)&
cmd_ßve_fûíame
,

672 
NULL
,

678 
	scmd_s¸ùtög_ªsu…
 {

679 
cmdlöe_fixed_°rög_t
 
	ms¸ùt
;

680 
cmdlöe_fixed_°rög_t
 
	mfûíame
;

696 
	$cmd_s¸ùt_∑r£d
(*
∑r£d_ªsu…
,

697 
cmdlöe
 *
˛
 
__πe_unu£d
,

698 *
d©a
 
__πe_unu£d
)

700 
cmd_s¸ùtög_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

701 
lua_Sèã
 *
L
 = 
pktgí
.L;

703 i‡(
L
 =
NULL
) {

704 
	`pktgí_log_îr‹
("Lua isÇot initialized!");

708 i‡(
	`luaL_dofûe
(
L
, 
ªs
->
fûíame
) != 0)

709 
	`pktgí_log_îr‹
("%s", 
	`lua_to°rög
(
L
, -1));

710 
	}
}

712 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_s¸ùt_cmds
 =

713 
TOKEN_STRING_INITIALIZER
(
cmd_s¸ùtög_ªsu…
, 
s¸ùt
, "script");

714 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_s¸ùt_fûíame
 =

715 
TOKEN_STRING_INITIALIZER
(
cmd_s¸ùtög_ªsu…
, 
fûíame
, 
NULL
);

717 
cmdlöe_∑r£_ö°_t
 
	gcmd_s¸ùt
 = {

718 .
f
 = 
cmd_s¸ùt_∑r£d
,

719 .
	gd©a
 = 
NULL
,

720 .
	ghñp_°r
 = "script <filename>",

721 .
	gtokís
 = {

722 (*)&
cmd_s¸ùt_cmds
,

723 (*)&
cmd_s¸ùt_fûíame
,

724 
NULL
,

730 
	scmd_pög4_ªsu…
 {

731 
cmdlöe_fixed_°rög_t
 
	mpög4
;

732 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

748 
	$cmd_pög4_∑r£d
(*
∑r£d_ªsu…
,

749 
cmdlöe
 *
˛
 
__πe_unu£d
,

750 *
d©a
 
__πe_unu£d
)

752 
cmd_pög4_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

754 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

755 
	`pktgí_pög4
(
öfo
) );

756 
	`pktgí_upd©e_di•œy
();

757 
	}
}

759 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_pög4
 =

760 
TOKEN_STRING_INITIALIZER
(
cmd_pög4_ªsu…
, 
pög4
, "ping4");

761 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_pög4_p‹éi°
 =

762 
TOKEN_PORTLIST_INITIALIZER
(
cmd_pög4_ªsu…
, 
p‹éi°
);

764 
cmdlöe_∑r£_ö°_t
 
	gcmd_pög4
 = {

765 .
f
 = 
cmd_pög4_∑r£d
,

766 .
	gd©a
 = 
NULL
,

767 .
	ghñp_°r
 = "ping4 <portlist>",

768 .
	gtokís
 = {

769 (*)&
cmd_£t_pög4
,

770 (*)&
cmd_pög4_p‹éi°
,

771 
NULL
,

775 #ifde‡
INCLUDE_PING6


778 
	scmd_pög6_ªsu…
 {

779 
cmdlöe_fixed_°rög_t
 
	mpög6
;

780 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

796 
	$cmd_pög6_∑r£d
(*
∑r£d_ªsu…
,

797 
cmdlöe
 *
˛
 
__πe_unu£d
,

798 *
d©a
 
__πe_unu£d
)

800 
cmd_pög6_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

802 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

803 
	`pktgí_pög6
(
öfo
) );

804 
	`pktgí_upd©e_di•œy
();

805 
	}
}

807 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_pög6
 =

808 
TOKEN_STRING_INITIALIZER
(
cmd_pög6_ªsu…
, 
pög6
, "ping6");

809 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_pög6_p‹éi°
 =

810 
TOKEN_PORTLIST_INITIALIZER
(
cmd_pög6_ªsu…
, 
p‹éi°
);

812 
cmdlöe_∑r£_ö°_t
 
	gcmd_pög6
 = {

813 .
f
 = 
cmd_pög6_∑r£d
,

814 .
	gd©a
 = 
NULL
,

815 .
	ghñp_°r
 = "ping6 <portlist>",

816 .
	gtokís
 = {

817 (*)&
cmd_£t_pög6
,

818 (*)&
cmd_pög6_p‹éi°
,

819 
NULL
,

826 
	scmd_£t_ønge_ªsu…
 {

827 
cmdlöe_fixed_°rög_t
 
	mønge
;

828 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

829 
cmdlöe_fixed_°rög_t
 
	mwh©
;

845 
	$cmd_£t_ønge_∑r£d
(*
∑r£d_ªsu…
,

846 
cmdlöe
 *
˛
 
__πe_unu£d
,

847 *
d©a
 
__πe_unu£d
)

849 
cmd_£t_ønge_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

851 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

852 
	`pktgí_ønge_íabÀ_dißbÀ
(
öfo
, 
ªs
->
wh©
) );

854 
	`pktgí_upd©e_di•œy
();

855 
	}
}

857 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ønge
 =

858 
TOKEN_STRING_INITIALIZER
(
cmd_£t_ønge_ªsu…
, 
ønge
, "range");

859 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_ønge_p‹éi°
 =

860 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£t_ønge_ªsu…
, 
p‹éi°
);

861 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ønge_wh©
 =

862 
TOKEN_STRING_INITIALIZER
(
cmd_£t_ønge_ªsu…
,

863 
wh©
,

866 
cmdlöe_∑r£_ö°_t
 
	gcmd_ønge
 = {

867 .
f
 = 
cmd_£t_ønge_∑r£d
,

868 .
	gd©a
 = 
NULL
,

869 .
	ghñp_°r
 = "range <portlist> <state>",

870 .
	gtokís
 = {

871 (*)&
cmd_£t_ønge
,

872 (*)&
cmd_£t_ønge_p‹éi°
,

873 (*)&
cmd_£t_ønge_wh©
,

874 
NULL
,

880 
	scmd_£t_œãncy_ªsu…
 {

881 
cmdlöe_fixed_°rög_t
 
	mœãncy
;

882 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

883 
cmdlöe_fixed_°rög_t
 
	m°©e
;

899 
	$cmd_£t_œãncy_∑r£d
(*
∑r£d_ªsu…
,

900 
cmdlöe
 *
˛
 
__πe_unu£d
,

901 *
d©a
 
__πe_unu£d
)

903 #ifde‡
LATER


904 
cmd_£t_œãncy_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

906 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

907 
	`pktgí_œãncy_íabÀ_dißbÀ
(
öfo
, 
ªs
->
°©e
) );

909 
	`pktgí_upd©e_di•œy
();

911 ()
∑r£d_ªsu…
;

912 
	`¥ötf
("Latency isÇot working yet\n");

914 
	}
}

916 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_œãncy
 =

917 
TOKEN_STRING_INITIALIZER
(
cmd_£t_œãncy_ªsu…
,

918 
œãncy
,

920 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_œãncy_p‹éi°
 =

921 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£t_œãncy_ªsu…
, 
p‹éi°
);

922 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_œãncy_°©e
 =

923 
TOKEN_STRING_INITIALIZER
(
cmd_£t_œãncy_ªsu…
,

924 
°©e
,

927 
cmdlöe_∑r£_ö°_t
 
	gcmd_œãncy
 = {

928 .
f
 = 
cmd_£t_œãncy_∑r£d
,

929 .
	gd©a
 = 
NULL
,

930 .
	ghñp_°r
 = "latency <portlist> <state>",

931 .
	gtokís
 = {

932 (*)&
cmd_£t_œãncy
,

933 (*)&
cmd_£t_œãncy_p‹éi°
,

934 (*)&
cmd_£t_œãncy_°©e
,

935 
NULL
,

941 
	scmd_£t_∑âîn_ªsu…
 {

942 
cmdlöe_fixed_°rög_t
 
	m∑âîn
;

943 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

944 
cmdlöe_fixed_°rög_t
 
	mwh©
;

960 
	$cmd_£t_∑âîn_∑r£d
(*
∑r£d_ªsu…
,

961 
cmdlöe
 *
˛
 
__πe_unu£d
,

962 *
d©a
 
__πe_unu£d
)

964 
cmd_£t_∑âîn_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

966 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

967 
	`pktgí_£t_∑âîn_ty≥
(
öfo
, 
ªs
->
wh©
) );

969 
	`pktgí_upd©e_di•œy
();

970 
	}
}

972 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_∑âîn
 =

973 
TOKEN_STRING_INITIALIZER
(
cmd_£t_∑âîn_ªsu…
,

974 
∑âîn
,

976 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_∑âîn_p‹éi°
 =

977 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£t_∑âîn_ªsu…
, 
p‹éi°
);

978 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_∑âîn_wh©
 =

979 
TOKEN_STRING_INITIALIZER
(
cmd_£t_∑âîn_ªsu…
,

980 
wh©
,

983 
cmdlöe_∑r£_ö°_t
 
	gcmd_∑âîn
 = {

984 .
f
 = 
cmd_£t_∑âîn_∑r£d
,

985 .
	gd©a
 = 
NULL
,

986 .
	ghñp_°r
 = "pattern <portlist> <abc|none|zero|user>",

987 .
	gtokís
 = {

988 (*)&
cmd_£t_∑âîn
,

989 (*)&
cmd_£t_∑âîn_p‹éi°
,

990 (*)&
cmd_£t_∑âîn_wh©
,

991 
NULL
,

997 
	scmd_u£r_∑âîn_ªsu…
 {

998 
cmdlöe_fixed_°rög_t
 
	m∑âîn
;

999 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1000 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1016 
	$cmd_u£r_∑âîn_∑r£d
(*
∑r£d_ªsu…
,

1017 
cmdlöe
 *
˛
 
__πe_unu£d
,

1018 *
d©a
 
__πe_unu£d
)

1020 
cmd_u£r_∑âîn_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1022 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1023 
	`pktgí_u£r_∑âîn_£t
(
öfo
, 
ªs
->
wh©
) );

1025 
	`pktgí_upd©e_di•œy
();

1026 
	}
}

1028 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_u£r_∑âîn
 =

1029 
TOKEN_STRING_INITIALIZER
(
cmd_u£r_∑âîn_ªsu…
,

1030 
∑âîn
,

1032 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_u£r_∑âîn_p‹éi°
 =

1033 
TOKEN_PORTLIST_INITIALIZER
(
cmd_u£r_∑âîn_ªsu…
, 
p‹éi°
);

1034 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_u£r_∑âîn_wh©
 =

1035 
TOKEN_STRING_INITIALIZER
(
cmd_u£r_∑âîn_ªsu…
, 
wh©
, 
NULL
);

1037 
cmdlöe_∑r£_ö°_t
 
	gcmd_£t_u£r_∑âîn
 = {

1038 .
f
 = 
cmd_u£r_∑âîn_∑r£d
,

1039 .
	gd©a
 = 
NULL
,

1040 .
	ghñp_°r
 = "user.pattern <portlist> <string>",

1041 .
	gtokís
 = {

1042 (*)&
cmd_u£r_∑âîn
,

1043 (*)&
cmd_u£r_∑âîn_p‹éi°
,

1044 (*)&
cmd_u£r_∑âîn_wh©
,

1045 
NULL
,

1051 
	scmd_dns_domaö_ªsu…
 {

1052 
cmdlöe_fixed_°rög_t
 
	mdomaö
;

1053 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1054 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1070 
	$cmd_dns_domaö_∑r£d
(*
∑r£d_ªsu…
,

1071 
cmdlöe
 *
˛
 
__πe_unu£d
,

1072 *
d©a
 
__πe_unu£d
)

1074 
cmd_dns_domaö_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1076 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1077 
	`pktgí_dns_domaö_£t
(
öfo
, 
ªs
->
wh©
) );

1079 
	`pktgí_upd©e_di•œy
();

1080 
	}
}

1082 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_dns_domaö
 =

1083 
TOKEN_STRING_INITIALIZER
(
cmd_dns_domaö_ªsu…
,

1084 
domaö
,

1086 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_dns_domaö_p‹éi°
 =

1087 
TOKEN_PORTLIST_INITIALIZER
(
cmd_dns_domaö_ªsu…
, 
p‹éi°
);

1088 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_dns_domaö_wh©
 =

1089 
TOKEN_STRING_INITIALIZER
(
cmd_dns_domaö_ªsu…
, 
wh©
, 
NULL
);

1091 
cmdlöe_∑r£_ö°_t
 
	gcmd_£t_dns_domaö
 = {

1092 .
f
 = 
cmd_dns_domaö_∑r£d
,

1093 .
	gd©a
 = 
NULL
,

1094 .
	ghñp_°r
 = "dns.domain <portlist> <string>",

1095 .
	gtokís
 = {

1096 (*)&
cmd_dns_domaö
,

1097 (*)&
cmd_dns_domaö_p‹éi°
,

1098 (*)&
cmd_dns_domaö_wh©
,

1099 
NULL
,

1106 
	scmd_∫d_ªsu…
 {

1107 
cmdlöe_fixed_°rög_t
 
	m∫d
;

1108 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1109 
uöt8_t
 
	midx
;

1110 
uöt8_t
 
	moff
;

1111 
cmdlöe_fixed_°rög_t
 
	mmask
;

1127 
	$cmd_∫d_∑r£d
(*
∑r£d_ªsu…
,

1128 
cmdlöe
 *
˛
 
__πe_unu£d
,

1129 *
d©a
 
__πe_unu£d
)

1131 
cmd_∫d_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1133 
mask
[33] = { 0 };

1134 
i
, 
mask_idx
 = 0;

1135 
cuº_bô
;

1137 i‡(
	`°rcmp
(
ªs
->
mask
, "off"))

1141 
i
 = 0;

1142 (
mask_idx
 < 32Ë&& ((
cuº_bô
 = 
ªs
->
mask
[
i
]) != '\0');

1143 ++
i
)

1144 i‡((
cuº_bô
 == '0') || (curr_bit == '1') ||

1145 (
cuº_bô
 == '.') || (curr_bit == 'X'))

1146 
mask
[
mask_idx
++] = 
cuº_bô
;

1148 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1149 
	`pktgí_£t_øndom
(
öfo
,

1150 
	`pktgí_£t_øndom_bôfõld
(
öfo
->

1151 
∫d_bôfõlds
,

1152 
ªs
->
idx
,

1153 
ªs
->
off
,

1154 
mask
) ?

1155 
ENABLE_STATE
 : 
DISABLE_STATE
)

1158 
	`pktgí_upd©e_di•œy
();

1159 
	}
}

1161 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_∫d_∫d
 =

1162 
TOKEN_STRING_INITIALIZER
(
cmd_∫d_ªsu…
, 
∫d
, "rnd");

1163 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_∫d_p‹éi°
 =

1164 
TOKEN_PORTLIST_INITIALIZER
(
cmd_∫d_ªsu…
, 
p‹éi°
);

1165 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_∫d_idx
 =

1166 
TOKEN_NUM_INITIALIZER
(
cmd_∫d_ªsu…
, 
idx
, 
UINT8
);

1167 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_∫d_off
 =

1168 
TOKEN_NUM_INITIALIZER
(
cmd_∫d_ªsu…
, 
off
, 
UINT8
);

1169 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_∫d_mask
 =

1170 
TOKEN_STRING_INITIALIZER
(
cmd_∫d_ªsu…
, 
mask
, 
NULL
);

1172 
cmdlöe_∑r£_ö°_t
 
	gcmd_∫d
 = {

1173 .
f
 = 
cmd_∫d_∑r£d
,

1174 .
	gd©a
 = 
NULL
,

1175 .
	ghñp_°r
 = "rnd <portlist> <idx> <off> <mask>",

1176 .
	gtokís
 = {

1177 (*)&
cmd_∫d_∫d
,

1178 (*)&
cmd_∫d_p‹éi°
,

1179 (*)&
cmd_∫d_idx
,

1180 (*)&
cmd_∫d_off
,

1181 (*)&
cmd_∫d_mask
,

1182 
NULL
,

1188 
	scmd_£t_geomëry_ªsu…
 {

1189 
cmdlöe_fixed_°rög_t
 
	mgeomëry
;

1190 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1206 
	$cmd_£t_geomëry_∑r£d
(*
∑r£d_ªsu…
,

1207 
cmdlöe
 *
˛
 
__πe_unu£d
,

1208 *
d©a
 
__πe_unu£d
)

1210 
cmd_£t_geomëry_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1212 
uöt16_t
 
rows
, 
cﬁs
;

1214 
	`pktgí_di•œy_gë_geomëry
(&
rows
, &
cﬁs
);

1215 
	`pktgí_log_debug
("Old geomëry i†%dx%d", 
cﬁs
, 
rows
);

1216 i‡(
	`°rcmp
(
ªs
->
wh©
, "show") ) {

1217 *
p
;

1219 
p
 = 
	`°rchr
(
ªs
->
wh©
, 'x');

1220 i‡(
p
) {

1221 
rows
 = 
	`°πﬁ
(++
p
, 
NULL
, 10);

1222 
cﬁs
 = 
	`°πﬁ
(
ªs
->
wh©
, 
NULL
, 10);

1224 
	`pktgí_di•œy_£t_geomëry
(
rows
, 
cﬁs
);

1225 
	`pktgí_˛s
();

1227 
	`pktgí_log_îr‹
(

1229 
ªs
->
wh©
);

1230 
	`pktgí_di•œy_gë_geomëry
(&
rows
, &
cﬁs
);

1231 
	`pktgí_log_debug
("New geomëry i†%dx%d", 
cﬁs
, 
rows
);

1233 
	}
}

1235 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_geomëry
 =

1236 
TOKEN_STRING_INITIALIZER
(
cmd_£t_geomëry_ªsu…
,

1237 
geomëry
,

1239 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_geomëry_wh©
 =

1240 
TOKEN_STRING_INITIALIZER
(
cmd_£t_geomëry_ªsu…
, 
wh©
, 
NULL
);

1242 
cmdlöe_∑r£_ö°_t
 
	gcmd_geomëry
 = {

1243 .
f
 = 
cmd_£t_geomëry_∑r£d
,

1244 .
	gd©a
 = 
NULL
,

1245 .
	ghñp_°r
 = "geometry [<geom>|show]",

1246 .
	gtokís
 = {

1247 (*)&
cmd_£t_geomëry
,

1248 (*)&
cmd_£t_geomëry_wh©
,

1249 
NULL
,

1255 
	scmd_dev_ªsu…
 {

1256 
cmdlöe_fixed_°rög_t
 
	mdev
;

1272 
	$cmd_dev_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

1273 
cmdlöe
 *
˛
 
__πe_unu£d
,

1274 *
d©a
 
__πe_unu£d
)

1276 
	`πe_ól_dev¨gs_dump
(
°dout
);

1277 
	}
}

1279 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_dev_cmds
 =

1280 
TOKEN_STRING_INITIALIZER
(
cmd_dev_ªsu…
, 
dev
, "dev.list");

1282 
cmdlöe_∑r£_ö°_t
 
	gcmd_dev
 = {

1283 .
f
 = 
cmd_dev_∑r£d
,

1284 .
	gd©a
 = 
NULL
,

1285 .
	ghñp_°r
 = "dev.list",

1286 .
	gtokís
 = {

1287 (*)&
cmd_dev_cmds
,

1288 
NULL
,

1294 
	scmd_pci_ªsu…
 {

1295 
cmdlöe_fixed_°rög_t
 
	mpci
;

1311 
	$cmd_pci_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

1312 
cmdlöe
 *
˛
 
__πe_unu£d
,

1313 *
d©a
 
__πe_unu£d
)

1315 
	`πe_ól_pci_dump
(
°dout
);

1316 
	}
}

1318 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_pci_cmds
 =

1319 
TOKEN_STRING_INITIALIZER
(
cmd_pci_ªsu…
, 
pci
, "pci.list");

1321 
cmdlöe_∑r£_ö°_t
 
	gcmd_pci
 = {

1322 .
f
 = 
cmd_pci_∑r£d
,

1323 .
	gd©a
 = 
NULL
,

1324 .
	ghñp_°r
 = "pci.list",

1325 .
	gtokís
 = {

1326 (*)&
cmd_pci_cmds
,

1327 
NULL
,

1333 
	scmd_de°_mac_ªsu…
 {

1334 
cmdlöe_fixed_°rög_t
 
	md°_mac
;

1335 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1336 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1337 
cmdlöe_ëhîaddr_t
 
	maddr
;

1353 
	$cmd_de°_mac_∑r£d
(*
∑r£d_ªsu…
,

1354 
cmdlöe
 *
˛
 
__πe_unu£d
,

1355 *
d©a
 
__πe_unu£d
)

1357 
cmd_de°_mac_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1359 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1360 
	`pktgí_£t_de°_mac
(
öfo
, 
ªs
->
wh©
, &ªs->
addr
) );

1362 
	`pktgí_upd©e_di•œy
();

1363 
	}
}

1365 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_de°_mac
 =

1366 
TOKEN_STRING_INITIALIZER
(
cmd_de°_mac_ªsu…
, 
d°_mac
,

1368 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_de°_mac_wh©
 =

1369 
TOKEN_STRING_INITIALIZER
(
cmd_de°_mac_ªsu…
,

1370 
wh©
,

1372 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_de°_mac_p‹éi°
 =

1373 
TOKEN_PORTLIST_INITIALIZER
(
cmd_de°_mac_ªsu…
, 
p‹éi°
);

1374 
cmdlöe_∑r£_tokí_ëhîaddr_t
 
	gcmd_de°_mac_addr
 =

1375 
TOKEN_ETHERADDR_INITIALIZER
(
cmd_de°_mac_ªsu…
, 
addr
);

1377 
cmdlöe_∑r£_ö°_t
 
	gcmd_de°_mac
 = {

1378 .
f
 = 
cmd_de°_mac_∑r£d
,

1379 .
	gd©a
 = 
NULL
,

1380 .
	ghñp_°r
 = "dst.mac start|min|max|inc <portlist>Éthaddr",

1381 .
	gtokís
 = {

1382 (*)&
cmd_£t_de°_mac
,

1383 (*)&
cmd_de°_mac_wh©
,

1384 (*)&
cmd_de°_mac_p‹éi°
,

1385 (*)&
cmd_de°_mac_addr
,

1386 
NULL
,

1392 
	scmd_§c_mac_ªsu…
 {

1393 
cmdlöe_fixed_°rög_t
 
	m§c_mac
;

1394 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1395 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1396 
cmdlöe_ëhîaddr_t
 
	maddr
;

1412 
	$cmd_§c_mac_∑r£d
(*
∑r£d_ªsu…
,

1413 
cmdlöe
 *
˛
 
__πe_unu£d
,

1414 *
d©a
 
__πe_unu£d
)

1416 
cmd_§c_mac_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1418 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1419 
	`pktgí_£t_§c_mac
(
öfo
, 
ªs
->
wh©
, &ªs->
addr
) );

1421 
	`pktgí_upd©e_di•œy
();

1422 
	}
}

1424 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_§c_mac
 =

1425 
TOKEN_STRING_INITIALIZER
(
cmd_§c_mac_ªsu…
, 
§c_mac
, "src.mac");

1426 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_§c_mac_wh©
 =

1427 
TOKEN_STRING_INITIALIZER
(
cmd_§c_mac_ªsu…
,

1428 
wh©
,

1430 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_§c_mac_p‹éi°
 =

1431 
TOKEN_PORTLIST_INITIALIZER
(
cmd_§c_mac_ªsu…
, 
p‹éi°
);

1432 
cmdlöe_∑r£_tokí_ëhîaddr_t
 
	gcmd_§c_mac_addr
 =

1433 
TOKEN_ETHERADDR_INITIALIZER
(
cmd_§c_mac_ªsu…
, 
addr
);

1435 
cmdlöe_∑r£_ö°_t
 
	gcmd_§c_mac
 = {

1436 .
f
 = 
cmd_§c_mac_∑r£d
,

1437 .
	gd©a
 = 
NULL
,

1438 .
	ghñp_°r
 = "src.mac start|min|max|inc <portlist>Éthaddr",

1439 .
	gtokís
 = {

1440 (*)&
cmd_£t_§c_mac
,

1441 (*)&
cmd_§c_mac_wh©
,

1442 (*)&
cmd_§c_mac_p‹éi°
,

1443 (*)&
cmd_§c_mac_addr
,

1444 
NULL
,

1450 
	scmd_§c_ù_ªsu…
 {

1451 
cmdlöe_fixed_°rög_t
 
	m§c_ù
;

1452 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1453 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1454 
cmdlöe_ùaddr_t
 
	mùaddr
;

1470 
	$cmd_§c_ù_∑r£d
(*
∑r£d_ªsu…
,

1471 
cmdlöe
 *
˛
 
__πe_unu£d
,

1472 *
d©a
 
__πe_unu£d
)

1474 
cmd_§c_ù_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1476 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1477 
	`pktgí_£t_§c_ù
(
öfo
, 
ªs
->
wh©
, &ªs->
ùaddr
) );

1479 
	`pktgí_upd©e_di•œy
();

1480 
	}
}

1482 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_§c_ù
 =

1483 
TOKEN_STRING_INITIALIZER
(
cmd_§c_ù_ªsu…
, 
§c_ù
, "src.ip");

1484 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_§c_ù_wh©
 =

1485 
TOKEN_STRING_INITIALIZER
(
cmd_§c_ù_ªsu…
,

1486 
wh©
,

1488 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_§c_ù_p‹éi°
 =

1489 
TOKEN_PORTLIST_INITIALIZER
(
cmd_§c_ù_ªsu…
, 
p‹éi°
);

1490 
cmdlöe_∑r£_tokí_ùaddr_t
 
	gcmd_§c_ù_addr
 =

1491 
TOKEN_IPV4_INITIALIZER
(
cmd_§c_ù_ªsu…
, 
ùaddr
);

1493 
cmdlöe_∑r£_ö°_t
 
	gcmd_§c_ù
 = {

1494 .
f
 = 
cmd_§c_ù_∑r£d
,

1495 .
	gd©a
 = 
NULL
,

1496 .
	ghñp_°r
 = "src.ip start|min|max|inc <portlist> ipaddr",

1497 .
	gtokís
 = {

1498 (*)&
cmd_£t_§c_ù
,

1499 (*)&
cmd_§c_ù_wh©
,

1500 (*)&
cmd_§c_ù_p‹éi°
,

1501 (*)&
cmd_§c_ù_addr
,

1502 
NULL
,

1508 
	scmd_d°_ù_ªsu…
 {

1509 
cmdlöe_fixed_°rög_t
 
	md°_ù
;

1510 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1511 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1512 
cmdlöe_ùaddr_t
 
	mùaddr
;

1528 
	$cmd_d°_ù_∑r£d
(*
∑r£d_ªsu…
,

1529 
cmdlöe
 *
˛
 
__πe_unu£d
,

1530 *
d©a
 
__πe_unu£d
)

1532 
cmd_d°_ù_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1534 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1535 
	`pktgí_£t_d°_ù
(
öfo
, 
ªs
->
wh©
, &ªs->
ùaddr
) );

1537 
	`pktgí_upd©e_di•œy
();

1538 
	}
}

1540 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_d°_ù
 =

1541 
TOKEN_STRING_INITIALIZER
(
cmd_d°_ù_ªsu…
, 
d°_ù
, "dst.ip");

1542 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_d°_ù_wh©
 =

1543 
TOKEN_STRING_INITIALIZER
(
cmd_d°_ù_ªsu…
,

1544 
wh©
,

1546 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_d°_ù_p‹éi°
 =

1547 
TOKEN_PORTLIST_INITIALIZER
(
cmd_d°_ù_ªsu…
, 
p‹éi°
);

1548 
cmdlöe_∑r£_tokí_ùaddr_t
 
	gcmd_d°_ù_addr
 =

1549 
TOKEN_IPV4_INITIALIZER
(
cmd_d°_ù_ªsu…
, 
ùaddr
);

1551 
cmdlöe_∑r£_ö°_t
 
	gcmd_d°_ù
 = {

1552 .
f
 = 
cmd_d°_ù_∑r£d
,

1553 .
	gd©a
 = 
NULL
,

1554 .
	ghñp_°r
 = "dst.ip start|min|max|inc <portlist> ipaddr",

1555 .
	gtokís
 = {

1556 (*)&
cmd_£t_d°_ù
,

1557 (*)&
cmd_d°_ù_wh©
,

1558 (*)&
cmd_d°_ù_p‹éi°
,

1559 (*)&
cmd_d°_ù_addr
,

1560 
NULL
,

1566 
	scmd_§c_p‹t_ªsu…
 {

1567 
cmdlöe_fixed_°rög_t
 
	m§c_p‹t
;

1568 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1569 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1570 
uöt16_t
 
	mp‹t
;

1586 
	$cmd_§c_p‹t_∑r£d
(*
∑r£d_ªsu…
,

1587 
cmdlöe
 *
˛
 
__πe_unu£d
,

1588 *
d©a
 
__πe_unu£d
)

1590 
cmd_§c_p‹t_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1592 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1593 
	`pktgí_£t_§c_p‹t
(
öfo
, 
ªs
->
wh©
,Ñes->
p‹t
) );

1595 
	`pktgí_upd©e_di•œy
();

1596 
	}
}

1598 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_§c_p‹t
 =

1599 
TOKEN_STRING_INITIALIZER
(
cmd_§c_p‹t_ªsu…
,

1600 
§c_p‹t
,

1602 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_§c_p‹t_wh©
 =

1603 
TOKEN_STRING_INITIALIZER
(
cmd_§c_p‹t_ªsu…
,

1604 
wh©
,

1606 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_§c_p‹t_p‹éi°
 =

1607 
TOKEN_PORTLIST_INITIALIZER
(
cmd_§c_p‹t_ªsu…
, 
p‹éi°
);

1608 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_§c_p‹t_addr
 =

1609 
TOKEN_NUM_INITIALIZER
(
cmd_§c_p‹t_ªsu…
, 
p‹t
, 
UINT16
);

1611 
cmdlöe_∑r£_ö°_t
 
	gcmd_§c_p‹t
 = {

1612 .
f
 = 
cmd_§c_p‹t_∑r£d
,

1613 .
	gd©a
 = 
NULL
,

1614 .
	ghñp_°r
 = "src.port start|min|max|inc <portlist>Öort",

1615 .
	gtokís
 = {

1616 (*)&
cmd_£t_§c_p‹t
,

1617 (*)&
cmd_§c_p‹t_wh©
,

1618 (*)&
cmd_§c_p‹t_p‹éi°
,

1619 (*)&
cmd_§c_p‹t_addr
,

1620 
NULL
,

1626 
	scmd_ù_¥Ÿo_ªsu…
 {

1627 
cmdlöe_fixed_°rög_t
 
	mù_¥Ÿo
;

1628 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1629 
cmdlöe_fixed_°rög_t
 
	m¥Ÿo
;

1645 
	$cmd_ù_¥Ÿo_∑r£d
(*
∑r£d_ªsu…
,

1646 
cmdlöe
 *
˛
 
__πe_unu£d
,

1647 *
d©a
 
__πe_unu£d
)

1649 
cmd_ù_¥Ÿo_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1651 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1652 
	`pktgí_£t_¥Ÿo_ønge
(
öfo
, 
ªs
->
¥Ÿo
[0]) );

1654 
	`pktgí_upd©e_di•œy
();

1655 
	}
}

1657 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ù_¥Ÿo
 =

1658 
TOKEN_STRING_INITIALIZER
(
cmd_ù_¥Ÿo_ªsu…
,

1659 
ù_¥Ÿo
,

1661 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_ù_¥Ÿo_p‹éi°
 =

1662 
TOKEN_PORTLIST_INITIALIZER
(
cmd_ù_¥Ÿo_ªsu…
, 
p‹éi°
);

1663 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_¥Ÿo
 =

1664 
TOKEN_STRING_INITIALIZER
(
cmd_ù_¥Ÿo_ªsu…
,

1665 
¥Ÿo
,

1668 
cmdlöe_∑r£_ö°_t
 
	gcmd_ù_¥Ÿo
 = {

1669 .
f
 = 
cmd_ù_¥Ÿo_∑r£d
,

1670 .
	gd©a
 = 
NULL
,

1671 .
	ghñp_°r
 = "range.proto <portlist> [tcp|udp|icmp]",

1672 .
	gtokís
 = {

1673 (*)&
cmd_£t_ù_¥Ÿo
,

1674 (*)&
cmd_ù_¥Ÿo_p‹éi°
,

1675 (*)&
cmd_£t_¥Ÿo
,

1676 
NULL
,

1682 
	scmd_d°_p‹t_ªsu…
 {

1683 
cmdlöe_fixed_°rög_t
 
	md°_p‹t
;

1684 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1685 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1686 
uöt16_t
 
	mp‹t
;

1702 
	$cmd_d°_p‹t_∑r£d
(*
∑r£d_ªsu…
,

1703 
cmdlöe
 *
˛
 
__πe_unu£d
,

1704 *
d©a
 
__πe_unu£d
)

1706 
cmd_d°_p‹t_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1708 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1709 
	`pktgí_£t_d°_p‹t
(
öfo
, 
ªs
->
wh©
,Ñes->
p‹t
) );

1711 
	`pktgí_upd©e_di•œy
();

1712 
	}
}

1714 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_d°_p‹t
 =

1715 
TOKEN_STRING_INITIALIZER
(
cmd_d°_p‹t_ªsu…
,

1716 
d°_p‹t
,

1718 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_d°_p‹t_wh©
 =

1719 
TOKEN_STRING_INITIALIZER
(
cmd_d°_p‹t_ªsu…
,

1720 
wh©
,

1722 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_d°_p‹t_p‹éi°
 =

1723 
TOKEN_PORTLIST_INITIALIZER
(
cmd_d°_p‹t_ªsu…
, 
p‹éi°
);

1724 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_d°_p‹t_addr
 =

1725 
TOKEN_NUM_INITIALIZER
(
cmd_d°_p‹t_ªsu…
, 
p‹t
, 
UINT16
);

1727 
cmdlöe_∑r£_ö°_t
 
	gcmd_d°_p‹t
 = {

1728 .
f
 = 
cmd_d°_p‹t_∑r£d
,

1729 .
	gd©a
 = 
NULL
,

1730 .
	ghñp_°r
 = "dst.port start|min|max|inc <portlist>Öort",

1731 .
	gtokís
 = {

1732 (*)&
cmd_£t_d°_p‹t
,

1733 (*)&
cmd_d°_p‹t_wh©
,

1734 (*)&
cmd_d°_p‹t_p‹éi°
,

1735 (*)&
cmd_d°_p‹t_addr
,

1736 
NULL
,

1742 
	scmd_vœn_id_ªsu…
 {

1743 
cmdlöe_fixed_°rög_t
 
	mvœn_id
;

1744 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1745 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1746 
uöt16_t
 
	mid
;

1762 
	$cmd_vœn_id_∑r£d
(*
∑r£d_ªsu…
,

1763 
cmdlöe
 *
˛
 
__πe_unu£d
,

1764 *
d©a
 
__πe_unu£d
)

1766 
cmd_vœn_id_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1768 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1769 
	`pktgí_£t_vœn_id
(
öfo
, 
ªs
->
wh©
,Ñes->
id
) );

1771 
	`pktgí_upd©e_di•œy
();

1772 
	}
}

1774 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_vœn_id
 =

1775 
TOKEN_STRING_INITIALIZER
(
cmd_vœn_id_ªsu…
, 
vœn_id
, "vlan.id");

1776 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_vœn_id_wh©
 =

1777 
TOKEN_STRING_INITIALIZER
(
cmd_vœn_id_ªsu…
,

1778 
wh©
,

1780 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_vœn_id_p‹éi°
 =

1781 
TOKEN_PORTLIST_INITIALIZER
(
cmd_vœn_id_ªsu…
, 
p‹éi°
);

1782 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_vœn_id_addr
 =

1783 
TOKEN_NUM_INITIALIZER
(
cmd_vœn_id_ªsu…
, 
id
, 
UINT16
);

1785 
cmdlöe_∑r£_ö°_t
 
	gcmd_vœn_id
 = {

1786 .
f
 = 
cmd_vœn_id_∑r£d
,

1787 .
	gd©a
 = 
NULL
,

1788 .
	ghñp_°r
 = "vlan.id start|min|max|inc <portlist> id",

1789 .
	gtokís
 = {

1790 (*)&
cmd_£t_vœn_id
,

1791 (*)&
cmd_vœn_id_wh©
,

1792 (*)&
cmd_vœn_id_p‹éi°
,

1793 (*)&
cmd_vœn_id_addr
,

1794 
NULL
,

1802 
	scmd_pkt_size_ªsu…
 {

1803 
cmdlöe_fixed_°rög_t
 
	mpkt_size
;

1804 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1805 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1806 
uöt16_t
 
	msize
;

1822 
	$cmd_pkt_size_∑r£d
(*
∑r£d_ªsu…
,

1823 
cmdlöe
 *
˛
 
__πe_unu£d
,

1824 *
d©a
 
__πe_unu£d
)

1826 
cmd_pkt_size_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1828 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1829 
	`pktgí_£t_ønge_pkt_size
(
öfo
, 
ªs
->
wh©
,Ñes->
size
) );

1831 
	`pktgí_upd©e_di•œy
();

1832 
	}
}

1834 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ønge_pkt_size
 =

1835 
TOKEN_STRING_INITIALIZER
(
cmd_pkt_size_ªsu…
,

1836 
pkt_size
,

1838 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_pkt_size_wh©
 =

1839 
TOKEN_STRING_INITIALIZER
(
cmd_pkt_size_ªsu…
,

1840 
wh©
,

1842 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_pkt_size_p‹éi°
 =

1843 
TOKEN_PORTLIST_INITIALIZER
(
cmd_pkt_size_ªsu…
, 
p‹éi°
);

1844 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_pkt_size_addr
 =

1845 
TOKEN_NUM_INITIALIZER
(
cmd_pkt_size_ªsu…
, 
size
, 
UINT16
);

1847 
cmdlöe_∑r£_ö°_t
 
	gcmd_pkt_size
 = {

1848 .
f
 = 
cmd_pkt_size_∑r£d
,

1849 .
	gd©a
 = 
NULL
,

1850 .
	ghñp_°r
 = " start|min|max|inc <portlist> id",

1851 .
	gtokís
 = {

1852 (*)&
cmd_£t_ønge_pkt_size
,

1853 (*)&
cmd_pkt_size_wh©
,

1854 (*)&
cmd_pkt_size_p‹éi°
,

1855 (*)&
cmd_pkt_size_addr
,

1856 
NULL
,

1862 
	scmd_£t_ªsu…
 {

1863 
cmdlöe_fixed_°rög_t
 
	m£t
;

1864 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1865 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1866 
uöt32_t
 
	mvÆue
;

1882 
	$cmd_£t_∑r£d
(*
∑r£d_ªsu…
,

1883 
cmdlöe
 *
˛
 
__πe_unu£d
,

1884 *
d©a
 
__πe_unu£d
)

1886 
cmd_£t_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1888 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
, 
	`_do
(

1889 i‡(!
	`°rcmp
(
ªs
->
wh©
, "count"))

1890 
	`pktgí_£t_tx_cou¡
(
öfo
, 
ªs
->
vÆue
);

1891 i‡(!
	`°rcmp
(
ªs
->
wh©
, "size"))

1892 
	`pktgí_£t_pkt_size
(
öfo
, 
ªs
->
vÆue
);

1893 i‡(!
	`°rcmp
(
ªs
->
wh©
, "rate"))

1894 
	`pktgí_£t_tx_øã
(
öfo
, 
ªs
->
vÆue
);

1895 i‡(!
	`°rcmp
(
ªs
->
wh©
, "burst"))

1896 
	`pktgí_£t_tx_bur°
(
öfo
, 
ªs
->
vÆue
);

1897 i‡(!
	`°rcmp
(
ªs
->
wh©
, "tx_cycles"))

1898 
	`pktgí_£t_tx_cy˛es
(
öfo
, 
ªs
->
vÆue
);

1899 i‡(!
	`°rcmp
(
ªs
->
wh©
, "sport"))

1900 
	`pktgí_£t_p‹t_vÆue
(
öfo
, 
ªs
->
wh©
[0],

1901 
ªs
->
vÆue
);

1902 i‡(!
	`°rcmp
(
ªs
->
wh©
, "dport"))

1903 
	`pktgí_£t_p‹t_vÆue
(
öfo
, 
ªs
->
wh©
[0],

1904 
ªs
->
vÆue
);

1905 i‡(!
	`°rcmp
(
ªs
->
wh©
, "seqCnt"))

1906 
	`pktgí_£t_p‹t_£qC¡
(
öfo
, 
ªs
->
vÆue
);

1907 i‡(!
	`°rcmp
(
ªs
->
wh©
, "prime"))

1908 
	`pktgí_£t_p‹t_¥ime
(
öfo
, 
ªs
->
vÆue
);

1909 i‡(!
	`°rcmp
(
ªs
->
wh©
, "dump"))

1910 
	`pktgí_£t_p‹t_dump
(
öfo
, 
ªs
->
vÆue
);

1911 i‡(!
	`°rcmp
(
ªs
->
wh©
, "vlanid"))

1912 
	`pktgí_£t_vœnid
(
öfo
, 
ªs
->
vÆue
);

1915 
	`pktgí_upd©e_di•œy
();

1916 
	}
}

1918 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£t
 =

1919 
TOKEN_STRING_INITIALIZER
(
cmd_£t_ªsu…
, 
£t
, "set");

1920 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_p‹éi°
 =

1921 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£t_ªsu…
, 
p‹éi°
);

1922 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_wh©
 =

1923 
TOKEN_STRING_INITIALIZER
(
cmd_£t_ªsu…
,

1924 
wh©
,

1926 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_vÆue
 =

1927 
TOKEN_NUM_INITIALIZER
(
cmd_£t_ªsu…
, 
vÆue
, 
UINT32
);

1929 
cmdlöe_∑r£_ö°_t
 
	gcmd_£t
 = {

1930 .
f
 = 
cmd_£t_∑r£d
,

1931 .
	gd©a
 = 
NULL
,

1932 .
	ghñp_°r
 =

1934 .
	gtokís
 = {

1935 (*)&
cmd_£t_£t
,

1936 (*)&
cmd_£t_p‹éi°
,

1937 (*)&
cmd_£t_wh©
,

1938 (*)&
cmd_£t_vÆue
,

1939 
NULL
,

1945 
	scmd_pˇp_⁄off_ªsu…
 {

1946 
cmdlöe_fixed_°rög_t
 
	mpˇp
;

1947 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

1948 
cmdlöe_fixed_°rög_t
 
	mwh©
;

1964 
	$cmd_pˇp_⁄off_∑r£d
(*
∑r£d_ªsu…
,

1965 
cmdlöe
 *
˛
 
__πe_unu£d
,

1966 *
d©a
 
__πe_unu£d
)

1968 
cmd_pˇp_⁄off_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

1970 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

1971 
	`pktgí_pˇp_íabÀ_dißbÀ
(
öfo
, 
ªs
->
wh©
) );

1973 
	`pktgí_upd©e_di•œy
();

1974 
	}
}

1976 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_pˇp_⁄off
 =

1977 
TOKEN_STRING_INITIALIZER
(
cmd_pˇp_⁄off_ªsu…
, 
pˇp
, "pcap");

1978 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_pˇp_⁄off_p‹éi°
 =

1979 
TOKEN_PORTLIST_INITIALIZER
(
cmd_pˇp_⁄off_ªsu…
, 
p‹éi°
);

1980 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_pˇp_⁄off_wh©
 =

1981 
TOKEN_STRING_INITIALIZER
(
cmd_pˇp_⁄off_ªsu…
,

1982 
wh©
,

1985 
cmdlöe_∑r£_ö°_t
 
	gcmd_pˇp_⁄off
 = {

1986 .
f
 = 
cmd_pˇp_⁄off_∑r£d
,

1987 .
	gd©a
 = 
NULL
,

1988 .
	ghñp_°r
 = "pcap <portlist> <state>",

1989 .
	gtokís
 = {

1990 (*)&
cmd_£t_pˇp_⁄off
,

1991 (*)&
cmd_pˇp_⁄off_p‹éi°
,

1992 (*)&
cmd_pˇp_⁄off_wh©
,

1993 
NULL
,

1999 
	scmd_pˇp_fûãr_ªsu…
 {

2000 
cmdlöe_fixed_°rög_t
 
	mpˇp_fûãr
;

2001 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2002 
cmdlöe_fixed_°rög_t
 
	mfûãr_°rög
;

2018 
	$cmd_pˇp_fûãr_∑r£d
(*
∑r£d_ªsu…
,

2019 
cmdlöe
 *
˛
 
__πe_unu£d
,

2020 *
d©a
 
__πe_unu£d
)

2022 
cmd_pˇp_fûãr_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2024 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2025 
	`pktgí_pˇp_fûãr
(
öfo
, 
ªs
->
fûãr_°rög
) );

2027 
	`pktgí_upd©e_di•œy
();

2028 
	}
}

2030 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_pˇp_fûãr
 =

2031 
TOKEN_STRING_INITIALIZER
(
cmd_pˇp_fûãr_ªsu…
,

2032 
pˇp_fûãr
,

2034 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_pˇp_fûãr_p‹éi°
 =

2035 
TOKEN_PORTLIST_INITIALIZER
(
cmd_pˇp_fûãr_ªsu…
, 
p‹éi°
);

2036 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_pˇp_fûãr_°rög
 =

2037 
TOKEN_STRING_INITIALIZER
(
cmd_pˇp_fûãr_ªsu…
,

2038 
fûãr_°rög
,

2039 
NULL
);

2041 
cmdlöe_∑r£_ö°_t
 
	gcmd_pˇp_fûãr
 = {

2042 .
f
 = 
cmd_pˇp_fûãr_∑r£d
,

2043 .
	gd©a
 = 
NULL
,

2044 .
	ghñp_°r
 = "pcap.filter <portlist> <filter-string>",

2045 .
	gtokís
 = {

2046 (*)&
cmd_£t_pˇp_fûãr
,

2047 (*)&
cmd_pˇp_fûãr_p‹éi°
,

2048 (*)&
cmd_pˇp_fûãr_°rög
,

2049 
NULL
,

2055 
	scmd_pˇp_show_ªsu…
 {

2056 
cmdlöe_fixed_°rög_t
 
	mpˇp_show
;

2072 
	$cmd_pˇp_show_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

2073 
cmdlöe
 *
˛
 
__πe_unu£d
,

2074 *
d©a
 
__πe_unu£d
)

2076 i‡(
pktgí
.
öfo
[pktgí.
p‹tNum
].
pˇp
)

2077 
	`wr_pˇp_öfo
(
pktgí
.
öfo
[pktgí.
p‹tNum
].
pˇp
,Öktgen.portNum,

2080 
	`pktgí_log_îr‹
(" ** PCAP file isÇotÜoaded onÖort %d",

2081 
pktgí
.
p‹tNum
);

2082 
	}
}

2084 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_pˇp_show
 =

2085 
TOKEN_STRING_INITIALIZER
(
cmd_pˇp_show_ªsu…
,

2086 
pˇp_show
,

2089 
cmdlöe_∑r£_ö°_t
 
	gcmd_pˇp_show
 = {

2090 .
f
 = 
cmd_pˇp_show_∑r£d
,

2091 .
	gd©a
 = 
NULL
,

2092 .
	ghñp_°r
 = "pcap.show - showÅheÖcap information",

2093 .
	gtokís
 = {

2094 (*)&
cmd_£t_pˇp_show
,

2095 
NULL
,

2101 
	scmd_pˇp_ödex_ªsu…
 {

2102 
cmdlöe_fixed_°rög_t
 
	mpˇp_ödex
;

2103 
uöt32_t
 
	mvÆue
;

2119 
	$cmd_pˇp_ödex_∑r£d
(*
∑r£d_ªsu…
,

2120 
cmdlöe
 *
˛
 
__πe_unu£d
,

2121 *
d©a
 
__πe_unu£d
)

2123 
cmd_pˇp_ödex_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2124 
pˇp_öfo_t
 *
pˇp
 = 
pktgí
.
öfo
[pktgí.
p‹tNum
].pcap;

2125 
uöt32_t
 
max_˙t
 = 
pˇp
->
pkt_cou¡
;

2127 i‡(
pˇp
) {

2128 i‡(
ªs
->
vÆue
 >
max_˙t
)

2129 
pˇp
->
pkt_idx
 = 
max_˙t
 - 
	`RTE_MIN
(
PCAP_PAGE_SIZE
,

2130 ()
max_˙t
);

2132 
pˇp
->
pkt_idx
 = 
ªs
->
vÆue
;

2133 
pktgí
.
Êags
 |
PRINT_LABELS_FLAG
;

2135 
	`pktgí_log_îr‹
(" ** PCAP file isÇotÜoaded onÖort %d",

2136 
pktgí
.
p‹tNum
);

2137 
	}
}

2139 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_pˇp_ödex
 =

2140 
TOKEN_STRING_INITIALIZER
(
cmd_pˇp_ödex_ªsu…
,

2141 
pˇp_ödex
,

2143 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_pˇp_vÆue
 =

2144 
TOKEN_NUM_INITIALIZER
(
cmd_pˇp_ödex_ªsu…
, 
vÆue
, 
UINT32
);

2146 
cmdlöe_∑r£_ö°_t
 
	gcmd_pˇp_ödex
 = {

2147 .
f
 = 
cmd_pˇp_ödex_∑r£d
,

2148 .
	gd©a
 = 
NULL
,

2149 .
	ghñp_°r
 = "pcap.index - SetÅhe PCAPÖakcet index value",

2150 .
	gtokís
 = {

2151 (*)&
cmd_£t_pˇp_ödex
,

2152 (*)&
cmd_£t_pˇp_vÆue
,

2153 
NULL
,

2159 
	scmd_blök_⁄off_ªsu…
 {

2160 
cmdlöe_fixed_°rög_t
 
	mblök
;

2161 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2162 
cmdlöe_fixed_°rög_t
 
	mwh©
;

2178 
	$cmd_blök_⁄off_∑r£d
(*
∑r£d_ªsu…
,

2179 
cmdlöe
 *
˛
 
__πe_unu£d
,

2180 *
d©a
 
__πe_unu£d
)

2182 
cmd_blök_⁄off_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2184 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2185 
	`pktgí_blök_íabÀ_dißbÀ
(
öfo
, 
ªs
->
wh©
) );

2187 i‡(
pktgí
.
blökli°
)

2188 
pktgí
.
Êags
 |
BLINK_PORTS_FLAG
;

2190 
pktgí
.
Êags
 &~
BLINK_PORTS_FLAG
;

2191 
	`pktgí_upd©e_di•œy
();

2192 
	}
}

2194 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_blök_⁄off
 =

2195 
TOKEN_STRING_INITIALIZER
(
cmd_blök_⁄off_ªsu…
, 
blök
, "blink");

2196 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_blök_⁄off_p‹éi°
 =

2197 
TOKEN_PORTLIST_INITIALIZER
(
cmd_blök_⁄off_ªsu…
, 
p‹éi°
);

2198 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_blök_⁄off_wh©
 =

2199 
TOKEN_STRING_INITIALIZER
(
cmd_blök_⁄off_ªsu…
,

2200 
wh©
,

2203 
cmdlöe_∑r£_ö°_t
 
	gcmd_blök_⁄off
 = {

2204 .
f
 = 
cmd_blök_⁄off_∑r£d
,

2205 .
	gd©a
 = 
NULL
,

2206 .
	ghñp_°r
 = "blink <portlist> <state>",

2207 .
	gtokís
 = {

2208 (*)&
cmd_£t_blök_⁄off
,

2209 (*)&
cmd_blök_⁄off_p‹éi°
,

2210 (*)&
cmd_blök_⁄off_wh©
,

2211 
NULL
,

2217 
	scmd_g¨p_⁄off_ªsu…
 {

2218 
cmdlöe_fixed_°rög_t
 
	mg¨p
;

2219 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2220 
cmdlöe_fixed_°rög_t
 
	mwh©
;

2237 
	$cmd_g¨p_⁄off_∑r£d
(*
∑r£d_ªsu…
,

2238 
cmdlöe
 *
˛
 
__πe_unu£d
,

2239 *
d©a
 
__πe_unu£d
)

2241 
cmd_g¨p_⁄off_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2243 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2244 
	`pktgí_g¨p_íabÀ_dißbÀ
(
öfo
, 
ªs
->
wh©
) );

2246 
	`pktgí_upd©e_di•œy
();

2247 
	}
}

2249 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_g¨p_⁄off
 =

2250 
TOKEN_STRING_INITIALIZER
(
cmd_g¨p_⁄off_ªsu…
, 
g¨p
, "garp");

2251 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_g¨p_⁄off_p‹éi°
 =

2252 
TOKEN_PORTLIST_INITIALIZER
(
cmd_g¨p_⁄off_ªsu…
, 
p‹éi°
);

2253 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_g¨p_⁄off_wh©
 =

2254 
TOKEN_STRING_INITIALIZER
(
cmd_g¨p_⁄off_ªsu…
,

2255 
wh©
,

2258 
cmdlöe_∑r£_ö°_t
 
	gcmd_g¨p_⁄off
 = {

2259 .
f
 = 
cmd_g¨p_⁄off_∑r£d
,

2260 .
	gd©a
 = 
NULL
,

2261 .
	ghñp_°r
 = "garp <portlist> <state>",

2262 .
	gtokís
 = {

2263 (*)&
cmd_£t_g¨p_⁄off
,

2264 (*)&
cmd_g¨p_⁄off_p‹éi°
,

2265 (*)&
cmd_g¨p_⁄off_wh©
,

2266 
NULL
,

2272 
	scmd_¥o˚ss_⁄off_ªsu…
 {

2273 
cmdlöe_fixed_°rög_t
 
	m¥o˚ss
;

2274 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2275 
cmdlöe_fixed_°rög_t
 
	mwh©
;

2292 
	$cmd_¥o˚ss_⁄off_∑r£d
(*
∑r£d_ªsu…
,

2293 
cmdlöe
 *
˛
 
__πe_unu£d
,

2294 *
d©a
 
__πe_unu£d
)

2296 
cmd_¥o˚ss_⁄off_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2298 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2299 
	`pktgí_¥o˚ss_íabÀ_dißbÀ
(
öfo
, 
ªs
->
wh©
) );

2301 
	`pktgí_upd©e_di•œy
();

2302 
	}
}

2304 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_¥o˚ss_⁄off
 =

2305 
TOKEN_STRING_INITIALIZER
(
cmd_¥o˚ss_⁄off_ªsu…
,

2306 
¥o˚ss
,

2308 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_¥o˚ss_⁄off_p‹éi°
 =

2309 
TOKEN_PORTLIST_INITIALIZER
(
cmd_¥o˚ss_⁄off_ªsu…
, 
p‹éi°
);

2310 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_¥o˚ss_⁄off_wh©
 =

2311 
TOKEN_STRING_INITIALIZER
(
cmd_¥o˚ss_⁄off_ªsu…
,

2312 
wh©
,

2315 
cmdlöe_∑r£_ö°_t
 
	gcmd_¥o˚ss_⁄off
 = {

2316 .
f
 = 
cmd_¥o˚ss_⁄off_∑r£d
,

2317 .
	gd©a
 = 
NULL
,

2318 .
	ghñp_°r
 = "process <portlist> <state>",

2319 .
	gtokís
 = {

2320 (*)&
cmd_£t_¥o˚ss_⁄off
,

2321 (*)&
cmd_¥o˚ss_⁄off_p‹éi°
,

2322 (*)&
cmd_¥o˚ss_⁄off_wh©
,

2323 
NULL
,

2329 
	scmd_£t_µp_ªsu…
 {

2330 
cmdlöe_fixed_°rög_t
 
	mµp
;

2331 
uöt32_t
 
	mvÆue
;

2347 
	$cmd_£t_µp_∑r£d
(*
∑r£d_ªsu…
,

2348 
cmdlöe
 *
˛
 
__πe_unu£d
,

2349 *
d©a
 
__πe_unu£d
)

2351 
cmd_£t_µp_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2353 
	`pktgí_£t_∑ge_size
(
ªs
->
vÆue
);

2354 
	}
}

2356 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_µp
 =

2357 
TOKEN_STRING_INITIALIZER
(
cmd_£t_µp_ªsu…
, 
µp
, "ppp");

2358 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_µp_vÆue
 =

2359 
TOKEN_NUM_INITIALIZER
(
cmd_£t_µp_ªsu…
, 
vÆue
, 
UINT32
);

2361 
cmdlöe_∑r£_ö°_t
 
	gcmd_£t_µµ
 = {

2362 .
f
 = 
cmd_£t_µp_∑r£d
,

2363 .
	gd©a
 = 
NULL
,

2364 .
	ghñp_°r
 = "ppp <size>",

2365 .
	gtokís
 = {

2366 (*)&
cmd_£t_µp
,

2367 (*)&
cmd_£t_µp_vÆue
,

2368 
NULL
,

2374 
	scmd_£t_p‹t_ªsu…
 {

2375 
cmdlöe_fixed_°rög_t
 
	mp‹t
;

2376 
uöt32_t
 
	mvÆue
;

2392 
	$cmd_£t_p‹t_∑r£d
(*
∑r£d_ªsu…
,

2393 
cmdlöe
 *
˛
 
__πe_unu£d
,

2394 *
d©a
 
__πe_unu£d
)

2396 
cmd_£t_p‹t_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2398 
	`pktgí_£t_p‹t_numbî
(
ªs
->
vÆue
);

2399 
	}
}

2401 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_p‹t_num
 =

2402 
TOKEN_STRING_INITIALIZER
(
cmd_£t_p‹t_ªsu…
, 
p‹t
, "port");

2403 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_p‹t_vÆue
 =

2404 
TOKEN_NUM_INITIALIZER
(
cmd_£t_p‹t_ªsu…
, 
vÆue
, 
UINT32
);

2406 
cmdlöe_∑r£_ö°_t
 
	gcmd_£t_p‹t_numbî
 = {

2407 .
f
 = 
cmd_£t_p‹t_∑r£d
,

2408 .
	gd©a
 = 
NULL
,

2409 .
	ghñp_°r
 = "port <Number>",

2410 .
	gtokís
 = {

2411 (*)&
cmd_£t_p‹t_num
,

2412 (*)&
cmd_£t_p‹t_vÆue
,

2413 
NULL
,

2419 
	scmd_£t_£q_ªsu…
 {

2420 
cmdlöe_fixed_°rög_t
 
	m£q
;

2421 
uöt32_t
 
	m£qnum
;

2422 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2423 
cmdlöe_ëhîaddr_t
 
	mdaddr
;

2424 
cmdlöe_ëhîaddr_t
 
	mßddr
;

2425 
cmdlöe_ùaddr_t
 
	mù_daddr
;

2426 
cmdlöe_ùaddr_t
 
	mù_ßddr
;

2427 
uöt32_t
 
	m•‹t
;

2428 
uöt32_t
 
	mdp‹t
;

2429 
cmdlöe_fixed_°rög_t
 
	mëh
;

2430 
cmdlöe_fixed_°rög_t
 
	m¥Ÿo
;

2431 
uöt16_t
 
	mvœnid
;

2432 
uöt32_t
 
	mpktsize
;

2433 
uöt32_t
 
	mgçu_ãid
;

2449 
	$cmd_£t_£q_∑r£d
(*
∑r£d_ªsu…
,

2450 
cmdlöe
 *
˛
 
__πe_unu£d
,

2451 *
d©a
 
__πe_unu£d
)

2453 
cmd_£t_£q_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2455 i‡–(
ªs
->
¥Ÿo
[0] ='i'Ë&& (ªs->
ëh
[3] == '6') ) {

2456 
	`cmdlöe_¥ötf
(
˛
, "Must use IPv4 with ICMPÅypeÖackets\n");

2460 i‡(
ªs
->
£qnum
 >
NUM_SEQ_PKTS
)

2463 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2464 
	`pktgí_£t_£q
(
öfo
, 
ªs
->
£qnum
,

2465 &
ªs
->
daddr
, &ªs->
ßddr
,

2466 &
ªs
->
ù_daddr
, &ªs->
ù_ßddr
,

2467 
ªs
->
•‹t
,Ñes->
dp‹t
,Ñes->
ëh
[3],

2468 
ªs
->
¥Ÿo
[0],

2469 
ªs
->
vœnid
,Ñes->
pktsize
,

2470 
ªs
->
gçu_ãid
) );

2472 
	`pktgí_upd©e_di•œy
();

2473 
	}
}

2475 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£t_£q
 =

2476 
TOKEN_STRING_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
£q
, "seq");

2477 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_£qnum
 =

2478 
TOKEN_NUM_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
£qnum
, 
UINT32
);

2479 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_£q_p‹éi°
 =

2480 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
p‹éi°
);

2481 
cmdlöe_∑r£_tokí_ëhîaddr_t
 
	gcmd_£t_£q_daddr
 =

2482 
TOKEN_ETHERADDR_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
daddr
);

2483 
cmdlöe_∑r£_tokí_ëhîaddr_t
 
	gcmd_£t_£q_ßddr
 =

2484 
TOKEN_ETHERADDR_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
ßddr
);

2485 
cmdlöe_∑r£_tokí_ùaddr_t
 
	gcmd_£t_£q_ù_daddr
 =

2486 
TOKEN_IPV4_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
ù_daddr
);

2487 
cmdlöe_∑r£_tokí_ùaddr_t
 
	gcmd_£t_£q_ù_ßddr
 =

2488 
TOKEN_IPV4NET_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
ù_ßddr
);

2489 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_£q_•‹t
 =

2490 
TOKEN_NUM_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
•‹t
, 
UINT32
);

2491 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_£q_dp‹t
 =

2492 
TOKEN_NUM_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
dp‹t
, 
UINT32
);

2493 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£q_ëh
 =

2494 
TOKEN_STRING_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
ëh
, "ipv4#ipv6");

2495 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£q_¥Ÿo
 =

2496 
TOKEN_STRING_INITIALIZER
(
cmd_£t_£q_ªsu…
,

2497 
¥Ÿo
,

2499 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_£q_vœnid
 =

2500 
TOKEN_NUM_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
vœnid
, 
UINT16
);

2501 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_£q_pktsize
 =

2502 
TOKEN_NUM_INITIALIZER
(
cmd_£t_£q_ªsu…
, 
pktsize
, 
UINT32
);

2504 
cmdlöe_∑r£_ö°_t
 
	gcmd_£q
 = {

2505 .
f
 = 
cmd_£t_£q_∑r£d
,

2506 .
	gd©a
 = 
NULL
,

2507 .
	ghñp_°r
 =

2509 .
	gtokís
 = {

2510 (*)&
cmd_£t_£t_£q
,

2511 (*)&
cmd_£t_£qnum
,

2512 (*)&
cmd_£t_£q_p‹éi°
,

2513 (*)&
cmd_£t_£q_daddr
,

2514 (*)&
cmd_£t_£q_ßddr
,

2515 (*)&
cmd_£t_£q_ù_daddr
,

2516 (*)&
cmd_£t_£q_ù_ßddr
,

2517 (*)&
cmd_£t_£q_•‹t
,

2518 (*)&
cmd_£t_£q_dp‹t
,

2519 (*)&
cmd_£t_£q_ëh
,

2520 (*)&
cmd_£t_£q_¥Ÿo
,

2521 (*)&
cmd_£t_£q_vœnid
,

2522 (*)&
cmd_£t_£q_pktsize
,

2523 
NULL
,

2529 
	scmd_£tù_d°_ªsu…
 {

2530 
cmdlöe_fixed_°rög_t
 
	m£t
;

2531 
cmdlöe_fixed_°rög_t
 
	mù
;

2532 
cmdlöe_fixed_°rög_t
 
	mùty≥
;

2533 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2534 
cmdlöe_ùaddr_t
 
	mùaddr
;

2550 
	$cmd_£tù_d°_∑r£d
(*
∑r£d_ªsu…
,

2551 
cmdlöe
 *
˛
 
__πe_unu£d
,

2552 *
d©a
 
__πe_unu£d
)

2554 
cmd_£tù_d°_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2556 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2557 
	`pktgí_£t_ùaddr
(
öfo
, 
ªs
->
ùty≥
[0], &ªs->
ùaddr
) );

2559 
	`pktgí_upd©e_di•œy
();

2560 
	}
}

2562 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£tù_d°
 =

2563 
TOKEN_STRING_INITIALIZER
(
cmd_£tù_d°_ªsu…
, 
£t
, "set");

2564 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ù_d°
 =

2565 
TOKEN_STRING_INITIALIZER
(
cmd_£tù_d°_ªsu…
, 
ù
, "ip");

2566 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ùty≥_d°
 =

2567 
TOKEN_STRING_INITIALIZER
(
cmd_£tù_d°_ªsu…
, 
ùty≥
, "dst");

2568 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_ù_d°_p‹éi°
 =

2569 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£tù_d°_ªsu…
, 
p‹éi°
);

2570 
cmdlöe_∑r£_tokí_ùaddr_t
 
	gcmd_£t_d°_ùaddr
 =

2571 
TOKEN_IPV4_INITIALIZER
(
cmd_£tù_d°_ªsu…
, 
ùaddr
);

2573 
cmdlöe_∑r£_ö°_t
 
	gcmd_£tù_d°
 = {

2574 .
f
 = 
cmd_£tù_d°_∑r£d
,

2575 .
	gd©a
 = 
NULL
,

2576 .
	ghñp_°r
 = "set ip dst <portlist> ipaddr",

2577 .
	gtokís
 = {

2578 (*)&
cmd_£t_£tù_d°
,

2579 (*)&
cmd_£t_ù_d°
,

2580 (*)&
cmd_£t_ùty≥_d°
,

2581 (*)&
cmd_£t_ù_d°_p‹éi°
,

2582 (*)&
cmd_£t_d°_ùaddr
,

2583 
NULL
,

2589 
	scmd_£tù_§c_ªsu…
 {

2590 
cmdlöe_fixed_°rög_t
 
	m£t
;

2591 
cmdlöe_fixed_°rög_t
 
	mù
;

2592 
cmdlöe_fixed_°rög_t
 
	mùty≥
;

2593 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2594 
cmdlöe_ùaddr_t
 
	mùaddr
;

2610 
	$cmd_£tù_§c_∑r£d
(*
∑r£d_ªsu…
,

2611 
cmdlöe
 *
˛
 
__πe_unu£d
,

2612 *
d©a
 
__πe_unu£d
)

2614 
cmd_£tù_§c_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2616 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2617 
	`pktgí_£t_ùaddr
(
öfo
, 
ªs
->
ùty≥
[0], &ªs->
ùaddr
) );

2619 
	`pktgí_upd©e_di•œy
();

2620 
	}
}

2622 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£tù_§c
 =

2623 
TOKEN_STRING_INITIALIZER
(
cmd_£tù_§c_ªsu…
, 
£t
, "set");

2624 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ù_§c
 =

2625 
TOKEN_STRING_INITIALIZER
(
cmd_£tù_§c_ªsu…
, 
ù
, "ip");

2626 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ùty≥_§c
 =

2627 
TOKEN_STRING_INITIALIZER
(
cmd_£tù_§c_ªsu…
, 
ùty≥
, "src");

2628 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_ù_§c_p‹éi°
 =

2629 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£tù_§c_ªsu…
, 
p‹éi°
);

2630 
cmdlöe_∑r£_tokí_ùaddr_t
 
	gcmd_£t_§c_ùaddr
 =

2631 
TOKEN_IPV4NET_INITIALIZER
(
cmd_£tù_§c_ªsu…
, 
ùaddr
);

2633 
cmdlöe_∑r£_ö°_t
 
	gcmd_£tù_§c
 = {

2634 .
f
 = 
cmd_£tù_§c_∑r£d
,

2635 .
	gd©a
 = 
NULL
,

2636 .
	ghñp_°r
 = "set ip src <portlist> ipaddr",

2637 .
	gtokís
 = {

2638 (*)&
cmd_£t_£tù_§c
,

2639 (*)&
cmd_£t_ù_§c
,

2640 (*)&
cmd_£t_ùty≥_§c
,

2641 (*)&
cmd_£t_ù_§c_p‹éi°
,

2642 (*)&
cmd_£t_§c_ùaddr
,

2643 
NULL
,

2649 
	scmd_£nd_¨p_ªsu…
 {

2650 
cmdlöe_fixed_°rög_t
 
	m£nd
;

2651 
cmdlöe_fixed_°rög_t
 
	m¨p
;

2652 
cmdlöe_fixed_°rög_t
 
	mwh©
;

2653 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2669 
	$cmd_£nd_¨p_∑r£d
(*
∑r£d_ªsu…
,

2670 
cmdlöe
 *
˛
 
__πe_unu£d
,

2671 *
d©a
 
__πe_unu£d
)

2673 
cmd_£nd_¨p_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2675 i‡(
ªs
->
wh©
[0] == 'g')

2676 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2677 
	`pktgí_£nd_¨p_ªque°s
(
öfo
, 
GRATUITOUS_ARP
) );

2679 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2680 
	`pktgí_£nd_¨p_ªque°s
(
öfo
, 0) );

2681 
	}
}

2683 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£nd_¨p
 =

2684 
TOKEN_STRING_INITIALIZER
(
cmd_£nd_¨p_ªsu…
, 
£nd
, "send");

2685 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_¨p
 =

2686 
TOKEN_STRING_INITIALIZER
(
cmd_£nd_¨p_ªsu…
, 
¨p
, "arp");

2687 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_¨p_wh©
 =

2688 
TOKEN_STRING_INITIALIZER
(
cmd_£nd_¨p_ªsu…
, 
wh©
, "grat#req");

2689 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_¨p_p‹éi°
 =

2690 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£nd_¨p_ªsu…
, 
p‹éi°
);

2692 
cmdlöe_∑r£_ö°_t
 
	gcmd_£nd_¨p
 = {

2693 .
f
 = 
cmd_£nd_¨p_∑r£d
,

2694 .
	gd©a
 = 
NULL
,

2695 .
	ghñp_°r
 = "sendárp grat|req <portlist>",

2696 .
	gtokís
 = {

2697 (*)&
cmd_£t_£nd_¨p
,

2698 (*)&
cmd_£t_¨p
,

2699 (*)&
cmd_£t_¨p_wh©
,

2700 (*)&
cmd_£t_¨p_p‹éi°
,

2701 
NULL
,

2707 
	scmd_£t_¥Ÿo_ªsu…
 {

2708 
cmdlöe_fixed_°rög_t
 
	m£t
;

2709 
cmdlöe_fixed_°rög_t
 
	mty≥
;

2710 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

2726 
	$cmd_£t_¥Ÿo_∑r£d
(*
∑r£d_ªsu…
,

2727 
cmdlöe
 *
˛
 
__πe_unu£d
,

2728 *
d©a
 
__πe_unu£d
)

2730 
cmd_£t_¥Ÿo_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2732 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

2733 
	`pktgí_£t_¥Ÿo
(
öfo
, 
ªs
->
ty≥
[0]) );

2735 
	`pktgí_upd©e_di•œy
();

2736 
	}
}

2738 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£t_¥Ÿo
 =

2739 
TOKEN_STRING_INITIALIZER
(
cmd_£t_¥Ÿo_ªsu…
, 
£t
, "proto");

2740 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ty≥
 =

2741 
TOKEN_STRING_INITIALIZER
(
cmd_£t_¥Ÿo_ªsu…
,

2742 
ty≥
,

2744 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_¥Ÿo_p‹éi°
 =

2745 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£t_¥Ÿo_ªsu…
, 
p‹éi°
);

2747 
cmdlöe_∑r£_ö°_t
 
	gcmd_¥Ÿo
 = {

2748 .
f
 = 
cmd_£t_¥Ÿo_∑r£d
,

2749 .
	gd©a
 = 
NULL
,

2750 .
	ghñp_°r
 = "proto udp|tcp|icmp <portlist>",

2751 .
	gtokís
 = {

2752 (*)&
cmd_£t_£t_¥Ÿo
,

2753 (*)&
cmd_£t_ty≥
,

2754 (*)&
cmd_£t_¥Ÿo_p‹éi°
,

2755 
NULL
,

2761 
	scmd_lﬂd_ªsu…
 {

2762 
cmdlöe_fixed_°rög_t
 
	mlﬂd
;

2763 
cmdlöe_fixed_°rög_t
 
	m∑th
;

2779 
	$cmd_£t_lﬂd_∑r£d
(*
∑r£d_ªsu…
,

2780 
cmdlöe
 *
˛
,

2781 *
d©a
 
__πe_unu£d
)

2783 
cmd_lﬂd_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2785 i‡(
	`pktgí_lﬂd_cmds
(
ªs
->
∑th
) )

2786 
	`cmdlöe_¥ötf
(
˛
, "lﬂd comm™d faûed f‹ %s\n", 
ªs
->
∑th
);

2787 i‡(!
	`wr_s¸n_is_∑u£d
() )

2788 
	`pktgí_ªdi•œy
(0);

2789 
	}
}

2791 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_lﬂd
 =

2792 
TOKEN_STRING_INITIALIZER
(
cmd_lﬂd_ªsu…
, 
lﬂd
, "load");

2793 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_∑th
 =

2794 
TOKEN_STRING_INITIALIZER
(
cmd_lﬂd_ªsu…
, 
∑th
, 
NULL
);

2796 
cmdlöe_∑r£_ö°_t
 
	gcmd_lﬂd
 = {

2797 .
f
 = 
cmd_£t_lﬂd_∑r£d
,

2798 .
	gd©a
 = 
NULL
,

2799 .
	ghñp_°r
 = "load <path>",

2800 .
	gtokís
 = {

2801 (*)&
cmd_£t_lﬂd
,

2802 (*)&
cmd_£t_∑th
,

2803 
NULL
,

2809 
	scmd_∑ge_ªsu…
 {

2810 
cmdlöe_fixed_°rög_t
 
	m∑ge
;

2811 
cmdlöe_fixed_°rög_t
 
	m∑geTy≥
;

2827 
	$cmd_£t_∑ge_∑r£d
(*
∑r£d_ªsu…
,

2828 
cmdlöe
 *
˛
 
__πe_unu£d
,

2829 *
d©a
 
__πe_unu£d
)

2831 
cmd_∑ge_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2833 
	`pktgí_£t_∑ge
(
ªs
->
∑geTy≥
);

2834 
	}
}

2836 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_∑ge
 =

2837 
TOKEN_STRING_INITIALIZER
(
cmd_∑ge_ªsu…
, 
∑ge
, "page");

2838 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_∑geTy≥
 =

2839 
TOKEN_STRING_INITIALIZER
(
cmd_∑ge_ªsu…
,

2840 
∑geTy≥
,

2843 
cmdlöe_∑r£_ö°_t
 
	gcmd_∑ge
 = {

2844 .
f
 = 
cmd_£t_∑ge_∑r£d
,

2845 .
	gd©a
 = 
NULL
,

2846 .
	ghñp_°r
 =

2848 .
	gtokís
 = {

2849 (*)&
cmd_£t_∑ge
,

2850 (*)&
cmd_£t_∑geTy≥
,

2851 
NULL
,

2857 
	scmd_s¸ìn_ªsu…
 {

2858 
cmdlöe_fixed_°rög_t
 
	ms¸ìn
;

2859 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

2875 
	$cmd_s¸ìn_∑r£d
(*
∑r£d_ªsu…
,

2876 
cmdlöe
 *
˛
 
__πe_unu£d
,

2877 *
d©a
 
__πe_unu£d
)

2879 
cmd_s¸ìn_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

2881 
	`pktgí_s¸ìn
(
ªs
->
⁄Off
);

2882 
	}
}

2884 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_s¸ìn
 =

2885 
TOKEN_STRING_INITIALIZER
(
cmd_s¸ìn_ªsu…
, 
s¸ìn
, "screen");

2886 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_s¸ìn_⁄Off
 =

2887 
TOKEN_STRING_INITIALIZER
(
cmd_s¸ìn_ªsu…
,

2888 
⁄Off
,

2891 
cmdlöe_∑r£_ö°_t
 
	gcmd_s¸ìn
 = {

2892 .
f
 = 
cmd_s¸ìn_∑r£d
,

2893 .
	gd©a
 = 
NULL
,

2894 .
	ghñp_°r
 = "screen stop|start|on|off|enable|disable",

2895 .
	gtokís
 = {

2896 (*)&
cmd_£t_s¸ìn
,

2897 (*)&
cmd_s¸ìn_⁄Off
,

2898 
NULL
,

2904 
	scmd_off_ªsu…
 {

2905 
cmdlöe_fixed_°rög_t
 
	moff
;

2921 
	$cmd_off_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

2922 
cmdlöe
 *
˛
 
__πe_unu£d
,

2923 *
d©a
 
__πe_unu£d
)

2925 
	`pktgí_s¸ìn
("off");

2926 
	}
}

2928 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_off
 =

2929 
TOKEN_STRING_INITIALIZER
(
cmd_off_ªsu…
, 
off
, "off");

2931 
cmdlöe_∑r£_ö°_t
 
	gcmd_off
 = {

2932 .
f
 = 
cmd_off_∑r£d
,

2933 .
	gd©a
 = 
NULL
,

2934 .
	ghñp_°r
 = "off - disableÅhe screen",

2935 .
	gtokís
 = {

2936 (*)&
cmd_£t_off
,

2937 
NULL
,

2943 
	scmd_⁄_ªsu…
 {

2944 
cmdlöe_fixed_°rög_t
 
	m⁄
;

2960 
	$cmd_⁄_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

2961 
cmdlöe
 *
˛
 
__πe_unu£d
,

2962 *
d©a
 
__πe_unu£d
)

2964 
	`pktgí_s¸ìn
("on");

2965 
	}
}

2967 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_⁄
 =

2968 
TOKEN_STRING_INITIALIZER
(
cmd_⁄_ªsu…
, 
⁄
, "on");

2970 
cmdlöe_∑r£_ö°_t
 
	gcmd_⁄
 = {

2971 .
f
 = 
cmd_⁄_∑r£d
,

2972 .
	gd©a
 = 
NULL
,

2973 .
	ghñp_°r
 = "on -ÉnableÅhe screen",

2974 .
	gtokís
 = {

2975 (*)&
cmd_£t_⁄
,

2976 
NULL
,

2982 
	scmd_tx_debug_ªsu…
 {

2983 
cmdlöe_fixed_°rög_t
 
	mtx_debug
;

2999 
	$cmd_tx_debug_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

3000 
cmdlöe
 *
˛
 
__πe_unu£d
,

3001 *
d©a
 
__πe_unu£d
)

3003 i‡–(
pktgí
.
Êags
 & 
TX_DEBUG_FLAG
) == 0)

3004 
pktgí
.
Êags
 |
TX_DEBUG_FLAG
;

3006 
pktgí
.
Êags
 &~
TX_DEBUG_FLAG
;

3007 
	`pktgí_˛s
();

3008 
	}
}

3010 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_tx_debug
 =

3011 
TOKEN_STRING_INITIALIZER
(
cmd_tx_debug_ªsu…
,

3012 
tx_debug
,

3015 
cmdlöe_∑r£_ö°_t
 
	gcmd_tx_debug
 = {

3016 .
f
 = 
cmd_tx_debug_∑r£d
,

3017 .
	gd©a
 = 
NULL
,

3018 .
	ghñp_°r
 = "Toggle TX debug",

3019 .
	gtokís
 = {

3020 (*)&
cmd_£t_tx_debug
,

3021 
NULL
,

3027 
	scmd_l2p_ªsu…
 {

3028 
cmdlöe_fixed_°rög_t
 
	ml2p
;

3044 
	$cmd_l2p_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

3045 
cmdlöe
 *
˛
 
__πe_unu£d
,

3046 *
d©a
 
__πe_unu£d
)

3048 
	`pktgí_l2p_dump
();

3049 
	}
}

3051 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_l2p
 =

3052 
TOKEN_STRING_INITIALIZER
(
cmd_l2p_ªsu…
, 
l2p
, "l2p");

3054 
cmdlöe_∑r£_ö°_t
 
	gcmd_l2p
 = {

3055 .
f
 = 
cmd_l2p_∑r£d
,

3056 .
	gd©a
 = 
NULL
,

3057 .
	ghñp_°r
 = "l2p dumpÅhe information",

3058 .
	gtokís
 = {

3059 (*)&
cmd_£t_l2p
,

3060 
NULL
,

3066 
	scmd_mempoﬁ_ªsu…
 {

3067 
cmdlöe_fixed_°rög_t
 
	mmempoﬁ
;

3068 
cmdlöe_fixed_°rög_t
 
	mdump
;

3069 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3070 
cmdlöe_fixed_°rög_t
 
	m«me
;

3086 
	$cmd_mempoﬁ_∑r£d
(*
∑r£d_ªsu…
,

3087 
cmdlöe
 *
˛
 
__πe_unu£d
,

3088 *
d©a
 
__πe_unu£d
)

3090 
cmd_mempoﬁ_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3092 i‡(!
	`°rcmp
(
ªs
->
dump
, "dump") )

3093 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3094 
	`pktgí_mempoﬁ_dump
(
öfo
, 
ªs
->
«me
) );

3095 
	}
}

3097 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_mempoﬁ
 =

3098 
TOKEN_STRING_INITIALIZER
(
cmd_mempoﬁ_ªsu…
, 
mempoﬁ
, "mempool");

3099 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_mempoﬁ_dump
 =

3100 
TOKEN_STRING_INITIALIZER
(
cmd_mempoﬁ_ªsu…
, 
dump
, "dump");

3101 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_mempoﬁ_p‹éi°
 =

3102 
TOKEN_PORTLIST_INITIALIZER
(
cmd_mempoﬁ_ªsu…
, 
p‹éi°
);

3103 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_mempoﬁ_«me
 =

3104 
TOKEN_STRING_INITIALIZER
(
cmd_mempoﬁ_ªsu…
,

3105 
«me
,

3108 
cmdlöe_∑r£_ö°_t
 
	gcmd_mempoﬁ
 = {

3109 .
f
 = 
cmd_mempoﬁ_∑r£d
,

3110 .
	gd©a
 = 
NULL
,

3111 .
	ghñp_°r
 = "mempool dump <portlist> [all|rx|tx|range|seq|arp|pcap]",

3112 .
	gtokís
 = {

3113 (*)&
cmd_£t_mempoﬁ
,

3114 (*)&
cmd_mempoﬁ_dump
,

3115 (*)&
cmd_mempoﬁ_p‹éi°
,

3116 (*)&
cmd_mempoﬁ_«me
,

3117 
NULL
,

3123 
	scmd_£t_pkt_ty≥_ªsu…
 {

3124 
cmdlöe_fixed_°rög_t
 
	m£t
;

3125 
cmdlöe_fixed_°rög_t
 
	mty≥
;

3126 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3142 
	$cmd_£t_pkt_ty≥_∑r£d
(*
∑r£d_ªsu…
,

3143 
cmdlöe
 *
˛
 
__πe_unu£d
,

3144 *
d©a
 
__πe_unu£d
)

3146 
cmd_£t_¥Ÿo_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3148 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3149 
	`pktgí_£t_pkt_ty≥
(
öfo
, 
ªs
->
ty≥
) );

3151 
	`pktgí_upd©e_di•œy
();

3152 
	}
}

3154 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£t_pkt_ty≥
 =

3155 
TOKEN_STRING_INITIALIZER
(
cmd_£t_pkt_ty≥_ªsu…
, 
£t
, "type");

3156 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_pkt_ty≥
 =

3157 
TOKEN_STRING_INITIALIZER
(
cmd_£t_pkt_ty≥_ªsu…
,

3158 
ty≥
,

3160 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_pkt_ty≥_p‹éi°
 =

3161 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£t_pkt_ty≥_ªsu…
, 
p‹éi°
);

3163 
cmdlöe_∑r£_ö°_t
 
	gcmd_pkt_ty≥
 = {

3164 .
f
 = 
cmd_£t_pkt_ty≥_∑r£d
,

3165 .
	gd©a
 = 
NULL
,

3166 .
	ghñp_°r
 = "type ipv4|ipv6|arp <portlist>",

3167 .
	gtokís
 = {

3168 (*)&
cmd_£t_£t_pkt_ty≥
,

3169 (*)&
cmd_£t_pkt_ty≥
,

3170 (*)&
cmd_£t_pkt_ty≥_p‹éi°
,

3171 
NULL
,

3177 
	scmd_icmp_echo_ªsu…
 {

3178 
cmdlöe_fixed_°rög_t
 
	micmp_echo
;

3179 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3180 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3196 
	$cmd_icmp_echo_∑r£d
(*
∑r£d_ªsu…
,

3197 
cmdlöe
 *
˛
 
__πe_unu£d
,

3198 *
d©a
 
__πe_unu£d
)

3200 
cmd_icmp_echo_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3202 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3203 
	`pktgí_£t_icmp_echo
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3204 
	}
}

3206 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_icmp
 =

3207 
TOKEN_STRING_INITIALIZER
(
cmd_icmp_echo_ªsu…
,

3208 
icmp_echo
,

3210 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_icmp_echo_p‹éi°
 =

3211 
TOKEN_PORTLIST_INITIALIZER
(
cmd_icmp_echo_ªsu…
, 
p‹éi°
);

3212 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_⁄off
 =

3213 
TOKEN_STRING_INITIALIZER
(
cmd_icmp_echo_ªsu…
,

3214 
⁄Off
,

3217 
cmdlöe_∑r£_ö°_t
 
	gcmd_icmp_echo
 = {

3218 .
f
 = 
cmd_icmp_echo_∑r£d
,

3219 .
	gd©a
 = 
NULL
,

3220 .
	ghñp_°r
 = "icmp.echo <portlist> <state>",

3221 .
	gtokís
 = {

3222 (*)&
cmd_£t_icmp
,

3223 (*)&
cmd_£t_icmp_echo_p‹éi°
,

3224 (*)&
cmd_£t_⁄off
,

3225 
NULL
,

3231 
	scmd_ˇ±uª_ªsu…
 {

3232 
cmdlöe_fixed_°rög_t
 
	mˇ±uª
;

3233 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3234 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3250 
	$cmd_ˇ±uª_∑r£d
(*
∑r£d_ªsu…
,

3251 
cmdlöe
 *
˛
 
__πe_unu£d
,

3252 *
d©a
 
__πe_unu£d
)

3254 
cmd_ˇ±uª_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3256 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3257 
	`pktgí_£t_ˇ±uª
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3258 
	}
}

3260 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ˇ±uª
 =

3261 
TOKEN_STRING_INITIALIZER
(
cmd_ˇ±uª_ªsu…
, 
ˇ±uª
, "capture");

3262 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_ˇ±uª_p‹éi°
 =

3263 
TOKEN_PORTLIST_INITIALIZER
(
cmd_ˇ±uª_ªsu…
, 
p‹éi°
);

3264 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_ˇ±uª_⁄off
 =

3265 
TOKEN_STRING_INITIALIZER
(
cmd_ˇ±uª_ªsu…
,

3266 
⁄Off
,

3269 
cmdlöe_∑r£_ö°_t
 
	gcmd_ˇ±uª
 = {

3270 .
f
 = 
cmd_ˇ±uª_∑r£d
,

3271 .
	gd©a
 = 
NULL
,

3272 .
	ghñp_°r
 = "capture <portlist> <state>",

3273 .
	gtokís
 = {

3274 (*)&
cmd_£t_ˇ±uª
,

3275 (*)&
cmd_£t_ˇ±uª_p‹éi°
,

3276 (*)&
cmd_£t_ˇ±uª_⁄off
,

3277 
NULL
,

3283 
	scmd_rx_èp_ªsu…
 {

3284 
cmdlöe_fixed_°rög_t
 
	mrxèp
;

3285 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3286 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3302 
	$cmd_rx_èp_∑r£d
(*
∑r£d_ªsu…
,

3303 
cmdlöe
 *
˛
 
__πe_unu£d
,

3304 *
d©a
 
__πe_unu£d
)

3306 
cmd_rx_èp_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3308 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3309 
	`pktgí_£t_rx_èp
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3310 
	}
}

3312 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_rx_èp
 =

3313 
TOKEN_STRING_INITIALIZER
(
cmd_rx_èp_ªsu…
, 
rxèp
, "rxtap");

3314 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_rx_èp_p‹éi°
 =

3315 
TOKEN_PORTLIST_INITIALIZER
(
cmd_rx_èp_ªsu…
, 
p‹éi°
);

3316 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_rx_èp_⁄off
 =

3317 
TOKEN_STRING_INITIALIZER
(
cmd_rx_èp_ªsu…
,

3318 
⁄Off
,

3321 
cmdlöe_∑r£_ö°_t
 
	gcmd_rx_èp
 = {

3322 .
f
 = 
cmd_rx_èp_∑r£d
,

3323 .
	gd©a
 = 
NULL
,

3324 .
	ghñp_°r
 = "rxtap <portlist> <state>",

3325 .
	gtokís
 = {

3326 (*)&
cmd_£t_rx_èp
,

3327 (*)&
cmd_£t_rx_èp_p‹éi°
,

3328 (*)&
cmd_£t_rx_èp_⁄off
,

3329 
NULL
,

3335 
	scmd_tx_èp_ªsu…
 {

3336 
cmdlöe_fixed_°rög_t
 
	mtxèp
;

3337 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3338 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3354 
	$cmd_tx_èp_∑r£d
(*
∑r£d_ªsu…
,

3355 
cmdlöe
 *
˛
 
__πe_unu£d
,

3356 *
d©a
 
__πe_unu£d
)

3358 
cmd_tx_èp_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3360 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3361 
	`pktgí_£t_tx_èp
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3362 
	}
}

3364 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_tx_èp
 =

3365 
TOKEN_STRING_INITIALIZER
(
cmd_tx_èp_ªsu…
, 
txèp
, "txtap");

3366 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_tx_èp_p‹éi°
 =

3367 
TOKEN_PORTLIST_INITIALIZER
(
cmd_tx_èp_ªsu…
, 
p‹éi°
);

3368 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_tx_èp_⁄off
 =

3369 
TOKEN_STRING_INITIALIZER
(
cmd_tx_èp_ªsu…
,

3370 
⁄Off
,

3373 
cmdlöe_∑r£_ö°_t
 
	gcmd_tx_èp
 = {

3374 .
f
 = 
cmd_tx_èp_∑r£d
,

3375 .
	gd©a
 = 
NULL
,

3376 .
	ghñp_°r
 = "txtap <portlist> <state>",

3377 .
	gtokís
 = {

3378 (*)&
cmd_£t_tx_èp
,

3379 (*)&
cmd_£t_tx_èp_p‹éi°
,

3380 (*)&
cmd_£t_tx_èp_⁄off
,

3381 
NULL
,

3387 
	scmd_vœn_ªsu…
 {

3388 
cmdlöe_fixed_°rög_t
 
	mvœn
;

3389 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3390 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3406 
	$cmd_vœn_∑r£d
(*
∑r£d_ªsu…
,

3407 
cmdlöe
 *
˛
 
__πe_unu£d
,

3408 *
d©a
 
__πe_unu£d
)

3410 
cmd_vœn_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3412 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3413 
	`pktgí_£t_vœn
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3415 
	`pktgí_upd©e_di•œy
();

3416 
	}
}

3418 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_vœn
 =

3419 
TOKEN_STRING_INITIALIZER
(
cmd_vœn_ªsu…
, 
vœn
, "vlan");

3420 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_vœn_p‹éi°
 =

3421 
TOKEN_PORTLIST_INITIALIZER
(
cmd_vœn_ªsu…
, 
p‹éi°
);

3422 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_vœn_⁄off
 =

3423 
TOKEN_STRING_INITIALIZER
(
cmd_vœn_ªsu…
,

3424 
⁄Off
,

3427 
cmdlöe_∑r£_ö°_t
 
	gcmd_vœn
 = {

3428 .
f
 = 
cmd_vœn_∑r£d
,

3429 .
	gd©a
 = 
NULL
,

3430 .
	ghñp_°r
 = "vlan <portlist> <state>",

3431 .
	gtokís
 = {

3432 (*)&
cmd_£t_vœn
,

3433 (*)&
cmd_£t_vœn_p‹éi°
,

3434 (*)&
cmd_£t_vœn_⁄off
,

3435 
NULL
,

3441 
	scmd_vœnid_ªsu…
 {

3442 
cmdlöe_fixed_°rög_t
 
	mvœnid
;

3443 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3444 
uöt16_t
 
	mid
;

3460 
	$cmd_vœnid_∑r£d
(*
∑r£d_ªsu…
,

3461 
cmdlöe
 *
˛
 
__πe_unu£d
,

3462 *
d©a
 
__πe_unu£d
)

3464 
cmd_vœnid_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3466 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3467 
	`pktgí_£t_vœnid
(
öfo
, 
ªs
->
id
) );

3469 
	`pktgí_upd©e_di•œy
();

3470 
	}
}

3472 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_vœnid
 =

3473 
TOKEN_STRING_INITIALIZER
(
cmd_vœnid_ªsu…
, 
vœnid
, "vlanid");

3474 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_vœnid_p‹éi°
 =

3475 
TOKEN_PORTLIST_INITIALIZER
(
cmd_vœnid_ªsu…
, 
p‹éi°
);

3476 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_vœnid_id
 =

3477 
TOKEN_NUM_INITIALIZER
(
cmd_vœnid_ªsu…
, 
id
, 
UINT16
);

3479 
cmdlöe_∑r£_ö°_t
 
	gcmd_vœnid
 = {

3480 .
f
 = 
cmd_vœnid_∑r£d
,

3481 .
	gd©a
 = 
NULL
,

3482 .
	ghñp_°r
 = "vlanid <portlist> id",

3483 .
	gtokís
 = {

3484 (*)&
cmd_£t_vœnid
,

3485 (*)&
cmd_£t_vœnid_p‹éi°
,

3486 (*)&
cmd_£t_vœnid_id
,

3487 
NULL
,

3493 
	scmd_m∂s_ªsu…
 {

3494 
cmdlöe_fixed_°rög_t
 
	mm∂s
;

3495 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3496 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3512 
	$cmd_m∂s_∑r£d
(*
∑r£d_ªsu…
,

3513 
cmdlöe
 *
˛
 
__πe_unu£d
,

3514 *
d©a
 
__πe_unu£d
)

3516 
cmd_m∂s_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3518 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3519 
	`pktgí_£t_m∂s
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3521 
	`pktgí_upd©e_di•œy
();

3522 
	}
}

3524 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_m∂s
 =

3525 
TOKEN_STRING_INITIALIZER
(
cmd_m∂s_ªsu…
, 
m∂s
, "mpls");

3526 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_m∂s_p‹éi°
 =

3527 
TOKEN_PORTLIST_INITIALIZER
(
cmd_m∂s_ªsu…
, 
p‹éi°
);

3528 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_m∂s_⁄off
 =

3529 
TOKEN_STRING_INITIALIZER
(
cmd_m∂s_ªsu…
,

3530 
⁄Off
,

3533 
cmdlöe_∑r£_ö°_t
 
	gcmd_m∂s
 = {

3534 .
f
 = 
cmd_m∂s_∑r£d
,

3535 .
	gd©a
 = 
NULL
,

3536 .
	ghñp_°r
 = "mpls <portlist> <state>",

3537 .
	gtokís
 = {

3538 (*)&
cmd_£t_m∂s
,

3539 (*)&
cmd_£t_m∂s_p‹éi°
,

3540 (*)&
cmd_£t_m∂s_⁄off
,

3541 
NULL
,

3547 
	scmd_m∂s_íåy_ªsu…
 {

3548 
cmdlöe_fixed_°rög_t
 
	mm∂s_íåy
;

3549 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3550 
cmdlöe_fixed_°rög_t
 
	míåy
;

3566 
	$cmd_m∂s_íåy_∑r£d
(*
∑r£d_ªsu…
,

3567 
cmdlöe
 *
˛
 
__πe_unu£d
,

3568 *
d©a
 
__πe_unu£d
)

3570 
cmd_m∂s_íåy_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3572 
uöt32_t
 
íåy
 = 
	`°πoul
(
ªs
->íåy, 
NULL
, 16);

3574 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3575 
	`pktgí_£t_m∂s_íåy
(
öfo
, 
íåy
) );

3577 
	`pktgí_upd©e_di•œy
();

3578 
	}
}

3580 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_m∂s_íåy
 =

3581 
TOKEN_STRING_INITIALIZER
(
cmd_m∂s_íåy_ªsu…
,

3582 
m∂s_íåy
,

3584 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_m∂s_íåy_p‹éi°
 =

3585 
TOKEN_PORTLIST_INITIALIZER
(
cmd_m∂s_íåy_ªsu…
, 
p‹éi°
);

3586 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_m∂s_íåy_íåy
 =

3587 
TOKEN_STRING_INITIALIZER
(
cmd_m∂s_íåy_ªsu…
, 
íåy
, 
NULL
);

3589 
cmdlöe_∑r£_ö°_t
 
	gcmd_m∂s_íåy
 = {

3590 .
f
 = 
cmd_m∂s_íåy_∑r£d
,

3591 .
	gd©a
 = 
NULL
,

3592 .
	ghñp_°r
 = "mpls_entry <portlist>Éntry (in hex)",

3593 .
	gtokís
 = {

3594 (*)&
cmd_£t_m∂s_íåy
,

3595 (*)&
cmd_£t_m∂s_íåy_p‹éi°
,

3596 (*)&
cmd_£t_m∂s_íåy_íåy
,

3597 
NULL
,

3603 
	scmd_qöq_ªsu…
 {

3604 
cmdlöe_fixed_°rög_t
 
	mqöq
;

3605 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3606 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3622 
	$cmd_qöq_∑r£d
(*
∑r£d_ªsu…
,

3623 
cmdlöe
 *
˛
 
__πe_unu£d
,

3624 *
d©a
 
__πe_unu£d
)

3626 
cmd_qöq_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3628 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3629 
	`pktgí_£t_qöq
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3631 
	`pktgí_upd©e_di•œy
();

3632 
	}
}

3634 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_qöq
 =

3635 
TOKEN_STRING_INITIALIZER
(
cmd_qöq_ªsu…
, 
qöq
, "qinq");

3636 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_qöq_p‹éi°
 =

3637 
TOKEN_PORTLIST_INITIALIZER
(
cmd_qöq_ªsu…
, 
p‹éi°
);

3638 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_qöq_⁄off
 =

3639 
TOKEN_STRING_INITIALIZER
(
cmd_qöq_ªsu…
,

3640 
⁄Off
,

3643 
cmdlöe_∑r£_ö°_t
 
	gcmd_qöq
 = {

3644 .
f
 = 
cmd_qöq_∑r£d
,

3645 .
	gd©a
 = 
NULL
,

3646 .
	ghñp_°r
 = "qinq <portlist> <state>",

3647 .
	gtokís
 = {

3648 (*)&
cmd_£t_qöq
,

3649 (*)&
cmd_£t_qöq_p‹éi°
,

3650 (*)&
cmd_£t_qöq_⁄off
,

3651 
NULL
,

3657 
	scmd_qöqids_ªsu…
 {

3658 
cmdlöe_fixed_°rög_t
 
	mqöqids
;

3659 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3660 
uöt16_t
 
	mouãrid
;

3661 
uöt16_t
 
	mö√rid
;

3677 
	$cmd_qöqids_∑r£d
(*
∑r£d_ªsu…
,

3678 
cmdlöe
 *
˛
 
__πe_unu£d
,

3679 *
d©a
 
__πe_unu£d
)

3681 
cmd_qöqids_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3683 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3684 
	`pktgí_£t_qöqids
(
öfo
, 
ªs
->
ouãrid
,Ñes->
ö√rid
) );

3686 
	`pktgí_upd©e_di•œy
();

3687 
	}
}

3689 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_qöqids
 =

3690 
TOKEN_STRING_INITIALIZER
(
cmd_qöqids_ªsu…
, 
qöqids
, "qinqids");

3691 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_qöqids_p‹éi°
 =

3692 
TOKEN_PORTLIST_INITIALIZER
(
cmd_qöqids_ªsu…
, 
p‹éi°
);

3693 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_qöqids_ouãrid
 =

3694 
TOKEN_NUM_INITIALIZER
(
cmd_qöqids_ªsu…
, 
ouãrid
, 
UINT16
);

3695 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_qöqids_ö√rid
 =

3696 
TOKEN_NUM_INITIALIZER
(
cmd_qöqids_ªsu…
, 
ö√rid
, 
UINT16
);

3698 
cmdlöe_∑r£_ö°_t
 
	gcmd_qöqids
 = {

3699 .
f
 = 
cmd_qöqids_∑r£d
,

3700 .
	gd©a
 = 
NULL
,

3701 .
	ghñp_°r
 = "qinqids <portlist> <outer_id> <inner_id>",

3702 .
	gtokís
 = {

3703 (*)&
cmd_£t_qöqids
,

3704 (*)&
cmd_£t_qöqids_p‹éi°
,

3705 (*)&
cmd_£t_qöqids_ouãrid
,

3706 (*)&
cmd_£t_qöqids_ö√rid
,

3707 
NULL
,

3713 
	scmd_gª_ªsu…
 {

3714 
cmdlöe_fixed_°rög_t
 
	mgª
;

3715 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3716 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3732 
	$cmd_gª_∑r£d
(*
∑r£d_ªsu…
,

3733 
cmdlöe
 *
˛
 
__πe_unu£d
,

3734 *
d©a
 
__πe_unu£d
)

3736 
cmd_gª_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3738 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3739 
	`pktgí_£t_gª
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3741 
	`pktgí_upd©e_di•œy
();

3742 
	}
}

3744 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_gª
 =

3745 
TOKEN_STRING_INITIALIZER
(
cmd_gª_ªsu…
, 
gª
, "gre");

3746 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_gª_p‹éi°
 =

3747 
TOKEN_PORTLIST_INITIALIZER
(
cmd_gª_ªsu…
, 
p‹éi°
);

3748 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_gª_⁄off
 =

3749 
TOKEN_STRING_INITIALIZER
(
cmd_gª_ªsu…
,

3750 
⁄Off
,

3753 
cmdlöe_∑r£_ö°_t
 
	gcmd_gª
 = {

3754 .
f
 = 
cmd_gª_∑r£d
,

3755 .
	gd©a
 = 
NULL
,

3756 .
	ghñp_°r
 = "gre <portlist> <state>",

3757 .
	gtokís
 = {

3758 (*)&
cmd_£t_gª
,

3759 (*)&
cmd_£t_gª_p‹éi°
,

3760 (*)&
cmd_£t_gª_⁄off
,

3761 
NULL
,

3767 
	scmd_gª_ëh_ªsu…
 {

3768 
cmdlöe_fixed_°rög_t
 
	mgª_ëh
;

3769 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3770 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3786 
	$cmd_gª_ëh_∑r£d
(*
∑r£d_ªsu…
,

3787 
cmdlöe
 *
˛
 
__πe_unu£d
,

3788 *
d©a
 
__πe_unu£d
)

3790 
cmd_gª_ëh_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3792 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3793 
	`pktgí_£t_gª_ëh
(
öfo
, 
	`∑r£Sèã
(
ªs
->
⁄Off
)) );

3795 
	`pktgí_upd©e_di•œy
();

3796 
	}
}

3798 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_gª_ëh
 =

3799 
TOKEN_STRING_INITIALIZER
(
cmd_gª_ëh_ªsu…
, 
gª_ëh
, "gre_eth");

3800 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_gª_ëh_p‹éi°
 =

3801 
TOKEN_PORTLIST_INITIALIZER
(
cmd_gª_ëh_ªsu…
, 
p‹éi°
);

3802 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_gª_ëh_⁄off
 =

3803 
TOKEN_STRING_INITIALIZER
(
cmd_gª_ëh_ªsu…
,

3804 
⁄Off
,

3807 
cmdlöe_∑r£_ö°_t
 
	gcmd_gª_ëh
 = {

3808 .
f
 = 
cmd_gª_ëh_∑r£d
,

3809 .
	gd©a
 = 
NULL
,

3810 .
	ghñp_°r
 = "gre_eth <portlist> <state>",

3811 .
	gtokís
 = {

3812 (*)&
cmd_£t_gª_ëh
,

3813 (*)&
cmd_£t_gª_ëh_p‹éi°
,

3814 (*)&
cmd_£t_gª_ëh_⁄off
,

3815 
NULL
,

3821 
	scmd_gª_key_ªsu…
 {

3822 
cmdlöe_fixed_°rög_t
 
	mgª_key_°r
;

3823 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

3824 
uöt32_t
 
	mgª_key
;

3840 
	$cmd_gª_key_∑r£d
(*
∑r£d_ªsu…
,

3841 
cmdlöe
 *
˛
 
__πe_unu£d
,

3842 *
d©a
 
__πe_unu£d
)

3844 
cmd_gª_key_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3846 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

3847 
	`pktgí_£t_gª_key
(
öfo
, 
ªs
->
gª_key
) );

3849 
	`pktgí_upd©e_di•œy
();

3850 
	}
}

3852 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_gª_key_°r
 =

3853 
TOKEN_STRING_INITIALIZER
(
cmd_gª_key_ªsu…
,

3854 
gª_key_°r
,

3856 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_gª_key_p‹éi°
 =

3857 
TOKEN_PORTLIST_INITIALIZER
(
cmd_gª_key_ªsu…
, 
p‹éi°
);

3858 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_gª_key_gª_key
 =

3859 
TOKEN_NUM_INITIALIZER
(
cmd_gª_key_ªsu…
, 
gª_key
, 
UINT32
);

3861 
cmdlöe_∑r£_ö°_t
 
	gcmd_gª_key
 = {

3862 .
f
 = 
cmd_gª_key_∑r£d
,

3863 .
	gd©a
 = 
NULL
,

3864 .
	ghñp_°r
 = "gre_key <portlist> <GRE key>",

3865 .
	gtokís
 = {

3866 (*)&
cmd_£t_gª_key_°r
,

3867 (*)&
cmd_£t_gª_key_p‹éi°
,

3868 (*)&
cmd_£t_gª_key_gª_key
,

3869 
NULL
,

3875 
	scmd_mac_‰om_¨p_ªsu…
 {

3876 
cmdlöe_fixed_°rög_t
 
	mmac_‰om_¨p
;

3877 
cmdlöe_fixed_°rög_t
 
	m⁄Off
;

3893 
	$cmd_mac_‰om_¨p_∑r£d
(*
∑r£d_ªsu…
,

3894 
cmdlöe
 *
˛
 
__πe_unu£d
,

3895 *
d©a
 
__πe_unu£d
)

3897 
cmd_mac_‰om_¨p_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3898 
uöt32_t
 
⁄Off
 = 
	`∑r£Sèã
(
ªs
->onOff);

3900 
	`pktgí_mac_‰om_¨p
(
⁄Off
);

3901 
	}
}

3903 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_mac_‰om_¨p
 =

3904 
TOKEN_STRING_INITIALIZER
(
cmd_mac_‰om_¨p_ªsu…
,

3905 
mac_‰om_¨p
,

3907 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_mac_‰om_¨p_⁄off
 =

3908 
TOKEN_STRING_INITIALIZER
(
cmd_mac_‰om_¨p_ªsu…
,

3909 
⁄Off
,

3912 
cmdlöe_∑r£_ö°_t
 
	gcmd_mac_‰om_¨p
 = {

3913 .
f
 = 
cmd_mac_‰om_¨p_∑r£d
,

3914 .
	gd©a
 = 
NULL
,

3915 .
	ghñp_°r
 = "mac_from_arp <state>",

3916 .
	gtokís
 = {

3917 (*)&
cmd_£t_mac_‰om_¨p
,

3918 (*)&
cmd_£t_mac_‰om_¨p_⁄off
,

3919 
NULL
,

3925 
	scmd_dñay_ªsu…
 {

3926 
cmdlöe_fixed_°rög_t
 
	mdñay
;

3927 
uöt32_t
 
	mvÆue
;

3943 
	$cmd_dñay_∑r£d
(*
∑r£d_ªsu…
,

3944 
cmdlöe
 *
˛
 
__πe_unu£d
,

3945 *
d©a
 
__πe_unu£d
)

3947 
cmd_dñay_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3949 
	`wr_dñay_ms
(
ªs
->
vÆue
);

3950 
	}
}

3952 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_dñay
 =

3953 
TOKEN_STRING_INITIALIZER
(
cmd_dñay_ªsu…
, 
dñay
, "delay");

3954 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_m£c
 =

3955 
TOKEN_NUM_INITIALIZER
(
cmd_dñay_ªsu…
, 
vÆue
, 
UINT32
);

3957 
cmdlöe_∑r£_ö°_t
 
	gcmd_dñay
 = {

3958 .
f
 = 
cmd_dñay_∑r£d
,

3959 .
	gd©a
 = 
NULL
,

3960 .
	ghñp_°r
 = "delay mSec",

3961 .
	gtokís
 = {

3962 (*)&
cmd_£t_dñay
,

3963 (*)&
cmd_£t_m£c
,

3964 
NULL
,

3970 
	scmd_¶ìp_ªsu…
 {

3971 
cmdlöe_fixed_°rög_t
 
	m¶ìp
;

3972 
uöt32_t
 
	mvÆue
;

3988 
	$cmd_¶ìp_∑r£d
(*
∑r£d_ªsu…
,

3989 
cmdlöe
 *
˛
 
__πe_unu£d
,

3990 *
d©a
 
__πe_unu£d
)

3992 
cmd_¶ìp_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

3994 
	`wr_¶ìp
(
ªs
->
vÆue
);

3995 
	}
}

3997 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_¶ìp
 =

3998 
TOKEN_STRING_INITIALIZER
(
cmd_¶ìp_ªsu…
, 
¶ìp
, "sleep");

3999 
cmdlöe_∑r£_tokí_num_t
 
	gcmd_£t_£c⁄ds
 =

4000 
TOKEN_NUM_INITIALIZER
(
cmd_¶ìp_ªsu…
, 
vÆue
, 
UINT32
);

4002 
cmdlöe_∑r£_ö°_t
 
	gcmd_¶ìp
 = {

4003 .
f
 = 
cmd_¶ìp_∑r£d
,

4004 .
	gd©a
 = 
NULL
,

4005 .
	ghñp_°r
 = "sleep seconds",

4006 .
	gtokís
 = {

4007 (*)&
cmd_£t_¶ìp
,

4008 (*)&
cmd_£t_£c⁄ds
,

4009 
NULL
,

4015 
	scmd_£tmac_ªsu…
 {

4016 
cmdlöe_fixed_°rög_t
 
	m£t
;

4017 
cmdlöe_fixed_°rög_t
 
	mmac
;

4018 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

4019 
cmdlöe_ëhîaddr_t
 
	maddr
;

4035 
	$cmd_£tmac_∑r£d
(*
∑r£d_ªsu…
,

4036 
cmdlöe
 *
˛
 
__πe_unu£d
,

4037 *
d©a
 
__πe_unu£d
)

4039 
cmd_£tmac_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

4041 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

4042 
	`pktgí_£t_d°_mac
(
öfo
, &
ªs
->
addr
) );

4044 
	`pktgí_upd©e_di•œy
();

4045 
	}
}

4047 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_£tmac
 =

4048 
TOKEN_STRING_INITIALIZER
(
cmd_£tmac_ªsu…
, 
£t
, "set");

4049 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_£t_mac
 =

4050 
TOKEN_STRING_INITIALIZER
(
cmd_£tmac_ªsu…
, 
mac
, "mac");

4051 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_£t_mac_p‹éi°
 =

4052 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£tmac_ªsu…
, 
p‹éi°
);

4053 
cmdlöe_∑r£_tokí_ëhîaddr_t
 
	gcmd_£t_addr
 =

4054 
TOKEN_ETHERADDR_INITIALIZER
(
cmd_£tmac_ªsu…
, 
addr
);

4056 
cmdlöe_∑r£_ö°_t
 
	gcmd_£tmac
 = {

4057 .
f
 = 
cmd_£tmac_∑r£d
,

4058 .
	gd©a
 = 
NULL
,

4059 .
	ghñp_°r
 = "set mac <portlist>Étheraddr",

4060 .
	gtokís
 = {

4061 (*)&
cmd_£t_£tmac
,

4062 (*)&
cmd_£t_mac
,

4063 (*)&
cmd_£t_mac_p‹éi°
,

4064 (*)&
cmd_£t_addr
,

4065 
NULL
,

4071 
	scmd_°¨t_ªsu…
 {

4072 
cmdlöe_fixed_°rög_t
 
	m°¨t
;

4073 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

4089 
	$cmd_°¨t_∑r£d
(*
∑r£d_ªsu…
,

4090 
cmdlöe
 *
˛
 
__πe_unu£d
,

4091 *
d©a
 
__πe_unu£d
)

4093 
cmd_°¨t_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

4095 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

4096 
	`pktgí_°¨t_å™smôtög
(
öfo
) );

4097 
	}
}

4099 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_°¨t
 =

4100 
TOKEN_STRING_INITIALIZER
(
cmd_°¨t_ªsu…
, 
°¨t
, "start");

4101 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_°¨t_p‹éi°
 =

4102 
TOKEN_PORTLIST_INITIALIZER
(
cmd_°¨t_ªsu…
, 
p‹éi°
);

4104 
cmdlöe_∑r£_ö°_t
 
	gcmd_°¨t
 = {

4105 .
f
 = 
cmd_°¨t_∑r£d
,

4106 .
	gd©a
 = 
NULL
,

4107 .
	ghñp_°r
 = "Start Transmitting onÖorts",

4108 .
	gtokís
 = {

4109 (*)&
cmd_hñp_°¨t
,

4110 (*)&
cmd_°¨t_p‹éi°
,

4111 
NULL
,

4117 
	scmd_°›_ªsu…
 {

4118 
cmdlöe_fixed_°rög_t
 
	m°›
;

4119 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

4135 
	$cmd_°›_∑r£d
(*
∑r£d_ªsu…
,

4136 
cmdlöe
 *
˛
 
__πe_unu£d
,

4137 *
d©a
 
__πe_unu£d
)

4139 
cmd_°›_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

4141 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

4142 
	`pktgí_°›_å™smôtög
(
öfo
) );

4143 
	}
}

4145 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_°›
 =

4146 
TOKEN_STRING_INITIALIZER
(
cmd_°›_ªsu…
, 
°›
, "stop");

4147 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_°›_p‹éi°
 =

4148 
TOKEN_PORTLIST_INITIALIZER
(
cmd_°›_ªsu…
, 
p‹éi°
);

4150 
cmdlöe_∑r£_ö°_t
 
	gcmd_°›
 = {

4151 .
f
 = 
cmd_°›_∑r£d
,

4152 .
	gd©a
 = 
NULL
,

4153 .
	ghñp_°r
 = "Stop Transmitting onÖorts",

4154 .
	gtokís
 = {

4155 (*)&
cmd_hñp_°›
,

4156 (*)&
cmd_°›_p‹éi°
,

4157 
NULL
,

4163 
	scmd_°r_ªsu…
 {

4164 
cmdlöe_fixed_°rög_t
 
	m°r
;

4180 
	$cmd_°r_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4181 
cmdlöe
 *
˛
 
__πe_unu£d
,

4182 *
d©a
 
__πe_unu£d
)

4184 
	`f‹Æl_p‹ts
(
	`pktgí_°¨t_å™smôtög
(
öfo
) );

4185 
	}
}

4187 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_°r
 =

4188 
TOKEN_STRING_INITIALIZER
(
cmd_°r_ªsu…
, 
°r
, "str");

4190 
cmdlöe_∑r£_ö°_t
 
	gcmd_°r
 = {

4191 .
f
 = 
cmd_°r_∑r£d
,

4192 .
	gd©a
 = 
NULL
,

4193 .
	ghñp_°r
 = "Start Transmittings onállÖorts",

4194 .
	gtokís
 = {

4195 (*)&
cmd_hñp_°r
,

4196 
NULL
,

4202 
	scmd_°p_ªsu…
 {

4203 
cmdlöe_fixed_°rög_t
 
	m°p
;

4219 
	$cmd_°p_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4220 
cmdlöe
 *
˛
 
__πe_unu£d
,

4221 *
d©a
 
__πe_unu£d
)

4223 
	`f‹Æl_p‹ts
(
	`pktgí_°›_å™smôtög
(
öfo
) );

4224 
	}
}

4226 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_°p
 =

4227 
TOKEN_STRING_INITIALIZER
(
cmd_°p_ªsu…
, 
°p
, "stp");

4229 
cmdlöe_∑r£_ö°_t
 
	gcmd_°p
 = {

4230 .
f
 = 
cmd_°p_∑r£d
,

4231 .
	gd©a
 = 
NULL
,

4232 .
	ghñp_°r
 = "Stop Transmittings onállÖorts",

4233 .
	gtokís
 = {

4234 (*)&
cmd_hñp_°p
,

4235 
NULL
,

4241 
	scmd_¥ime_ªsu…
 {

4242 
cmdlöe_fixed_°rög_t
 
	m¥ime
;

4243 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

4259 
	$cmd_¥ime_∑r£d
(*
∑r£d_ªsu…
,

4260 
cmdlöe
 *
˛
 
__πe_unu£d
,

4261 *
d©a
 
__πe_unu£d
)

4263 
cmd_£t_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

4265 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

4266 
	`pktgí_¥ime_p‹ts
(
öfo
) );

4267 
	}
}

4269 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_¥ime
 =

4270 
TOKEN_STRING_INITIALIZER
(
cmd_¥ime_ªsu…
, 
¥ime
, "prime");

4271 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_¥ime_p‹éi°
 =

4272 
TOKEN_PORTLIST_INITIALIZER
(
cmd_£t_ªsu…
, 
p‹éi°
);

4274 
cmdlöe_∑r£_ö°_t
 
	gcmd_¥ime
 = {

4275 .
f
 = 
cmd_¥ime_∑r£d
,

4276 .
	gd©a
 = 
NULL
,

4277 .
	ghñp_°r
 = "PrimeÅhe L3 cache on DUT",

4278 .
	gtokís
 = {

4279 (*)&
cmd_hñp_¥ime
,

4280 (*)&
cmd_¥ime_p‹éi°
,

4281 
NULL
,

4287 
	scmd_˛ór_ªsu…
 {

4288 
cmdlöe_fixed_°rög_t
 
	m˛ór
;

4289 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

4305 
	$cmd_˛ór_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4306 
cmdlöe
 *
˛
 
__πe_unu£d
,

4307 *
d©a
 
__πe_unu£d
)

4309 
cmd_˛ór_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

4311 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

4312 
	`pktgí_˛ór_°©s
(
öfo
) );

4313 
	}
}

4315 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_˛ór
 =

4316 
TOKEN_STRING_INITIALIZER
(
cmd_˛ór_ªsu…
, 
˛ór
, "clear");

4317 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_˛ór_p‹éi°
 =

4318 
TOKEN_PORTLIST_INITIALIZER
(
cmd_˛ór_ªsu…
, 
p‹éi°
);

4320 
cmdlöe_∑r£_ö°_t
 
	gcmd_˛ór
 = {

4321 .
f
 = 
cmd_˛ór_∑r£d
,

4322 .
	gd©a
 = 
NULL
,

4323 .
	ghñp_°r
 = "Clear statisticsÖerÖort",

4324 .
	gtokís
 = {

4325 (*)&
cmd_hñp_˛ór
,

4326 (*)&
cmd_˛ór_p‹éi°
,

4327 
NULL
,

4333 
	scmd_˛r_ªsu…
 {

4334 
cmdlöe_fixed_°rög_t
 
	m˛r
;

4350 
	$cmd_˛r_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4351 
cmdlöe
 *
˛
 
__πe_unu£d
,

4352 *
d©a
 
__πe_unu£d
)

4354 
	`f‹Æl_p‹ts
(
	`pktgí_˛ór_°©s
(
öfo
) );

4355 
	}
}

4357 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_˛r
 =

4358 
TOKEN_STRING_INITIALIZER
(
cmd_˛r_ªsu…
, 
˛r
, "clr");

4360 
cmdlöe_∑r£_ö°_t
 
	gcmd_˛r
 = {

4361 .
f
 = 
cmd_˛r_∑r£d
,

4362 .
	gd©a
 = 
NULL
,

4363 .
	ghñp_°r
 = "ClearállÖort statistics",

4364 .
	gtokís
 = {

4365 (*)&
cmd_hñp_˛r
,

4366 
NULL
,

4372 
	scmd_quô_ªsu…
 {

4373 
cmdlöe_fixed_°rög_t
 
	mquô
;

4389 
	$cmd_quô_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4390 
cmdlöe
 *
˛
 
__πe_unu£d
,

4391 *
d©a
 
__πe_unu£d
)

4393 
	`pktgí_quô
();

4394 
	}
}

4396 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_quô
 =

4397 
TOKEN_STRING_INITIALIZER
(
cmd_quô_ªsu…
, 
quô
, "quit");

4399 
cmdlöe_∑r£_ö°_t
 
	gcmd_quô
 = {

4400 .
f
 = 
cmd_quô_∑r£d
,

4401 .
	gd©a
 = 
NULL
,

4402 .
	ghñp_°r
 = "QuitÅhe PktGenÖrogram",

4403 .
	gtokís
 = {

4404 (*)&
cmd_hñp_quô
,

4405 
NULL
,

4411 
	scmd_˛s_ªsu…
 {

4412 
cmdlöe_fixed_°rög_t
 
	m˛s
;

4428 
	$cmd_˛s_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4429 
cmdlöe
 *
˛
 
__πe_unu£d
,

4430 *
d©a
 
__πe_unu£d
)

4432 
	`pktgí_˛s
();

4433 
	}
}

4435 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_˛s
 =

4436 
TOKEN_STRING_INITIALIZER
(
cmd_˛s_ªsu…
, 
˛s
, "cls");

4438 
cmdlöe_∑r£_ö°_t
 
	gcmd_˛s
 = {

4439 .
f
 = 
cmd_˛s_∑r£d
,

4440 .
	gd©a
 = 
NULL
,

4441 .
	ghñp_°r
 = "Clear screen",

4442 .
	gtokís
 = {

4443 (*)&
cmd_hñp_˛s
,

4444 
NULL
,

4450 
	scmd_ª£t_ªsu…
 {

4451 
cmdlöe_fixed_°rög_t
 
	mª£t
;

4452 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

4468 
	$cmd_ª£t_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4469 
cmdlöe
 *
˛
 
__πe_unu£d
,

4470 *
d©a
 
__πe_unu£d
)

4472 
cmd_ª£t_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

4474 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

4475 
	`pktgí_ª£t
(
öfo
) );

4476 
	}
}

4478 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_ª£t
 =

4479 
TOKEN_STRING_INITIALIZER
(
cmd_ª£t_ªsu…
, 
ª£t
, "reset");

4480 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_ª£t_p‹éi°
 =

4481 
TOKEN_PORTLIST_INITIALIZER
(
cmd_ª£t_ªsu…
, 
p‹éi°
);

4483 
cmdlöe_∑r£_ö°_t
 
	gcmd_ª£t
 = {

4484 .
f
 = 
cmd_ª£t_∑r£d
,

4485 .
	gd©a
 = 
NULL
,

4486 .
	ghñp_°r
 = "Reset configurationÅo default",

4487 .
	gtokís
 = {

4488 (*)&
cmd_hñp_ª£t
,

4489 (*)&
cmd_ª£t_p‹éi°
,

4490 
NULL
,

4496 
	scmd_p‹t_ª°¨t_ªsu…
 {

4497 
cmdlöe_fixed_°rög_t
 
	mp‹t_ª°¨t
;

4498 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

4514 
	$cmd_p‹t_ª°¨t_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4515 
cmdlöe
 *
˛
 
__πe_unu£d
,

4516 *
d©a
 
__πe_unu£d
)

4518 
cmd_ª£t_ªsu…
 *
ªs
 = 
∑r£d_ªsu…
;

4520 
	`f‹óch_p‹t
(
ªs
->
p‹éi°
.
m≠
,

4521 
	`pktgí_p‹t_ª°¨t
(
öfo
) );

4522 
	}
}

4524 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_p‹t_ª°¨t
 =

4525 
TOKEN_STRING_INITIALIZER
(
cmd_p‹t_ª°¨t_ªsu…
,

4526 
p‹t_ª°¨t
,

4528 
cmdlöe_∑r£_tokí_p‹éi°_t
 
	gcmd_p‹t_ª°¨t_p‹éi°
 =

4529 
TOKEN_PORTLIST_INITIALIZER
(
cmd_p‹t_ª°¨t_ªsu…
, 
p‹éi°
);

4531 
cmdlöe_∑r£_ö°_t
 
	gcmd_p‹t_ª°¨t
 = {

4532 .
f
 = 
cmd_p‹t_ª°¨t_∑r£d
,

4533 .
	gd©a
 = 
NULL
,

4534 .
	ghñp_°r
 = "Port Reset",

4535 .
	gtokís
 = {

4536 (*)&
cmd_hñp_p‹t_ª°¨t
,

4537 (*)&
cmd_ª£t_p‹éi°
,

4538 
NULL
,

4544 
	scmd_r°_ªsu…
 {

4545 
cmdlöe_fixed_°rög_t
 
	mr°
;

4561 
	$cmd_r°_∑r£d
(*
∑r£d_ªsu…
 
__πe_unu£d
,

4562 
cmdlöe
 *
˛
 
__πe_unu£d
,

4563 *
d©a
 
__πe_unu£d
)

4565 
	`f‹Æl_p‹ts
(
	`pktgí_ª£t
(
öfo
) );

4566 
	}
}

4568 
cmdlöe_∑r£_tokí_°rög_t
 
	gcmd_hñp_r°
 =

4569 
TOKEN_STRING_INITIALIZER
(
cmd_r°_ªsu…
, 
r°
, "rst");

4571 
cmdlöe_∑r£_ö°_t
 
	gcmd_r°
 = {

4572 .
f
 = 
cmd_r°_∑r£d
,

4573 .
	gd©a
 = 
NULL
,

4574 .
	ghñp_°r
 = "ResetállÖort configurationsÅo default",

4575 .
	gtokís
 = {

4576 (*)&
cmd_hñp_r°
,

4577 
NULL
,

4583 
	scmd_dump_⁄off_ªsu…
 {

4584 
cmdlöe_fixed_°rög_t
 
	mdump
;

4585 
cmdlöe_p‹éi°_t
 
	mp‹éi°
;

4586 
cmdlöe_fixed_°rög_t
 
	mwh©
;

4593 
cmdlöe_∑r£_˘x_t
 
	gmaö_˘x
[] = {

4594 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_blök_⁄off
,

4595 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_˛ór
,

4596 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_˛s
,

4597 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_dñay
,

4598 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_de°_mac
,

4599 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_d°_ù
,

4600 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_d°_p‹t
,

4601 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_dev
,

4602 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_geomëry
,

4603 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_hñp
,

4604 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_icmp_echo
,

4605 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_lﬂd
,

4606 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_mac_‰om_¨p
,

4607 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_mempoﬁ
,

4608 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_∑ge
,

4609 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pˇp_ödex
,

4610 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pˇp_⁄off
,

4611 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pˇp_show
,

4612 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pˇp_fûãr
,

4613 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pci
,

4614 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pög4
,

4615 #ifde‡
INCLUDE_PING6


4616 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pög6
,

4618 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pkt_size
,

4619 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_pkt_ty≥
,

4620 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_¥ime
,

4621 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_¥o˚ss_⁄off
,

4622 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_g¨p_⁄off
,

4623 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_¥Ÿo
,

4624 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_quô
,

4625 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_ønge
,

4626 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_∫d
,

4627 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_ª£t
,

4628 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_p‹t_ª°¨t
,

4629 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_ßve
,

4630 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_s¸ìn
,

4631 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_s¸ùt
,

4632 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£nd_¨p
,

4633 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£q
,

4634 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£t
,

4635 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£tù_d°
,

4636 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£tù_§c
,

4637 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£tmac
,

4638 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£t_p‹t_numbî
,

4639 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£t_µµ
,

4640 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_¶ìp
,

4641 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_§c_ù
,

4642 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_ù_¥Ÿo
,

4643 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_§c_mac
,

4644 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_§c_p‹t
,

4645 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_°¨t
,

4646 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_°›
,

4647 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_ˇ±uª
,

4648 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_rx_èp
,

4649 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_tx_èp
,

4650 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_vœn
,

4651 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_vœn_id
,

4652 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_vœnid
,

4653 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_m∂s
,

4654 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_m∂s_íåy
,

4655 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_qöq
,

4656 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_qöqids
,

4657 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_gª
,

4658 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_gª_ëh
,

4659 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_gª_key
,

4660 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_˛r
,

4661 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_⁄
,

4662 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_off
,

4663 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_°p
,

4664 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_°r
,

4665 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_r°
,

4666 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_l2p
,

4667 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_tx_debug
,

4668 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_theme_°©e
,

4669 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_theme_ßve
,

4670 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_theme_show
,

4671 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_theme
,

4672 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_∑âîn
,

4673 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£t_u£r_∑âîn
,

4674 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_£t_dns_domaö
,

4675 (
cmdlöe_∑r£_ö°_t
 *)&
cmd_œãncy
,

4676 
NULL
,

4680 
	$pktgí_cmdlöe_°¨t
()

4683 
pktgí
.
˛
 = 
	`cmdlöe_°dö_√w
(
maö_˘x
, "Pktgen > ");

4684 
	`__£t_¥om±
();

4686 i‡(
pktgí
.
˛
 &&Öktgí.
cmd_fûíame
) {

4687 
	`pktgí_log_öfo
("# *** Executing file (%s)",

4688 
pktgí
.
cmd_fûíame
);

4689 
	`cmdlöe_ö
(
pktgí
.
˛
, "\r", 1);

4690 i‡(
	`pktgí_lﬂd_cmds
(
pktgí
.
cmd_fûíame
) == -1)

4691 
	`pktgí_log_w¨nög
(

4693 
pktgí
.
cmd_fûíame
);

4695 
	`pktgí_log_öfo
("# *** Done.");

4696 
	`cmdlöe_ö
(
pktgí
.
˛
, "\r", 1);

4698 
	`‰ì
(
pktgí
.
cmd_fûíame
);

4699 
pktgí
.
cmd_fûíame
 = 
NULL
;

4702 
	`pktgí_öãø˘
(
pktgí
.
˛
);

4704 
	`cmdlöe_°dö_exô
(
pktgí
.
˛
);

4705 
	}
}

4720 
	$pktgí_lﬂd_cmds
(*
fûíame
)

4722 i‡(
fûíame
 =
NULL
)

4725 i‡(
	`°r°r
(
fûíame
, ".lua") || strstr(filename, ".LUA") ) {

4726 i‡(
pktgí
.
L
 =
NULL
)

4730 i‡(
	`luaL_dofûe
(
pktgí
.
L
, 
fûíame
) != 0) {

4731 
	`pktgí_log_îr‹
("%s", 
	`lua_to°rög
(
pktgí
.
L
, -1));

4735 
FILE
 *
fd
;

4736 
buff
[256];

4738 
fd
 = 
	`f›í
((c⁄° *)
fûíame
, "r");

4739 i‡(
fd
 =
NULL
)

4743 
	`rdlöe_ª£t
(&
pktgí
.
˛
->
rdl
);

4746 
	`fgës
(
buff
, (buff), 
fd
) )

4747 
	`cmdlöe_ö
(
pktgí
.
˛
, 
buff
, 
	`°æí
(buff));

4749 
	`f˛o£
(
fd
);

4752 
	}
}

	@app/cmd-functions.h

68 #i‚de‡
_COMMANDS_H_


69 
	#_COMMANDS_H_


	)

71 
	~<°döt.h
>

73 
	~<cmdlöe_∑r£.h
>

75 *
cmd_p‹t_di•œy
(*
buff
, 
uöt32_t
 
Àn
, 
uöt64_t
 
p‹éi°
);

76 
pktgí_cmdlöe_°¨t
();

78 
pktgí_lﬂd_cmds
(*
fûíame
);

	@app/lpktgenlib.c

67 
	#Õktgílib_c


	)

68 
	#LUA_LIB


	)

69 
	#lua_c


	)

71 
	~"Õktgílib.h
"

73 
	~<°döt.h
>

74 
	~<√töë/ö.h
>

76 
	~<cmdlöe_∑r£.h
>

77 
	~<cmdlöe_∑r£_ëhîaddr.h
>

78 
	~<cmdlöe_∑r£_ùaddr.h
>

79 
	~<cmdlöe_∑r£_p‹éi°.h
>

80 
	~<luac⁄f.h
>

81 
	~<lua-sockë.h
>

82 
	~<luÆib.h
>

84 
	~"pktgí-cmds.h
"

85 
	~"cmd-fun˘i⁄s.h
"

87 c⁄° *
hñp_öfo
[];

89 #i‚de‡
__INTEL_COMPILER


90 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wcast-qual"

94 
execuã_lua_°rög
(
lua_Sèã
 *
L
, *
°r
);

95 
dﬁibøry
(
lua_Sèã
 *
L
, c⁄° *
«me
);

109 
__ölöe__
 

110 
	$£tf_öãgî
(
lua_Sèã
 *
L
, c⁄° *
«me
, 
lua_I¡egî
 
vÆue
) {

111 
	`lua_pushöãgî
(
L
, 
vÆue
);

112 
	`lua_£tfõld
(
L
, -2, 
«me
);

113 
	}
}

127 
__ölöe__
 

128 
	$£tf_°rög
(
lua_Sèã
 *
L
, c⁄° *
«me
, c⁄° *
vÆue
) {

129 
	`lua_push°rög
(
L
, 
vÆue
);

130 
	`lua_£tfõld
(
L
, -2, 
«me
);

131 
	}
}

146 
__ölöe__
 

147 
	$£tf_°rögLí
(
lua_Sèã
 *
L
, c⁄° *
«me
, *
vÆue
, 
Àn
) {

148 
	`lua_pushl°rög
(
L
, 
vÆue
, 
Àn
);

149 
	`lua_£tfõld
(
L
, -2, 
«me
);

150 
	}
}

164 
__ölöe__
 

165 
	$£tf_ud©a
(
lua_Sèã
 *
L
, c⁄° *
«me
, *
vÆue
) {

166 
	`lua_pushlightu£rd©a
(
L
, 
vÆue
);

167 
	`lua_£tfõld
(
L
, -2, 
«me
);

168 
	}
}

172 
__ölöe__
 

173 
	$gëf_ëhîaddr
(
lua_Sèã
 *
L
, c⁄° *
fõld
, 
cmdlöe_ëhîaddr_t
 *
vÆue
) {

174 
	`lua_gëfõld
(
L
, 3, 
fõld
);

175 i‡(
	`lua_is°rög
(
L
, 1) )

176 
	`cmdlöe_∑r£_ëhîaddr
(
NULL
, 
	`luaL_check°rög
(
L
,

177 -1), 
vÆue
,

178 (
cmdlöe_ëhîaddr_t
));

179 
	`lua_p›
(
L
, 1);

180 
	}
}

182 
__ölöe__
 

183 
	$gëf_ùaddr
(
lua_Sèã
 *
L
, c⁄° *
fõld
, *
vÆue
, 
uöt32_t
 
Êags
) {

184 
cmdlöe_∑r£_tokí_ùaddr_t
 
tk
;

186 
	`lua_gëfõld
(
L
, 3, 
fõld
);

187 i‡(
	`lua_is°rög
(
L
, 1) ) {

188 
tk
.
ùaddr_d©a
.
Êags
 = flags;

189 
	`cmdlöe_∑r£_ùaddr
((
cmdlöe_∑r£_tokí_hdr_t
 *)&
tk
,

190 
	`luaL_check°rög
(
L
, -1), 
vÆue
,

191 (
cmdlöe_ùaddr_t
));

193 
	`lua_p›
(
L
, 1);

194 
	}
}

196 
__ölöe__
 
uöt32_t


197 
	$gëf_öãgî
(
lua_Sèã
 *
L
, c⁄° *
fõld
) {

198 
uöt32_t
 
vÆue
 = 0;

200 
	`lua_gëfõld
(
L
, 3, 
fõld
);

201 i‡(
	`lua_isöãgî
(
L
, 1) )

202 
vÆue
 = 
	`luaL_checköãgî
(
L
, -1);

203 
	`lua_p›
(
L
, 1);

205  
vÆue
;

206 
	}
}

208 
__ölöe__
 *

209 
	$gëf_°rög
(
lua_Sèã
 *
L
, c⁄° *
fõld
) {

210 *
vÆue
 = 
NULL
;

212 
	`lua_gëfõld
(
L
, 3, 
fõld
);

213 i‡(
	`lua_is°rög
(
L
, 1) )

214 
vÆue
 = (*)
	`luaL_check°rög
(
L
, -1);

215 
	`lua_p›
(
L
, 1);

217  
vÆue
;

218 
	}
}

220 
ölöe
 

221 
	$∑r£_p‹éi°
(c⁄° *
buf
, *
∂
) {

222 #i‡(
RTE_VERSION
 >
	`RTE_VERSION_NUM
(2, 0, 0, 0))

223 
	`cmdlöe_∑r£_p‹éi°
(
NULL
, 
buf
, 
∂
, (
cmdlöe_p‹éi°_t
));

225 
	`cmdlöe_∑r£_p‹éi°
(
NULL
, 
buf
, 
∂
, 
PORTLIST_TOKEN_SIZE
);

227 
	}
}

242 
	$pktgí_£t
(
lua_Sèã
 *
L
) {

243 
uöt32_t
 
vÆue
;

244 
cmdlöe_p‹éi°_t
 
p‹éi°
;

245 *
wh©
;

247 
	`lua_gët›
(
L
) ) {

248 :  
	`luaL_îr‹
(
L
, "set, wrongÇumber ofárguments");

252 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

253 
wh©
 = (*)
	`luaL_check°rög
(
L
, 2);

254 
vÆue
 = 
	`luaL_checknumbî
(
L
, 3);

256 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
, 
	`_do
(

257 i‡(!
	`°rˇ£cmp
(
wh©
, "count"))

258 
	`pktgí_£t_tx_cou¡
(
öfo
, 
vÆue
);

259 i‡(!
	`°rˇ£cmp
(
wh©
, "size"))

260 
	`pktgí_£t_pkt_size
(
öfo
, 
vÆue
);

261 i‡(!
	`°rˇ£cmp
(
wh©
, "rate"))

262 
	`pktgí_£t_tx_øã
(
öfo
, 
vÆue
);

263 i‡(!
	`°rˇ£cmp
(
wh©
, "burst"))

264 
	`pktgí_£t_tx_bur°
(
öfo
, 
vÆue
);

265 i‡(!
	`°rˇ£cmp
(
wh©
, "cycles"))

266 
	`pktgí_£t_tx_cy˛es
(
öfo
, 
vÆue
);

267 i‡(!
	`°rˇ£cmp
(
wh©
, "sport"))

268 
	`pktgí_£t_p‹t_vÆue
(
öfo
, 
wh©
[0],

269 
vÆue
);

270 i‡(!
	`°rˇ£cmp
(
wh©
, "dport"))

271 
	`pktgí_£t_p‹t_vÆue
(
öfo
, 
wh©
[0],

272 
vÆue
);

273 i‡(!
	`°rˇ£cmp
(
wh©
, "seqCnt"))

274 
	`pktgí_£t_p‹t_£qC¡
(
öfo
, 
vÆue
);

275 i‡(!
	`°rˇ£cmp
(
wh©
, "prime"))

276 
	`pktgí_£t_p‹t_¥ime
(
öfo
, 
vÆue
);

277 i‡(!
	`°rˇ£cmp
(
wh©
, "dump"))

278 
	`pktgí_£t_p‹t_dump
(
öfo
, 
vÆue
);

280  
	`luaL_îr‹
(
L
,

282 
wh©
);

285 
	`pktgí_upd©e_di•œy
();

287 
	}
}

302 
	$£t_£q
(
lua_Sèã
 *
L
, 
uöt32_t
 
£qnum
)

304 
cmdlöe_p‹éi°_t
 
p‹éi°
;

305 
uöt32_t
 
pktsize
, 
•‹t
, 
dp‹t
, 
gçu_ãid
;

306 
uöt16_t
 
vœnid
;

307 
cmdlöe_ëhîaddr_t
 
daddr
;

308 
cmdlöe_ëhîaddr_t
 
ßddr
;

309 
cmdlöe_ùaddr_t
 
ù_daddr
;

310 
cmdlöe_ùaddr_t
 
ù_ßddr
;

311 
cmdlöe_∑r£_tokí_ùaddr_t
 
tkd
, 
tks
;

312 *
¥Ÿo
, *
ù
;

314 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 2), &
p‹éi°
);

315 
	`cmdlöe_∑r£_ëhîaddr
(
NULL
, 
	`luaL_check°rög
(
L
, 3), &
daddr
,

316 (
daddr
));

317 
	`cmdlöe_∑r£_ëhîaddr
(
NULL
, 
	`luaL_check°rög
(
L
, 4), &
ßddr
,

318 (
ßddr
));

320 
ù
 = (*)
	`luaL_check°rög
(
L
, 10);

321 i‡(
ù
[3] == '6') {

322 
tkd
.
ùaddr_d©a
.
Êags
 = 
CMDLINE_IPADDR_V6
;

323 
	`cmdlöe_∑r£_ùaddr
((
cmdlöe_∑r£_tokí_hdr_t
 *)&
tkd
,

324 
	`luaL_check°rög
(
L
, 5), &
ù_daddr
,

325 (
cmdlöe_ùaddr_t
));

326 
tks
.
ùaddr_d©a
.
Êags
 = 
CMDLINE_IPADDR_NETWORK
 | 
CMDLINE_IPADDR_V6
;

327 
	`cmdlöe_∑r£_ùaddr
((
cmdlöe_∑r£_tokí_hdr_t
 *)&
tks
,

328 
	`luaL_check°rög
(
L
, 6), &
ù_ßddr
,

329 (
cmdlöe_ùaddr_t
));

331 
tkd
.
ùaddr_d©a
.
Êags
 = 
CMDLINE_IPADDR_V4
;

332 
	`cmdlöe_∑r£_ùaddr
((
cmdlöe_∑r£_tokí_hdr_t
 *)&
tkd
,

333 
	`luaL_check°rög
(
L
, 5), &
ù_daddr
,

334 (
cmdlöe_ùaddr_t
));

335 
tks
.
ùaddr_d©a
.
Êags
 = 
CMDLINE_IPADDR_NETWORK
 | 
CMDLINE_IPADDR_V4
;

336 
	`cmdlöe_∑r£_ùaddr
((
cmdlöe_∑r£_tokí_hdr_t
 *)&
tks
,

337 
	`luaL_check°rög
(
L
, 6), &
ù_ßddr
,

338 (
cmdlöe_ùaddr_t
));

340 
•‹t
 = 
	`luaL_checköãgî
(
L
, 7);

341 
dp‹t
 = 
	`luaL_checköãgî
(
L
, 8);

342 
¥Ÿo
 = (*)
	`luaL_check°rög
(
L
, 9);

343 
vœnid
 = 
	`luaL_checköãgî
(
L
, 11);

344 
pktsize
 = 
	`luaL_checköãgî
(
L
, 12);

345 i‡(
	`lua_gët›
(
L
) == 13)

346 
gçu_ãid
 = 
	`luaL_checköãgî
(
L
, 13);

348 
gçu_ãid
 = 0;

350 i‡–(
¥Ÿo
[0] ='i'Ë&& (
ù
[3] == '6') ) {

351 
	`lua_put°rög
("Must use IPv4 with ICMPÅypeÖackets\n");

355 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

356 
	`pktgí_£t_£q
(
öfo
, 
£qnum
, &
daddr
, &
ßddr
, &
ù_daddr
,

357 &
ù_ßddr
,

358 
•‹t
, 
dp‹t
, 
ù
[3], 
¥Ÿo
[0], 
vœnid
,

359 
pktsize
, 
gçu_ãid
) );

361 
	`pktgí_upd©e_di•œy
();

364 
	}
}

379 
	$pktgí_£q
(
lua_Sèã
 *
L
) {

380 
uöt32_t
 
£qnum
;

382 
	`lua_gët›
(
L
) ) {

383 :  
	`luaL_îr‹
(
L
, "seq, wrongÇumber ofárguments");

388 
£qnum
 = 
	`luaL_checköãgî
(
L
, 1);

389 i‡(
£qnum
 >
NUM_SEQ_PKTS
)

392  
	`£t_£q
(
L
, 
£qnum
);

393 
	}
}

408 
	$£t_£qTabÀ
(
lua_Sèã
 *
L
, 
uöt32_t
 
£qnum
)

410 
cmdlöe_p‹éi°_t
 
p‹éi°
;

411 
uöt32_t
 
pktSize
, 
•‹t
, 
dp‹t
, 
gçu_ãid
;

412 
uöt16_t
 
vœnid
;

413 
cmdlöe_ëhîaddr_t
 
daddr
;

414 
cmdlöe_ëhîaddr_t
 
ßddr
;

415 
cmdlöe_ùaddr_t
 
ù_daddr
;

416 
cmdlöe_ùaddr_t
 
ù_ßddr
;

417 *
ùPrŸo
, *
ëhTy≥
;

419 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 2), &
p‹éi°
);

421 
	`gëf_ëhîaddr
(
L
, "ëh_d°_addr", &
daddr
);

422 
	`gëf_ëhîaddr
(
L
, "ëh_§c_addr", &
ßddr
);

423 
	`gëf_ùaddr
(
L
, "ù_d°_addr", &
ù_daddr
, 
CMDLINE_IPADDR_V4
);

424 
	`gëf_ùaddr
(
L
,

426 &
ù_ßddr
,

427 
CMDLINE_IPADDR_NETWORK
 | 
CMDLINE_IPADDR_V4
);

428 
•‹t
 = 
	`gëf_öãgî
(
L
, "sport");

429 
dp‹t
 = 
	`gëf_öãgî
(
L
, "dport");

430 
ùPrŸo
 = 
	`gëf_°rög
(
L
, "ipProto");

431 
ëhTy≥
 = 
	`gëf_°rög
(
L
, "ethType");

432 
vœnid
 = 
	`gëf_öãgî
(
L
, "vlanid");

433 
pktSize
 = 
	`gëf_öãgî
(
L
, "pktSize");

435 
	`lua_gëfõld
(
L
, 3, "gtpu_teid");

436 i‡(
	`lua_isöãgî
(
L
, -1) )

437 
gçu_ãid
 = 
	`luaL_checköãgî
(
L
, -1);

439 
gçu_ãid
 = 0;

440 
	`lua_p›
(
L
, 1);

442 i‡–(
ùPrŸo
[0] ='i'Ë&& (
ëhTy≥
[3] == '6') ) {

443 
	`lua_put°rög
("Must use IPv4 with ICMPÅypeÖackets\n");

447 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

448 
	`pktgí_£t_£q
(
öfo
, 
£qnum
, &
daddr
, &
ßddr
, &
ù_daddr
,

449 &
ù_ßddr
,

450 
•‹t
, 
dp‹t
, 
ëhTy≥
[3], 
ùPrŸo
[0],

451 
vœnid
, 
pktSize
, 
gçu_ãid
) );

453 
	`pktgí_upd©e_di•œy
();

456 
	}
}

471 
	$pktgí_£qTabÀ
(
lua_Sèã
 *
L
) {

472 
uöt32_t
 
£qnum
;

474 
	`lua_gët›
(
L
) ) {

475 :  
	`luaL_îr‹
(
L
, "seqTable, wrongÇumber ofárguments");

479 
£qnum
 = 
	`luaL_checköãgî
(
L
, 1);

480 i‡(
£qnum
 >
NUM_SEQ_PKTS
)

483  
	`£t_£qTabÀ
(
L
, 
£qnum
);

484 
	}
}

499 
	$pktgí_p‹ts_≥r_∑ge
(
lua_Sèã
 *
L
) {

500 
	`lua_gët›
(
L
) ) {

501 :  
	`luaL_îr‹
(
L
,

506 
	`pktgí_£t_∑ge_size
(
	`luaL_checköãgî
(
L
, 1));

508 
	}
}

523 
	$pktgí_icmp
(
lua_Sèã
 *
L
) {

524 
cmdlöe_p‹éi°_t
 
p‹éi°
;

526 
	`lua_gët›
(
L
) ) {

527 :  
	`luaL_îr‹
(
L
, "icmp, wrongÇumber ofárguments");

531 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

532 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

533 
	`pktgí_£t_icmp_echo
(
öfo
,

534 
	`∑r£Sèã
((*)
	`luaL_check°rög
(
L
,

537 
	}
}

552 
	$pktgí_£ndARP
(
lua_Sèã
 *
L
) {

553 
cmdlöe_p‹éi°_t
 
p‹éi°
;

554 *
wh©
;

556 
	`lua_gët›
(
L
) ) {

557 :  
	`luaL_îr‹
(
L
, "sendARP, wrongÇumber ofárguments");

561 
wh©
 = (*)
	`luaL_check°rög
(
L
, 2);

562 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

563 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

564 
	`pktgí_£nd_¨p_ªque°s
(
öfo
,

565 (
wh©
[0] ==

566 'g'Ë? 
GRATUITOUS_ARP
 : 0) );

568 
	}
}

583 
	$pktgí_£t_mac
(
lua_Sèã
 *
L
) {

584 
cmdlöe_p‹éi°_t
 
p‹éi°
;

585 
cmdlöe_ëhîaddr_t
 
mac
;

587 
	`lua_gët›
(
L
) ) {

588 :  
	`luaL_îr‹
(
L
, "set_mac, wrongÇumber ofárguments");

592 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

593 
	`cmdlöe_∑r£_ëhîaddr
(
NULL
, 
	`luaL_check°rög
(
L
, 2), &
mac
,

594 (
mac
));

596 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

597 
	`pktgí_£t_d°_mac
(
öfo
, &
mac
) );

599 
	`pktgí_upd©e_di•œy
();

601 
	}
}

616 
	$pktgí_macFromAΩ
(
lua_Sèã
 *
L
) {

617 *
°©e
;

618 
uöt32_t
 
⁄Off
;

620 
	`lua_gët›
(
L
) ) {

621 :  
	`luaL_îr‹
(
L
,

626 
°©e
 = (*)
	`luaL_check°rög
(
L
, 1);

628 
⁄Off
 = 
	`∑r£Sèã
(
°©e
);

630 
	`pktgí_mac_‰om_¨p
(
⁄Off
);

633 
	}
}

648 
	$pktgí_¥ŸŸy≥
(
lua_Sèã
 *
L
) {

649 *
ty≥
;

650 
cmdlöe_p‹éi°_t
 
p‹éi°
;

652 
	`lua_gët›
(
L
) ) {

653 :  
	`luaL_îr‹
(
L
, "set_proto, wrongÇumber ofárguments");

657 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

658 
ty≥
 = (*)
	`luaL_check°rög
(
L
, 2);

660 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

661 
	`pktgí_£t_¥Ÿo
(
öfo
, 
ty≥
[0]) );

664 
	}
}

679 
	$pktgí_£t_ù_addr
(
lua_Sèã
 *
L
) {

680 
cmdlöe_p‹éi°_t
 
p‹éi°
;

681 
cmdlöe_ùaddr_t
 
ùaddr
;

682 
cmdlöe_∑r£_tokí_ùaddr_t
 
tk
;

683 *
ty≥
;

685 
	`lua_gët›
(
L
) ) {

686 :  
	`luaL_îr‹
(
L
, "set_ipaddr, wrongÇumber ofárguments");

690 
ty≥
 = (*)
	`luaL_check°rög
(
L
, 2);

691 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

692 
tk
.
ùaddr_d©a
.
Êags
 = 
CMDLINE_IPADDR_V4
;

693 i‡(
ty≥
[0] == 's')

694 
tk
.
ùaddr_d©a
.
Êags
 |
CMDLINE_IPADDR_NETWORK
;

695 
	`cmdlöe_∑r£_ùaddr
((
cmdlöe_∑r£_tokí_hdr_t
 *)&
tk
,

696 
	`luaL_check°rög
(
L
, 3), &
ùaddr
,

697 (
cmdlöe_ùaddr_t
));

699 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

700 
	`pktgí_£t_ùaddr
(
öfo
, 
ty≥
[0], &
ùaddr
) );

702 
	`pktgí_upd©e_di•œy
();

704 
	}
}

719 
	$pktgí_£t_ty≥
(
lua_Sèã
 *
L
) {

720 *
ty≥
;

721 
cmdlöe_p‹éi°_t
 
p‹éi°
;

723 
	`lua_gët›
(
L
) ) {

724 :  
	`luaL_îr‹
(
L
, "set_type, wrongÇumber ofárguments");

728 
ty≥
 = (*)
	`luaL_check°rög
(
L
, 2);

729 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

731 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

732 
	`pktgí_£t_pkt_ty≥
(
öfo
, 
ty≥
) );

734 
	`pktgí_upd©e_di•œy
();

736 
	}
}

751 
	$pktgí_£nd_pög4
(
lua_Sèã
 *
L
) {

752 
cmdlöe_p‹éi°_t
 
p‹éi°
;

754 
	`lua_gët›
(
L
) ) {

755 :  
	`luaL_îr‹
(
L
, "ping4, wrongÇumber ofárguments");

759 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

761 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

762 
	`pktgí_pög4
(
öfo
) );

765 
	}
}

767 #ifde‡
INCLUDE_PING6


781 
	$pktgí_£nd_pög6
(
lua_Sèã
 *
L
) {

782 
cmdlöe_p‹éi°_t
 
p‹éi°
;

784 
	`lua_gët›
(
L
) ) {

785 :  
	`luaL_îr‹
(
L
, "ping6, wrongÇumber ofárguments");

789 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

791 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

792 
	`pktgí_pög6
(
öfo
) );

795 
	}
}

812 
	$pktgí_pˇp
(
lua_Sèã
 *
L
) {

813 
cmdlöe_p‹éi°_t
 
p‹éi°
;

814 *
wh©
;

816 
	`lua_gët›
(
L
) ) {

817 :  
	`luaL_îr‹
(
L
, "pcap, wrongÇumber ofárguments");

821 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

822 
wh©
 = (*)
	`luaL_check°rög
(
L
, 2);

824 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

825 
	`pktgí_pˇp_íabÀ_dißbÀ
(
öfo
, 
wh©
) );

828 
	}
}

843 
	$pktgí_°¨t
(
lua_Sèã
 *
L
) {

844 
cmdlöe_p‹éi°_t
 
p‹éi°
;

846 
	`lua_gët›
(
L
) ) {

847 :  
	`luaL_îr‹
(
L
, "start, wrongÇumber ofárguments");

851 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

853 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

854 
	`pktgí_°¨t_å™smôtög
(
öfo
) );

857 
	}
}

872 
	$pktgí_°›
(
lua_Sèã
 *
L
) {

873 
cmdlöe_p‹éi°_t
 
p‹éi°
;

875 
	`lua_gët›
(
L
) ) {

876 :  
	`luaL_îr‹
(
L
, "stop, wrongÇumber ofárguments");

880 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

882 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

883 
	`pktgí_°›_å™smôtög
(
öfo
) );

885 
	}
}

900 
	$pktgí_s¸n
(
lua_Sèã
 *
L
) {

901 
	`lua_gët›
(
L
) ) {

902 :  
	`luaL_îr‹
(
L
, "screen, wrongÇumber ofárguments");

906 
	`pktgí_s¸ìn
((*)
	`luaL_check°rög
(
L
, 1));

908 
	}
}

923 
	$pktgí_¥ime
(
lua_Sèã
 *
L
) {

924 
cmdlöe_p‹éi°_t
 
p‹éi°
;

926 
	`lua_gët›
(
L
) ) {

927 :  
	`luaL_îr‹
(
L
, "prime, wrongÇumber ofárguments");

931 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

933 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

934 
	`pktgí_¥ime_p‹ts
(
öfo
) );

936 
	}
}

938 
__ölöe__
 

939 
	$__dñay
(
öt32_t
 
t
) {

940 
öt32_t
 
n
;

942 
t
 > 0) {

943 
	`πe_timî_m™age
();

944 
n
 = (
t
 > 10) ? 10 :Å;

945 
	`πe_dñay_ms
(
n
);

946 
t
 -
n
;

948 
	}
}

963 
	$pktgí_dñay
(
lua_Sèã
 *
L
) {

964 
	`lua_gët›
(
L
) ) {

965 :  
	`luaL_îr‹
(
L
, "delay, wrongÇumber ofárguments");

970 
	`__dñay
(
	`luaL_checköãgî
(
L
, 1));

973 
	}
}

988 
	$pktgí_∑u£
(
lua_Sèã
 *
L
) {

989 *
°r
;

991 
	`lua_gët›
(
L
) ) {

992 :  
	`luaL_îr‹
(
L
, "pause, wrongÇumber ofárguments");

996 
°r
 = (*)
	`luaL_check°rög
(
L
, 1);

997 i‡(
	`°æí
(
°r
) > 0)

998 
	`lua_put°rög
(
°r
);

1000 
	`__dñay
(
	`luaL_checköãgî
(
L
, 2));

1002 
	}
}

1017 
	$pktgí_c⁄töue
(
lua_Sèã
 *
L
) {

1018 
buf
[4], *
°r
;

1019 
n
;

1021 
	`lua_gët›
(
L
) ) {

1022 :  
	`luaL_îr‹
(
L
, "continue, wrongÇumber ofárguments");

1026 
°r
 = (*)
	`luaL_check°rög
(
L
, 1);

1028 i‡(
	`°æí
(
°r
) > 0)

1029 
	`lua_put°rög
(
°r
);

1031 
buf
[0] = '\0';

1032 
n
 = 
	`‰ód
(
buf
, 1, 1, (
FILE
 *)
	`_gë_°dö
(
L
));

1033 i‡(
n
 > 0)

1034 
buf
[
n
] = '\0';

1036 
	`lua_push°rög
(
L
, 
buf
);

1038 
	}
}

1053 
	$pktgí_öput
(
lua_Sèã
 *
L
) {

1054 
buf
[256], 
c
, *
°r
;

1055 
uöt32_t
 
n
, 
idx
;

1057 
	`lua_gët›
(
L
) ) {

1058 :  
	`luaL_îr‹
(
L
, "input, wrongÇumber ofárguments");

1062 
°r
 = (*)
	`luaL_check°rög
(
L
, 1);

1064 i‡(
	`°æí
(
°r
) > 0)

1065 
	`lua_put°rög
(
°r
);

1067 
idx
 = 0;

1068 
buf
[
idx
] = '\0';

1069 
idx
 < ((
buf
) - 2) ) {

1070 
n
 = 
	`‰ód
(&
c
, 1, 1, (
FILE
 *)
	`_gë_°dö
(
L
));

1071 i‡–(
n
 <0Ë|| (
c
 == '\r') || (c == '\n') )

1073 
buf
[
idx
++] = 
c
;

1075 
buf
[
idx
] = '\0';

1077 
	`lua_push°rög
(
L
, 
buf
);

1079 
	}
}

1094 
	$pktgí_¶ìp
(
lua_Sèã
 *
L
) {

1095 
	`lua_gët›
(
L
) ) {

1096 :  
	`luaL_îr‹
(
L
, "sleep, wrongÇumber ofárguments");

1100 
	`πe_dñay_ms
(
	`luaL_checköãgî
(
L
, 1) * 1000);

1102 
	}
}

1117 
	$pktgí_lﬂd
(
lua_Sèã
 *
L
) {

1118 *
∑th
;

1120 
	`lua_gët›
(
L
) ) {

1121 :  
	`luaL_îr‹
(
L
, "load, wrongÇumber ofárguments");

1125 
∑th
 = (*)
	`luaL_check°rög
(
L
, 1);

1127 i‡(
	`pktgí_lﬂd_cmds
(
∑th
) )

1128  
	`luaL_îr‹
(
L
, "lﬂd comm™d faûed f‹ %s\n", 
∑th
);

1130 
	}
}

1145 
	$pktgí_c⁄fig_ßve
(
lua_Sèã
 *
L
) {

1146 *
∑th
;

1148 
	`lua_gët›
(
L
) ) {

1149 :  
	`luaL_îr‹
(
L
, "save, wrongÇumber ofárguments");

1153 
∑th
 = (*)
	`luaL_check°rög
(
L
, 1);

1155 i‡(
	`pktgí_ßve
(
∑th
) )

1156  
	`luaL_îr‹
(
L
, "ßvêcomm™d faûed f‹ %s\n", 
∑th
);

1158 
	}
}

1173 
	$pktgí_˛ór
(
lua_Sèã
 *
L
) {

1174 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1176 
	`lua_gët›
(
L
) ) {

1177 :  
	`luaL_îr‹
(
L
, "clear, wrongÇumber ofárguments");

1181 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1183 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1184 
	`pktgí_˛ór_°©s
(
öfo
) );

1187 
	}
}

1202 
	$pktgí_˛ór_Æl
(
lua_Sèã
 *
L
 
__πe_unu£d
) {

1203 
	`f‹Æl_p‹ts
(
	`pktgí_˛ór_°©s
(
öfo
) );

1206 
	}
}

1221 
	$pktgí_˛s_s¸ìn
(
lua_Sèã
 *
L
 
__πe_unu£d
) {

1222 
	`pktgí_˛s
();

1225 
	}
}

1240 
	$pktgí_upd©e_s¸ìn
(
lua_Sèã
 *
L
 
__πe_unu£d
) {

1241 
	`pktgí_upd©e
();

1244 
	}
}

1259 
	$pktgí_ª£t_c⁄fig
(
lua_Sèã
 *
L
) {

1260 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1262 
	`lua_gët›
(
L
) ) {

1263 :  
	`luaL_îr‹
(
L
, "reset, wrongÇumber ofárguments");

1267 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1269 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1270 
	`pktgí_ª£t
(
öfo
) );

1273 
	}
}

1288 
	$pktgí_ª°¨t
(
lua_Sèã
 *
L
) {

1289 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1291 
	`lua_gët›
(
L
) ) {

1292 :  
	`luaL_îr‹
(
L
, "reset, wrongÇumber ofárguments");

1296 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1298 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1299 
	`pktgí_p‹t_ª°¨t
(
öfo
) );

1302 
	}
}

1317 
	$pktgí_d°_mac
(
lua_Sèã
 *
L
) {

1318 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1319 
cmdlöe_ëhîaddr_t
 
mac
;

1321 
	`lua_gët›
(
L
) ) {

1322 :  
	`luaL_îr‹
(
L
, "dst_mac, wrongÇumber ofárguments");

1326 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1327 
	`cmdlöe_∑r£_ëhîaddr
(
NULL
, 
	`luaL_check°rög
(
L
, 2), &
mac
,

1328 (
mac
));

1330 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1331 
	`pktgí_£t_de°_mac
(
öfo
, "°¨t", &
mac
) );

1333 
	`pktgí_upd©e_di•œy
();

1335 
	}
}

1350 
	$pktgí_§c_mac
(
lua_Sèã
 *
L
) {

1351 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1352 
cmdlöe_ëhîaddr_t
 
mac
;

1354 
	`lua_gët›
(
L
) ) {

1355 :  
	`luaL_îr‹
(
L
, "src_mac, wrongÇumber ofárguments");

1359 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1360 
	`cmdlöe_∑r£_ëhîaddr
(
NULL
, 
	`luaL_check°rög
(
L
, 2), &
mac
,

1361 (
mac
));

1363 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1364 
	`pktgí_£t_§c_mac
(
öfo
, "°¨t", &
mac
) );

1366 
	`pktgí_upd©e_di•œy
();

1368 
	}
}

1383 
	$pktgí_d°_ù
(
lua_Sèã
 *
L
) {

1384 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1385 
cmdlöe_ùaddr_t
 
ùaddr
;

1386 
cmdlöe_∑r£_tokí_ùaddr_t
 
tk
;

1387 *
ty≥
;

1389 
	`lua_gët›
(
L
) ) {

1390 :  
	`luaL_îr‹
(
L
, "dst_ip, wrongÇumber ofárguments");

1394 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1395 
tk
.
ùaddr_d©a
.
Êags
 = 
CMDLINE_IPADDR_V4
;

1396 
	`cmdlöe_∑r£_ùaddr
((
cmdlöe_∑r£_tokí_hdr_t
 *)&
tk
,

1397 
	`luaL_check°rög
(
L
, 3), &
ùaddr
,

1398 (
cmdlöe_ùaddr_t
));

1400 
ty≥
 = (*)
	`luaL_check°rög
(
L
, 2);

1401 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1402 
	`pktgí_£t_d°_ù
(
öfo
, 
ty≥
, &
ùaddr
) );

1404 
	`pktgí_upd©e_di•œy
();

1406 
	}
}

1421 
	$pktgí_§c_ù
(
lua_Sèã
 *
L
) {

1422 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1423 
cmdlöe_ùaddr_t
 
ùaddr
;

1424 
cmdlöe_∑r£_tokí_ùaddr_t
 
tk
;

1425 *
ty≥
;

1427 
	`lua_gët›
(
L
) ) {

1428 :  
	`luaL_îr‹
(
L
, "src_ip, wrongÇumber ofárguments");

1432 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1433 
tk
.
ùaddr_d©a
.
Êags
 = 
CMDLINE_IPADDR_V4
;

1434 
	`cmdlöe_∑r£_ùaddr
((
cmdlöe_∑r£_tokí_hdr_t
 *)&
tk
,

1435 
	`luaL_check°rög
(
L
, 3), &
ùaddr
, (ipaddr));

1437 
ty≥
 = (*)
	`luaL_check°rög
(
L
, 2);

1438 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1439 
	`pktgí_£t_§c_ù
(
öfo
, 
ty≥
, &
ùaddr
) );

1441 
	`pktgí_upd©e_di•œy
();

1443 
	}
}

1458 
	$pktgí_d°_p‹t
(
lua_Sèã
 *
L
) {

1459 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1461 
	`lua_gët›
(
L
) ) {

1462 :  
	`luaL_îr‹
(
L
, "dst_port, wrongÇumber ofárguments");

1466 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1468 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1469 
	`pktgí_£t_d°_p‹t
(
öfo
, (*)
	`luaL_check°rög
(
L
, 2),

1470 
	`luaL_checköãgî
(
L
, 3)) );

1472 
	`pktgí_upd©e_di•œy
();

1474 
	}
}

1489 
	$pktgí_ù_¥Ÿo
(
lua_Sèã
 *
L
) {

1490 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1491 c⁄° * 
ù
;

1493 
	`lua_gët›
(
L
) ) {

1494 :  
	`luaL_îr‹
(
L
, "ip_proto, wrongÇumber ofárguments");

1498 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1500 
ù
 = 
	`luaL_check°rög
(
L
, 2);

1501 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1502 
	`pktgí_£t_¥Ÿo_ønge
(
öfo
, 
ù
[0]));

1504 
	`pktgí_upd©e_di•œy
();

1506 
	}
}

1521 
	$pktgí_§c_p‹t
(
lua_Sèã
 *
L
) {

1522 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1524 
	`lua_gët›
(
L
) ) {

1525 :  
	`luaL_îr‹
(
L
, "src_port, wrongÇumber ofárguments");

1529 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1531 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1532 
	`pktgí_£t_§c_p‹t
(
öfo
, (*)
	`luaL_check°rög
(
L
, 2),

1533 
	`luaL_checköãgî
(
L
, 3)));

1535 
	`pktgí_upd©e_di•œy
();

1537 
	}
}

1552 
	$pktgí_gçu_ãid
(
lua_Sèã
 *
L
) {

1553 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1555 
	`lua_gët›
(
L
) ) {

1556 :  
	`luaL_îr‹
(
L
, "GTP-U TEID, wrongÇumber ofárguments");

1560 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1562 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1563 
	`pktgí_£t_gçu_ãid
(
öfo
, (*)
	`luaL_check°rög
(
L
, 2),

1564 
	`luaL_checköãgî
(
L
, 3)));

1566 
	`pktgí_upd©e_di•œy
();

1568 
	}
}

1583 
	$pktgí_vœn_id
(
lua_Sèã
 *
L
) {

1584 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1585 
uöt32_t
 
vœn_id
;

1587 
	`lua_gët›
(
L
) ) {

1588 :  
	`luaL_îr‹
(
L
, "vlan_id, wrongÇumber ofárguments");

1592 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1593 
vœn_id
 = 
	`luaL_checköãgî
(
L
, 3);

1595 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1596 
	`pktgí_£t_vœn_id
(
öfo
, (*)
	`luaL_check°rög
(
L
, 2),

1597 
vœn_id
) );

1599 
	`pktgí_upd©e_di•œy
();

1601 
	}
}

1616 
	$pktgí_vœnid
(
lua_Sèã
 *
L
) {

1617 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1618 
uöt32_t
 
vœnid
;

1620 
	`lua_gët›
(
L
) ) {

1621 :  
	`luaL_îr‹
(
L
, "vlanid, wrongÇumber ofárguments");

1625 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1626 
vœnid
 = 
	`luaL_checköãgî
(
L
, 2);

1627 i‡–(
vœnid
 < 
MIN_VLAN_ID
Ë|| (vœnid > 
MAX_VLAN_ID
) )

1628 
vœnid
 = 1;

1630 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1631 
	`pktgí_£t_vœnid
(
öfo
, 
vœnid
) );

1633 
	`pktgí_upd©e_di•œy
();

1635 
	}
}

1650 
	$pktgí_vœn
(
lua_Sèã
 *
L
) {

1651 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1653 
	`lua_gët›
(
L
) ) {

1654 :  
	`luaL_îr‹
(
L
, "process, wrongÇumber ofárguments");

1658 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1660 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1661 
	`pktgí_£t_vœn
(
öfo
,

1662 
	`∑r£Sèã
(
	`luaL_check°rög
(
L
, 2))) );

1664 
	`pktgí_upd©e_di•œy
();

1666 
	}
}

1681 
	$pktgí_m∂s_íåy
(
lua_Sèã
 *
L
) {

1682 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1683 
uöt32_t
 
m∂s_íåy
;

1685 
	`lua_gët›
(
L
) ) {

1686 :  
	`luaL_îr‹
(
L
, "mpls_entry, wrongÇumber ofárguments");

1690 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1691 
m∂s_íåy
 = 
	`°πoul
(
	`luaL_check°rög
(
L
, 2), 
NULL
, 16);

1693 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1694 
	`pktgí_£t_m∂s_íåy
(
öfo
, 
m∂s_íåy
) );

1696 
	`pktgí_upd©e_di•œy
();

1698 
	}
}

1713 
	$pktgí_m∂s
(
lua_Sèã
 *
L
) {

1714 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1716 
	`lua_gët›
(
L
) ) {

1717 :  
	`luaL_îr‹
(
L
, "mpls, wrongÇumber ofárguments");

1721 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1723 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1724 
	`pktgí_£t_m∂s
(
öfo
,

1725 
	`∑r£Sèã
(
	`luaL_check°rög
(
L
, 2))) );

1727 
	`pktgí_upd©e_di•œy
();

1729 
	}
}

1744 
	$pktgí_qöqids
(
lua_Sèã
 *
L
) {

1745 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1746 
uöt32_t
 
qöq_id1
, 
qöq_id2
;

1748 
	`lua_gët›
(
L
) ) {

1749 :  
	`luaL_îr‹
(
L
, "qinqids, wrongÇumber ofárguments");

1753 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1754 
qöq_id1
 = 
	`luaL_checköãgî
(
L
, 2);

1755 i‡–(
qöq_id1
 < 
MIN_VLAN_ID
Ë|| (qöq_id1 > 
MAX_VLAN_ID
) )

1756 
qöq_id1
 = 1;

1758 
qöq_id2
 = 
	`luaL_checköãgî
(
L
, 3);

1759 i‡–(
qöq_id2
 < 
MIN_VLAN_ID
Ë|| (qöq_id2 > 
MAX_VLAN_ID
) )

1760 
qöq_id2
 = 1;

1762 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1763 
	`pktgí_£t_qöqids
(
öfo
, 
qöq_id1
, 
qöq_id2
) );

1765 
	`pktgí_upd©e_di•œy
();

1767 
	}
}

1782 
	$pktgí_qöq
(
lua_Sèã
 *
L
) {

1783 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1785 
	`lua_gët›
(
L
) ) {

1786 :  
	`luaL_îr‹
(
L
, "qinq, wrongÇumber ofárguments");

1790 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1792 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1793 
	`pktgí_£t_qöq
(
öfo
,

1794 
	`∑r£Sèã
(
	`luaL_check°rög
(
L
, 2))) );

1796 
	`pktgí_upd©e_di•œy
();

1798 
	}
}

1813 
	$pktgí_gª_key
(
lua_Sèã
 *
L
) {

1814 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1815 
uöt32_t
 
gª_key
;

1817 
	`lua_gët›
(
L
) ) {

1818 :  
	`luaL_îr‹
(
L
, "gre_key, wrongÇumber ofárguments");

1822 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1823 
gª_key
 = 
	`luaL_checköãgî
(
L
, 2);

1825 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1826 
	`pktgí_£t_gª_key
(
öfo
, 
gª_key
) );

1828 
	`pktgí_upd©e_di•œy
();

1830 
	}
}

1845 
	$pktgí_gª
(
lua_Sèã
 *
L
) {

1846 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1848 
	`lua_gët›
(
L
) ) {

1849 :  
	`luaL_îr‹
(
L
, "gre, wrongÇumber ofárguments");

1853 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1855 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1856 
	`pktgí_£t_gª
(
öfo
, 
	`∑r£Sèã
(
	`luaL_check°rög
(
L
, 2))) );

1858 
	`pktgí_upd©e_di•œy
();

1860 
	}
}

1875 
	$pktgí_gª_ëh
(
lua_Sèã
 *
L
) {

1876 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1878 
	`lua_gët›
(
L
) ) {

1879 :  
	`luaL_îr‹
(
L
, "gre_eth, wrongÇumber ofárguments");

1883 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1885 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1886 
	`pktgí_£t_gª_ëh
(
öfo
, 
	`∑r£Sèã
(
	`luaL_check°rög
(
L
,

1889 
	`pktgí_upd©e_di•œy
();

1891 
	}
}

1906 
	$pktgí_pkt_size
(
lua_Sèã
 *
L
) {

1907 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1908 
uöt32_t
 
size
;

1909 *
ty≥
;

1911 
	`lua_gët›
(
L
) ) {

1912 :  
	`luaL_îr‹
(
L
, "pkt_size, wrongÇumber ofárguments");

1916 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1917 
ty≥
 = (*)
	`luaL_check°rög
(
L
, 2);

1918 
size
 = 
	`luaL_checköãgî
(
L
, 3);

1920 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1921 
	`pktgí_£t_ønge_pkt_size
(
öfo
, 
ty≥
, 
size
) );

1923 
	`pktgí_upd©e_di•œy
();

1925 
	}
}

1940 
	$pktgí_ønge
(
lua_Sèã
 *
L
) {

1941 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1943 
	`lua_gët›
(
L
) ) {

1944 :  
	`luaL_îr‹
(
L
, "range, wrongÇumber ofárguments");

1948 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1950 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1951 
	`pktgí_ønge_íabÀ_dißbÀ
(
öfo
,

1952 (*)
	`luaL_check°rög
(
L
,

1955 
	`pktgí_upd©e_di•œy
();

1957 
	}
}

1972 
	$pktgí_œãncy
(
lua_Sèã
 *
L
) {

1973 #ifde‡
LATER


1974 
cmdlöe_p‹éi°_t
 
p‹éi°
;

1976 
	`lua_gët›
(
L
) ) {

1977 :  
	`luaL_îr‹
(
L
, "latency, wrongÇumber ofárguments");

1981 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

1983 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

1984 
	`pktgí_œãncy_íabÀ_dißbÀ
(
öfo
,

1985 (*)
	`luaL_check°rög
(
L
,

1988 
	`pktgí_upd©e_di•œy
();

1991  
	`luaL_îr‹
(
L
, "latency isÇot working yet");

1993 
	}
}

2008 
	$pktgí_∑âîn
(
lua_Sèã
 *
L
) {

2009 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2011 
	`lua_gët›
(
L
) ) {

2012 :  
	`luaL_îr‹
(
L
, "pattern, wrongÇumber ofárguments");

2016 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2018 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2019 
	`pktgí_£t_∑âîn_ty≥
(
öfo
,

2020 (*)
	`luaL_check°rög
(
L
, 2)) );

2022 
	`pktgí_upd©e_di•œy
();

2024 
	}
}

2039 
	$pktgí_u£r_∑âîn
(
lua_Sèã
 *
L
) {

2040 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2042 
	`lua_gët›
(
L
) ) {

2043 :  
	`luaL_îr‹
(
L
,

2048 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2050 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2051 
	`pktgí_u£r_∑âîn_£t
(
öfo
,

2052 (*)
	`luaL_check°rög
(
L
, 2)) );

2054 
	`pktgí_upd©e_di•œy
();

2056 
	}
}

2071 
	$pktgí_∑ge
(
lua_Sèã
 *
L
) {

2072 
	`lua_gët›
(
L
) ) {

2073 :  
	`luaL_îr‹
(
L
, "page, wrongÇumber ofárguments");

2077 
	`pktgí_£t_∑ge
((*)
	`luaL_check°rög
(
L
, 1));

2079 
	}
}

2094 
	$pktgí_p‹t
(
lua_Sèã
 *
L
) {

2095 
	`lua_gët›
(
L
) ) {

2096 :  
	`luaL_îr‹
(
L
, "port, wrongÇumber ofárguments");

2100 
	`pktgí_£t_p‹t_numbî
(
	`luaL_checköãgî
(
L
, 1));

2102 
	}
}

2117 
	$pktgí_¥o˚ss
(
lua_Sèã
 *
L
) {

2118 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2120 
	`lua_gët›
(
L
) ) {

2121 :  
	`luaL_îr‹
(
L
, "process, wrongÇumber ofárguments");

2125 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2127 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2128 
	`pktgí_¥o˚ss_íabÀ_dißbÀ
(
öfo
,

2129 (*)
	`luaL_check°rög
(
L
,

2132 
	`pktgí_upd©e_di•œy
();

2134 
	}
}

2149 
	$pktgí_g¨p
(
lua_Sèã
 *
L
) {

2150 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2152 
	`lua_gët›
(
L
) ) {

2153 :  
	`luaL_îr‹
(
L
, "process, wrongÇumber ofárguments");

2157 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2159 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2160 
	`pktgí_g¨p_íabÀ_dißbÀ
(
öfo
,

2161 (*)
	`luaL_check°rög
(
L
,

2164 
	`pktgí_upd©e_di•œy
();

2166 
	}
}

2181 
	$pktgí_blök
(
lua_Sèã
 *
L
) {

2182 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2184 
	`lua_gët›
(
L
) ) {

2185 :  
	`luaL_îr‹
(
L
, "blink, wrongÇumber ofárguments");

2189 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2191 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2192 
	`pktgí_blök_íabÀ_dißbÀ
(
öfo
,

2193 (*)
	`luaL_check°rög
(
L
,

2196 i‡(
pktgí
.
blökli°
)

2197 
pktgí
.
Êags
 |
BLINK_PORTS_FLAG
;

2199 
pktgí
.
Êags
 &~
BLINK_PORTS_FLAG
;

2200 
	`pktgí_upd©e_di•œy
();

2203 
	}
}

2218 
	$isSídög
(
lua_Sèã
 *
L
, 
p‹t_öfo_t
 *
öfo
)

2220 
	`lua_pushöãgî
(
L
, 
öfo
->
pid
);

2221 
	`lua_push°rög
(
L
, 
	`pktgí_p‹t_å™smôtög
(
öfo
->
pid
) ? "y" : "n");

2224 
	`lua_øw£t
(
L
, -3);

2225 
	}
}

2240 
	$pktgí_isSídög
(
lua_Sèã
 *
L
) {

2241 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2242 
uöt32_t
 
n
;

2244 
	`lua_gët›
(
L
) ) {

2245 :  
	`luaL_îr‹
(
L
, "isSending, wrongÇumber ofárguments");

2249 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2251 
	`lua_√wèbÀ
(
L
);

2253 
n
 = 0;

2254 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2255 
	`_do
(
	`isSídög
(
L
, 
öfo
); 
n
++) );

2257 
	`£tf_öãgî
(
L
, "n", 
n
);

2260 
	}
}

2275 
	$lök_°©e
(
lua_Sèã
 *
L
, 
p‹t_öfo_t
 *
öfo
)

2277 
buff
[32];

2279 
	`lua_pushöãgî
(
L
, 
öfo
->
pid
);

2280 
	`lua_push°rög
(
L
, 
	`pktgí_lök_°©e
(
öfo
->
pid
, 
buff
, (buff)));

2283 
	`lua_øw£t
(
L
, -3);

2284 
	}
}

2299 
	$pktgí_lökSèã
(
lua_Sèã
 *
L
) {

2300 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2301 
uöt32_t
 
n
;

2303 
	`lua_gët›
(
L
) ) {

2304 :  
	`luaL_îr‹
(
L
, "linkState, wrongÇumber ofárguments");

2308 
p‹éi°
.
m≠
 = 0;

2309 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2311 
	`lua_√wèbÀ
(
L
);

2313 
n
 = 0;

2314 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2315 
	`_do
(
	`lök_°©e
(
L
, 
öfo
); 
n
++) );

2317 
	`£tf_öãgî
(
L
, "n", 
n
);

2320 
	}
}

2335 
	$p‹t_sizes
(
lua_Sèã
 *
L
, 
p‹t_öfo_t
 *
öfo
)

2337 
p‹t_sizes_t
 
sizes
;

2339 
	`pktgí_p‹t_sizes
(
öfo
->
pid
, &
sizes
);

2341 
	`lua_pushöãgî
(
L
, 
öfo
->
pid
);

2342 
	`lua_√wèbÀ
(
L
);

2344 
	`£tf_öãgî
(
L
, "ru¡", 
sizes
.
ru¡
);

2345 
	`£tf_öãgî
(
L
, "_64", 
sizes
.
_64
);

2346 
	`£tf_öãgî
(
L
, "_65_127", 
sizes
.
_65_127
);

2347 
	`£tf_öãgî
(
L
, "_128_255", 
sizes
.
_128_255
);

2348 
	`£tf_öãgî
(
L
, "_256_511", 
sizes
.
_256_511
);

2349 
	`£tf_öãgî
(
L
, "_512_1023", 
sizes
.
_512_1023
);

2350 
	`£tf_öãgî
(
L
, "_1024_1518", 
sizes
.
_1024_1518
);

2351 
	`£tf_öãgî
(
L
, "jumbo", 
sizes
.
jumbo
);

2352 
	`£tf_öãgî
(
L
, "brﬂdˇ°", 
sizes
.
brﬂdˇ°
);

2353 
	`£tf_öãgî
(
L
, "mu…iˇ°", 
sizes
.
mu…iˇ°
);

2356 
	`lua_øw£t
(
L
, -3);

2357 
	}
}

2372 
	$pktgí_p‹tSizes
(
lua_Sèã
 *
L
) {

2373 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2374 
uöt32_t
 
n
;

2376 
	`lua_gët›
(
L
) ) {

2377 :  
	`luaL_îr‹
(
L
, "portSizes, wrongÇumber ofárguments");

2381 
p‹éi°
.
m≠
 = 0;

2382 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2384 
	`lua_√wèbÀ
(
L
);

2386 
n
 = 0;

2387 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2388 
	`_do
(
	`p‹t_sizes
(
L
, 
öfo
); 
n
++) );

2390 
	`£tf_öãgî
(
L
, "n", 
n
);

2393 
	}
}

2408 
	$pkt_°©s
(
lua_Sèã
 *
L
, 
p‹t_öfo_t
 *
öfo
)

2410 
pkt_°©s_t
 
°©s
;

2412 
	`pktgí_pkt_°©s
(
öfo
->
pid
, &
°©s
);

2414 
	`lua_pushöãgî
(
L
, 
öfo
->
pid
);

2415 
	`lua_√wèbÀ
(
L
);

2417 
	`£tf_öãgî
(
L
, "¨p_pkts", 
°©s
.
¨p_pkts
);

2418 
	`£tf_öãgî
(
L
, "echo_pkts", 
°©s
.
echo_pkts
);

2419 
	`£tf_öãgî
(
L
, "ù_pkts", 
°©s
.
ù_pkts
);

2420 
	`£tf_öãgî
(
L
, "ùv6_pkts", 
°©s
.
ùv6_pkts
);

2421 
	`£tf_öãgî
(
L
, "vœn_pkts", 
°©s
.
vœn_pkts
);

2422 
	`£tf_öãgî
(
L
, "dr›≥d_pkts", 
°©s
.
dr›≥d_pkts
);

2423 
	`£tf_öãgî
(
L
, "unknown_pkts", 
°©s
.
unknown_pkts
);

2424 
	`£tf_öãgî
(
L
, "tx_Áûed", 
°©s
.
tx_Áûed
);

2427 
	`lua_øw£t
(
L
, -3);

2428 
	}
}

2443 
	$pktgí_pktSèts
(
lua_Sèã
 *
L
) {

2444 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2445 
uöt32_t
 
n
;

2447 
	`lua_gët›
(
L
) ) {

2448 :  
	`luaL_îr‹
(
L
, "pktStats, wrongÇumber ofárguments");

2452 
p‹éi°
.
m≠
 = 0;

2453 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2455 
	`lua_√wèbÀ
(
L
);

2457 
n
 = 0;

2458 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2459 
	`_do
(
	`pkt_°©s
(
L
, 
öfo
); 
n
++) );

2461 
	`£tf_öãgî
(
L
, "n", 
n
);

2464 
	}
}

2479 
	$p‹t_°©s
(
lua_Sèã
 *
L
, 
p‹t_öfo_t
 *
öfo
, *
ty≥
)

2481 
ëh_°©s_t
 
°©s
;

2483 
	`pktgí_p‹t_°©s
(
öfo
->
pid
, 
ty≥
, &
°©s
);

2485 
	`lua_pushöãgî
(
L
, 
öfo
->
pid
);

2486 
	`lua_√wèbÀ
(
L
);

2488 
	`£tf_öãgî
(
L
, "ùackës", 
°©s
.
ùackës
);

2489 
	`£tf_öãgî
(
L
, "›ackës", 
°©s
.
›ackës
);

2490 
	`£tf_öãgî
(
L
, "ibyãs", 
°©s
.
ibyãs
);

2491 
	`£tf_öãgî
(
L
, "obyãs", 
°©s
.
obyãs
);

2492 
	`£tf_öãgî
(
L
, "õº‹s", 
°©s
.
õº‹s
);

2493 
	`£tf_öãgî
(
L
, "€º‹s", 
°©s
.
€º‹s
);

2494 
	`£tf_öãgî
(
L
, "rx_nombuf", 
°©s
.
rx_nombuf
);

2496 i‡(
	`°rcmp
(
ty≥
, "rate") == 0) {

2497 
	`£tf_öãgî
(
L
, "pkts_rx", 
°©s
.
ùackës
);

2498 
	`£tf_öãgî
(
L
, "pkts_tx", 
°©s
.
›ackës
);

2499 
	`£tf_öãgî
(
L
, "mbôs_rx", 
	`iBôsTŸÆ
(
°©s
Ë/ 
Mûli⁄
);

2500 
	`£tf_öãgî
(
L
, "mbôs_tx", 
	`oBôsTŸÆ
(
°©s
Ë/ 
Mûli⁄
);

2504 
	`lua_øw£t
(
L
, -3);

2505 
	}
}

2520 
	$pktgí_p‹tSèts
(
lua_Sèã
 *
L
) {

2521 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2522 
uöt32_t
 
n
;

2523 *
ty≥
;

2525 
	`lua_gët›
(
L
) ) {

2526 :  
	`luaL_îr‹
(
L
, "portStats, wrongÇumber ofárguments");

2531 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2532 
ty≥
 = (*)
	`luaL_check°rög
(
L
, 2);

2534 
	`lua_√wèbÀ
(
L
);

2536 
n
 = 0;

2537 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2538 
	`_do
(
	`p‹t_°©s
(
L
, 
öfo
, 
ty≥
); 
n
++) );

2540 
	`£tf_öãgî
(
L
, "n", 
n
);

2543 
	}
}

2558 
	$pktgí_hñp
(
lua_Sèã
 *
L
) {

2559 
i
;

2561 
	`lua_c⁄ˇt
(
L
, 0);

2562 
i
 = 1; 
hñp_öfo
[i] !
NULL
; i++)

2563 i‡(
	`°rcmp
(
hñp_öfo
[
i
], "<<PageBreak>>") != 0) {

2564 
	`lua_push°rög
(
L
, 
hñp_öfo
[
i
]);

2565 
	`lua_c⁄ˇt
(
L
, 2);

2569 
	}
}

2584 
	$pktgí_compûe
(
lua_Sèã
 *
L
) {

2585 
uöt32_t
 
£qnum
;

2587 
	`lua_gët›
(
L
) ) {

2588 :  
	`luaL_îr‹
(
L
, "compile, wrongÇumber ofárguments");

2592 
£qnum
 = 
	`luaL_checköãgî
(
L
, 1);

2593 i‡(
£qnum
 >
NUM_SEQ_PKTS
)

2596  
	`£t_£qTabÀ
(
L
, 
£qnum
);

2597 
	}
}

2612 
	$decompûe_pkt
(
lua_Sèã
 *
L
, 
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
£qnum
) {

2613 
buff
[128];

2614 
pkt_£q_t
 *
p
;

2616 
p
 = &
öfo
->
£q_pkt
[
£qnum
];

2618 
	`lua_pushöãgî
(
L
, 
öfo
->
pid
);

2619 
	`lua_√wèbÀ
(
L
);

2622 
	`£tf_°rög
(
L
, "eth_dst_addr",

2623 
	`öë_mtﬂ
(
buff
, (buff), &
p
->
ëh_d°_addr
));

2624 
	`£tf_°rög
(
L
, "eth_src_addr",

2625 
	`öë_mtﬂ
(
buff
, (buff), &
p
->
ëh_§c_addr
));

2626 i‡(
p
->
ëhTy≥
 =
ETHER_TYPE_IPv4
) {

2627 
	`£tf_°rög
(
L
, "ip_dst_addr",

2628 
	`öë_¡›4
(
buff
, (buff), 
	`ht⁄l
(
p
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
),

2630 
	`£tf_°rög
(
L
, "ip_src_addr",

2631 
	`öë_¡›4
(
buff
, (buff), 
	`ht⁄l
(
p
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
),

2632 
p
->
ù_mask
));

2634 
	`£tf_°rög
(
L
, "ip_dst_addr",

2635 
	`öë_¡›6
(
buff
, (buff), 
p
->
ù_d°_addr
.
addr
.
ùv6
.
__ö6_u
.
__u6_addr8
));

2636 
	`£tf_°rög
(
L
, "ip_src_addr",

2637 
	`öë_¡›6
(
buff
, (buff), 
p
->
ù_d°_addr
.
addr
.
ùv6
.
__ö6_u
.
__u6_addr8
));

2639 
	`£tf_öãgî
(
L
, "dp‹t", 
p
->
dp‹t
);

2640 
	`£tf_öãgî
(
L
, "•‹t", 
p
->
•‹t
);

2641 
	`£tf_öãgî
(
L
, "vœnid", 
p
->
vœnid
);

2642 
	`£tf_°rög
(
L
,

2645 (
p
->
ëhTy≥
 =
ETHER_TYPE_IPv4
) ? "ipv4" :

2646 (
p
->
ëhTy≥
 =
ETHER_TYPE_IPv6
) ? "ipv6" :

2647 (
p
->
ëhTy≥
 ==

2648 
ETHER_TYPE_VLAN
) ? "vlan" : "unknown"));

2649 
	`£tf_°rög
(
L
, "ipProto", (*)(

2650 (
p
->
ùPrŸo
 =
PG_IPPROTO_TCP
) ? "tcp" :

2651 (
p
->
ùPrŸo
 =
PG_IPPROTO_ICMP
) ? "icmp" : "udp"));

2653 
	`£tf_öãgî
(
L
, "pktSize", 
p
->
pktSize
 + 
FCS_SIZE
);

2654 
	`£tf_öãgî
(
L
, "éí", 
p
->
éí
);

2655 
	`£tf_öãgî
(
L
, "gçu_ãid", 
p
->
gçu_ãid
);

2658 
	`lua_øw£t
(
L
, -3);

2659 
	}
}

2674 
	$pktgí_decompûe
(
lua_Sèã
 *
L
) {

2675 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2676 
uöt32_t
 
£qnum
, 
n
;

2678 
	`lua_gët›
(
L
) ) {

2679 :  
	`luaL_îr‹
(
L
, "decompile, wrongÇumber ofárguments");

2683 
£qnum
 = 
	`luaL_checköãgî
(
L
, 1);

2684 i‡(
£qnum
 >
NUM_SEQ_PKTS
)

2686 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 2), &
p‹éi°
);

2688 
	`lua_√wèbÀ
(
L
);

2690 
n
 = 0;

2691 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2692 
	`_do
(
	`decompûe_pkt
(
L
, 
öfo
, 
£qnum
); 
n
++) );

2694 
	`£tf_öãgî
(
L
, "n", 
n
);

2697 
	}
}

2712 
	$pktgí_£ndPkt
(
lua_Sèã
 *
L
) {

2713 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2714 
uöt32_t
 
£qnum
;

2716 
	`lua_gët›
(
L
) ) {

2717 :  
	`luaL_îr‹
(
L
, "sendPkt, wrongÇumber ofárguments");

2721 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2723 
£qnum
 = 
	`luaL_checköãgî
(
L
, 2);

2724 i‡–(
£qnum
 >
NUM_EXTRA_TX_PKTS
Ë|| (
p‹éi°
.
m≠
 == 0) )

2727 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2728 
	`pktgí_£nd_pkt
(
öfo
, 
£qnum
) );

2731 
	}
}

2746 
	$pktgí_p‹tCou¡
(
lua_Sèã
 *
L
) {

2747 
	`lua_pushöãgî
(
L
, 
pktgí
.
p‹t_˙t
);

2750 
	}
}

2765 
	$pktgí_tŸÆP‹ts
(
lua_Sèã
 *
L
) {

2766 
	`lua_pushöãgî
(
L
, 
pktgí
.
nb_p‹ts
);

2769 
	}
}

2784 
	$pktgí_ªcvPkt
(
lua_Sèã
 *
L
) {

2785 
cmdlöe_p‹éi°_t
 
p‹éi°
;

2787 
	`lua_gët›
(
L
) ) {

2788 :  
	`luaL_îr‹
(
L
, "recvPkt, wrongÇumber ofárguments");

2792 
	`∑r£_p‹éi°
(
	`luaL_check°rög
(
L
, 1), &
p‹éi°
);

2793 i‡(
p‹éi°
.
m≠
 == 0)

2796 
	`f‹óch_p‹t
(
p‹éi°
.
m≠
,

2797 
	`pktgí_ªcv_pkt
(
öfo
) );

2800 
	}
}

2815 
	$pktgí_run
(
lua_Sèã
 *
L
) {

2816 
	`lua_gët›
(
L
) ) {

2817 :  
	`luaL_îr‹
(
L
,

2824 i‡(
	`°rˇ£cmp
("cmd", 
	`luaL_check°rög
(
L
, 1)) == 0)

2825 
	`pktgí_lﬂd_cmds
((*)
	`luaL_check°rög
(
L
, 2));

2826 i‡(
	`°rˇ£cmp
("lua", 
	`luaL_check°rög
(
L
, 1)) == 0)

2827 
	`execuã_lua_°rög
(
L
, (*)
	`luaL_check°rög
(L, 2));

2829  
	`luaL_îr‹
(
L
,

2834 
	}
}

2836 c⁄° *
	glua_hñp_öfo
[] = {

2852 #ifde‡
INCLUDE_PING6


2953 
NULL


2969 
	$pktgí_lua_hñp
(
lua_Sèã
 *
L
) {

2970 
i
;

2972 
	`lua_c⁄ˇt
(
L
, 0);

2973 
i
 = 1; 
lua_hñp_öfo
[i] !
NULL
; i++) {

2974 
	`lua_push°rög
(
L
, 
lua_hñp_öfo
[
i
]);

2975 
	`lua_c⁄ˇt
(
L
, 2);

2979 
	}
}

2981 c⁄° 
luaL_Reg
 
	gpktgílib
[] = {

2982 {"£t", 
pktgí_£t
},

2984 {"°¨t", 
pktgí_°¨t
},

2985 {"°›", 
pktgí_°›
},

2988 {"£t_mac", 
pktgí_£t_mac
},

2989 {"£t_ùaddr", 
pktgí_£t_ù_addr
},

2990 {"mac_‰om_¨p", 
pktgí_macFromAΩ
},

2991 {"£t_¥Ÿo", 
pktgí_¥ŸŸy≥
},

2992 {"£t_ty≥", 
pktgí_£t_ty≥
},

2994 {"pög4", 
pktgí_£nd_pög4
},

2995 #ifde‡
INCLUDE_PING6


2996 {"pög6", 
pktgí_£nd_pög6
},

2999 {"pˇp", 
pktgí_pˇp
},

3000 {"icmp_echo", 
pktgí_icmp
},

3001 {"£nd_¨p", 
pktgí_£ndARP
},

3004 {"£q", 
pktgí_£q
},

3005 {"£qTabÀ", 
pktgí_£qTabÀ
},

3007 {"s¸ìn", 
pktgí_s¸n
},

3008 {"¥ime", 
pktgí_¥ime
},

3009 {"dñay", 
pktgí_dñay
},

3010 {"∑u£", 
pktgí_∑u£
},

3011 {"¶ìp", 
pktgí_¶ìp
},

3012 {"lﬂd", 
pktgí_lﬂd
},

3013 {"ßve", 
pktgí_c⁄fig_ßve
},

3014 {"˛ór", 
pktgí_˛ór
},

3015 {"˛r", 
pktgí_˛ór_Æl
},

3016 {"˛s", 
pktgí_˛s_s¸ìn
},

3017 {"upd©e", 
pktgí_upd©e_s¸ìn
},

3018 {"ª£t", 
pktgí_ª£t_c⁄fig
},

3019 {"p‹t_ª°¨t", 
pktgí_ª°¨t
},

3020 {"p‹tCou¡", 
pktgí_p‹tCou¡
},

3021 {"tŸÆP‹ts", 
pktgí_tŸÆP‹ts
},

3023 {"vœn", 
pktgí_vœn
},

3024 {"vœnid", 
pktgí_vœnid
},

3026 {"m∂s", 
pktgí_m∂s
},

3027 {"qöq", 
pktgí_qöq
},

3028 {"gª", 
pktgí_gª
},

3029 {"gª_ëh", 
pktgí_gª_ëh
},

3032 {"d°_mac", 
pktgí_d°_mac
},

3033 {"§c_mac", 
pktgí_§c_mac
},

3034 {"§c_ù", 
pktgí_§c_ù
},

3035 {"d°_ù", 
pktgí_d°_ù
},

3036 {"ønge_¥Ÿo", 
pktgí_ù_¥Ÿo
},

3037 {"§c_p‹t", 
pktgí_§c_p‹t
},

3038 {"d°_p‹t", 
pktgí_d°_p‹t
},

3039 {"vœn_id", 
pktgí_vœn_id
},

3040 {"m∂s_íåy", 
pktgí_m∂s_íåy
},

3041 {"qöqids", 
pktgí_qöqids
},

3042 {"gª_key", 
pktgí_gª_key
},

3043 {"pkt_size", 
pktgí_pkt_size
},

3044 {"ønge", 
pktgí_ønge
},

3046 {"p‹ts_≥r_∑ge", 
pktgí_p‹ts_≥r_∑ge
},

3047 {"∑ge", 
pktgí_∑ge
},

3048 {"p‹t", 
pktgí_p‹t
},

3049 {"¥o˚ss", 
pktgí_¥o˚ss
},

3050 {"g¨p", 
pktgí_g¨p
},

3051 {"blök", 
pktgí_blök
},

3052 {"hñp", 
pktgí_hñp
},

3053 {"Lua.hñp", 
pktgí_lua_hñp
},

3055 {"isSídög", 
pktgí_isSídög
},

3056 {"lökSèã", 
pktgí_lökSèã
},

3058 {"p‹tSizes", 
pktgí_p‹tSizes
},

3059 {"pktSèts", 
pktgí_pktSèts
},

3060 {"p‹tSèts", 
pktgí_p‹tSèts
},

3062 {"compûe", 
pktgí_compûe
},

3063 {"decompûe", 
pktgí_decompûe
},

3064 {"£ndPkt", 
pktgí_£ndPkt
},

3065 {"ªcvPkt", 
pktgí_ªcvPkt
},

3067 {"run", 
pktgí_run
},

3068 {"c⁄töue", 
pktgí_c⁄töue
},

3069 {"öput", 
pktgí_öput
},

3071 {"∑âîn", 
pktgí_∑âîn
},

3072 {"u£rP©ã∫", 
pktgí_u£r_∑âîn
},

3073 {"œãncy", 
pktgí_œãncy
},

3074 {"gçu_ãid", 
pktgí_gçu_ãid
},

3076 {
NULL
, NULL}

3093 
LUALIB_API
 

3094 
	$lua›í_pktgí
(
lua_Sèã
 *
L
) {

3095 
	`luaL_√wlib
(
L
, 
pktgílib
);

3097 
	`lua_push°rög
(
L
, "info");

3098 
	`lua_√wèbÀ
(
L
);

3100 
	`£tf_°rög
(
L
, "Lua_Vîsi⁄", (*)
LUA_VERSION
);

3101 
	`£tf_°rög
(
L
, "Lua_Rñó£", (*)
LUA_RELEASE
);

3102 
	`£tf_°rög
(
L
, "Lua_C›yright", (*)
LUA_COPYRIGHT
);

3103 
	`£tf_°rög
(
L
, "Lua_Auth‹s", (*)
LUA_AUTHORS
);

3105 
	`£tf_°rög
(
L
, "Pktgí_Vîsi⁄", (*)
PKTGEN_VERSION
);

3106 
	`£tf_°rög
(
L
, "Pktgí_C›yright", (*)
	`wr_c›yright_msg
());

3107 
	`£tf_°rög
(
L
,

3110 
	`£tf_°rög
(
L
, "DPDK_Vîsi⁄", (*)
	`πe_vîsi⁄
());

3111 
	`£tf_°rög
(
L
, "DPDK_C›yright", (*)
	`wr_powîed_by
());

3113 
	`£tf_öãgî
(
L
, "°¨tSeqIdx", 
FIRST_SEQ_PKT
);

3114 
	`£tf_öãgî
(
L
, "sögÀPktIdx", 
SINGLE_PKT
);

3115 
	`£tf_öãgî
(
L
, "øngePktIdx", 
RANGE_PKT
);

3116 
	`£tf_öãgî
(
L
, "pögPktIdx", 
PING_PKT
);

3117 
	`£tf_öãgî
(
L
, "°¨tExåaTxIdx", 
EXTRA_TX_PKT
);

3119 
	`£tf_öãgî
(
L
, "numSeqPkts", 
NUM_SEQ_PKTS
);

3120 
	`£tf_öãgî
(
L
, "numExåaTxPkts", 
NUM_EXTRA_TX_PKTS
);

3121 
	`£tf_öãgî
(
L
, "numTŸÆPkts", 
NUM_TOTAL_PKTS
);

3123 
	`£tf_öãgî
(
L
, "möPktSize", 
MIN_PKT_SIZE
 + 
FCS_SIZE
);

3124 
	`£tf_öãgî
(
L
, "maxPktSize", 
MAX_PKT_SIZE
 + 
FCS_SIZE
);

3125 
	`£tf_öãgî
(
L
, "möVœnID", 
MIN_VLAN_ID
);

3126 
	`£tf_öãgî
(
L
, "maxVœnID", 
MAX_VLAN_ID
);

3127 
	`£tf_öãgî
(
L
, "vœnTagSize", 
VLAN_TAG_SIZE
);

3128 
	`£tf_öãgî
(
L
, "mbufCacheSize", 
MBUF_CACHE_SIZE
);

3130 
	`£tf_öãgî
(
L
, "deÁu…PktBur°", 
DEFAULT_PKT_BURST
);

3131 
	`£tf_öãgî
(
L
, "deÁu…BuffSize", 
DEFAULT_BUFF_SIZE
);

3132 
	`£tf_öãgî
(
L
, "maxMbufsPîP‹t", 
MAX_MBUFS_PER_PORT
);

3133 
	`£tf_öãgî
(
L
, "maxPrimeCou¡", 
MAX_PRIME_COUNT
);

3136 
	`lua_øw£t
(
L
, -3);

3139 
	}
}

3154 
	$_lua_›ílib
(
lua_Sèã
 *
L
) {

3155 
	`lua_gc
(
L
, 
LUA_GCSTOP
, 0);

3157 
	`luaL_›ílibs
(
L
);

3159 
	`luaL_ªquúef
(
L
, 
LUA_PKTGENLIBNAME
, 
lua›í_pktgí
, 1);

3160 
	`lua_p›
(
L
, 1);

3162 
	`lua_gc
(
L
, 
LUA_GCRESTART
, 0);

3164 
	`as£π
(
	`dﬁibøry
(
L
, 
PKTGEN_SHORTCUTS
Ë=
LUA_OK
);

3165 
	}
}

	@app/lpktgenlib.h

67 #i‚de‡
LPKTGENLIB_H_


68 
	#LPKTGENLIB_H_


	)

70 
	#lua_c


	)

71 
	~<lua.h
>

72 
	~<œuxlib.h
>

74 
	#LUA_PKTGENLIBNAME
 "pktgí"

	)

75 
	#PKTGEN_SHORTCUTS
 "Pktgí"

	)

77 
LUALIB_API
 
lua›í_pktgí
(
lua_Sèã
 *
L
);

78 
pktgí_lua_›ílib
(
lua_Sèã
 *
L
);

80 
_lua_›ílib
(
lua_Sèã
 *
L
);

	@app/pktgen-arp.c

68 
	~"pktgí-¨p.h
"

70 
	~"pktgí.h
"

71 
	~"pktgí-cmds.h
"

72 
	~"pktgí-log.h
"

87 
	$pktgí_£nd_¨p
(
uöt32_t
 
pid
, uöt32_à
ty≥
, 
uöt8_t
 
£q_idx
)

89 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

90 
pkt_£q_t
 *
pkt
;

91 
πe_mbuf
 *
m
;

92 
ëhî_hdr
 *
ëh
;

93 
¨pPkt_t
 *
¨p
;

94 
uöt32_t
 
addr
;

95 
uöt8_t
 
qid
 = 0;

97 
pkt
 = &
öfo
->
£q_pkt
[
£q_idx
];

98 
m
 = 
	`πe_pktmbuf_Æloc
(
öfo
->
q
[
qid
].
•ecül_mp
);

99 i‡(
	`u∆ikñy
(
m
 =
NULL
) ) {

100 
	`pktgí_log_w¨nög
("NoÖacket buffers found");

103 
ëh
 = 
	`πe_pktmbuf_mtod
(
m
, 
ëhî_hdr
 *);

104 
¨p
 = (
¨pPkt_t
 *)&
ëh
[1];

107 
	`mem£t
(&
ëh
->
d_addr
, 0xFF, 6);

108 
	`ëhî_addr_c›y
(&
pkt
->
ëh_§c_addr
, &
ëh
->
s_addr
);

109 
ëh
->
ëhî_ty≥
 = 
	`ht⁄s
(
ETHER_TYPE_ARP
);

111 
	`mem£t
(
¨p
, 0, (
¨pPkt_t
));

113 
	`πe_mem˝y
(&
¨p
->
sha
, &
pkt
->
ëh_§c_addr
, 6);

114 
addr
 = 
	`ht⁄l
(
pkt
->
ù_§c_addr
.addr.
ùv4
.
s_addr
);

115 
	`öëAddrC›y
(&
¨p
->
•a
, &
addr
);

117 i‡(
	`likñy
(
ty≥
 =
GRATUITOUS_ARP
) ) {

118 
	`πe_mem˝y
(&
¨p
->
tha
, &
pkt
->
ëh_§c_addr
, 6);

119 
addr
 = 
	`ht⁄l
(
pkt
->
ù_§c_addr
.addr.
ùv4
.
s_addr
);

120 
	`öëAddrC›y
(&
¨p
->
ça
, &
addr
);

122 
	`mem£t
(&
¨p
->
tha
, 0, 6);

123 
addr
 = 
	`ht⁄l
(
pkt
->
ù_d°_addr
.addr.
ùv4
.
s_addr
);

124 
	`öëAddrC›y
(&
¨p
->
ça
, &
addr
);

128 
¨p
->
hrd
 = 
	`ht⁄s
(
ETH_HW_TYPE
);

129 
¨p
->
¥o
 = 
	`ht⁄s
(
ETHER_TYPE_IPv4
);

130 
¨p
->
h 
 = 6;

131 
¨p
->
∂n
 = 4;

132 
¨p
->
›
 = 
	`ht⁄s
(
ARP_REQUEST
);

134 
m
->
pkt_Àn
 = 60;

135 
m
->
d©a_Àn
 = 60;

137 
	`pktgí_£nd_mbuf
(
m
, 
pid
, 
qid
);

139 
	`pktgí_£t_q_Êags
(
öfo
, 
qid
, 
DO_TX_FLUSH
);

140 
	}
}

155 
	$pktgí_¥o˚ss_¨p
(
πe_mbuf
 *
m
, 
uöt32_t
 
pid
, uöt32_à
vœn
)

157 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

158 
pkt_£q_t
 *
pkt
;

159 
ëhî_hdr
 *
ëh
 = 
	`πe_pktmbuf_mtod
(
m
, ether_hdr *);

160 
¨pPkt_t
 *
¨p
 = (¨pPkt_à*)&
ëh
[1];

163 i‡(
vœn
)

164 
¨p
 = (
¨pPkt_t
 *)((*ÔΩ + (
vœn_hdr
));

167 i‡(
¨p
->
›
 =
	`ht⁄s
(
ARP_REQUEST
) ) {

168 i‡((
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
) &

169 
PROCESS_GARP_PKTS
) &&

170 (
¨p
->
ça
.
_32
 =¨p->
•a
._32) ) {

171 
pkt
 = 
	`pktgí_föd_m©chög_ùd°
(
öfo
, 
¨p
->
•a
.
_32
);

174 i‡(
pkt
) {

175 
	`πe_mem˝y
(&
pkt
->
ëh_d°_addr
, &
¨p
->
sha
, 6);

176 
	`pktgí_£t_q_Êags
(
öfo
,

177 
	`wr_gë_txque
(
pktgí
.
l2p
,

178 
	`πe_lc‹e_id
(),

179 
pid
),

180 
DO_TX_FLUSH
);

181 
	`pktgí_ªdi•œy
(0);

186 
pkt
 = 
	`pktgí_föd_m©chög_ù§c
(
öfo
, 
¨p
->
ça
.
_32
);

189 i‡(
	`likñy
(
pkt
 !
NULL
) ) {

191 i‡(
	`u∆ikñy
(
pktgí
.
Êags
 & 
MAC_FROM_ARP_FLAG
) ) {

192 
uöt32_t
 
i
;

194 
	`πe_mem˝y
(&
pkt
->
ëh_d°_addr
, &
¨p
->
sha
, 6);

195 
i
 = 0; i < 
öfo
->
£qC¡
; i++)

196 
	`pktgí_∑ckë_˘‹
(
öfo
, 
i
, -1);

200 
	`ëhAddrSw≠
(&
¨p
->
sha
, &¨p->
tha
);

203 
	`öëAddrSw≠
(&
¨p
->
ça
.
_32
, &¨p->
•a
._32);

206 
¨p
->
›
 = 
	`ht⁄s
(
ARP_REPLY
);

209 
	`ëhAddrSw≠
(&
ëh
->
d_addr
, &ëh->
s_addr
);

212 
	`πe_mem˝y
(&
¨p
->
sha
, &
pkt
->
ëh_§c_addr
, 6);

213 
	`πe_mem˝y
(&
ëh
->
s_addr
, &
pkt
->
ëh_§c_addr
, 6);

215 
	`pktgí_£nd_mbuf
(
m
, 
pid
, 0);

218 
	`pktgí_£t_q_Êags
(
öfo
, 0, 
DO_TX_FLUSH
);

223 } i‡(
¨p
->
›
 =
	`ht⁄s
(
ARP_REPLY
) ) {

224 
pkt
 = 
	`pktgí_föd_m©chög_ù§c
(
öfo
, 
¨p
->
ça
.
_32
);

227 i‡(
	`likñy
(
pkt
 !
NULL
) ) {

229 i‡(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
 =
	`¡ohl
(
¨p
->
•a
.
_32
) )

230 
	`πe_mem˝y
(&
pkt
->
ëh_d°_addr
, &
¨p
->
sha
, 6);

232 
pktgí
.
Êags
 |
PRINT_LABELS_FLAG
;

235 
	}
}

	@app/pktgen-arp.h

68 #i‚de‡
_PKTGEN_ARP_H_


69 
	#_PKTGEN_ARP_H_


	)

71 
	~<°döt.h
>

73 
	~<πe_mbuf.h
>

75 
pktgí_£nd_¨p
(
uöt32_t
 
pid
, uöt32_à
ty≥
, 
uöt8_t
 
£q_idx
);

76 
pktgí_¥o˚ss_¨p
(
πe_mbuf
 *
m
, 
uöt32_t
 
pid
, uöt32_à
vœn
);

	@app/pktgen-capture.c

68 
	~"pktgí-ˇ±uª.h
"

69 
	~<time.h
>

71 
	~<πe_mem˝y.h
>

72 
	~<πe_memz⁄e.h
>

73 
	~<πe_°rög_‚s.h
>

75 
	~"pktgí-cmds.h
"

76 
	~"pktgí-log.h
"

77 
	~"pktgí-di•œy.h
"

97 
	$pktgí_∑ckë_ˇ±uª_öô
(
ˇ±uª_t
 *
ˇ±uª
, 
sockë_id
)

99 
memz⁄e_«me
[
RTE_MEMZONE_NAMESIZE
];

101 i‡(!
ˇ±uª
)

104 
ˇ±uª
->
lc‹e
 = 
RTE_MAX_LCORE
;

105 
ˇ±uª
->
p‹t
 = 
RTE_MAX_ETHPORTS
;

106 
ˇ±uª
->
u£d
 = 0;

108 
	`¢¥ötf
(
memz⁄e_«me
, (memzone_name), "Capture_MZ_%d",

109 
sockë_id
);

110 
ˇ±uª
->
mz
 = 
	`πe_memz⁄e_ª£rve
(
memz⁄e_«me
,

112 
sockë_id
,

113 
RTE_MEMZONE_1GB
 |

114 
RTE_MEMZONE_SIZE_HINT_ONLY
);

115 
	}
}

135 
	$pktgí_£t_ˇ±uª
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

137 
ˇ±uª_t
 *
ˇp
;

139 i‡(
⁄Off
 =
ENABLE_STATE
) {

141 i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
CAPTURE_PKTS
)

144 i‡(
	`wr_gë_p‹t_rx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
) == 0) {

145 
	`pktgí_log_w¨nög
(

147 
öfo
->
pid
);

152 
uöt8_t
 
lid_idx
, 
lid
, 
rxid
;

153 
lid_idx
 = 0;

154 
lid_idx
 < 
	`wr_gë_p‹t_nb_lids
(
pktgí
.
l2p
, 
öfo
->
pid
);

155 ++
lid_idx
) {

156 
lid
 = 
	`wr_gë_p‹t_lid
(
pktgí
.
l2p
, 
öfo
->
pid
, 
lid_idx
);

157 
rxid
 = 0;

158 
rxid
 < 
	`wr_gë_lc‹e_rx˙t
(
pktgí
.
l2p
, 
lid
); ++rxid)

159 i‡(
	`wr_gë_rx_pid
(
pktgí
.
l2p
, 
lid
,

160 
rxid
Ë=
öfo
->
pid
)

161 
found_rx_lid
;

163 
lid
 = 
RTE_MAX_LCORE
;

165 
found_rx_lid
:

166 i‡(
lid
 =
RTE_MAX_LCORE
) {

167 
	`pktgí_log_w¨nög
(

169 
öfo
->
pid
);

174 
uöt8_t
 
sid
 = 
pktgí
.
c‹e_öfo
[
lid
].
s
.
sockë_id
;

175 i‡(
pktgí
.
ˇ±uª
[
sid
].
mz
 =
NULL
) {

176 
	`pktgí_log_w¨nög
(

178 
sid
);

182 
ˇp
 = &
pktgí
.
ˇ±uª
[
sid
];

184 i‡(
ˇp
->
lc‹e
 !
RTE_MAX_LCORE
) {

185 
	`pktgí_log_w¨nög
(

187 
ˇp
->
lc‹e
,

188 
sid
);

193 
ˇp
->
u£d
 = 0;

194 
ˇp
->
lc‹e
 = 
lid
;

195 
ˇp
->
p‹t
 = 
öfo
->
pid
;

196 
ˇp
->
èû
 = (
ˇp_hdr_t
 *)ˇp->
mz
->
addr
;

197 
ˇp
->
íd
 =

198 (
ˇp_hdr_t
 *)((*)
ˇp
->
mz
->
addr
 +

199 (
ˇp
->
mz
->
Àn
 - (
ˇp_hdr_t
)));

203 
	`mem£t
(
ˇp
->
èû
, 0, (
ˇp_hdr_t
));

204 
	`mem£t
(
ˇp
->
íd
, 0, (
ˇp_hdr_t
));

206 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
CAPTURE_PKTS
);

208 
	`pktgí_log_öfo
(

210 
öfo
->
pid
,

211 
lid
,

212 
sid
,

213 ()
ˇp
->
mz
->
Àn
 / (1024 * 1024),

214 ()
ˇp
->
mz
->
Àn
 /

217 * (()
öfo
->
lök
.
lök_•ìd
 * 1000 *

223 i‡(!(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
CAPTURE_PKTS
))

228 i‡(
	`wr_gë_p‹t_rx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
) == 0) {

229 
	`pktgí_log_w¨nög
(

231 
öfo
->
pid
);

235 
sid
;

236 
sid
 = 0; sid < 
RTE_MAX_NUMA_NODES
; ++sid) {

237 
ˇp
 = &
pktgí
.
ˇ±uª
[
sid
];

238 i‡(
ˇp
->
mz
 && (ˇp->
p‹t
 =
öfo
->
pid
))

243 i‡(
sid
 =
RTE_MAX_NUMA_NODES
) {

244 
	`pktgí_log_îr‹
("CouldÇot find socket forÖort %d",

245 
öfo
->
pid
);

250 i‡(
ˇp
->
u£d
 > 0) {

251 
pˇp_t
 *
pˇp
;

252 
pˇp_dum≥r_t
 *
pˇp_dum≥r
;

253 
pˇp_pkthdr
 
pˇp_hdr
;

254 
ˇp_hdr_t
 *
hdr
;

255 
time_t
 
t
;

256 
fûíame
[64];

257 
°r_time
[64];

258 
size_t
 
mem_dum≥d
 = 0;

259 
p˘
 = 0;

261 
°©us
[256];

262 
	`•rötf
(
°©us
,

264 ()
ˇp
->
u£d
 / (1024 * 1024));

265 
	`πe_¥ötf_°©us
("\n%s", 
°©us
);

267 
pˇp
 = 
	`pˇp_›í_dód
(
DLT_EN10MB
, 65535);

269 
t
 = 
	`time
(
NULL
);

270 
	`°r·ime
(
°r_time
,

271 (
°r_time
),

273 
	`loˇ…ime
(&
t
));

274 
	`¢¥ötf
(
fûíame
,

275 (
fûíame
),

277 
°r_time
,

278 
ˇp
->
p‹t
);

279 
pˇp_dum≥r
 = 
	`pˇp_dump_›í
(
pˇp
, 
fûíame
);

281 
hdr
 = (
ˇp_hdr_t
 *)
ˇp
->
mz
->
addr
;

283 
hdr
->
pkt_Àn
) {

284 
pˇp_hdr
.
ts
.
tv_£c
 = 0;

285 
pˇp_hdr
.
ts
.
tv_u£c
 = 0;

286 
pˇp_hdr
.
Àn
 = 
hdr
->
pkt_Àn
;

287 
pˇp_hdr
.
ˇ∂í
 = 
hdr
->
d©a_Àn
;

289 
	`pˇp_dump
((
u_ch¨
 *)
pˇp_dum≥r
, &
pˇp_hdr
,

290 (c⁄° 
u_ch¨
 *)
hdr
->
pkt
);

292 
hdr
 = (
ˇp_hdr_t
 *)(hdr->
pkt
 + hdr->
d©a_Àn
);

294 
mem_dum≥d
 = 
hdr
->
pkt
 -

295 (*)
ˇp
->
mz
->
addr
;

299 i‡(
p˘
 < ((
mem_dum≥d
 * 100Ë/ 
ˇp
->
u£d
) ) {

300 
p˘
 = (
mem_dum≥d
 * 100Ë/ 
ˇp
->
u£d
;

302 i‡(
p˘
 % 10 == 0)

303 
	`°∫ˇtf
(
°©us
, "%d%%", 
p˘
);

304 i‡(
p˘
 % 2 == 0)

305 
	`°∫ˇtf
(
°©us
, ".");

307 
	`πe_¥ötf_°©us
("%s", 
°©us
);

310 
	`πe_¥ötf_°©us
("\r");

311 
	`πe_¥ötf_°©us
("\n");

313 
	`pˇp_dump_˛o£
(
pˇp_dum≥r
);

314 
	`pˇp_˛o£
(
pˇp
);

317 
ˇp
->
u£d
 = 0;

318 
ˇp
->
èû
 = (
ˇp_hdr_t
 *)ˇp->
mz
->
addr
;

319 
ˇp
->
lc‹e
 = 
RTE_MAX_LCORE
;

320 
ˇp
->
p‹t
 = 
RTE_MAX_ETHPORTS
;

322 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
CAPTURE_PKTS
);

324 
	}
}

345 
	$pktgí_∑ckë_ˇ±uª_bulk
(
πe_mbuf
 **
pkts
,

346 
uöt32_t
 
nb_dump
,

347 
ˇ±uª_t
 *
ˇp
)

349 
uöt32_t
 
∂í
, 
i
;

350 
πe_mbuf
 *
pkt
;

353 i‡(
ˇp
->
èû
 =ˇp->
íd
)

356 
i
 = 0; i < 
nb_dump
; i++) {

357 
pkt
 = 
pkts
[
i
];

363 
∂í
 = (
pkt
->
d©a_Àn
 + 1) & ~1;

371 i‡((
ˇp_hdr_t
 *)(
ˇp
->
èû
->
pkt
 + 
∂í
Ë> c≠->
íd
)

376 
ˇp
->
èû
->
pkt_Àn
 = 
pkt
->pkt_len;

377 
ˇp
->
èû
->
d©a_Àn
 = 
∂í
;

379 
	`πe_mem˝y
(
ˇp
->
èû
->
pkt
,

380 (
uöt8_t
 *)
pkt
->
buf_addr
 +Ökt->
d©a_off
,

381 
pkt
->
pkt_Àn
);

382 
ˇp
->
èû
 = (
ˇp_hdr_t
 *)(ˇp->èû->
pkt
 + 
∂í
);

386 
ˇp
->
èû
->
pkt_Àn
 = 0;

387 
ˇp
->
u£d
 = (*)ˇp->
èû
 - (*)ˇp->
mz
->
addr
;

388 
	}
}

	@app/pktgen-capture.h

68 #i‚de‡
_PKTGEN_CAPTURE_H_


69 
	#_PKTGEN_CAPTURE_H_


	)

71 
	~<°ddef.h
>

72 
	~<öây≥s.h
>

74 
	~<πe_memz⁄e.h
>

75 
	~<πe_mbuf.h
>

77 
	~"pktgí-p‹t-cfg.h
"

79 
	sˇp_hdr_s
 {

80 
uöt16_t
 
	mpkt_Àn
;

81 
uöt16_t
 
	md©a_Àn
;

82 
uöt8_t
 
	mpkt
[0];

83 } 
	tˇp_hdr_t
;

86 
	sˇ±uª_s
 {

87 c⁄° 
πe_memz⁄e
 *
	mmz
;

88 
ˇp_hdr_t
 *
	mèû
;

89 
ˇp_hdr_t
 *
	míd
;

90 
size_t
 
	mu£d
;

91 
uöt8_t
 
	mlc‹e
;

92 
uöt8_t
 
	mp‹t
;

93 } 
	tˇ±uª_t
;

96 
pktgí_∑ckë_ˇ±uª_öô
(
ˇ±uª_t
 *
ˇ±uª
, 
sockë_id
);

99 
pktgí_£t_ˇ±uª
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

102 
pktgí_∑ckë_ˇ±uª_bulk
(
πe_mbuf
 **
pkts
,

103 
uöt32_t
 
nb_dump
,

104 
ˇ±uª_t
 *
ˇ±uª
);

	@app/pktgen-cmds.c

68 
	~"pktgí-cmds.h
"

70 
	~"pktgí-di•œy.h
"

71 
	~"pktgí.h
"

72 
	~"pktgí-log.h
"

87 
	$pktgí_ßve
(*
∑th
)

89 
p‹t_öfo_t
 *
öfo
;

90 
pkt_£q_t
 *
pkt
;

91 
ønge_öfo_t
 *
ønge
;

92 
uöt32_t
 
Êags
;

93 
buff
[64];

94 
FILE
 *
fd
;

95 
i
, 
j
;

96 
uöt64_t
 
lc‹e
;

97 
ëhî_addr
 
óddr
;

99 
fd
 = 
	`f›í
(
∑th
, "w");

100 i‡(
fd
 =
NULL
)

103 
i
 = 0, 
lc‹e
 = 0; i < 
RTE_MAX_LCORE
; i++)

104 i‡(
	`πe_lc‹e_is_íabÀd
(
i
) )

105 
lc‹e
 |(1 << 
i
);

107 
	`Ârötf
(
fd
, "#\n# Pktgí - %s\n", 
	`pktgí_vîsi⁄
());

108 
	`Ârötf
(
fd
, "# %s, %s\n\n", 
	`wr_c›yright_msg
(), 
	`wr_powîed_by
());

111 
	`Ârötf
(
fd
, "# CommandÜineárguments: (DPDKárgsáre defaults)\n");

112 
	`Ârötf
(
fd
,

114 
pktgí
.
¨gv
[0],

115 
lc‹e
,

116 (
	`πe_ól_¥o˚ss_ty≥
() ==

117 
RTE_PROC_PRIMARY
) ? "primary" : "secondary");

118 
i
 = 1; i < 
pktgí
.
¨gc
; i++)

119 
	`Ârötf
(
fd
, "%†", 
pktgí
.
¨gv
[
i
]);

120 
	`Ârötf
(
fd
, "\n\n");

122 
	`Ârötf
(
fd
,

124 
	`Ârötf
(
fd
, "# Pktgen Configuration script information:\n");

125 
	`Ârötf
(
fd
,

127 (
pktgí
.
Êags
 & 
ENABLE_GUI_FLAG
) ? "Enabled" : "Not Enabled");

128 
	`Ârötf
(
fd
, "# Fœg†%08x\n", 
pktgí
.
Êags
);

129 
	`Ârötf
(
fd
, "# Numbî o‡p‹ts: %d\n", 
pktgí
.
nb_p‹ts
);

130 
	`Ârötf
(
fd
, "# NumberÖortsÖerÖage: %d\n",

131 
pktgí
.
nb_p‹ts_≥r_∑ge
);

132 
	`Ârötf
(
fd
,

134 
pktgí
.
nb_rxd
,

135 
pktgí
.
nb_txd
);

136 
	`Ârötf
(
fd
, "# Promiscuous mode is %s\n\n",

137 (
pktgí
.
Êags
 & 
PROMISCUOUS_ON_FLAG
) ? "Enabled" : "Disabled");

140 
	`Ârötf
(
fd
, "# Port Descriptions (-- = blacklistedÖort):\n");

141 
i
 = 0; i < 
RTE_MAX_ETHPORTS
; i++)

142 i‡(
pktgí
.
p‹tdesc
[
i
] && 
	`°æí
((*)pktgen.portdesc[i]) ) {

143 i‡–(
pktgí
.
íabÀd_p‹t_mask
 & (1 << 
i
)) == 0)

144 
	`°r˝y
(
buff
, "--");

146 
	`°r˝y
(
buff
, "++");

148 
	`Ârötf
(
fd
, "# %†%s\n", 
buff
, 
pktgí
.
p‹tdesc
[
i
]);

152 
	`Ârötf
(
fd
,

155 
	`Ârötf
(
fd
, "# Global configuration:\n");

156 
uöt16_t
 
rows
, 
cﬁs
;

157 
	`pktgí_di•œy_gë_geomëry
(&
rows
, &
cﬁs
);

158 
	`Ârötf
(
fd
, "geomëry %dx%d\n", 
cﬁs
, 
rows
);

159 
	`Ârötf
(
fd
,

161 (
pktgí
.
Êags
 & 
MAC_FROM_ARP_FLAG
) ? "enable" : "disable");

163 
i
 = 0; i < 
RTE_MAX_ETHPORTS
; i++) {

164 
öfo
 = &
pktgí
.öfo[
i
];

165 
pkt
 = &
öfo
->
£q_pkt
[
SINGLE_PKT
];

166 
ønge
 = &
öfo
->range;

168 i‡(
öfo
->
tx_bur°
 == 0)

171 
	`Ârötf
(
fd
,

173 
i
);

174 i‡(
	`πe_©omic64_ªad
(&
öfo
->
å™smô_cou¡
) == 0)

175 
	`°r˝y
(
buff
, "Forever");

177 
	`¢¥ötf
(
buff
, (buff), "%ld",

178 
	`πe_©omic64_ªad
(&
öfo
->
å™smô_cou¡
));

179 
	`Ârötf
(
fd
, "#\n");

180 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

181 
	`Ârötf
(
fd
,

183 
öfo
->
pid
,

184 
öfo
->
tx_bur°
,

185 
öfo
->
tx_øã
,

186 
Êags
,

187 
buff
);

188 
	`Ârötf
(
fd
, "# SeqCnt:%d, Prime:%d VLAN ID:%04x, ",

189 
öfo
->
£qC¡
, info->
¥ime_˙t
, info->
vœnid
);

190 
	`pktgí_lök_°©e
(
öfo
->
pid
, 
buff
, (buff));

191 
	`Ârötf
(
fd
, "Lök: %s\n", 
buff
);

193 
	`Ârötf
(
fd
, "#\n# Set upÅheÖrimaryÖort information:\n");

194 
	`Ârötf
(
fd
, "£à%d cou¡ %ld\n", 
öfo
->
pid
,

195 
	`πe_©omic64_ªad
(&
öfo
->
å™smô_cou¡
));

196 
	`Ârötf
(
fd
,

198 
öfo
->
pid
,

199 
pkt
->
pktSize
 + 
FCS_SIZE
);

200 
	`Ârötf
(
fd
, "£à%dÑ©ê%d\n", 
öfo
->
pid
, info->
tx_øã
);

201 
	`Ârötf
(
fd
, "£à%d bur° %d\n", 
öfo
->
pid
, info->
tx_bur°
);

202 
	`Ârötf
(
fd
, "£à%d sp‹à%d\n", 
öfo
->
pid
, 
pkt
->
•‹t
);

203 
	`Ârötf
(
fd
, "£à%d dp‹à%d\n", 
öfo
->
pid
, 
pkt
->
dp‹t
);

204 
	`Ârötf
(
fd
, "£à%dÖrimê%d\n", 
öfo
->
pid
, info->
¥ime_˙t
);

205 
	`Ârötf
(
fd
, "type %s %d\n",

206 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv4
) ? "ipv4" :

207 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv6
) ? "ipv6" :

208 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_VLAN
) ? "vlan" :

209 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_ARP
) ? "arp" : "unknown",

210 
i
);

211 
	`Ârötf
(
fd
, "proto %s %d\n",

212 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_TCP
) ? "tcp" :

213 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_ICMP
Ë? "icmp" : "udp", 
i
);

214 
	`Ârötf
(
fd
, "£àù d° %d %s\n", 
i
,

215 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
),

217 
	`Ârötf
(
fd
, "£àù sr¯%d %s\n", 
i
,

218 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
),

219 
pkt
->
ù_mask
));

220 
	`Ârötf
(
fd
, "£àma¯%d %s\n", 
öfo
->
pid
,

221 
	`öë_mtﬂ
(
buff
, (buff), &
pkt
->
ëh_d°_addr
));

222 
	`Ârötf
(
fd
, "vœnid %d %d\n\n", 
i
, 
pkt
->
vœnid
);

224 
	`Ârötf
(
fd
,

226 
i
,

227 (
öfo
->
fûl_∑âîn_ty≥
 =
ABC_FILL_PATTERN
) ? "abc" :

228 (
öfo
->
fûl_∑âîn_ty≥
 =
NO_FILL_PATTERN
) ? "none" :

229 (
öfo
->
fûl_∑âîn_ty≥
 ==

230 
ZERO_FILL_PATTERN
) ? "zero" : "user");

231 i‡(
	`°æí
(
öfo
->
u£r_∑âîn
) )

232 
	`Ârötf
(
fd
,

234 
i
,

235 
öfo
->
u£r_∑âîn
);

236 
	`Ârötf
(
fd
, "\n");

238 i‡(
	`°æí
(
öfo
->
dns_domaö
) )

239 
	`Ârötf
(
fd
,

241 
i
,

242 
öfo
->
dns_domaö
);

243 
	`Ârötf
(
fd
, "\n");

245 
	`Ârötf
(
fd
,

247 
i
,

248 (
Êags
 & 
SEND_LATENCY_PKTS
) ? "enable" : "disable");

250 
	`Ârötf
(
fd
,

252 
i
,

253 (
Êags
 & 
SEND_MPLS_LABEL
) ? "en" : "dis");

254 
	`•rötf
(
buff
, "%x", 
pkt
->
m∂s_íåy
);

255 
	`Ârötf
(
fd
, "m∂s_íåy %d %s\n", 
i
, 
buff
);

257 
	`Ârötf
(
fd
,

259 
i
,

260 (
Êags
 & 
SEND_Q_IN_Q_IDS
) ? "en" : "dis");

261 
	`Ârötf
(
fd
,

263 
i
,

264 
pkt
->
qöq_ouãrid
,

265 
pkt
->
qöq_ö√rid
);

267 
	`Ârötf
(
fd
,

269 
i
,

270 (
Êags
 & 
SEND_GRE_IPv4_HEADER
) ? "en" : "dis");

271 
	`Ârötf
(
fd
, "gª_ëh %d %ßbÀ\n", 
i
,

272 (
Êags
 & 
SEND_GRE_ETHER_HEADER
) ? "en" : "dis");

273 
	`Ârötf
(
fd
, "gª_key %d %d\n", 
i
, 
pkt
->
gª_key
);

275 
	`Ârötf
(
fd
, "#\n# Port flag values:\n");

276 
	`Ârötf
(
fd
, "icmp.echÿ%d %ßbÀ\n", 
i
,

277 (
Êags
 & 
ICMP_ECHO_ENABLE_FLAG
) ? "en" : "dis");

278 
	`Ârötf
(
fd
,

280 
i
,

281 (
Êags
 & 
SEND_PCAP_PKTS
) ? "en" : "dis");

282 
	`Ârötf
(
fd
,

284 
i
,

285 (
Êags
 & 
SEND_RANGE_PKTS
) ? "en" : "dis");

286 
	`Ârötf
(
fd
, "¥o˚s†%d %ßbÀ\n", 
i
,

287 (
Êags
 & 
PROCESS_INPUT_PKTS
) ? "en" : "dis");

288 
	`Ârötf
(
fd
,

290 
i
,

291 (
Êags
 & 
CAPTURE_PKTS
) ? "en" : "dis");

292 
	`Ârötf
(
fd
,

294 
i
,

295 (
Êags
 & 
PROCESS_RX_TAP_PKTS
) ? "en" : "dis");

296 
	`Ârötf
(
fd
,

298 
i
,

299 (
Êags
 & 
PROCESS_TX_TAP_PKTS
) ? "en" : "dis");

300 
	`Ârötf
(
fd
,

302 
i
,

303 (
Êags
 & 
SEND_VLAN_ID
) ? "en" : "dis");

305 
	`Ârötf
(
fd
, "#\n# RangeÖacket information:\n");

306 
	`Ârötf
(
fd
, "§c.ma¯°¨à%d %s\n", 
i
,

307 
	`öë_mtﬂ
(
buff
, (buff),

308 
	`öë_h64tom
(
ønge
->
§c_mac
, &
óddr
)));

309 
	`Ârötf
(
fd
, "§c.ma¯mö %d %s\n", 
i
,

310 
	`öë_mtﬂ
(
buff
, (buff),

311 
	`öë_h64tom
(
ønge
->
§c_mac_mö
, &
óddr
)));

312 
	`Ârötf
(
fd
, "§c.ma¯max %d %s\n", 
i
,

313 
	`öë_mtﬂ
(
buff
, (buff),

314 
	`öë_h64tom
(
ønge
->
§c_mac_max
, &
óddr
)));

315 
	`Ârötf
(
fd
, "§c.ma¯ö¯%d %s\n", 
i
,

316 
	`öë_mtﬂ
(
buff
, (buff),

317 
	`öë_h64tom
(
ønge
->
§c_mac_öc
, &
óddr
)));

319 
	`Ârötf
(
fd
, "d°.ma¯°¨à%d %s\n", 
i
,

320 
	`öë_mtﬂ
(
buff
, (buff),

321 
	`öë_h64tom
(
ønge
->
d°_mac
, &
óddr
)));

322 
	`Ârötf
(
fd
, "d°.ma¯mö %d %s\n", 
i
,

323 
	`öë_mtﬂ
(
buff
, (buff),

324 
	`öë_h64tom
(
ønge
->
d°_mac_mö
, &
óddr
)));

325 
	`Ârötf
(
fd
, "d°.ma¯max %d %s\n", 
i
,

326 
	`öë_mtﬂ
(
buff
, (buff),

327 
	`öë_h64tom
(
ønge
->
d°_mac_max
, &
óddr
)));

328 
	`Ârötf
(
fd
, "d°.ma¯ö¯%d %s\n", 
i
,

329 
	`öë_mtﬂ
(
buff
, (buff),

330 
	`öë_h64tom
(
ønge
->
d°_mac_öc
, &
óddr
)));

332 
	`Ârötf
(
fd
, "\n");

333 
	`Ârötf
(
fd
, "§c.ù sèπ %d %s\n", 
i
,

334 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
ønge
->
§c_ù
),

336 
	`Ârötf
(
fd
, "§c.ù mö %d %s\n", 
i
,

337 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
ønge
->
§c_ù_mö
),

339 
	`Ârötf
(
fd
, "§c.ù max %d %s\n", 
i
,

340 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
ønge
->
§c_ù_max
),

342 
	`Ârötf
(
fd
, "§c.ù in¯%d %s\n", 
i
,

343 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
ønge
->
§c_ù_öc
),

346 
	`Ârötf
(
fd
, "\n");

347 
	`Ârötf
(
fd
, "d°.ù sèπ %d %s\n", 
i
,

348 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
ønge
->
d°_ù
),

350 
	`Ârötf
(
fd
, "d°.ù mö %d %s\n", 
i
,

351 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
ønge
->
d°_ù_mö
),

353 
	`Ârötf
(
fd
, "d°.ù max %d %s\n", 
i
,

354 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
ønge
->
d°_ù_max
),

356 
	`Ârötf
(
fd
, "d°.ù in¯%d %s\n", 
i
,

357 
	`öë_¡›4
(
buff
, (buff), 
	`¡ohl
(
ønge
->
d°_ù_öc
),

360 
	`Ârötf
(
fd
, "\n");

361 
	`Ârötf
(
fd
, "§c.p‹à°¨à%d %d\n", 
i
, 
ønge
->
§c_p‹t
);

362 
	`Ârötf
(
fd
, "§c.p‹àmö %d %d\n", 
i
, 
ønge
->
§c_p‹t_mö
);

363 
	`Ârötf
(
fd
, "§c.p‹àmax %d %d\n", 
i
, 
ønge
->
§c_p‹t_max
);

364 
	`Ârötf
(
fd
, "§c.p‹àö¯%d %d\n", 
i
, 
ønge
->
§c_p‹t_öc
);

366 
	`Ârötf
(
fd
, "\n");

367 
	`Ârötf
(
fd
, "d°.p‹à°¨à%d %d\n", 
i
, 
ønge
->
d°_p‹t
);

368 
	`Ârötf
(
fd
, "d°.p‹àmö %d %d\n", 
i
, 
ønge
->
d°_p‹t_mö
);

369 
	`Ârötf
(
fd
, "d°.p‹àmax %d %d\n", 
i
, 
ønge
->
d°_p‹t_max
);

370 
	`Ârötf
(
fd
, "d°.p‹àö¯%d %d\n", 
i
, 
ønge
->
d°_p‹t_öc
);

372 
	`Ârötf
(
fd
, "\n");

373 
	`Ârötf
(
fd
, "vœn.id sèπ %d %d\n", 
i
, 
ønge
->
vœn_id
);

374 
	`Ârötf
(
fd
, "vœn.id mö %d %d\n", 
i
, 
ønge
->
vœn_id_mö
);

375 
	`Ârötf
(
fd
, "vœn.id max %d %d\n", 
i
, 
ønge
->
vœn_id_max
);

376 
	`Ârötf
(
fd
, "vœn.id in¯%d %d\n", 
i
, 
ønge
->
vœn_id_öc
);

378 
	`Ârötf
(
fd
, "\n");

379 
	`Ârötf
(
fd
,

381 
i
,

382 
ønge
->
pkt_size
 + 
FCS_SIZE
);

383 
	`Ârötf
(
fd
,

385 
i
,

386 
ønge
->
pkt_size_mö
 + 
FCS_SIZE
);

387 
	`Ârötf
(
fd
,

389 
i
,

390 
ønge
->
pkt_size_max
 + 
FCS_SIZE
);

391 
	`Ârötf
(
fd
, "pkt.sizêö¯%d %d\n\n", 
i
, 
ønge
->
pkt_size_öc
);

393 
	`Ârötf
(
fd
, "#\n# Set upÅhe sequence data forÅheÖort.\n");

394 
	`Ârötf
(
fd
, "£à%d seqC¡ %d\n", 
öfo
->
pid
, info->
£qC¡
);

395 
j
 = 0; j < 
öfo
->
£qC¡
; j++) {

396 
pkt
 = &
öfo
->
£q_pkt
[
j
];

397 
	`Ârötf
(
fd
, "£q %d %d %†", 
j
, 
i
,

398 
	`öë_mtﬂ
(
buff
,

399 (
buff
),

400 &
pkt
->
ëh_d°_addr
));

401 
	`Ârötf
(
fd
, "%s ",

402 
	`öë_mtﬂ
(
buff
,

403 (
buff
),

404 &
pkt
->
ëh_§c_addr
));

405 
	`Ârötf
(
fd
, "%s ",

406 
	`öë_¡›4
(
buff
, (buff),

407 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
),

409 
	`Ârötf
(
fd
, "%s ",

410 
	`öë_¡›4
(
buff
, (buff),

411 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
),

412 
pkt
->
ù_mask
));

413 
	`Ârötf
(
fd
,

415 
pkt
->
•‹t
,

416 
pkt
->
dp‹t
,

417 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv4
) ? "ipv4" :

418 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv6
) ? "ipv6" :

419 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_VLAN
) ? "vlan" : "Other",

420 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_TCP
) ? "tcp" :

421 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_ICMP
) ? "icmp" : "udp",

422 
pkt
->
vœnid
,

423 
pkt
->
pktSize
 + 
FCS_SIZE
);

426 i‡(
pktgí
.
öfo
[
i
].
pˇp
) {

427 
	`Ârötf
(
fd
, "#\n# PCAPÖ‹à%d\n", 
i
);

428 
	`Ârötf
(
fd
,

430 
pktgí
.
öfo
[
i
].
pˇp
->
pkt_cou¡
);

431 
	`Ârötf
(
fd
,

433 
pktgí
.
öfo
[
i
].
pˇp
->
fûíame
);

435 
	`Ârötf
(
fd
, "\n");

437 
	`Ârötf
(
fd
,

440 
	`f˛o£
(
fd
);

442 
	}
}

457 
	$pktgí_p‹t_å™smôtög
(
p‹t
)

459  
	`πe_©omic32_ªad
(&
pktgí
.
öfo
[
p‹t
].
p‹t_Êags
) &

460 
SENDING_PACKETS
;

461 
	}
}

476 
	$pktgí_lök_°©e
(
p‹t
, *
buff
, 
Àn
)

478 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
p‹t
];

480 i‡(
öfo
->
lök
.
lök_°©us
)

481 
	`¢¥ötf
(
buff
, 
Àn
, "<UP-%u-%s>",

482 (
uöt32_t
)
öfo
->
lök
.
lök_•ìd
,

483 (
öfo
->
lök
.
lök_du∂ex
 ==

484 
ETH_LINK_FULL_DUPLEX
) ? ("FD") : ("HD"));

486 
	`¢¥ötf
(
buff
, 
Àn
, "<--Down-->");

488  
buff
;

489 
	}
}

504 
	$pktgí_å™smô_cou¡_øã
(
p‹t
, *
buff
, 
Àn
)

506 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
p‹t
];

508 i‡(
	`πe_©omic64_ªad
(&
öfo
->
å™smô_cou¡
) == 0)

509 
	`¢¥ötf
(
buff
, 
Àn
, "F‹evî /%4d%%", 
öfo
->
tx_øã
);

511 
	`¢¥ötf
(
buff
, 
Àn
, "%ld /%4d%%",

512 
	`πe_©omic64_ªad
(&
öfo
->
å™smô_cou¡
),

513 
öfo
->
tx_øã
);

515  
buff
;

516 
	}
}

531 
	$pktgí_p‹t_sizes
(
p‹t
, 
p‹t_sizes_t
 *
psizes
)

533 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
p‹t
];

535 *
psizes
 = 
öfo
->
sizes
;

537 
	}
}

552 
	$pktgí_pkt_°©s
(
p‹t
, 
pkt_°©s_t
 *
p°©s
)

554 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
p‹t
];

556 *
p°©s
 = 
öfo
->
°©s
;

558 
	}
}

573 
	$pktgí_p‹t_°©s
(
p‹t
, c⁄° *
«me
, 
ëh_°©s_t
 *
p°©s
)

575 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
p‹t
];

577 i‡(
	`°rcmp
(
«me
, "port") == 0)

578 *
p°©s
 = 
öfo
->
p‹t_°©s
;

579 i‡(
	`°rcmp
(
«me
, "rate") == 0)

580 *
p°©s
 = 
öfo
->
øã_°©s
;

583 
	}
}

598 
	$pktgí_Êags_°rög
(
p‹t_öfo_t
 *
öfo
)

600 
buff
[32];

601 
uöt32_t
 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

603 
	`¢¥ötf
(
buff
, (buff), "%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c",

604 (
pktgí
.
Êags
 & 
PROMISCUOUS_ON_FLAG
) ? 'P' : '-',

605 (
Êags
 & 
ICMP_ECHO_ENABLE_FLAG
) ? 'E' : '-',

606 (
Êags
 & 
SEND_ARP_REQUEST
) ? 'A' : '-',

607 (
Êags
 & 
SEND_GRATUITOUS_ARP
) ? 'G' : '-',

608 (
Êags
 & 
SEND_PCAP_PKTS
) ? 'p' : '-',

609 (
Êags
 & 
SEND_SEQ_PKTS
) ? 'S' : '-',

610 (
Êags
 & 
SEND_RANGE_PKTS
) ? 'R' : '-',

611 (
Êags
 & 
PROCESS_INPUT_PKTS
) ? 'I' : '-',

612 "-π*"[(
Êags
 & (
PROCESS_RX_TAP_PKTS
 | 
PROCESS_TX_TAP_PKTS
)) >>

614 (
Êags
 & 
SEND_LATENCY_PKTS
) ? 'L' : '-',

615 (
Êags
 & 
SEND_VLAN_ID
) ? 'V' :

616 (
Êags
 & 
SEND_MPLS_LABEL
) ? 'M' :

617 (
Êags
 & 
SEND_Q_IN_Q_IDS
) ? 'Q' : '-',

618 (
Êags
 & 
PROCESS_GARP_PKTS
) ? 'g' : '-',

619 (
Êags
 & 
SEND_GRE_IPv4_HEADER
) ? 'g' :

620 (
Êags
 & 
SEND_GRE_ETHER_HEADER
) ? 'G' : '-',

621 (
Êags
 & 
CAPTURE_PKTS
) ? 'C' : '-',

622 (
Êags
 & 
SEND_RANDOM_PKTS
) ? 'R' : '-');

624  
buff
;

625 
	}
}

640 
	$pktgí_ªdi•œy
(
˛s_Êag
)

642 i‡(
	`wr_s¸n_is_∑u£d
() )

645 
	`wr_s¸n_∑u£
();

646 i‡(
˛s_Êag
) {

647 
	`wr_s¸n_˛s
();

648 
	`wr_s¸n_pos
(100, 1);

650 
pktgí
.
Êags
 |
PRINT_LABELS_FLAG
;

651 
	`wr_s¸n_ªsume
();

653 
	`pktgí_∑ge_di•œy
(
NULL
, NULL);

654 
	}
}

669 
	$pktgí_upd©e_di•œy
()

671 
	`pktgí_ªdi•œy
(0);

672 
	}
}

687 
	$pktgí_£t_∑ge_size
(
uöt32_t
 
∑ge_size
)

689 i‡–(
∑ge_size
 > 0Ë&& (∑ge_sizê<
pktgí
.
nb_p‹ts
) &&

690 (
∑ge_size
 <= 6) ) {

691 
pktgí
.
nb_p‹ts_≥r_∑ge
 = 
∑ge_size
;

692 
pktgí
.
ídög_p‹t
 =Öktgí.
°¨tög_p‹t
 + 
∑ge_size
;

693 i‡(
pktgí
.
ídög_p‹t
 >=

694 (
pktgí
.
°¨tög_p‹t
 +Öktgí.
nb_p‹ts
) )

695 
pktgí
.
ídög_p‹t
 =

696 (
pktgí
.
°¨tög_p‹t
 +Öktgí.
nb_p‹ts
);

697 
	`pktgí_ªdi•œy
(1);

699 
	}
}

714 
	$pktgí_s¸ìn
(c⁄° *
⁄Off
)

716 
uöt16_t
 
rows
;

718 
	`pktgí_di•œy_gë_geomëry
(&
rows
, 
NULL
);

720 i‡(
	`∑r£Sèã
(
⁄Off
Ë=
DISABLE_STATE
) {

721 i‡(!
	`wr_s¸n_is_∑u£d
() ) {

722 
	`wr_s¸n_∑u£
();

723 
	`wr_s¸n_˛s
();

724 
	`wr_s¸n_£tw
(1);

725 
	`wr_s¸n_pos
(100, 1);

728 
	`wr_s¸n_˛s
();

729 
	`wr_s¸n_pos
(100, 1);

730 
	`wr_s¸n_£tw
(
pktgí
.
œ°_row
 + 1);

731 
	`wr_s¸n_ªsume
();

732 
	`pktgí_ªdi•œy
(1);

734 
	}
}

749 
	$pktgí_£t_p‹t_numbî
(
uöt32_t
 
p‹t_numbî
)

751 i‡(
p‹t_numbî
 <
pktgí
.
nb_p‹ts
) {

752 
pktgí
.
p‹tNum
 = 
p‹t_numbî
;

753 
	`pktgí_ªdi•œy
(1);

755 
	}
}

770 
	$pktgí_£t_icmp_echo
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

772 i‡(
⁄Off
 =
ENABLE_STATE
)

773 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
ICMP_ECHO_ENABLE_FLAG
);

775 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
ICMP_ECHO_ENABLE_FLAG
);

776 
	}
}

791 
	$pktgí_£t_rx_èp
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

793 i‡(
⁄Off
 =
ENABLE_STATE
) {

794 
i‰eq
 
i‰
;

795 
sockfd
, 
i
;

796 c⁄° *
èpdevs
[] =

797 { "/dev/√t/tun", "/dev/tun", 
NULL
 };

799 
i
 = 0; 
èpdevs
[i]; i++)

800 i‡–(
öfo
->
rx_èpfd
 = 
	`›í
(
èpdevs
[
i
], 
O_RDWR
)) >= 0)

802 i‡(
èpdevs
[
i
] =
NULL
) {

803 
	`pktgí_log_îr‹
("UnableÅo create TUN/TAP interface");

806 
	`mem£t
(&
i‰
, 0, (
i‰eq
));

808 
i‰
.
i‰_Êags
 = 
IFF_TAP
 | 
IFF_NO_PI
;

810 
	`¢¥ötf
(
i‰
.
i‰_«me
, 
IFNAMSIZ
, "%s%d", "pg_rxèp", 
öfo
->
pid
);

811 i‡(
	`io˘l
(
öfo
->
rx_èpfd
, 
TUNSETIFF
, (*)&
i‰
) < 0) {

812 
	`pktgí_log_îr‹
("UnableÅo set TUNSETIFF for %s",

813 
i‰
.
i‰_«me
);

814 
	`˛o£
(
öfo
->
rx_èpfd
);

815 
öfo
->
rx_èpfd
 = 0;

819 
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

821 
i‰
.
i‰_Êags
 = 
IFF_UP
 | 
IFF_RUNNING
;

822 i‡(
	`io˘l
(
sockfd
, 
SIOCSIFFLAGS
, (*)&
i‰
) < 0) {

823 
	`pktgí_log_îr‹
("UnableÅo set SIOCSIFFLAGS for %s",

824 
i‰
.
i‰_«me
);

825 
	`˛o£
(
sockfd
);

826 
	`˛o£
(
öfo
->
rx_èpfd
);

827 
öfo
->
rx_èpfd
 = 0;

830 
	`˛o£
(
sockfd
);

831 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
PROCESS_RX_TAP_PKTS
);

833 i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
) &

834 
PROCESS_RX_TAP_PKTS
) {

835 
	`˛o£
(
öfo
->
rx_èpfd
);

836 
öfo
->
rx_èpfd
 = 0;

838 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
PROCESS_RX_TAP_PKTS
);

840 
	}
}

855 
	$pktgí_£t_tx_èp
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

857 i‡(
⁄Off
 =
ENABLE_STATE
) {

858 
i‰eq
 
i‰
;

859 
sockfd
, 
i
;

860 c⁄° *
èpdevs
[] =

861 { "/dev/√t/tun", "/dev/tun", 
NULL
 };

863 
i
 = 0; 
èpdevs
[i]; i++)

864 i‡–(
öfo
->
tx_èpfd
 = 
	`›í
(
èpdevs
[
i
], 
O_RDWR
)) >= 0)

866 i‡(
èpdevs
[
i
] =
NULL
) {

867 
	`pktgí_log_îr‹
("UnableÅo create TUN/TAP interface.");

870 
	`mem£t
(&
i‰
, 0, (
i‰eq
));

872 
i‰
.
i‰_Êags
 = 
IFF_TAP
 | 
IFF_NO_PI
;

874 
	`¢¥ötf
(
i‰
.
i‰_«me
, 
IFNAMSIZ
, "%s%d", "pg_txèp", 
öfo
->
pid
);

875 i‡(
	`io˘l
(
öfo
->
tx_èpfd
, 
TUNSETIFF
, (*)&
i‰
) < 0) {

876 
	`pktgí_log_îr‹
("UnableÅo set TUNSETIFF for %s",

877 
i‰
.
i‰_«me
);

878 
	`˛o£
(
öfo
->
tx_èpfd
);

879 
öfo
->
tx_èpfd
 = 0;

883 
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

885 
i‰
.
i‰_Êags
 = 
IFF_UP
 | 
IFF_RUNNING
;

886 i‡(
	`io˘l
(
sockfd
, 
SIOCSIFFLAGS
, (*)&
i‰
) < 0) {

887 
	`pktgí_log_îr‹
("UnableÅo set SIOCSIFFLAGS for %s",

888 
i‰
.
i‰_«me
);

889 
	`˛o£
(
sockfd
);

890 
	`˛o£
(
öfo
->
tx_èpfd
);

891 
öfo
->
tx_èpfd
 = 0;

894 
	`˛o£
(
sockfd
);

895 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
PROCESS_TX_TAP_PKTS
);

897 i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
) &

898 
PROCESS_TX_TAP_PKTS
) {

899 
	`˛o£
(
öfo
->
tx_èpfd
);

900 
öfo
->
tx_èpfd
 = 0;

902 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
PROCESS_TX_TAP_PKTS
);

904 
	}
}

919 
	$pktgí_mac_‰om_¨p
(
uöt32_t
 
⁄Off
)

921 i‡(
⁄Off
 =
ENABLE_STATE
)

922 
pktgí
.
Êags
 |
MAC_FROM_ARP_FLAG
;

924 
pktgí
.
Êags
 &~
MAC_FROM_ARP_FLAG
;

925 
	}
}

940 
	$pktgí_£t_øndom
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

942 i‡(
⁄Off
 =
ENABLE_STATE
)

943 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_RANDOM_PKTS
);

945 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_RANDOM_PKTS
);

946 
	}
}

953 
	$__mempoﬁ_dump
(
FILE
 *
f
, 
πe_mempoﬁ
 *
mp
) {

954 i‡(
mp
 =
NULL
)

956 
	`πe_mempoﬁ_dump
(
f
, 
mp
);

957 
	}
}

972 
	$pktgí_mempoﬁ_dump
(
p‹t_öfo_t
 *
öfo
, *
«me
)

974 
Æl
;

975 
uöt16_t
 
q
;

977 
Æl
 = !
	`°rcmp
(
«me
, "all");

979 i‡(
öfo
->
q
[0].
tx_mp
 =
NULL
)

982 
q
 = 0; q < 
	`wr_gë_p‹t_rx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
); q++)

983 i‡(
Æl
 || !
	`°rcmp
(
«me
, "rx") )

984 
	`πe_mempoﬁ_dump
(
°dout
, 
öfo
->
q
[q].
rx_mp
);

985 
q
 = 0; q < 
	`wr_gë_p‹t_tx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
); q++) {

986 i‡(
Æl
 ||

987 (!
	`°rcmp
(
«me
,

989 (
q
 < 
	`wr_gë_p‹t_tx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
))) )

990 
	`__mempoﬁ_dump
(
°dout
, 
öfo
->
q
[q].
tx_mp
);

991 i‡(
Æl
 || !
	`°rcmp
(
«me
, "range") )

992 
	`__mempoﬁ_dump
(
°dout
, 
öfo
->
q
[q].
ønge_mp
);

993 i‡(
Æl
 || !
	`°rcmp
(
«me
, "seq") )

994 
	`__mempoﬁ_dump
(
°dout
, 
öfo
->
q
[q].
£q_mp
);

995 i‡(
Æl
 || !
	`°rcmp
(
«me
, "arp") )

996 
	`__mempoﬁ_dump
(
°dout
, 
öfo
->
q
[q].
•ecül_mp
);

997 i‡(
Æl
 || !
	`°rcmp
(
«me
, "pcap") )

998 
	`__mempoﬁ_dump
(
°dout
, 
öfo
->
q
[q].
pˇp_mp
);

1000 
	}
}

1015 
	$pktgí_°¨t_å™smôtög
(
p‹t_öfo_t
 *
öfo
)

1017 
uöt8_t
 
q
;

1019 i‡(!(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
SENDING_PACKETS
) ) {

1020 
q
 = 0; q < 
	`wr_gë_p‹t_tx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
); q++)

1021 
	`pktgí_£t_q_Êags
(
öfo
, 
q
, 
CLEAR_FAST_ALLOC_FLAG
);

1023 
	`πe_©omic64_£t
(&
öfo
->
cuºít_tx_cou¡
,

1024 
	`πe_©omic64_ªad
(&
öfo
->
å™smô_cou¡
));

1026 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SENDING_PACKETS
);

1028 i‡(
	`πe_©omic64_ªad
(&
öfo
->
cuºít_tx_cou¡
) == 0)

1029 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_FOREVER
);

1031 
	}
}

1046 
	$pktgí_°›_å™smôtög
(
p‹t_öfo_t
 *
öfo
)

1048 
uöt8_t
 
q
;

1050 i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
SENDING_PACKETS
) {

1051 
	`pktgí_˛r_p‹t_Êags
(
öfo
, (
SENDING_PACKETS
 | 
SEND_FOREVER
));

1052 
q
 = 0; q < 
	`wr_gë_p‹t_tx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
); q++)

1053 
	`pktgí_£t_q_Êags
(
öfo
, 
q
, 
DO_TX_FLUSH
);

1055 
	}
}

1071 
	$pktgí_¥ime_p‹ts
(
p‹t_öfo_t
 *
öfo
)

1073 
uöt8_t
 
q
;

1075 
q
 = 0; q < 
	`wr_gë_p‹t_tx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
); q++)

1076 
	`pktgí_£t_q_Êags
(
öfo
, 
q
, 
CLEAR_FAST_ALLOC_FLAG
);

1077 
	`πe_©omic64_£t
(&
öfo
->
cuºít_tx_cou¡
, info->
¥ime_˙t
);

1078 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SENDING_PACKETS
);

1079 
	`πe_dñay_ms
(300);

1080 
q
 = 0; q < 
	`wr_gë_p‹t_tx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
); q++)

1081 
	`pktgí_£t_q_Êags
(
öfo
, 
q
, 
DO_TX_FLUSH
);

1082 
	}
}

1097 
	$pktgí_£t_¥Ÿo
(
p‹t_öfo_t
 *
öfo
, 
ty≥
)

1099 
öfo
->
£q_pkt
[
SINGLE_PKT
].
ùPrŸo
 = (
ty≥
 ='u'Ë? 
PG_IPPROTO_UDP
 :

1100 (
ty≥
 ='i'Ë? 
PG_IPPROTO_ICMP
 :

1101 (
ty≥
 ='t'Ë? 
PG_IPPROTO_TCP
 :

1102  
PG_IPPROTO_TCP
;

1105 i‡(
ty≥
 == 'i')

1106 
öfo
->
£q_pkt
[
SINGLE_PKT
].
ëhTy≥
 = 
ETHER_TYPE_IPv4
;

1108 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1109 
	}
}

1124 
	$pktgí_£t_¥Ÿo_ønge
(
p‹t_öfo_t
 *
öfo
, 
ty≥
)

1126 
öfo
->
£q_pkt
[
RANGE_PKT
].
ùPrŸo
 = (
ty≥
 ='u'Ë? 
PG_IPPROTO_UDP
 :

1127 (
ty≥
 ='i'Ë? 
PG_IPPROTO_ICMP
 :

1128 (
ty≥
 ='t'Ë? 
PG_IPPROTO_TCP
 :

1129  
PG_IPPROTO_TCP
;

1130 
öfo
->
ønge
.
ù_¥Ÿo
 = info->
£q_pkt
[
RANGE_PKT
].
ùPrŸo
;

1133 i‡(
ty≥
 == 'i')

1134 
öfo
->
£q_pkt
[
RANGE_PKT
].
ëhTy≥
 = 
ETHER_TYPE_IPv4
;

1135 
	}
}

1150 
	$pktgí_pˇp_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
)

1152 i‡–(
öfo
->
pˇp
 !
NULL
Ë&& (öfo->pˇp->
pkt_cou¡
 != 0) ) {

1153 i‡(
	`∑r£Sèã
(
°r
Ë=
ENABLE_STATE
) {

1154 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_RANGE_PKTS
);

1155 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_SEQ_PKTS
);

1156 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_PCAP_PKTS
);

1158 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_PCAP_PKTS
);

1159 
	`pktgí_∑ckë_øã
(
öfo
);

1161 
	}
}

1176 
	$pktgí_pˇp_fûãr
(
p‹t_öfo_t
 *
öfo
, *
°r
)

1178 
pˇp_t
 *
pc
 = 
	`pˇp_›í_dód
(
DLT_EN10MB
, 65535);

1180 
öfo
->
pˇp_ªsu…
 = 
	`pˇp_compûe
(
pc
,

1181 &
öfo
->
pˇp_¥ogøm
,

1182 
°r
,

1184 
PCAP_NETMASK_UNKNOWN
);

1186 
	`pˇp_˛o£
(
pc
);

1187 
	}
}

1202 
	$pktgí_blök_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
)

1204 i‡(
	`∑r£Sèã
(
°r
Ë=
ENABLE_STATE
)

1205 
pktgí
.
blökli°
 |(1 << 
öfo
->
pid
);

1207 
pktgí
.
blökli°
 &~(1 << 
öfo
->
pid
);

1208 
	`πe_ëh_Àd_⁄
(
öfo
->
pid
);

1210 
	}
}

1225 
	$pktgí_¥o˚ss_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
)

1227 i‡(
	`∑r£Sèã
(
°r
Ë=
ENABLE_STATE
)

1228 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
PROCESS_INPUT_PKTS
);

1230 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
PROCESS_INPUT_PKTS
);

1231 
	}
}

1246 
	$pktgí_g¨p_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
)

1248 i‡(
	`∑r£Sèã
(
°r
Ë=
ENABLE_STATE
)

1249 
	`pktgí_£t_p‹t_Êags
(
öfo
,

1250 
PROCESS_GARP_PKTS
 | 
PROCESS_INPUT_PKTS
);

1252 
	`pktgí_˛r_p‹t_Êags
(
öfo
,

1253 
PROCESS_GARP_PKTS
 | 
PROCESS_INPUT_PKTS
);

1254 
	}
}

1269 
	$pktgí_£t_pkt_ty≥_ønge
(
p‹t_öfo_t
 *
öfo
, c⁄° *
ty≥
)

1271 
öfo
->
£q_pkt
[
RANGE_PKT
].
ëhTy≥
 = (
ty≥
[0] ='a'Ë? 
ETHER_TYPE_ARP
 :

1272 (
ty≥
[3] ='4'Ë? 
ETHER_TYPE_IPv4
 :

1273 (
ty≥
[3] ='6'Ë? 
ETHER_TYPE_IPv6
 :

1274  
ETHER_TYPE_IPv4
;

1275 
	}
}

1290 
	$pktgí_£t_pkt_ty≥
(
p‹t_öfo_t
 *
öfo
, c⁄° *
ty≥
)

1292 
öfo
->
£q_pkt
[
SINGLE_PKT
].
ëhTy≥
 = (
ty≥
[0] ='a'Ë? 
ETHER_TYPE_ARP
 :

1293 (
ty≥
[3] ='4'Ë? 
ETHER_TYPE_IPv4
 :

1294 (
ty≥
[3] ='6'Ë? 
ETHER_TYPE_IPv6
 :

1295  
ETHER_TYPE_IPv4
;

1297 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1298 
	}
}

1313 
	$pktgí_£t_vœn
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

1315 i‡(
⁄Off
 =
ENABLE_STATE
) {

1316 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_MPLS_LABEL
);

1317 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_Q_IN_Q_IDS
);

1318 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_VLAN_ID
);

1320 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_VLAN_ID
);

1321 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1322 
	}
}

1337 
	$pktgí_£t_vœnid
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
vœnid
)

1339 
öfo
->
vœnid
 = vlanid;

1340 
öfo
->
£q_pkt
[
SINGLE_PKT
].
vœnid
 = info->vlanid;

1341 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1342 
	}
}

1357 
	$pktgí_£t_m∂s
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

1359 i‡(
⁄Off
 =
ENABLE_STATE
) {

1360 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_VLAN_ID
);

1361 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_Q_IN_Q_IDS
);

1362 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_MPLS_LABEL
);

1364 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_MPLS_LABEL
);

1365 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1366 
	}
}

1381 
	$pktgí_£t_m∂s_íåy
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
m∂s_íåy
)

1383 
öfo
->
m∂s_íåy
 = mpls_entry;

1384 
öfo
->
£q_pkt
[
SINGLE_PKT
].
m∂s_íåy
 = info->mpls_entry;

1385 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1386 
	}
}

1401 
	$pktgí_£t_qöq
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

1403 i‡(
⁄Off
 =
ENABLE_STATE
) {

1404 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_VLAN_ID
);

1405 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_MPLS_LABEL
);

1406 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_Q_IN_Q_IDS
);

1408 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_Q_IN_Q_IDS
);

1409 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1410 
	}
}

1425 
	$pktgí_£t_qöqids
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
ouãrid
, uöt16_à
ö√rid
)

1427 
öfo
->
qöq_ouãrid
 = 
ouãrid
;

1428 
öfo
->
£q_pkt
[
SINGLE_PKT
].
qöq_ouãrid
 = info->qinq_outerid;

1429 
öfo
->
qöq_ö√rid
 = 
ö√rid
;

1430 
öfo
->
£q_pkt
[
SINGLE_PKT
].
qöq_ö√rid
 = info->qinq_innerid;

1431 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1432 
	}
}

1447 
	$pktgí_£t_gª
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

1449 i‡(
⁄Off
 =
ENABLE_STATE
) {

1450 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_GRE_ETHER_HEADER
);

1451 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_GRE_IPv4_HEADER
);

1453 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_GRE_IPv4_HEADER
);

1454 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1455 
	}
}

1470 
	$pktgí_£t_gª_ëh
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
)

1472 i‡(
⁄Off
 =
ENABLE_STATE
) {

1473 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_GRE_IPv4_HEADER
);

1474 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_GRE_ETHER_HEADER
);

1476 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_GRE_ETHER_HEADER
);

1477 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1478 
	}
}

1493 
	$pktgí_£t_gª_key
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
gª_key
)

1495 
öfo
->
gª_key
 = gre_key;

1496 
öfo
->
£q_pkt
[
SINGLE_PKT
].
gª_key
 = info->gre_key;

1497 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1498 
	}
}

1513 
	$pktgí_˛ór_°©s
(
p‹t_öfo_t
 *
öfo
)

1515 
	`mem£t
(&
öfo
->
sizes
, 0, (
p‹t_sizes_t
));

1516 
	`mem£t
(&
öfo
->
p‹t_°©s
, 0, (
ëh_°©s_t
));

1517 
	`mem£t
(&
öfo
->
øã_°©s
, 0, (
ëh_°©s_t
));

1519 
	`πe_ëh_°©s_gë
(
öfo
->
pid
, &öfo->
öô_°©s
);

1520 
pktgí
.
max_tŸÆ_ùackës
 = 0;

1521 
pktgí
.
max_tŸÆ_›ackës
 = 0;

1522 
öfo
->
max_ùackës
 = 0;

1523 
öfo
->
max_›ackës
 = 0;

1524 
öfo
->
°©s
.
dr›≥d_pkts
 = 0;

1525 
öfo
->
°©s
.
¨p_pkts
 = 0;

1526 
öfo
->
°©s
.
echo_pkts
 = 0;

1527 
öfo
->
°©s
.
ù_pkts
 = 0;

1528 
öfo
->
°©s
.
ùv6_pkts
 = 0;

1529 
öfo
->
°©s
.
vœn_pkts
 = 0;

1530 
öfo
->
°©s
.
unknown_pkts
 = 0;

1531 
öfo
->
°©s
.
tx_Áûed
 = 0;

1533 
	`mem£t
(&
pktgí
.
cumm_øã_tŸÆs
, 0, (
ëh_°©s_t
));

1535 
	`pktgí_upd©e_di•œy
();

1536 
	}
}

1551 
	$pktgí_˛s
()

1553 i‡(
	`wr_s¸n_is_∑u£d
() ) {

1554 
	`wr_s¸n_˛s
();

1555 
	`wr_s¸n_pos
(100, 1);

1557 
	`pktgí_ªdi•œy
(1);

1558 
	}
}

1573 
	$pktgí_upd©e
()

1575 
	`pktgí_∑ge_di•œy
(
NULL
, NULL);

1576 
	}
}

1591 
	$pktgí_p‹t_deÁu…s
(
uöt32_t
 
pid
, 
uöt8_t
 
£q
)

1593 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

1594 
pkt_£q_t
 *
pkt
 = &
öfo
->
£q_pkt
[
£q
];

1595 
p‹t_öfo_t
 *
d°_öfo
;

1597 
pkt
->
pktSize
 = 
MIN_PKT_SIZE
;

1598 
pkt
->
•‹t
 = 
DEFAULT_SRC_PORT
;

1599 
pkt
->
dp‹t
 = 
DEFAULT_DST_PORT
;

1600 
pkt
->
ùPrŸo
 = 
PG_IPPROTO_TCP
;

1601 
pkt
->
ëhTy≥
 = 
ETHER_TYPE_IPv4
;

1602 
pkt
->
vœnid
 = 
DEFAULT_VLAN_ID
;

1604 
	`πe_©omic64_£t
(&
öfo
->
å™smô_cou¡
, 
DEFAULT_TX_COUNT
);

1605 
	`πe_©omic64_öô
(&
öfo
->
cuºít_tx_cou¡
);

1606 
öfo
->
tx_øã
 = 
DEFAULT_TX_RATE
;

1607 
öfo
->
tx_bur°
 = 
DEFAULT_PKT_BURST
;

1608 
öfo
->
vœnid
 = 
DEFAULT_VLAN_ID
;

1609 
öfo
->
£qC¡
 = 0;

1610 
öfo
->
£qIdx
 = 0;

1611 
öfo
->
¥ime_˙t
 = 
DEFAULT_PRIME_COUNT
;

1612 
öfo
->
dñè
 = 0;

1614 
	`pktgí_∑ckë_øã
(
öfo
);

1616 
pkt
->
ù_mask
 = 
DEFAULT_NETMASK
;

1617 i‡–(
pid
 & 1) == 0) {

1618 
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
 = 
DEFAULT_IP_ADDR
 | (
pid
 << 8) | 1;

1619 
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
 = 
DEFAULT_IP_ADDR
 | ((
pid
 + 1) << 8) | 1;

1620 
d°_öfo
 = 
öfo
 + 1;

1622 
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
 = 
DEFAULT_IP_ADDR
 | (
pid
 << 8) | 1;

1623 
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
 = 
DEFAULT_IP_ADDR
 | ((
pid
 - 1) << 8) | 1;

1624 
d°_öfo
 = 
öfo
 - 1;

1627 i‡(
d°_öfo
->
£q_pkt
 !
NULL
)

1628 
	`ëhî_addr_c›y
(&
d°_öfo
->
£q_pkt
[
SINGLE_PKT
].
ëh_§c_addr
,

1629 &
pkt
->
ëh_d°_addr
);

1631 
	`mem£t
(&
pkt
->
ëh_d°_addr
, 0, (pkt->eth_dst_addr));

1633 
	`pktgí_∑ckë_˘‹
(
öfo
, 
£q
, -1);

1635 
pktgí
.
Êags
 |
PRINT_LABELS_FLAG
;

1636 
	}
}

1651 
	$pktgí_pög4
(
p‹t_öfo_t
 *
öfo
)

1653 
	`mem˝y
(&
öfo
->
£q_pkt
[
PING_PKT
],

1654 &
öfo
->
£q_pkt
[
SINGLE_PKT
], (
pkt_£q_t
));

1655 
öfo
->
£q_pkt
[
PING_PKT
].
ùPrŸo
 = 
PG_IPPROTO_ICMP
;

1656 
	`pktgí_∑ckë_˘‹
(
öfo
, 
PING_PKT
, 
ICMP4_ECHO
);

1657 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_PING4_REQUEST
);

1658 
	}
}

1660 #ifde‡
INCLUDE_PING6


1674 
	$pktgí_pög6
(
p‹t_öfo_t
 *
öfo
)

1676 
	`mem˝y
(&
öfo
->
pkt
[
PING_PKT
],

1677 &
öfo
->
pkt
[
SINGLE_PKT
], (
pkt_£q_t
));

1678 
öfo
->
pkt
[
PING_PKT
].
ùPrŸo
 = 
PG_IPPROTO_ICMP
;

1679 
	`pktgí_∑ckë_˘‹
(
öfo
, 
PING_PKT
, 
ICMP6_ECHO
);

1680 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_PING6_REQUEST
);

1681 
	}
}

1698 
	$pktgí_ª£t
(
p‹t_öfo_t
 *
öfo
)

1700 
uöt32_t
 
s
;

1702 i‡(
öfo
 =
NULL
)

1703 
öfo
 = &
pktgí
.info[0];

1705 
	`pktgí_°›_å™smôtög
(
öfo
);

1707 
pktgí
.
Êags
 &~
MAC_FROM_ARP_FLAG
;

1710 i‡(
öfo
->
£q_pkt
) {

1711 
öfo
->
£q_pkt
[
SINGLE_PKT
].
pktSize
 = 
MIN_PKT_SIZE
;

1713 
s
 = 0; s < 
NUM_TOTAL_PKTS
; s++)

1714 
	`pktgí_p‹t_deÁu…s
(
öfo
->
pid
, 
s
);

1716 
	`pktgí_ønge_£tup
(
öfo
);

1717 
	`pktgí_˛ór_°©s
(
öfo
);

1720 
pktgí
.
Êags
 &~
PRINT_LABELS_FLAG
;

1721 
	`pktgí_upd©e_di•œy
();

1722 
	}
}

1737 
	$pktgí_p‹t_ª°¨t
(
p‹t_öfo_t
 *
öfo
)

1739 i‡(
öfo
 =
NULL
)

1740 
öfo
 = &
pktgí
.info[0];

1742 
	`pktgí_°›_å™smôtög
(
öfo
);

1744 
	`πe_dñay_ms
(10);

1747 
	`πe_ëh_dev_°›
(
öfo
->
pid
);

1749 
	`πe_dñay_us
(250);

1751 
	`πe_ëh_dev_°¨t
(
öfo
->
pid
);

1753 
pktgí
.
Êags
 &~
PRINT_LABELS_FLAG
;

1754 
	`pktgí_upd©e_di•œy
();

1755 
	}
}

1770 
	$pktgí_£t_tx_cou¡
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
˙t
)

1772 
	`πe_©omic64_£t
(&
öfo
->
å™smô_cou¡
, 
˙t
);

1773 
	}
}

1788 
	$pktgí_£t_p‹t_£qC¡
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
˙t
)

1790 i‡(
˙t
 > 
NUM_SEQ_PKTS
)

1791 
˙t
 = 
NUM_SEQ_PKTS
;

1793 
öfo
->
£qC¡
 = 
˙t
;

1794 i‡(
˙t
) {

1795 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_RANGE_PKTS
);

1796 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_PCAP_PKTS
);

1797 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_SEQ_PKTS
);

1799 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_SEQ_PKTS
);

1800 
	`pktgí_∑ckë_øã
(
öfo
);

1801 
	}
}

1816 
	$pktgí_£t_p‹t_¥ime
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
˙t
)

1818 i‡(
˙t
 > 
MAX_PRIME_COUNT
)

1819 
˙t
 = 
MAX_PRIME_COUNT
;

1820 i‡(
˙t
 == 0)

1821 
˙t
 = 
DEFAULT_PRIME_COUNT
;

1823 
öfo
->
¥ime_˙t
 = 
˙t
;

1824 
	}
}

1839 
	$pktgí_£t_p‹t_dump
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
˙t
)

1841 
i
;

1843 i‡(
˙t
 > 
MAX_DUMP_PACKETS
)

1844 
˙t
 = 
MAX_DUMP_PACKETS
;

1847 
öfo
->
dump_cou¡
 = 0;

1848 
öfo
->
dump_èû
 = 0;

1849 
öfo
->
dump_hód
 = 0;

1851 
i
 = 0; i < 
MAX_DUMP_PACKETS
; ++i)

1852 i‡(
öfo
->
dump_li°
->
d©a
 !
NULL
) {

1853 
	`πe_‰ì
(
öfo
->
dump_li°
->
d©a
);

1854 
öfo
->
dump_li°
->
d©a
 = 
NULL
;

1857 
öfo
->
dump_cou¡
 = 
˙t
;

1858 
	}
}

1873 
	$pktgí_£t_tx_bur°
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
bur°
)

1875 i‡(
bur°
 == 0)

1876 
bur°
 = 1;

1877 i‡(
bur°
 > 
DEFAULT_PKT_BURST
)

1878 
bur°
 = 
DEFAULT_PKT_BURST
;

1879 
öfo
->
tx_bur°
 = 
bur°
;

1880 
	`pktgí_∑ckë_øã
(
öfo
);

1881 
	}
}

1896 
	$pktgí_£t_tx_cy˛es
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
cy˛es
)

1898 
öfo
->
tx_cy˛es
 = 
cy˛es
;

1899 
	}
}

1914 
	$pktgí_£t_pkt_size
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
size
)

1916 i‡–(
size
 - 
FCS_SIZE
Ë< 
MIN_PKT_SIZE
)

1917 
size
 = (
MIN_PKT_SIZE
 + 
FCS_SIZE
);

1918 i‡–(
size
 - 
FCS_SIZE
Ë> 
MAX_PKT_SIZE
)

1919 
size
 = 
MAX_PKT_SIZE
 + 
FCS_SIZE
;

1920 
öfo
->
£q_pkt
[
SINGLE_PKT
].
pktSize
 = (
size
 - 
FCS_SIZE
);

1921 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1922 
	`pktgí_∑ckë_øã
(
öfo
);

1923 
	}
}

1938 
	$pktgí_£t_p‹t_vÆue
(
p‹t_öfo_t
 *
öfo
, 
ty≥
, 
uöt32_t
 
p‹tVÆue
)

1940 i‡(
ty≥
 == 'd')

1941 
öfo
->
£q_pkt
[
SINGLE_PKT
].
dp‹t
 = (
uöt16_t
)
p‹tVÆue
;

1943 
öfo
->
£q_pkt
[
SINGLE_PKT
].
•‹t
 = (
uöt16_t
)
p‹tVÆue
;

1944 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1945 
	}
}

1960 
	$pktgí_£t_tx_øã
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
øã
)

1962 i‡(
øã
 == 0)

1963 
øã
 = 1;

1964 i‡(
øã
 > 100)

1965 
øã
 = 100;

1966 
öfo
->
tx_øã
 = 
øã
;

1967 
	`pktgí_∑ckë_øã
(
öfo
);

1968 
	}
}

1983 
	$pktgí_£t_ùaddr
(
p‹t_öfo_t
 *
öfo
, 
ty≥
, 
cmdlöe_ùaddr_t
 *
ù
)

1985 i‡(
ty≥
 == 's') {

1986 
öfo
->
£q_pkt
[
SINGLE_PKT
].
ù_mask
 = 
	`size_to_mask
(
ù
->
¥efixÀn
);

1987 
öfo
->
£q_pkt
[
SINGLE_PKT
].
ù_§c_addr
.
addr
.
ùv4
.
s_addr
 = 
	`¡ohl
(

1988 
ù
->
addr
.
ùv4
.
s_addr
);

1990 
öfo
->
£q_pkt
[
SINGLE_PKT
].
ù_d°_addr
.
addr
.
ùv4
.
s_addr
 = 
	`¡ohl
(

1991 
ù
->
addr
.
ùv4
.
s_addr
);

1992 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1993 
	}
}

2008 
	$pktgí_£t_d°_mac
(
p‹t_öfo_t
 *
öfo
, 
cmdlöe_ëhîaddr_t
 *
mac
)

2010 
	`mem˝y
(&
öfo
->
£q_pkt
[
SINGLE_PKT
].
ëh_d°_addr
, 
mac
->mac, 6);

2011 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

2012 
	}
}

2027 
	$pktgí_ønge_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
)

2029 i‡(
	`∑r£Sèã
(
°r
Ë=
ENABLE_STATE
) {

2030 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_SEQ_PKTS
);

2031 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_PCAP_PKTS
);

2032 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_RANGE_PKTS
);

2034 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_RANGE_PKTS
);

2035 
	`pktgí_∑ckë_øã
(
öfo
);

2036 
	}
}

2051 
	$pktgí_œãncy_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
)

2053 i‡(
	`∑r£Sèã
(
°r
Ë=
ENABLE_STATE
)

2054 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_LATENCY_PKTS
);

2056 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_LATENCY_PKTS
);

2057 
	}
}

2072 
	$pktgí_£t_∑âîn_ty≥
(
p‹t_öfo_t
 *
öfo
, *
°r
)

2074 i‡(
	`°∫cmp
(
°r
, "abc", 3) == 0)

2075 
öfo
->
fûl_∑âîn_ty≥
 = 
ABC_FILL_PATTERN
;

2076 i‡(
	`°∫cmp
(
°r
, "none", 4) == 0)

2077 
öfo
->
fûl_∑âîn_ty≥
 = 
NO_FILL_PATTERN
;

2078 i‡(
	`°∫cmp
(
°r
, "user", 4) == 0)

2079 
öfo
->
fûl_∑âîn_ty≥
 = 
USER_FILL_PATTERN
;

2080 i‡(
	`°∫cmp
(
°r
, "zero", 4) == 0)

2081 
öfo
->
fûl_∑âîn_ty≥
 = 
ZERO_FILL_PATTERN
;

2082 
	}
}

2097 
	$pktgí_u£r_∑âîn_£t
(
p‹t_öfo_t
 *
öfo
, *
°r
)

2099 
c›y
[
USER_PATTERN_SIZE
 + 1], *
˝
;

2101 
	`mem£t
(
c›y
, 0, (copy));

2102 
	`°r˝y
(
c›y
, 
°r
);

2103 
˝
 = &
c›y
[0];

2104 i‡–(
˝
[0] == '"') || (cp[0] == '\'') ) {

2105 
˝
[
	`°æí
(cp) - 1] = 0;

2106 
˝
++;

2108 
	`mem£t
(
öfo
->
u£r_∑âîn
, 0, 
USER_PATTERN_SIZE
);

2109 
	`°∫˝y
(
öfo
->
u£r_∑âîn
, 
˝
, 
USER_PATTERN_SIZE
);

2110 
öfo
->
fûl_∑âîn_ty≥
 = 
USER_FILL_PATTERN
;

2111 
	}
}

2127 
	$pktgí_dns_domaö_£t
(
p‹t_öfo_t
 *
öfo
, *
°r
)

2129 
	`mem£t
(
öfo
->
dns_domaö
, 0, 
DNS_DOMAIN_SIZE
);

2130 
	`°∫˝y
(
öfo
->
dns_domaö
, 
°r
, 
	`°æí
(str));

2131 
	}
}

2146 
	$pktgí_£t_de°_mac
(
p‹t_öfo_t
 *
öfo
,

2147 c⁄° *
wh©
,

2148 
cmdlöe_ëhîaddr_t
 *
mac
)

2150 i‡(!
	`°rcmp
(
wh©
, "min") )

2151 
	`öë_mtoh64
((
ëhî_addr
 *)
mac
, &
öfo
->
ønge
.
d°_mac_mö
);

2152 i‡(!
	`°rcmp
(
wh©
, "max") )

2153 
	`öë_mtoh64
((
ëhî_addr
 *)
mac
, &
öfo
->
ønge
.
d°_mac_max
);

2154 i‡(!
	`°rcmp
(
wh©
, "inc") )

2155 
	`öë_mtoh64
((
ëhî_addr
 *)
mac
, &
öfo
->
ønge
.
d°_mac_öc
);

2156 i‡(!
	`°rcmp
(
wh©
, "start") ) {

2157 
	`öë_mtoh64
((
ëhî_addr
 *)
mac
, &
öfo
->
ønge
.
d°_mac
);

2159 
	`mem˝y
(&
öfo
->
£q_pkt
[
RANGE_PKT
].
ëh_d°_addr
, 
mac
->mac, 6);

2161 
	}
}

2176 
	$pktgí_£t_§c_mac
(
p‹t_öfo_t
 *
öfo
, c⁄° *
wh©
,

2177 
cmdlöe_ëhîaddr_t
 *
mac
)

2179 i‡(!
	`°rcmp
(
wh©
, "min") )

2180 
	`öë_mtoh64
((
ëhî_addr
 *)
mac
, &
öfo
->
ønge
.
§c_mac_mö
);

2181 i‡(!
	`°rcmp
(
wh©
, "max") )

2182 
	`öë_mtoh64
((
ëhî_addr
 *)
mac
, &
öfo
->
ønge
.
§c_mac_max
);

2183 i‡(!
	`°rcmp
(
wh©
, "inc") )

2184 
	`öë_mtoh64
((
ëhî_addr
 *)
mac
, &
öfo
->
ønge
.
§c_mac_öc
);

2185 i‡(!
	`°rcmp
(
wh©
, "start") ) {

2186 
	`öë_mtoh64
((
ëhî_addr
 *)
mac
, &
öfo
->
ønge
.
§c_mac
);

2188 
	`mem˝y
(&
öfo
->
£q_pkt
[
RANGE_PKT
].
ëh_§c_addr
, 
mac
->mac, 6);

2190 
	}
}

2205 
	$pktgí_£t_§c_ù
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
cmdlöe_ùaddr_t
 *
ù
)

2207 i‡(!
	`°rcmp
(
wh©
, "min") )

2208 
öfo
->
ønge
.
§c_ù_mö
 = 
	`¡ohl
(
ù
->
addr
.
ùv4
.
s_addr
);

2209 i‡(!
	`°rcmp
(
wh©
, "max") )

2210 
öfo
->
ønge
.
§c_ù_max
 = 
	`¡ohl
(
ù
->
addr
.
ùv4
.
s_addr
);

2211 i‡(!
	`°rcmp
(
wh©
, "inc") )

2212 
öfo
->
ønge
.
§c_ù_öc
 = 
	`¡ohl
(
ù
->
addr
.
ùv4
.
s_addr
);

2213 i‡(!
	`°rcmp
(
wh©
, "start") )

2214 
öfo
->
ønge
.
§c_ù
 = 
	`¡ohl
(
ù
->
addr
.
ùv4
.
s_addr
);

2215 
	}
}

2230 
	$pktgí_£t_d°_ù
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
cmdlöe_ùaddr_t
 *
ù
)

2232 i‡(!
	`°rcmp
(
wh©
, "min") )

2233 
öfo
->
ønge
.
d°_ù_mö
 = 
	`¡ohl
(
ù
->
addr
.
ùv4
.
s_addr
);

2234 i‡(!
	`°rcmp
(
wh©
, "max") )

2235 
öfo
->
ønge
.
d°_ù_max
 = 
	`¡ohl
(
ù
->
addr
.
ùv4
.
s_addr
);

2236 i‡(!
	`°rcmp
(
wh©
, "inc") )

2237 
öfo
->
ønge
.
d°_ù_öc
 = 
	`¡ohl
(
ù
->
addr
.
ùv4
.
s_addr
);

2238 i‡(!
	`°rcmp
(
wh©
, "start") )

2239 
öfo
->
ønge
.
d°_ù
 = 
	`¡ohl
(
ù
->
addr
.
ùv4
.
s_addr
);

2240 
	}
}

2255 
	$pktgí_£t_§c_p‹t
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt16_t
 
p‹t
)

2257 i‡(!
	`°rcmp
(
wh©
, "inc") ) {

2258 i‡(
p‹t
 > 64)

2259 
p‹t
 = 64;

2260 
öfo
->
ønge
.
§c_p‹t_öc
 = 
p‹t
;

2262 i‡(!
	`°rcmp
(
wh©
, "min") )

2263 
öfo
->
ønge
.
§c_p‹t_mö
 = 
p‹t
;

2264 i‡(!
	`°rcmp
(
wh©
, "max") )

2265 
öfo
->
ønge
.
§c_p‹t_max
 = 
p‹t
;

2266 i‡(!
	`°rcmp
(
wh©
, "start") )

2267 
öfo
->
ønge
.
§c_p‹t
 = 
p‹t
;

2269 
	}
}

2284 
	$pktgí_£t_gçu_ãid
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt32_t
 
ãid
)

2286 i‡(!
	`°rcmp
(
wh©
, "inc") ) {

2287 i‡(
ãid
 != 0)

2288 
öfo
->
ønge
.
gçu_ãid_öc
 = 
ãid
;

2290 i‡(!
	`°rcmp
(
wh©
, "min") )

2291 
öfo
->
ønge
.
gçu_ãid_mö
 = 
ãid
;

2292 i‡(!
	`°rcmp
(
wh©
, "max") )

2293 
öfo
->
ønge
.
gçu_ãid_max
 = 
ãid
;

2294 i‡(!
	`°rcmp
(
wh©
, "start") ) {

2295 
öfo
->
ønge
.
gçu_ãid
 = 
ãid
;

2296 
öfo
->
£q_pkt
[
RANGE_PKT
].
gçu_ãid
 = 
ãid
;

2299 
	}
}

2314 
	$pktgí_£t_d°_p‹t
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt16_t
 
p‹t
)

2316 i‡(!
	`°rcmp
(
wh©
, "inc") ) {

2317 i‡(
p‹t
 > 64)

2318 
p‹t
 = 64;

2319 
öfo
->
ønge
.
d°_p‹t_öc
 = 
p‹t
;

2321 i‡(!
	`°rcmp
(
wh©
, "min") )

2322 
öfo
->
ønge
.
d°_p‹t_mö
 = 
p‹t
;

2323 i‡(!
	`°rcmp
(
wh©
, "max") )

2324 
öfo
->
ønge
.
d°_p‹t_max
 = 
p‹t
;

2325 i‡(!
	`°rcmp
(
wh©
, "start") )

2326 
öfo
->
ønge
.
d°_p‹t
 = 
p‹t
;

2328 
	}
}

2343 
	$pktgí_£t_vœn_id
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt16_t
 
id
)

2345 i‡(!
	`°rcmp
(
wh©
, "inc") ) {

2346 i‡(
id
 > 64)

2347 
id
 = 64;

2348 
öfo
->
ønge
.
vœn_id_öc
 = 
id
;

2350 i‡–(
id
 < 
MIN_VLAN_ID
Ë|| (id > 
MAX_VLAN_ID
) )

2351 
id
 = 
MIN_VLAN_ID
;

2353 i‡(!
	`°rcmp
(
wh©
, "min") )

2354 
öfo
->
ønge
.
vœn_id_mö
 = 
id
;

2355 i‡(!
	`°rcmp
(
wh©
, "max") )

2356 
öfo
->
ønge
.
vœn_id_max
 = 
id
;

2357 i‡(!
	`°rcmp
(
wh©
, "start") )

2358 
öfo
->
ønge
.
vœn_id
 = 
id
;

2360 
	}
}

2375 
	$pktgí_£t_ønge_pkt_size
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt16_t
 
size
)

2377 i‡(!
	`°rcmp
(
wh©
, "inc") ) {

2378 i‡(
size
 > 
ETHER_MIN_LEN
)

2379 
size
 = 
ETHER_MIN_LEN
;

2381 
öfo
->
ønge
.
pkt_size_öc
 = 
size
;

2383 i‡(
size
 < 
ETHER_MIN_LEN
)

2384 
size
 = 
MIN_PKT_SIZE
;

2385 i‡(
size
 > 
ETHER_MAX_LEN
)

2386 
size
 = 
MAX_PKT_SIZE
;

2388 
size
 -
FCS_SIZE
;

2390 i‡(!
	`°rcmp
(
wh©
, "start") )

2391 
öfo
->
ønge
.
pkt_size
 = 
size
;

2392 i‡(!
	`°rcmp
(
wh©
, "min") )

2393 
öfo
->
ønge
.
pkt_size_mö
 = 
size
;

2394 i‡(!
	`°rcmp
(
wh©
, "max") )

2395 
öfo
->
ønge
.
pkt_size_max
 = 
size
;

2397 
	}
}

2412 
	$pktgí_£nd_¨p_ªque°s
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
ty≥
)

2414 i‡(
ty≥
 =
GRATUITOUS_ARP
)

2415 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_GRATUITOUS_ARP
);

2417 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_ARP_REQUEST
);

2418 
	}
}

2433 
	$pktgí_£t_∑ge
(*
°r
)

2435 
uöt16_t
 
∑ge
;

2437 i‡(
°r
 =
NULL
)

2440 
∑ge
 = 
	`©oi
(
°r
);

2441 i‡(
∑ge
 > 
pktgí
.
nb_p‹ts
)

2445 i‡(
°r
[0] == 'n') {

2446 
pˇp_öfo_t
 *
pˇp
 = 
pktgí
.
öfo
[pktgí.
p‹tNum
].pcap;

2448 i‡(
pˇp
) {

2449 i‡–(
pˇp
->
pkt_idx
 + 
PCAP_PAGE_SIZE
Ë<Öˇp->
pkt_cou¡
)

2450 
pˇp
->
pkt_idx
 +
PCAP_PAGE_SIZE
;

2452 
pˇp
->
pkt_idx
 = 0;

2454 
pktgí
.
Êags
 |
PRINT_LABELS_FLAG
;

2455 } i‡–(
°r
[0] == 'c') && (str[1] == 'p') ) {

2456 
pktgí
.
Êags
 &~
PAGE_MASK_BITS
;

2457 
pktgí
.
Êags
 |
CPU_PAGE_FLAG
;

2458 } i‡(
°r
[0] == 'p') {

2459 
pktgí
.
Êags
 &~
PAGE_MASK_BITS
;

2460 
pktgí
.
Êags
 |
PCAP_PAGE_FLAG
;

2461 i‡(
pktgí
.
öfo
[pktgí.
p‹tNum
].
pˇp
)

2462 
pktgí
.
öfo
[pktgí.
p‹tNum
].
pˇp
->
pkt_idx
 = 0;

2463 } i‡––
°r
[0] == 'r' ) && (str[1] == 'a') ) {

2464 
pktgí
.
Êags
 &~
PAGE_MASK_BITS
;

2465 
pktgí
.
Êags
 |
RANGE_PAGE_FLAG
;

2466 } i‡(
°r
[0] == 'c') {

2467 
pktgí
.
Êags
 &~
PAGE_MASK_BITS
;

2468 
pktgí
.
Êags
 |
CONFIG_PAGE_FLAG
;

2469 } i‡(
°r
[0] == 's') {

2470 
pktgí
.
Êags
 &~
PAGE_MASK_BITS
;

2471 
pktgí
.
Êags
 |
SEQUENCE_PAGE_FLAG
;

2472 } i‡(
°r
[0] == 'r') {

2473 
pktgí
.
Êags
 &~
PAGE_MASK_BITS
;

2474 
pktgí
.
Êags
 |
RND_BITFIELD_PAGE_FLAG
;

2475 } i‡(
°r
[0] == 'l') {

2476 
pktgí
.
Êags
 &~
PAGE_MASK_BITS
;

2477 
pktgí
.
Êags
 |
LOG_PAGE_FLAG
;

2479 
uöt16_t
 
°¨t_p‹t
;

2480 i‡(
°r
[0] == 'm')

2481 
∑ge
 = 0;

2482 
°¨t_p‹t
 = (
∑ge
 * 
pktgí
.
nb_p‹ts_≥r_∑ge
);

2483 i‡–(
pktgí
.
°¨tög_p‹t
 !
°¨t_p‹t
) &&

2484 (
°¨t_p‹t
 < 
pktgí
.
nb_p‹ts
) ) {

2485 
pktgí
.
°¨tög_p‹t
 = 
°¨t_p‹t
;

2486 
pktgí
.
ídög_p‹t
 = 
°¨t_p‹t
 +

2487 
pktgí
.
nb_p‹ts_≥r_∑ge
;

2488 i‡(
pktgí
.
ídög_p‹t
 >

2489 (
pktgí
.
°¨tög_p‹t
 +Öktgí.
nb_p‹ts
) )

2490 
pktgí
.
ídög_p‹t
 =

2491 (
pktgí
.
°¨tög_p‹t
 +

2492 
pktgí
.
nb_p‹ts
);

2494 i‡(
pktgí
.
Êags
 & 
PAGE_MASK_BITS
) {

2495 
pktgí
.
Êags
 &~
PAGE_MASK_BITS
;

2496 
pktgí
.
Êags
 |
PRINT_LABELS_FLAG
;

2499 
	`pktgí_ªdi•œy
(1);

2500 
	}
}

2515 
	$pktgí_£t_£q
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
£qnum
,

2516 
cmdlöe_ëhîaddr_t
 *
daddr
, cmdlöe_ëhîaddr_à*
ßddr
,

2517 
cmdlöe_ùaddr_t
 *
ù_daddr
, cmdlöe_ùaddr_à*
ù_ßddr
,

2518 
uöt32_t
 
•‹t
, uöt32_à
dp‹t
, 
ty≥
, 
¥Ÿo
,

2519 
uöt16_t
 
vœnid
, 
uöt32_t
 
pktsize
, uöt32_à
gçu_ãid
)

2521 
pkt_£q_t
 *
pkt
;

2523 
pkt
 = &
öfo
->
£q_pkt
[
£qnum
];

2524 
	`mem˝y
(&
pkt
->
ëh_d°_addr
, 
daddr
->
mac
, 6);

2525 
	`mem˝y
(&
pkt
->
ëh_§c_addr
, 
ßddr
->
mac
, 6);

2526 
pkt
->
ù_mask
 = 
	`size_to_mask
(
ù_ßddr
->
¥efixÀn
);

2527 i‡(
ty≥
 == '4') {

2528 
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
 = 
	`ht⁄l
(
ù_ßddr
->addr.ipv4.s_addr);

2529 
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
 = 
	`ht⁄l
(
ù_daddr
->addr.ipv4.s_addr);

2531 
	`mem˝y
(&
pkt
->
ù_§c_addr
.
addr
.
ùv6
.
__ö6_u
.
__u6_addr8
,

2532 
ù_ßddr
->
addr
.
ùv6
.
__ö6_u
.
__u6_addr8
, (
ö6_addr
));

2533 
	`mem˝y
(&
pkt
->
ù_d°_addr
.
addr
.
ùv6
.
__ö6_u
.
__u6_addr8
,

2534 
ù_daddr
->
addr
.
ùv6
.
__ö6_u
.
__u6_addr8
, (
ö6_addr
));

2536 
pkt
->
dp‹t
 = dport;

2537 
pkt
->
•‹t
 = sport;

2538 
pkt
->
pktSize
 = 
pktsize
 - 
FCS_SIZE
;

2539 
pkt
->
ùPrŸo
 = (
¥Ÿo
 ='u'Ë? 
PG_IPPROTO_UDP
 :

2540 (
¥Ÿo
 ='i'Ë? 
PG_IPPROTO_ICMP
 : 
PG_IPPROTO_TCP
;

2542 i‡(
¥Ÿo
 == 'i')

2543 
ty≥
 = '4';

2544 
pkt
->
ëhTy≥
 = (
ty≥
 ='6'Ë? 
ETHER_TYPE_IPv6
 : 
ETHER_TYPE_IPv4
;

2545 
pkt
->
vœnid
 = vlanid;

2546 
pkt
->
gçu_ãid
 = gtpu_teid;

2547 
	`pktgí_∑ckë_˘‹
(
öfo
, 
£qnum
, -1);

2548 
	}
}

2563 
	$pktgí_compûe_pkt
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
£qnum
,

2564 
cmdlöe_ëhîaddr_t
 *
daddr
, cmdlöe_ëhîaddr_à*
ßddr
,

2565 
cmdlöe_ùaddr_t
 *
ù_daddr
, cmdlöe_ùaddr_à*
ù_ßddr
,

2566 
uöt32_t
 
•‹t
, uöt32_à
dp‹t
, 
ty≥
, 
¥Ÿo
,

2567 
uöt16_t
 
vœnid
, 
uöt32_t
 
pktsize
, uöt32_à
gçu_ãid
)

2569 
pkt_£q_t
 *
pkt
;

2571 i‡(
£qnum
 >
NUM_EXTRA_TX_PKTS
)

2574 
pkt
 = &
öfo
->
£q_pkt
[
£qnum
 + 
EXTRA_TX_PKT
];

2576 
	`mem˝y
(&
pkt
->
ëh_d°_addr
, 
daddr
->
mac
, 6);

2577 
	`mem˝y
(&
pkt
->
ëh_§c_addr
, 
ßddr
->
mac
, 6);

2578 
pkt
->
ù_mask
 = 
	`size_to_mask
(
ù_ßddr
->
¥efixÀn
);

2579 
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
 = 
	`ht⁄l
(
ù_ßddr
->addr.ipv4.s_addr);

2580 
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
 = 
	`ht⁄l
(
ù_daddr
->addr.ipv4.s_addr);

2581 
pkt
->
dp‹t
 = dport;

2582 
pkt
->
•‹t
 = sport;

2583 
pkt
->
pktSize
 = 
pktsize
 - 
FCS_SIZE
;

2584 
pkt
->
ùPrŸo
 = (
¥Ÿo
 ='u'Ë? 
PG_IPPROTO_UDP
 :

2585 (
¥Ÿo
 ='i'Ë? 
PG_IPPROTO_ICMP
 : 
PG_IPPROTO_TCP
;

2587 i‡(
¥Ÿo
 == 'i')

2588 
ty≥
 = '4';

2589 
pkt
->
ëhTy≥
 = (
ty≥
 ='4'Ë? 
ETHER_TYPE_IPv4
 :

2590 (
ty≥
 ='6'Ë? 
ETHER_TYPE_IPv6
 :

2591 (
ty≥
 ='n'Ë? 
ETHER_TYPE_VLAN
 : 
ETHER_TYPE_IPv4
;

2592 
pkt
->
vœnid
 = vlanid;

2593 
pkt
->
gçu_ãid
 = gtpu_teid;

2594 
	`pktgí_∑ckë_˘‹
(
öfo
, 
£qnum
, -1);

2595 
	}
}

2611 
	$pktgí_£nd_pkt
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
£qnum
)

2613 
	`pktgí_£nd_£q_pkt
(
öfo
, 
£qnum
 + 
EXTRA_TX_PKT
);

2614 
	}
}

2629 
	$pktgí_ªcv_pkt
(
p‹t_öfo_t
 *
öfo
 
__πe_unu£d
)

2631 
	`pktgí_log_w¨nög
("Not working yet!");

2632 
	}
}

2647 
	$pktgí_quô
()

2649 
	`cmdlöe_quô
(
pktgí
.
˛
);

2650 
	}
}

	@app/pktgen-cmds.h

68 #i‚de‡
_PKTGEN_CMDS_H_


69 
	#_PKTGEN_CMDS_H_


	)

71 
	~<öây≥s.h
>

73 
	~"pktgí.h
"

76 íum { 
	mDISABLE_STATE
 = 0, 
	mENABLE_STATE
 = 1 };

78 
__ölöe__
 
uöt32_t


79 
	$∑r£Sèã
(c⁄° *
°©e
) {

80  ( !
	`°rˇ£cmp
(
°©e
,

82 !
	`°rˇ£cmp
(
°©e
, "enable") || !strcasecmp(state, "start") ) ?

83 
ENABLE_STATE
 : 
DISABLE_STATE
;

84 
	}
}

86 
pktgí_p‹t_å™smôtög
(
p‹t
);

87 *
pktgí_lök_°©e
(
p‹t
, *
buff
, 
Àn
);

88 *
pktgí_å™smô_cou¡
(
p‹t
, *
buff
, 
Àn
);

89 *
pktgí_å™smô_øã
(
p‹t
, *
buff
, 
Àn
);

90 
pktgí_p‹t_sizes
(
p‹t
, 
p‹t_sizes_t
 *
psizes
);

91 *
pktgí_å™smô_cou¡_øã
(
p‹t
, *
buff
, 
Àn
);

92 
pktgí_pkt_°©s
(
p‹t
, 
pkt_°©s_t
 *
p°©s
);

93 
pktgí_p‹t_°©s
(
p‹t
, c⁄° *
«me
, 
ëh_°©s_t
 *
p°©s
);

94 *
pktgí_Êags_°rög
(
p‹t_öfo_t
 *
öfo
);

95 
pktgí_m©rix_dump
();

96 
pktgí_ªdi•œy
(
˛s_Êag
);

97 
pktgí_upd©e_di•œy
();

98 
pktgí_upd©e
();

99 
pktgí_£t_∑ge_size
(
uöt32_t
 
∑ge_size
);

100 
pktgí_s¸ìn
(c⁄° *
⁄Off
);

101 
pktgí_£t_p‹t_numbî
(
uöt32_t
 
p‹t_numbî
);

102 
pktgí_£t_icmp_echo
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

103 
pktgí_c⁄fig_mac_‰om_¨p
(
uöt32_t
 
⁄Off
);

104 
pktgí_mempoﬁ_dump
(
p‹t_öfo_t
 *
öfo
, *
«me
);

105 
pktgí_°¨t_å™smôtög
(
p‹t_öfo_t
 *
öfo
);

106 
pktgí_°›_å™smôtög
(
p‹t_öfo_t
 *
öfo
);

107 
pktgí_¥ime_p‹ts
(
p‹t_öfo_t
 *
öfo
);

108 
pktgí_£t_¥Ÿo
(
p‹t_öfo_t
 *
öfo
, 
ty≥
);

109 
pktgí_£t_rx_èp
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

110 
pktgí_£t_tx_èp
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

111 
pktgí_ßve
(*
∑th
);

113 
pktgí_pˇp_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
);

114 
pktgí_blök_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
);

115 
pktgí_¥o˚ss_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
);

116 
pktgí_pˇp_fûãr
(
p‹t_öfo_t
 *
öfo
, *
°r
);

117 
pktgí_£t_pkt_ty≥
(
p‹t_öfo_t
 *
öfo
, c⁄° *
ty≥
);

118 
pktgí_˛ór_°©s
(
p‹t_öfo_t
 *
öfo
);

119 
pktgí_˛s
();

120 
pktgí_p‹t_deÁu…s
(
uöt32_t
 
pid
, 
uöt8_t
 
£q
);

121 
pktgí_pög4
(
p‹t_öfo_t
 *
öfo
);

122 #ifde‡
INCLUDE_PING6


123 
pktgí_pög6
(
p‹t_öfo_t
 *
öfo
);

125 
pktgí_ª£t
(
p‹t_öfo_t
 *
öfo
);

126 
pktgí_p‹t_ª°¨t
(
p‹t_öfo_t
 *
öfo
);

127 
pktgí_£t_tx_cou¡
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
˙t
);

128 
pktgí_£t_p‹t_£qC¡
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
˙t
);

129 
pktgí_£t_p‹t_¥ime
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
˙t
);

130 
pktgí_£t_p‹t_dump
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
˙t
);

131 
pktgí_£t_tx_bur°
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
bur°
);

132 
pktgí_£t_tx_cy˛es
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
cy˛es
);

133 
pktgí_£t_rx_cy˛es
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
cy˛es
);

134 
pktgí_£t_pkt_size
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
size
);

135 
pktgí_£t_p‹t_vÆue
(
p‹t_öfo_t
 *
öfo
,

136 
ty≥
,

137 
uöt32_t
 
p‹tVÆue
);

138 
pktgí_£t_tx_øã
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
øã
);

139 
pktgí_£t_ùaddr
(
p‹t_öfo_t
 *
öfo
, 
ty≥
,

140 
cmdlöe_ùaddr_t
 *
ù
);

141 
pktgí_£t_d°_mac
(
p‹t_öfo_t
 *
öfo
, 
cmdlöe_ëhîaddr_t
 *
mac
);

142 
pktgí_ønge_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
);

143 
pktgí_£t_de°_mac
(
p‹t_öfo_t
 *
öfo
,

144 c⁄° *
wh©
,

145 
cmdlöe_ëhîaddr_t
 *
mac
);

146 
pktgí_£t_§c_mac
(
p‹t_öfo_t
 *
öfo
,

147 c⁄° *
wh©
,

148 
cmdlöe_ëhîaddr_t
 *
mac
);

149 
pktgí_£t_§c_ù
(
p‹t_öfo_t
 *
öfo
,

150 *
wh©
,

151 
cmdlöe_ùaddr_t
 *
ù
);

152 
pktgí_£t_d°_ù
(
p‹t_öfo_t
 *
öfo
,

153 *
wh©
,

154 
cmdlöe_ùaddr_t
 *
ù
);

155 
pktgí_£t_§c_p‹t
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt16_t
 
p‹t
);

156 
pktgí_£t_d°_p‹t
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt16_t
 
p‹t
);

157 
pktgí_£nd_¨p_ªque°s
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
ty≥
);

158 
pktgí_£t_∑ge
(*
°r
);

159 
pktgí_£t_£q
(
p‹t_öfo_t
 *
öfo
,

160 
uöt32_t
 
£qnum
,

161 
cmdlöe_ëhîaddr_t
 *
daddr
,

162 
cmdlöe_ëhîaddr_t
 *
ßddr
,

163 
cmdlöe_ùaddr_t
 *
ù_daddr
,

164 
cmdlöe_ùaddr_t
 *
ù_ßddr
,

165 
uöt32_t
 
•‹t
,

166 
uöt32_t
 
dp‹t
,

167 
ù
,

168 
¥Ÿo
,

169 
uöt16_t
 
vœnid
,

170 
uöt32_t
 
pktsize
,

171 
uöt32_t
 
gçu_ãid
);

172 
pktgí_£t_ønge_pkt_size
(
p‹t_öfo_t
 *
öfo
,

173 *
wh©
,

174 
uöt16_t
 
size
);

175 
pktgí_£nd_pkt
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
£qnum
);

176 
pktgí_ªcv_pkt
(
p‹t_öfo_t
 *
öfo
);

177 
pktgí_dump_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
);

179 
pktgí_compûe_pkt
(
p‹t_öfo_t
 *
öfo
,

180 
uöt32_t
 
£qnum
,

181 
cmdlöe_ëhîaddr_t
 *
daddr
,

182 
cmdlöe_ëhîaddr_t
 *
ßddr
,

183 
cmdlöe_ùaddr_t
 *
ù_daddr
,

184 
cmdlöe_ùaddr_t
 *
ù_ßddr
,

185 
uöt32_t
 
•‹t
,

186 
uöt32_t
 
dp‹t
,

187 
ty≥
,

188 
¥Ÿo
,

189 
uöt16_t
 
vœnid
,

190 
uöt32_t
 
pktsize
,

191 
uöt32_t
 
gçu_ãid
);

193 
pktgí_quô
();

195 
pktgí_£t_vœn
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

196 
pktgí_£t_vœn_id
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt16_t
 
id
);

197 
pktgí_£t_vœnid
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
vœnid
);

199 
pktgí_£t_m∂s
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

200 
pktgí_£t_m∂s_íåy
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
m∂s_íåy
);

202 
pktgí_£t_qöq
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

203 
pktgí_£t_qöqids
(
p‹t_öfo_t
 *
öfo
,

204 
uöt16_t
 
ouãrid
,

205 
uöt16_t
 
ö√rid
);

207 
pktgí_£t_gª
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

208 
pktgí_£t_gª_ëh
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

209 
pktgí_£t_gª_key
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
gª_key
);

211 
pktgí_g¨p_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
);

213 
pktgí_mac_‰om_¨p
(
uöt32_t
 
⁄Off
);

215 
pktgí_£t_øndom
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
⁄Off
);

217 
pktgí_£t_gçu_ãid
(
p‹t_öfo_t
 *
öfo
, *
wh©
, 
uöt32_t
 
ãid
);

218 
pktgí_£t_¥Ÿo_ønge
(
p‹t_öfo_t
 *
öfo
, 
ty≥
);

219 
pktgí_£t_pkt_ty≥_ønge
(
p‹t_öfo_t
 *
öfo
, c⁄° *
ty≥
);

221 
pktgí_£t_∑âîn_ty≥
(
p‹t_öfo_t
 *
öfo
, *
°r
);

222 
pktgí_u£r_∑âîn_£t
(
p‹t_öfo_t
 *
öfo
, *
°r
);

223 
pktgí_dns_domaö_£t
(
p‹t_öfo_t
 *
öfo
, *
°r
);

224 
pktgí_œãncy_íabÀ_dißbÀ
(
p‹t_öfo_t
 *
öfo
, *
°r
);

	@app/pktgen-constants.h

68 #i‚de‡
_PKTGEN_CONSTANTS_H_


69 
	#_PKTGEN_CONSTANTS_H_


	)

71 
	~<πe_mbuf.h
>

74 
	mDEFAULT_PKT_BURST
 = 32,

75 #ifde‡
RTE_LIBRTE_VMXNET3_PMD


76 
	mDEFAULT_RX_DESC
 = (
DEFAULT_PKT_BURST
 * 8 * 2),

77 
	mDEFAULT_TX_DESC
 = 
DEFAULT_RX_DESC
,

79 
	mDEFAULT_RX_DESC
 = (
DEFAULT_PKT_BURST
 * 8),

80 
	mDEFAULT_TX_DESC
 = 
DEFAULT_RX_DESC
,

83 
	mMAX_MBUFS_PER_PORT
 = (
DEFAULT_TX_DESC
 * 8),

84 
	mMAX_SPECIAL_MBUFS
 = 64,

85 
	mMBUF_CACHE_SIZE
 = (
MAX_MBUFS_PER_PORT
 / 8),

87 
	mDEFAULT_BUFF_SIZE
 = 2048,

88 
	mDEFAULT_PRIV_SIZE
 = 0,

89 
	mMBUF_SIZE
 =

90 (
DEFAULT_BUFF_SIZE
 - (
πe_mbuf
) -

91 
DEFAULT_PRIV_SIZE
),

93 
	mNUM_Q
 = 8,

	@app/pktgen-cpu.c

68 
	~"pktgí-di•œy.h
"

69 
	~"pktgí-˝u.h
"

70 
	~"pktgí-log.h
"

72 
	~"pktgí.h
"

75 
	$ßve_u«me
(*
löe
, 
i
 
__πe_unu£d
) {

76 
pktgí
.
u«me
 = 
	`wr_°rdupf
’ktgí.u«me, 
löe
);

78 
	}
}

81 
	$pktgí_gë_u«me
()

83 
	`do_comm™d
("u«mê-a", 
ßve_u«me
);

84 
	}
}

86 
__ölöe__
 
uöt8_t


87 
	$s˘
(
uöt8_t
 
s
, uöt8_à
c
, uöt8_à
t
) {

88 
lc_öfo_t
 *
lc
 = &
pktgí
.
c‹e_öfo
[0];

89 
uöt8_t
 
i
;

91 
i
 = 0; i < 
pktgí
.
c‹e_˙t
; i++, 
lc
++)

92 i‡(
lc
->
s
.
sockë_id
 =†&&Üc->s.
c‹e_id
 =
c
 &&

93 
lc
->
s
.
thªad_id
 =
t
)

94  
lc
->
s
.
id
;

97 
	}
}

112 
	$pktgí_∑ge_˝u
()

114 
uöt32_t
 
i
, 
row
, 
˙t
, 
nb_sockës
, 
nb_c‹es
, 
nb_thªads
;

115 
cou¡î
 = 0;

116 
buff
[1024];

118 
	`di•œy_t›löe
("<CPU Page>");

120 i‡–(
pktgí
.
c‹e_˙t
 =0Ë|| (pktgí.
ls˝u
 =
NULL
) )

121 
	`pktgí_˝u_öô
();

123 
˙t
 = 
pktgí
.
c‹e_˙t
;

124 
nb_sockës
 = 
	`wr_c‹em≠_˙t
(
pktgí
.
c‹e_öfo
, 
˙t
, 0);

125 
nb_c‹es
 = 
	`wr_c‹em≠_˙t
(
pktgí
.
c‹e_öfo
, 
˙t
, 1);

126 
nb_thªads
 = 
	`wr_c‹em≠_˙t
(
pktgí
.
c‹e_öfo
, 
˙t
, 2);

128 i‡–(
cou¡î
++ & 3) != 0)

131 
row
 = 3;

132 
	`wr_s¸n_¥ötf
(
row
++, 1, "Kî√l: %s", 
pktgí
.
u«me
);

133 
row
++;

134 
	`wr_s¸n_¥ötf
(
row
++, 1, "Modñ Name: %s", 
pktgí
.
ls˝u
->
modñ_«me
);

135 
	`wr_s¸n_¥ötf
(
row
++, 1, "CPU S≥ed : %s", 
pktgí
.
ls˝u
->
˝u_mhz
);

136 
	`wr_s¸n_¥ötf
(
row
++, 1, "CachêSize: %s", 
pktgí
.
ls˝u
->
ˇche_size
);

137 
row
++;

138 
	`wr_s¸n_¥ötf
(
row
++, 1, "CPU Fœg†: %s", 
pktgí
.
ls˝u
->
˝u_Êags
);

139 
row
 += 4;

141 
	`wr_s¸n_¥ötf
(
row
++,

144 
nb_sockës
,

145 
nb_c‹es
,

146 
nb_thªads
);

148 
	`•rötf
(
buff
, "Socket : ");

149 
i
 = 0; i < 
nb_sockës
; i++)

150 
	`°∫ˇtf
(
buff
, "%4d ", 
i
);

151 
	`wr_s¸n_¥ötf
(
row
++, 3, "%s", 
buff
);

153 
buff
[0] = '\0';

154 
i
 = 0; i < 
nb_c‹es
; i++) {

155 
	`°∫ˇtf
(
buff
, " C‹ê%3d : [%2d,%2d] ", 
i
, 
	`s˘
(0,

156 
i
,

158 
	`s˘
(0, 
i
, 1));

159 i‡(
nb_sockës
 > 1)

160 
	`°∫ˇtf
(
buff
, "[%2d,%2d] ", 
	`s˘
(1, 
i
, 0), sct(1,

161 
i
,

163 i‡(
nb_sockës
 > 2)

164 
	`°∫ˇtf
(
buff
, "[%2d,%2d] ", 
	`s˘
(2, 
i
, 0), sct(2,

165 
i
,

167 i‡(
nb_sockës
 > 3)

168 
	`°∫ˇtf
(
buff
, "[%2d,%2d] ", 
	`s˘
(3, 
i
, 0), sct(3,

169 
i
,

171 
	`°∫ˇtf
(
buff
, "\n");

173 
	`wr_s¸n_¥ötf
(
row
++, 1, "%s", 
buff
);

175 
	`wr_p‹t_m©rix_dump
(
pktgí
.
l2p
);

177 i‡(
pktgí
.
Êags
 & 
PRINT_LABELS_FLAG
) {

178 
pktgí
.
œ°_row
 = 36;

179 
	`di•œy_dashlöe
(
pktgí
.
œ°_row
);

181 
	`wr_s¸n_£tw
(
pktgí
.
œ°_row
);

182 
	`wr_s¸n_¥ötf
(100, 1, "");

184 
pktgí
.
Êags
 &~
PRINT_LABELS_FLAG
;

185 
	}
}

200 
	$pktgí_˝u_öô
()

202 
	`pktgí_gë_u«me
();

203 
	`mem£t
(&
pktgí
.
c‹e_öfo
, 0xff, ((
lc_öfo_t
Ë* 
RTE_MAX_LCORE
));

204 
pktgí
.
c‹e_˙t
 = 
	`wr_c‹em≠
("array",

205 
pktgí
.
c‹e_öfo
,

206 
RTE_MAX_LCORE
,

207 
NULL
);

208 
pktgí
.
ls˝u
 = 
	`wr_ls˝u_öfo
(
NULL
, NULL);

209 
	}
}

	@app/pktgen-cpu.h

68 #i‚de‡
_PKTGEN_CPU_H_


69 
	#_PKTGEN_CPU_H_


	)

83 
pktgí_˝u_öô
();

97 
pktgí_∑ge_˝u
();

	@app/pktgen-display.c

68 
	~"pktgí-di•œy.h
"

69 
	~"pktgí-cmds.h
"

71 
	#MAX_COLOR_NAME_SIZE
 64

	)

72 
	#MAX_PROMPT_STRING_SIZE
 64

	)

74 
	g¥om±_°r
[
MAX_PROMPT_STRING_SIZE
] = { 0 };

77 
	s°rög_cﬁ‹_m≠_s
 {

78 c⁄° *
	m«me
;

79 
cﬁ‹_e
 
	mcﬁ‹
;

80 } 
	t°rög_cﬁ‹_m≠_t
;

82 
°rög_cﬁ‹_m≠_t
 
	g°rög_cﬁ‹_m≠
[] = {

83 { "bœck", 
BLACK
 },

84 { "bœck", 
DEFAULT_FG
 },

85 { "ªd", 
RED
 },

86 { "gªí", 
GREEN
 },

87 { "yñlow", 
YELLOW
 },

88 { "blue", 
BLUE
 },

89 { "magíè", 
MAGENTA
 },

90 { "cy™", 
CYAN
 },

91 { "whôe", 
WHITE
 },

92 { "whôe", 
DEFAULT_BG
 },

93 { "deÁu…", 
WHITE
 },

95 { "n⁄e", 
NO_CHANGE
 },

96 { "deÁu…_fg", 
NO_CHANGE
 },

97 { "deÁu…_bg", 
NO_CHANGE
 },

98 { 
NULL
, 0 }

102 
	s°rög_©å_m≠_s
 {

103 c⁄° *
	m«me
;

104 
©å_e
 
	m©å
;

105 } 
	t°rög_©å_m≠_t
;

107 
°rög_©å_m≠_t
 
	g°rög_©å_m≠
[] = {

108 { "off", 
OFF
 },

109 { "deÁu…", 
OFF
 },

110 { "bﬁd", 
BOLD
 },

111 { "bright", 
BOLD
 },

112 { "undîsc‹e", 
UNDERSCORE
 },

113 { "undîlöe", 
UNDERSCORE
 },

114 { "blök", 
BLINK
 },

115 { "ªvî£", 
REVERSE
 },

116 { "c⁄˚Æed", 
CONCEALED
 },

117 { 
NULL
, 0 }

121 
	stheme_cﬁ‹_m≠_s
 {

122 c⁄° *
	m«me
;

123 
cﬁ‹_e
 
	mfg_cﬁ‹
;

124 
cﬁ‹_e
 
	mbg_cﬁ‹
;

125 
©å_e
 
	m©å
;

126 } 
	ttheme_cﬁ‹_m≠_t
;

128 
theme_cﬁ‹_m≠_t
 
	gtheme_cﬁ‹_m≠
[] = {

130 { "deÁu…", 
DEFAULT_FG
, 
DEFAULT_BG
, 
OFF
 },

135 { "t›.•ö√r", 
CYAN
, 
NO_CHANGE
, 
BOLD
 },

136 { "t›.p‹ts", 
GREEN
, 
NO_CHANGE
, 
BOLD
 },

137 { "t›.∑ge", 
WHITE
, 
NO_CHANGE
, 
BOLD
 },

138 { "t›.c›yright", 
YELLOW
, 
NO_CHANGE
, 
OFF
 },

139 { "t›.powîedby", 
BLUE
, 
NO_CHANGE
, 
BOLD
 },

144 { "£p.dash", 
BLUE
, 
NO_CHANGE
, 
OFF
 },

145 { "£p.ãxt", 
WHITE
, 
NO_CHANGE
, 
OFF
 },

151 { "°©s.p‹t.œbñ", 
BLUE
, 
NO_CHANGE
, 
BOLD
 },

152 { "°©s.p‹t.Êags", 
BLUE
, 
NO_CHANGE
, 
BOLD
 },

153 { "°©s.p‹t.°©us", 
YELLOW
, 
NO_CHANGE
, 
BOLD
 },

156 { "°©s.dyn.œbñ", 
YELLOW
, 
NO_CHANGE
, 
OFF
 },

157 { "°©s.dyn.vÆues", 
YELLOW
, 
NO_CHANGE
, 
OFF
 },

160 { "°©s.°©.œbñ", 
MAGENTA
, 
NO_CHANGE
, 
OFF
 },

161 { "°©s.°©.vÆues", 
WHITE
, 
NO_CHANGE
, 
BOLD
 },

164 { "°©s.tŸÆ.œbñ", 
RED
, 
NO_CHANGE
, 
BOLD
 },

167 { "°©s.cﬁ⁄", 
BLUE
, 
NO_CHANGE
, 
BOLD
 },

172 { "pktgí.¥om±", 
GREEN
, 
NO_CHANGE
, 
OFF
 },

173 { 
NULL
, 0, 0, 0 }

178 
	$pktgí_öô_s¸ìn
(
theme
)

180 
pktgí
.
s¸n
 = 
	`wr_s¸n_öô
(
MAX_SCRN_ROWS
, 
MAX_SCRN_COLS
, 
theme
);

181 
	}
}

185 
	$di•œy_t›löe
(c⁄° *
msg
)

187 
	`wr_s¸n_¥ötf
(1, 20, "%s", 
msg
);

188 
	`pktgí_di•œy_£t_cﬁ‹
("top.copyright");

189 
	`wr_s¸n_puts
(" %s", 
	`wr_c›yright_msg_sh‹t
());

190 
	`pktgí_di•œy_£t_cﬁ‹
(
NULL
);

191 
	}
}

195 
	$di•œy_dashlöe
(
œ°_row
)

197 
i
;

199 
	`wr_s¸n_£tw
(
œ°_row
);

200 
œ°_row
--;

201 
	`wr_s¸n_pos
(
œ°_row
, 1);

202 
	`pktgí_di•œy_£t_cﬁ‹
("sep.dash");

203 
i
 = 0; i < 79; i++)

204 
	`wr_s¸n_Ârötf
(0, 0, 
°dout
, "-");

205 
	`pktgí_di•œy_£t_cﬁ‹
("sep.text");

206 
	`wr_s¸n_¥ötf
(
œ°_row
, 3, " Pktgí %†", 
	`pktgí_vîsi⁄
());

207 
	`pktgí_di•œy_£t_cﬁ‹
("top.poweredby");

208 
	`wr_s¸n_puts
(" %†", 
	`wr_powîed_by
());

209 
	`pktgí_di•œy_£t_cﬁ‹
(
NULL
);

210 
	}
}

214 
	$pktgí_di•œy_£t_geomëry
(
uöt16_t
 
rows
, uöt16_à
cﬁs
)

216 
__s¸n
->
ƒows
 = 
rows
;

217 
__s¸n
->
ncﬁs
 = 
cﬁs
;

218 
	}
}

222 
	$pktgí_di•œy_gë_geomëry
(
uöt16_t
 *
rows
, uöt16_à*
cﬁs
)

224 i‡(
rows
 !
NULL
)

225 *
rows
 = 
__s¸n
->
ƒows
;

227 i‡(
cﬁs
 !
NULL
)

228 *
cﬁs
 = 
__s¸n
->
ncﬁs
;

229 
	}
}

232 
theme_cﬁ‹_m≠_t
 *

233 
	$lookup_ôem
(c⁄° *
ñem
)

235 
theme_cﬁ‹_m≠_t
 *
ªsu…
;

237 i‡(
ñem
 =
NULL
)

238 
ñem
 = "default";

241 
ªsu…
 = 
theme_cﬁ‹_m≠
;Ñesu…->
«me
 !
NULL
; ++result)

242 i‡(
	`°∫ˇ£cmp
(
ªsu…
->
«me
, 
ñem
, 
MAX_COLOR_NAME_SIZE
) == 0)

246 i‡(
ªsu…
->
«me
 =
NULL
)

247 
ªsu…
 = 
NULL
;

249  
ªsu…
;

250 
	}
}

254 
	$pktgí_di•œy_£t_cﬁ‹
(c⁄° *
ñem
) {

255 
theme_cﬁ‹_m≠_t
 *
theme_cﬁ‹
;

257 i‡(
__s¸n
->
theme
 =
THEME_OFF
)

260 
theme_cﬁ‹
 = 
	`lookup_ôem
(
ñem
);

261 i‡(
theme_cﬁ‹
 =
NULL
) {

262 
	`pktgí_log_îr‹
("Unknow¿cﬁ‹ '%s'", 
ñem
);

266 
	`wr_s¸n_cﬁ‹
(
theme_cﬁ‹
->
fg_cﬁ‹
,

267 
theme_cﬁ‹
->
bg_cﬁ‹
,

268 
theme_cﬁ‹
->
©å
);

269 
	}
}

273 
	$__£t_¥om±
()

275 
theme_cﬁ‹_m≠_t
 *
def
, *
¥om±
;

278 
	`¢¥ötf
(
¥om±_°r
, ’rom±_°r), "%s> ", 
PKTGEN_APP_NAME
);

280 i‡–(
__s¸n
->
theme
 =
THEME_ON
Ë&& !
	`wr_s¸n_is_∑u£d
() ) {

282 
def
 = 
	`lookup_ôem
(
NULL
);

283 
¥om±
 = 
	`lookup_ôem
("pktgen.prompt");

285 i‡–(
def
 =
NULL
Ë|| (
¥om±
 == NULL) )

286 
	`pktgí_log_îr‹
("Promptánd/or default color undefined");

290 
	`¢¥ötf
(
¥om±_°r
,

291 (
¥om±_°r
),

293 
¥om±
->
©å
,

294 30 + 
¥om±
->
fg_cﬁ‹
,

295 40 + 
¥om±
->
bg_cﬁ‹
,

296 
PKTGEN_APP_NAME
,

297 
def
->
©å
,

298 30 + 
def
->
fg_cﬁ‹
,

299 40 + 
def
->
bg_cﬁ‹
);

302 
	`cmdlöe_£t_¥om±
(
pktgí
.
˛
, 
¥om±_°r
);

303 
	}
}

306 
	$gë_«me_by_cﬁ‹
(
cﬁ‹_e
 
cﬁ‹
)

308 
i
;

310 
i
 = 0; 
°rög_cﬁ‹_m≠
[i].
«me
; i++)

311 i‡(
cﬁ‹
 =
°rög_cﬁ‹_m≠
[
i
].color)

312  
°rög_cﬁ‹_m≠
[
i
].
«me
;

313  
NULL
;

314 
	}
}

317 
	$gë_«me_by_©å
(
©å_e
 
©å
)

319 
i
;

321 
i
 = 0; 
°rög_©å_m≠
[i].
«me
; i++)

322 i‡(
©å
 =
°rög_©å_m≠
[
i
].attr)

323  
°rög_©å_m≠
[
i
].
«me
;

324  
NULL
;

325 
	}
}

327 
cﬁ‹_e


328 
	$gë_cﬁ‹_by_«me
(*
«me
)

330 
i
;

332 
i
 = 0; 
°rög_cﬁ‹_m≠
[i].
«me
; i++)

333 i‡(
	`°rcmp
(
«me
, 
°rög_cﬁ‹_m≠
[
i
].name) == 0)

334  
°rög_cﬁ‹_m≠
[
i
].
cﬁ‹
;

335  
UNKNOWN_COLOR
;

336 
	}
}

338 
©å_e


339 
	$gë_©å_by_«me
(*
«me
)

341 
i
;

343 
i
 = 0; 
°rög_©å_m≠
[i].
«me
; i++)

344 i‡(
	`°rcmp
(
«me
, 
°rög_©å_m≠
[
i
].name) == 0)

345  
°rög_©å_m≠
[
i
].
©å
;

346  
UNKNOWN_ATTR
;

347 
	}
}

350 
	$pktgí_theme_show
()

352 
i
;

354 
	`¥ötf
("*** Theme Color Map Names (%s) ***\n",

355 
__s¸n
->
theme
 ? "Enabled" : "Disabled");

356 
	`¥ötf
(" %-30s %-10s %-10s %s\n",

361 
i
 = 0; 
theme_cﬁ‹_m≠
[i].
«me
; i++) {

362 
	`¥ötf
(" %-32s %-10s %-10s %-6s",

363 
theme_cﬁ‹_m≠
[
i
].
«me
,

364 
	`gë_«me_by_cﬁ‹
(
theme_cﬁ‹_m≠
[
i
].
fg_cﬁ‹
),

365 
	`gë_«me_by_cﬁ‹
(
theme_cﬁ‹_m≠
[
i
].
bg_cﬁ‹
),

366 
	`gë_«me_by_©å
(
theme_cﬁ‹_m≠
[
i
].
©å
));

367 
	`¥ötf
(" ");

368 
	`pktgí_di•œy_£t_cﬁ‹
(
theme_cﬁ‹_m≠
[
i
].
«me
);

369 
	`¥ötf
("%-s", 
theme_cﬁ‹_m≠
[
i
].
«me
);

370 
	`pktgí_di•œy_£t_cﬁ‹
(
NULL
);

371 
	`¥ötf
("\n");

373 
	}
}

376 
	$pktgí_theme_°©e
(c⁄° *
°©e
)

378 i‡(
	`∑r£Sèã
(
°©e
Ë=
DISABLE_STATE
)

379 
__s¸n
->
theme
 = 
THEME_OFF
;

381 
__s¸n
->
theme
 = 
THEME_ON
;

382 
	`__£t_¥om±
();

383 
	}
}

386 
	$pktgí_£t_theme_ôem
(*
ôem
, *
fg_cﬁ‹
, *
bg_cﬁ‹
, *
©å
)

388 
theme_cﬁ‹_m≠_t
 *
ñem
;

389 
cﬁ‹_e
 
fg
, 
bg
;

390 
©å_e
 
©
;

392 
ñem
 = 
	`lookup_ôem
(
ôem
);

394 i‡(
ñem
 =
NULL
) {

395 
	`pktgí_log_îr‹
("Unknow¿ôemÇamê(%s)\n", 
ôem
);

399 
fg
 = 
	`gë_cﬁ‹_by_«me
(
fg_cﬁ‹
);

400 
bg
 = 
	`gë_cﬁ‹_by_«me
(
bg_cﬁ‹
);

401 
©
 = 
	`gë_©å_by_«me
(
©å
);

403 i‡–(
fg
 =
UNKNOWN_COLOR
Ë|| (
bg
 == UNKNOWN_COLOR) ||

404 (
©
 =
UNKNOWN_ATTR
) ) {

405 
	`pktgí_log_îr‹
("Unknown color oráttribute (%s, %s, %s)\n",

406 
fg_cﬁ‹
,

407 
bg_cﬁ‹
,

408 
©å
);

412 
ñem
->
fg_cﬁ‹
 = 
fg
;

413 
ñem
->
bg_cﬁ‹
 = 
bg
;

414 
ñem
->
©å
 = 
©
;

415 
	}
}

418 
	$pktgí_theme_ßve
(*
fûíame
)

420 
FILE
 *
f
;

421 
i
;

423 
f
 = 
	`f›í
(
fûíame
, "w+");

424 i‡(
f
 =
NULL
) {

425 
	`pktgí_log_îr‹
("U«bÀÅÿ›í fûê%s\n", 
fûíame
);

429 
i
 = 0; 
theme_cﬁ‹_m≠
[i].
«me
; i++)

430 
	`Ârötf
(
f
, "theme %s %s %s %s\n",

431 
theme_cﬁ‹_m≠
[
i
].
«me
,

432 
	`gë_«me_by_cﬁ‹
(
theme_cﬁ‹_m≠
[
i
].
fg_cﬁ‹
),

433 
	`gë_«me_by_cﬁ‹
(
theme_cﬁ‹_m≠
[
i
].
bg_cﬁ‹
),

434 
	`gë_«me_by_©å
(
theme_cﬁ‹_m≠
[
i
].
©å
));

435 
	`Ârötf
(
f
, "cls\n");

437 
	`f˛o£
(
f
);

438 
	}
}

	@app/pktgen-display.h

68 #i‚de‡
_PKTGEN_DISPLAY_H_


69 
	#_PKTGEN_DISPLAY_H_


	)

72 
	~<wr_s¸n.h
>

74 
	~<wr_c›yright_öfo.h
>

76 
	~"pktgí.h
"

79 
pktgí_öô_s¸ìn
(
theme
);

92 
di•œy_t›löe
(c⁄° *
msg
);

105 
di•œy_dashlöe
(
œ°_row
);

118 
pktgí_di•œy_£t_geomëry
(
uöt16_t
 
rows
, uöt16_à
cﬁs
);

131 
pktgí_di•œy_gë_geomëry
(
uöt16_t
 *
rows
, uöt16_à*
cﬁs
);

144 
pktgí_di•œy_£t_cﬁ‹
(c⁄° *
ñem
);

159 
pktgí_£t_¥om±
();

172 
pktgí_show_theme
();

185 
pktgí_£t_theme_ôem
(*
ôem
,

186 *
fg_cﬁ‹
,

187 *
bg_cﬁ‹
,

188 *
©å
);

201 
pktgí_theme_ßve
(*
fûíame
);

214 
pktgí_theme_°©e
(c⁄° *
°©e
);

227 
pktgí_theme_show
();

	@app/pktgen-dns.c

68 
	~"pktgí.h
"

70 
	~"pktgí-dns.h
"

71 
	~"x‹shi·128∂us.h
"

84 
	$£t_dns_«me_f‹m©
(* 
q«me
, * 
ho°
)

87 *
bungÀ
, *
x
;

88 
ñem
[128];

90 *
q«me
 = 0;

91 
bungÀ
 = 
	`πe_mÆloc
(
NULL
,
	`°æí
(
ho°
) + 3,0);

92 
	`πe_mem˝y
(
bungÀ
, 
ho°
, 
	`°æí
(host) + 3);

93 
x
 = 
	`°πok
(
bungÀ
, ".");

94 
x
 !
NULL
) {

95 i‡(
	`¢¥ötf
(
ñem
, 128, "%c%s", ()
	`°æí
(
x
), x) == 128) {

96 
	`puts
("String overflow.");

97 
	`exô
(1);

99 
	`°∫ˇt
(
q«me
, 
ñem
, 
	`°æí
(elem) + 1);

100 
x
 = 
	`°πok
(
NULL
, ".");

102 
	`πe_‰ì
(
bungÀ
);

104 
	}
}

120 
	$pktgí_dns_hdr_˘‹
(
p‹t_öfo_t
 *
öfo
, 
dnsHdr_t
 *
duù
, 
uöt16_t
 
ùPrŸo
)

122 *
buf„r
 = (*)
duù
;

123 
l4HdrSize
 = 0;

124 *
q«me
;

126 i‡(
ùPrŸo
 =
PG_IPPROTO_UDP
)

127 
l4HdrSize
 = (
udpHdr_t
);

129 
l4HdrSize
 = (
t˝Hdr_t
);

131 
dnsHdr_t
 *
dnsHdr
 =

132 (
dnsHdr_t
 *)(
buf„r
 + (
ùHdr_t
Ë+ 
l4HdrSize
);

135 
	`mem£t
((*)
dnsHdr
, 0, (
dnsHdr_t
));

138 
dnsHdr
->
id
 = 
	`ht⁄s
(
	`øndom_16
());

139 
dnsHdr
->
Êags
 = 
	`ht⁄s
(0x0100);

140 
dnsHdr
->
qdcou¡
 = 
	`ht⁄s
(1);

141 
dnsHdr
->
™cou¡
 = 0;

142 
dnsHdr
->
nscou¡
 = 0;

143 
dnsHdr
->
¨cou¡
 = 0;

146 
q«me
 = (*)(
buf„r
 + (
ùHdr_t
Ë+ 
l4HdrSize
 + (
dnsHdr_t
));

147 
	`£t_dns_«me_f‹m©
(
q«me
 , 
öfo
->
dns_domaö
);

150 
dnsQuîy_t
 *
dnsQuîy
 =

151 (
dnsQuîy_t
 *)(
buf„r
 + (
ùHdr_t
Ë+ 
l4HdrSize
 + (
dnsHdr_t
Ë+ (
	`°æí
((c⁄° *)
q«me
) + 1));

152 
dnsQuîy
->
qty≥
 = 
	`ht⁄s
 (0x1);

153 
dnsQuîy
->
q˛ass
 = 
	`ht⁄s
 (0x1);

158 
dnsQuîy
->
cou¡1
 = 0x6;

159 
dnsQuîy
->
cou¡2
 = 0x3;

160 
dnsQuîy
->
ch7
 = 'o';

161 
dnsQuîy
->
ch8
 = 'r';

162 
dnsQuîy
->
ch9
 = 'g';

163 
dnsQuîy
->
nuŒ
 = 
	`ht⁄s
(0x0);

164 
dnsQuîy
->
qty≥
 = 
	`ht⁄s
 (0x1);

165 
dnsQuîy
->
q˛ass
 = 
	`ht⁄s
 (0x1);

168 
dnsQuîy
->
ch1
 = 
	`øndom_ch
();

169 
dnsQuîy
->
ch2
 = 
	`øndom_ch
();

170 
dnsQuîy
->
ch3
 = 
	`øndom_ch
();

171 
dnsQuîy
->
ch4
 = 
	`øndom_ch
();

172 
dnsQuîy
->
ch5
 = 
	`øndom_ch
();

173 
dnsQuîy
->
ch6
 = 
	`øndom_ch
();

175 
	}
}

	@app/pktgen-dns.h

68 #i‚de‡
_PKTGEN_DNS_H_


69 
	#_PKTGEN_DNS_H_


	)

71 
	~<wr_öë.h
>

73 
	~"pktgí-£q.h
"

88 
pktgí_dns_hdr_˘‹
(
p‹t_öfo_t
 *
öfo
,

89 
dnsHdr_t
 *
duù
,

90 
uöt16_t
 
ùPrŸo
);

	@app/pktgen-dump.c

68 
	~"pktgí.h
"

69 
	~"pktgí-log.h
"

84 
	$pktgí_∑ckë_dump
(
πe_mbuf
 *
m
, 
pid
)

86 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

87 
∂í
 = (
m
->
pkt_Àn
 + 
FCS_SIZE
);

88 *
cuº_d©a
;

89 
πe_mbuf
 *
cuº_mbuf
;

92 i‡(
öfo
->
dump_li°
[öfo->
dump_èû
].
d©a
 !
NULL
)

93 
	`πe_‰ì
(
öfo
->
dump_li°
[öfo->
dump_èû
].
d©a
);

95 
öfo
->
dump_li°
[öfo->
dump_èû
].
d©a
 = 
	`πe_mÆloc
("Packet data",

96 
∂í
,

98 
öfo
->
dump_li°
[öfo->
dump_èû
].
Àn
 = 
∂í
;

100 
cuº_d©a
 = 
öfo
->
dump_li°
[öfo->
dump_èû
].
d©a
, 
cuº_mbuf
 = 
m
;

101 
cuº_mbuf
 !
NULL
;

102 
cuº_d©a
 +
cuº_mbuf
->
d©a_Àn
, cuº_mbu‡cuº_mbuf->
√xt
)

103 
	`πe_mem˝y
(
cuº_d©a
,

104 (
uöt8_t
 *)
cuº_mbuf
->
buf_addr
 + 
m
->
d©a_off
,

105 
cuº_mbuf
->
d©a_Àn
);

107 ++
öfo
->
dump_èû
;

108 
	}
}

123 
	$pktgí_∑ckë_dump_bulk
(
πe_mbuf
 **
pkts
, 
nb_dump
, 
pid
)

125 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

126 
i
;

129 i‡(
nb_dump
 > 
öfo
->
dump_cou¡
)

130 
nb_dump
 = 
öfo
->
dump_cou¡
;

133 i‡(
nb_dump
 > 
MAX_DUMP_PACKETS
 - 
öfo
->
dump_èû
)

134 
nb_dump
 = 
MAX_DUMP_PACKETS
 - 
öfo
->
dump_èû
;

136 i‡(
nb_dump
 == 0)

139 
i
 = 0; i < 
nb_dump
; i++)

140 
	`pktgí_∑ckë_dump
(
pkts
[
i
], 
pid
);

142 
öfo
->
dump_cou¡
 -
nb_dump
;

143 
	}
}

159 
	$pktgí_¥öt_∑ckë_dump
()

161 
p‹t_öfo_t
 *
öfo
;

163 
pid
;

164 
i
, 
j
;

165 *
pd©a
;

166 
uöt32_t
 
∂í
;

167 
buff
[4096];

169 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

170 i‡(
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
RTE_MAX_LCORE
) == 0)

173 
öfo
 = &
pktgí
.öfo[
pid
];

174 ; 
öfo
->
dump_hód
 < info->
dump_èû
; ++info->dump_head) {

175 
pd©a
 =

176 (*)
öfo
->
dump_li°
[öfo->
dump_hód


177 ].
d©a
;

178 
∂í
 = 
öfo
->
dump_li°
[öfo->
dump_hód
].
Àn
;

180 
	`¢¥ötf
(
buff
, (buff),

181 "P‹à%d,Öackë wôhÜígth %d:", 
pid
, 
∂í
);

183 
i
 = 0; i < 
∂í
; i += 16) {

184 
	`°∫ˇtf
(
buff
, "\n\t");

187 
	`°∫ˇtf
(
buff
, "%06x: ", 
i
);

189 
j
 = 0; j < 16; ++j) {

191 i‡(
i
 + 
j
 < 
∂í
)

192 
	`°∫ˇtf
(
buff
, "%02x ",

193 
pd©a
[
i
 + 
j
]);

195 
	`°∫ˇtf
(
buff
, " ");

198 i‡((
j
 + 1) % 8 == 0)

199 
	`°∫ˇtf
(
buff
, " ");

203 
	`°∫ˇtf
(
buff
, "\t");

205 
j
 = 0; j < 16; ++j)

206 i‡(
i
 + 
j
 < 
∂í
)

207 
	`°∫ˇtf
(
buff
, "%c",

208 
	`i•röt
(
pd©a
[
i
 +

209 
j
]Ë? 
pd©a
[

210 
i
 + 
j
] : '.');

212 
	`pktgí_log_öfo
("%s", 
buff
);

214 
	`πe_‰ì
(
öfo
->
dump_li°
[öfo->
dump_hód
].
d©a
);

215 
öfo
->
dump_li°
[öfo->
dump_hód
].
d©a
 = 
NULL
;

218 
	}
}

	@app/pktgen-dump.h

68 #i‚de‡
_PKTGEN_DUMP_H_


69 
	#_PKTGEN_DUMP_H_


	)

71 
	~<πe_mbuf.h
>

73 
	#MAX_DUMP_PACKETS
 32

	)

75 
pktgí_∑ckë_dump
(
πe_mbuf
 *
m
, 
pid
);

76 
pktgí_∑ckë_dump_bulk
(
πe_mbuf
 **
pkts
, 
nb_dump
,

77 
pid
);

79 
pktgí_¥öt_∑ckë_dump
();

	@app/pktgen-ether.c

68 
	~"pktgí-ëhî.h
"

69 
	~"pktgí-£q.h
"

70 
	~"pktgí-p‹t-cfg.h
"

85 
	$pktgí_ëhî_hdr_˘‹
(
p‹t_öfo_t
 *
öfo
, 
pkt_£q_t
 *
pkt
, 
ëhî_hdr
 *
ëh
)

87 
uöt32_t
 
Êags
;

90 
	`ëhî_addr_c›y
(&
pkt
->
ëh_§c_addr
, &
ëh
->
s_addr
);

91 
	`ëhî_addr_c›y
(&
pkt
->
ëh_d°_addr
, &
ëh
->
d_addr
);

93 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

94 i‡(
Êags
 & 
SEND_VLAN_ID
) {

96 
ëh
->
ëhî_ty≥
 = 
	`ht⁄s
(
ETHER_TYPE_VLAN
);

99 
vœn_hdr
 *vœn_hd∏(vœn_hd∏*)(
ëh
 + 1);

100 
vœn_hdr
->
vœn_tci
 = 
	`ht⁄s
(
pkt
->
vœnid
);

101 
vœn_hdr
->
ëh_¥Ÿo
 = 
	`ht⁄s
(
pkt
->
ëhTy≥
);

104 
pkt
->
ëhî_hdr_size
 = (
ëhî_hdr
) +

105 (
vœn_hdr
);

107  (*)(
vœn_hdr
 + 1);

108 } i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
SEND_MPLS_LABEL
) {

110 
ëh
->
ëhî_ty≥
 = 
	`ht⁄s
(
ETHER_TYPE_MPLS_UNICAST
);

112 
m∂sHdr_t
 *
m∂s_hdr
 = (m∂sHdr_à*)(
ëh
 + 1);

116 
uöt32_t
 
m∂s_œbñ
 = 
pkt
->
m∂s_íåy
;

117 
	`MPLS_SET_BOS
(
m∂s_œbñ
);

119 
m∂s_hdr
->
œbñ
 = 
	`ht⁄l
(
m∂s_œbñ
);

122 
pkt
->
ëhî_hdr_size
 = (
ëhî_hdr
) +

123 (
m∂sHdr_t
);

125  (*)(
m∂s_hdr
 + 1);

126 } i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
SEND_Q_IN_Q_IDS
) {

128 
ëh
->
ëhî_ty≥
 = 
	`ht⁄s
(
ETHER_TYPE_Q_IN_Q
);

130 
qöqHdr_t
 *
qöq_hdr
 = (qöqHdr_à*)(
ëh
 + 1);

133 
qöq_hdr
->
qöq_tci
 = 
	`ht⁄s
(
pkt
->
qöq_ouãrid
);

135 
qöq_hdr
->
vœn_çid
 = 
	`ht⁄s
(
ETHER_TYPE_VLAN
);

136 
qöq_hdr
->
vœn_tci
 = 
	`ht⁄s
(
pkt
->
qöq_ö√rid
);

138 
qöq_hdr
->
ëh_¥Ÿo
 = 
	`ht⁄s
(
pkt
->
ëhTy≥
);

141 
pkt
->
ëhî_hdr_size
 = (
ëhî_hdr
) +

142 (
qöqHdr_t
);

144  (*)(
qöq_hdr
 + 1);

147 
ëh
->
ëhî_ty≥
 = 
	`ht⁄s
(
pkt
->
ëhTy≥
);

148 
pkt
->
ëhî_hdr_size
 = (
ëhî_hdr
);

151  (*)(
ëh
 + 1);

152 
	}
}

	@app/pktgen-ether.h

68 #i‚de‡
_PKTGEN_ETHER_H_


69 
	#_PKTGEN_ETHER_H_


	)

71 
	~<πe_ëhdev.h
>

73 
	~"pktgí-£q.h
"

75 
πe_ëh_°©s
 
	tëh_°©s_t
;

77 
	gp‹t_öfo_s
;

79 *
pktgí_ëhî_hdr_˘‹
(
p‹t_öfo_s
 *
öfo
,

80 
pkt_£q_t
 *
pkt
,

81 
ëhî_hdr
 *
ëh
);

	@app/pktgen-gre.c

68 
	~"pktgí-gª.h
"

69 
	~"pktgí.h
"

84 
	$pktgí_gª_hdr_˘‹
(
p‹t_öfo_t
 *
öfo
 
__πe_unu£d
, 
pkt_£q_t
 *
pkt
,

85 
gªIp_t
 *
gª
)

88 
	`mem£t
((*)
gª
, 0, (
gªIp_t
));

91 
gª
->
ù
.
vl
 = (
IPv4_VERSION
 << 4Ë| ((
ùHdr_t
) / 4);

92 
gª
->
ù
.
tos
 = 0;

93 
gª
->
ù
.
éí
 = 
	`ht⁄s
(
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
);

95 
pktgí
.
idít
 += 27;

96 
gª
->
ù
.
idít
 = 
	`ht⁄s
(
pktgí
.ident);

97 
gª
->
ù
.
f‰ag
 = 0;

98 
gª
->
ù
.
âl
 = 64;

99 
gª
->
ù
.
¥Ÿo
 = 
PG_IPPROTO_GRE
;

102 
	#GRE_SRC_ADDR
 (10 << 24Ë| (10 << 16Ë| (1 << 8Ë| 1

	)

103 
	#GRE_DST_ADDR
 (10 << 24Ë| (10 << 16Ë| (1 << 8Ë| 2

	)

104 
gª
->
ù
.
§c
 = 
	`ht⁄l
(
GRE_SRC_ADDR
);

105 
gª
->
ù
.
d°
 = 
	`ht⁄l
(
GRE_DST_ADDR
);

106 #unde‡
GRE_SRC_ADDR


107 #unde‡
GRE_DST_ADDR


109 
gª
->
ù
.
cksum
 = 
	`cksum
(gª, (
ùHdr_t
), 0);

112 
gª
->gª.
chk_¥e£¡
 = 0;

113 
gª
->gª.
unu£d
 = 0;

114 
gª
->gª.
key_¥e£¡
 = 1;

115 
gª
->gª.
£q_¥e£¡
 = 0;

117 
gª
->gª.
ª£rved0_0
 = 0;

118 
gª
->gª.
ª£rved0_1
 = 0;

120 
gª
->gª.
vîsi⁄
 = 0;

121 
gª
->gª.
ëh_ty≥
 = 
	`ht⁄s
(
ETHER_TYPE_IPv4
);

124 
exåa_cou¡
 = 0;

125 i‡(
gª
->gª.
chk_¥e£¡
)

131 ++
exåa_cou¡
;

133 i‡(
gª
->gª.
key_¥e£¡
) {

134 
gª
->gª.
exåa_fõlds
[
exåa_cou¡
] = 
	`ht⁄l
(
pkt
->
gª_key
);

135 ++
exåa_cou¡
;

138 i‡(
gª
->gª.
£q_¥e£¡
)

141 ++
exåa_cou¡
;

145 
pkt
->
ëhî_hdr_size
 +(
gªIp_t
Ë- 4 * (3 - 
exåa_cou¡
);

146  (*)(
gª
 + 1Ë- 4 * (3 - 
exåa_cou¡
);

147 
	}
}

162 
	$pktgí_gª_ëhî_hdr_˘‹
(
p‹t_öfo_t
 *
öfo
 
__πe_unu£d
,

163 
pkt_£q_t
 *
pkt
,

164 
gªEthî_t
 *
gª
)

167 
	`mem£t
((*)
gª
, 0, (
gªEthî_t
));

170 
gª
->
ù
.
vl
 = (
IPv4_VERSION
 << 4Ë| ((
ùHdr_t
) / 4);

171 
gª
->
ù
.
tos
 = 0;

172 
gª
->
ù
.
éí
 = 
	`ht⁄s
(
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
);

174 
pktgí
.
idít
 += 27;

175 
gª
->
ù
.
idít
 = 
	`ht⁄s
(
pktgí
.ident);

176 
gª
->
ù
.
f‰ag
 = 0;

177 
gª
->
ù
.
âl
 = 64;

178 
gª
->
ù
.
¥Ÿo
 = 
PG_IPPROTO_GRE
;

181 
	#GRE_SRC_ADDR
 (10 << 24Ë| (10 << 16Ë| (1 << 8Ë| 1

	)

182 
	#GRE_DST_ADDR
 (10 << 24Ë| (10 << 16Ë| (1 << 8Ë| 2

	)

183 
gª
->
ù
.
§c
 = 
	`ht⁄l
(
GRE_SRC_ADDR
);

184 
gª
->
ù
.
d°
 = 
	`ht⁄l
(
GRE_DST_ADDR
);

185 #unde‡
GRE_SRC_ADDR


186 #unde‡
GRE_DST_ADDR


188 
gª
->
ù
.
cksum
 = 
	`cksum
(gª, (
ùHdr_t
), 0);

191 
gª
->gª.
chk_¥e£¡
 = 0;

192 
gª
->gª.
unu£d
 = 0;

193 
gª
->gª.
key_¥e£¡
 = 1;

194 
gª
->gª.
£q_¥e£¡
 = 0;

196 
gª
->gª.
ª£rved0_0
 = 0;

197 
gª
->gª.
ª£rved0_1
 = 0;

199 
gª
->gª.
vîsi⁄
 = 0;

200 
gª
->gª.
ëh_ty≥
 = 
	`ht⁄s
(
ETHER_TYPE_TRANSP_ETH_BR
);

202 
exåa_cou¡
 = 0;

203 i‡(
gª
->gª.
chk_¥e£¡
)

209 ++
exåa_cou¡
;

211 i‡(
gª
->gª.
key_¥e£¡
) {

212 
gª
->gª.
exåa_fõlds
[
exåa_cou¡
] = 
	`ht⁄l
(
pkt
->
gª_key
);

213 ++
exåa_cou¡
;

216 i‡(
gª
->gª.
£q_¥e£¡
)

219 ++
exåa_cou¡
;

223 
ëhî_hdr
 *
ëh_hdr
 = (ëhî_hd∏*)((*)&
gª
->gre

226 + 4 * 
exåa_cou¡
);

227 
	`ëhî_addr_c›y
(&
pkt
->
ëh_§c_addr
, &
ëh_hdr
->
s_addr
);

228 
	`ëhî_addr_c›y
(&
pkt
->
ëh_d°_addr
, &
ëh_hdr
->
d_addr
);

229 
ëh_hdr
->
ëhî_ty≥
 = 
	`ht⁄s
(
ETHER_TYPE_IPv4
);

234 
pkt
->
ëhî_hdr_size
 +(
gªEthî_t
Ë- 4 * (3 - 
exåa_cou¡
);

235  (*)(
gª
 + 1Ë- 4 * (3 - 
exåa_cou¡
);

236 
	}
}

	@app/pktgen-gre.h

68 #i‚de‡
_PKTGEN_GRE_H_


69 
	#_PKTGEN_GRE_H_


	)

71 
	~<wr_öë.h
>

73 
	~"pktgí-p‹t-cfg.h
"

74 
	~"pktgí-£q.h
"

76 *
pktgí_gª_hdr_˘‹
(
p‹t_öfo_t
 *
öfo
, 
pkt_£q_t
 *
pkt
,

77 
gªIp_t
 *
gª
);

78 *
pktgí_gª_ëhî_hdr_˘‹
(
p‹t_öfo_t
 *
öfo
,

79 
pkt_£q_t
 *
pkt
,

80 
gªEthî_t
 *
gª
);

	@app/pktgen-gtpu.c

68 
	~"pktgí.h
"

70 
	~"pktgí-gçu.h
"

85 
	$pktgí_gçu_hdr_˘‹
(
pkt_£q_t
 *
pkt
, 
gçuHdr_t
 *
guù
, 
uöt16_t
 
ùPrŸo
)

87 *
buf„r
 = (*)
guù
;

88 
l4HdrSize
 = 0;

90 i‡(
ùPrŸo
 =
PG_IPPROTO_UDP
)

91 
l4HdrSize
 = (
udpHdr_t
);

93 
l4HdrSize
 = (
t˝Hdr_t
);

95 
gçuHdr_t
 *
gçpHdr
 =

96 (
gçuHdr_t
 *)(
buf„r
 + (
ùHdr_t
Ë+ 
l4HdrSize
);

99 
	`mem£t
((*)
guù
, 0, (
gçuHdr_t
));

102 
gçpHdr
->
vîsi⁄_Êags
 = 
GTPu_VERSION
;

107 
gçpHdr
->
msg_ty≥
 = 0xff;

112 
gçpHdr
->
tŸ_Àn
 =

113 
	`ht⁄s
(
pkt
->
pktSize
 -

114 (
pkt
->
ëhî_hdr_size
 + (
ùHdr_t
Ë+ 
l4HdrSize
 +

115 (
gçuHdr_t
)));

120 
gçpHdr
->
ãid
 = 
	`ht⁄l
(
pkt
->
gçu_ãid
);

125 
gçpHdr
->
£q_no
 = 0x0;

130 
gçpHdr
->
≈du_no
 = 0x0;

135 
gçpHdr
->
√xt_ext_hdr_ty≥
 = 0x0;

136 
	}
}

	@app/pktgen-gtpu.h

68 #i‚de‡
_PKTGEN_GTPU_H_


69 
	#_PKTGEN_GTPU_H_


	)

71 
	~<wr_öë.h
>

73 
	~"pktgí-£q.h
"

75 
	#GTPu_VERSION
 0x30

	)

89 
pktgí_gçu_hdr_˘‹
(
pkt_£q_t
 *
pkt
,

90 
gçuHdr_t
 *
guù
,

91 
uöt16_t
 
ùPrŸo
);

	@app/pktgen-ipv4.c

68 
	~<¨∑/öë.h
>

70 
	~"pktgí.h
"

71 
	~"pktgí-log.h
"

72 
	~"pktgí-ùv4.h
"

87 
	$pktgí_ùv4_˘‹
(
pkt_£q_t
 *
pkt
, 
ùHdr_t
 *
ù
)

89 
uöt16_t
 
éí
;

92 
éí
 = 
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
;

95 
	`mem£t
((*)
ù
, 0, (
ùHdr_t
));

97 
ù
->
vl
 = (
IPv4_VERSION
 << 4Ë| ((
ùHdr_t
) / 4);

99 
ù
->
éí
 = 
	`ht⁄s
(tlen);

100 
ù
->
âl
 = 4;

101 
ù
->
tos
 = 0;

103 
pktgí
.
idít
 += 27;

104 
ù
->
idít
 = 
	`ht⁄s
(
pktgí
.ident);

105 
ù
->
f‰ag
 = 0;

106 
ù
->
¥Ÿo
 = 
pkt
->
ùPrŸo
;

107 
ù
->
§c
 = 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
);

108 
ù
->
d°
 = 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
);

109 
ù
->
cksum
 = 
	`cksum
(ù, (
ùHdr_t
), 0);

110 
	}
}

125 
	$pktgí_£nd_pög4
(
uöt32_t
 
pid
, 
uöt8_t
 
£q_idx
)

127 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

128 
pkt_£q_t
 *
µkt
 = &
öfo
->
£q_pkt
[
PING_PKT
];

129 
pkt_£q_t
 *
•kt
 = &
öfo
->
£q_pkt
[
£q_idx
];

130 
πe_mbuf
 *
m
;

131 
uöt8_t
 
qid
 = 0;

133 
m
 = 
	`πe_pktmbuf_Æloc
(
öfo
->
q
[
qid
].
•ecül_mp
);

134 i‡(
	`u∆ikñy
(
m
 =
NULL
) ) {

135 
	`pktgí_log_w¨nög
("NoÖacket buffers found");

138 *
µkt
 = *
•kt
;

139 
	`pktgí_∑ckë_˘‹
(
öfo
, 
PING_PKT
, 
ICMP4_ECHO
);

140 
	`πe_mem˝y
((
uöt8_t
 *)
m
->
buf_addr
 + m->
d©a_off
,

141 (
uöt8_t
 *)&
µkt
->
hdr
,Öpkt->
pktSize
);

143 
m
->
pkt_Àn
 = 
µkt
->
pktSize
;

144 
m
->
d©a_Àn
 = 
µkt
->
pktSize
;

146 
	`pktgí_£nd_mbuf
(
m
, 
pid
, 
qid
);

148 
	`pktgí_£t_q_Êags
(
öfo
, 
qid
, 
DO_TX_FLUSH
);

149 
	}
}

164 
	$pktgí_¥o˚ss_pög4
(
πe_mbuf
 *
m
, 
uöt32_t
 
pid
, uöt32_à
vœn
)

166 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

167 
pkt_£q_t
 *
pkt
;

168 
ëhî_hdr
 *
ëh
 = 
	`πe_pktmbuf_mtod
(
m
, ether_hdr *);

169 
ùHdr_t
 *
ù
 = (ùHdr_à*)&
ëh
[1];

170 
buff
[24];

173 i‡(
vœn
)

174 
ù
 = (
ùHdr_t
 *)((*)ù + (
vœn_hdr
));

177 i‡–(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
ICMP_ECHO_ENABLE_FLAG
) &&

178 (
ù
->
¥Ÿo
 =
PG_IPPROTO_ICMP
) ) {

179 
icmpv4Hdr_t
 *
icmp
 =

180 (
icmpv4Hdr_t
 *)((
uöçå_t
)
ù
 + (
ùHdr_t
));

183 i‡(
	`u∆ikñy
(
	`cksum
(
icmp
,

184 (
m
->
d©a_Àn
 - (
ëhî_hdr
) -

185 (
ùHdr_t
)),

187 
	`pktgí_log_îr‹
("ICMP checksum failed");

191 i‡(
	`u∆ikñy
(
icmp
->
ty≥
 =
ICMP4_ECHO
) ) {

192 i‡(
	`¡ohl
(
ù
->
d°
Ë=
INADDR_BROADCAST
) {

193 
	`pktgí_log_w¨nög
(

195 
	`öë_¡›4
(
buff
,

196 (
buff
), 
ù
->
d°
,

197 
INADDR_BROADCAST
));

202 
pkt
 = 
	`pktgí_föd_m©chög_ù§c
(
öfo
, 
ù
->
d°
);

205 i‡(
	`u∆ikñy
(
pkt
 =
NULL
) ) {

206 
	`pktgí_log_w¨nög
("IPáddress %sÇot found",

207 
	`öë_¡›4
(
buff
,

208 (
buff
),

209 
ù
->
d°
,

210 
INADDR_BROADCAST
));

214 
öfo
->
°©s
.
echo_pkts
++;

216 
icmp
->
ty≥
 = 
ICMP4_ECHO_REPLY
;

219 
icmp
->
cksum
 = 0;

220 
icmp
->
cksum
 =

221 
	`cksum
(
icmp
,

222 (
m
->
d©a_Àn
 - (
ëhî_hdr
) -

223 (
ùHdr_t
)), 0);

226 
	`öëAddrSw≠
(&
ù
->
§c
, &ù->
d°
);

229 
ù
->
idít
 = 
	`ht⁄s
(
	`¡ohs
(ù->idítË+ 
m
->
d©a_Àn
);

232 
ù
->
cksum
 = 0;

233 
ù
->
cksum
 = 
	`cksum
(ù, (
ùHdr_t
), 0);

236 
	`ëhAddrSw≠
(&
ëh
->
d_addr
, &ëh->
s_addr
);

238 
	`pktgí_£nd_mbuf
(
m
, 
pid
, 0);

240 
	`pktgí_£t_q_Êags
(
öfo
, 0, 
DO_TX_FLUSH
);

244 } i‡(
	`u∆ikñy
(
icmp
->
ty≥
 =
ICMP4_ECHO_REPLY
) )

245 
öfo
->
°©s
.
echo_pkts
++;

247 
	}
}

	@app/pktgen-ipv4.h

68 #i‚de‡
_PKTGEN_IPV4_H_


69 
	#_PKTGEN_IPV4_H_


	)

71 
	~"pktgí-£q.h
"

73 
pktgí_ùv4_˘‹
(
pkt_£q_t
 *
pkt
, 
ùHdr_t
 *
ù
);

74 
pktgí_£nd_pög4
(
uöt32_t
 
pid
, 
uöt8_t
 
£q_idx
);

75 
pktgí_¥o˚ss_pög4
(
πe_mbuf
 *
m
, 
uöt32_t
 
pid
,

76 
uöt32_t
 
vœn
);

	@app/pktgen-ipv6.c

68 
	~"pktgí.h
"

70 
	~"pktgí-ùv6.h
"

85 
	$pktgí_ùv6_˘‹
(
pkt_£q_t
 *
pkt
, 
ùv6Hdr_t
 *
ù
)

87 
uöt16_t
 
éí
;

90 
	`mem£t
(
ù
, 0, (
ùv6Hdr_t
));

92 
ù
->
vî_tc_Ê
 = 
	`ht⁄l
(
IPv6_VERSION
 << 28);

93 
éí
 = 
pkt
->
pktSize
 -

94 (
pkt
->
ëhî_hdr_size
 + (
ùv6Hdr_t
));

96 
ù
->
∑ylﬂd_Àngth
 = 
	`ht⁄s
(
éí
);

97 
ù
->
h›_limô
 = 4;

98 
ù
->
√xt_hódî
 = 
pkt
->
ùPrŸo
;

100 ()
	`πe_mem˝y
(&
ù
->
daddr
[8], 
pkt
->
ù_d°_addr
.
addr
.
ùv6
.
__ö6_u
.
__u6_addr8
, (
ö6_addr
));

101 ()
	`πe_mem˝y
(&
ù
->
ßddr
[8], 
pkt
->
ù_d°_addr
.
addr
.
ùv6
.
__ö6_u
.
__u6_addr8
, (
ö6_addr
));

102 
	}
}

117 
	$pktgí_¥o˚ss_pög6
(
πe_mbuf
 *
m
 
__πe_unu£d
,

118 
uöt32_t
 
pid
 
__πe_unu£d
, uöt32_à
vœn
 __rte_unused)

121 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

122 
ëhî_hdr
 *
ëh
 = 
	`πe_pktmbuf_mtod
(
m
, ether_hdr *);

123 
ùv6Hdr_t
 *
ù
 = (ùv6Hdr_à*)&
ëh
[1];

126 i‡(
vœn
)

127 
ù
 = (
ùv6Hdr_t
 *)((*)ù + (
vœn_hdr
));

130 i‡–(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
ICMP_ECHO_ENABLE_FLAG
) &&

131 (
ù
->
√xt_hódî
 =
PG_IPPROTO_ICMPV6
) ) {

132 #i‡!
	`deföed
(
RTE_ARCH_X86_64
)

133 
icmpv4Hdr_t
 *
icmp
 =

134 (
icmpv4Hdr_t
 *)((
uöt32_t
)
ù
 + (
ùHdr_t
));

136 
icmpv4Hdr_t
 *
icmp
 =

137 (
icmpv4Hdr_t
 *)((
uöt64_t
)
ù
 + (
ùHdr_t
));

140 i‡(
	`cksum
(
icmp
,

141 (
m
->
pkt
.
d©a_Àn
 - (
ëhî_hdr
) -

142 (
ùHdr_t
)),

144 
	`πe_¥ötf_°©us
("ICMP checksum failed\n");

145 
Àave
 :

148 i‡(
icmp
->
ty≥
 =
ICMP4_ECHO
) {

150 i‡–(
ù
->
d°
 =
INADDR_BROADCAST
) ||

151 (
ù
->
d°
 !
öfo
->
ù_§c_addr
) ) {

152 
buff
[24];

153 
	`πe_¥ötf_°©us
("IPáddress %s != ",

154 
	`öë_¡›4
(
buff
, (buff),

155 
ù
->
d°
,

156 
INADDR_BROADCAST
));

157 
	`πe_¥ötf_°©us
("%s\n",

158 
	`öë_¡›4
(
buff
, (buff),

159 
	`ht⁄l
(
öfo
->

160 
ù_§c_addr
),

161 
INADDR_BROADCAST
));

162 
Àave
;

165 
öfo
->
echo_pkts
++;

167 
icmp
->
ty≥
 = 
ICMP4_ECHO_REPLY
;

170 
icmp
->
cksum
 = 0;

171 
icmp
->
cksum
 =

172 
	`cksum
(
icmp
,

173 (
m
->
pkt
.
d©a_Àn
 -

174 (
ëhî_hdr
) -

175 (
ùHdr_t
)), 0);

178 
	`öëAddrSw≠
(&
ù
->
§c
, &ù->
d°
);

181 
ù
->
idít
 = 
	`ht⁄s
(
	`¡ohs
(ù->idítË+ 
m
->
pkt
.
d©a_Àn
);

184 
ù
->
cksum
 = 0;

185 
ù
->
cksum
 = 
	`cksum
(ù, (
ùHdr_t
), 0);

188 
	`ëhAddrSw≠
(&
ëh
->
d_addr
, &ëh->
s_addr
);

190 
	`pktgí_£nd_mbuf
(
m
, 
pid
, 0);

192 
	`pktgí_£t_q_Êags
(
öfo
, 0, 
DO_TX_FLUSH
);

198 
Àave
:

201 
	}
}

	@app/pktgen-ipv6.h

68 #i‚de‡
_PKTGEN_IPV6_H_


69 
	#_PKTGEN_IPV6_H_


	)

71 
	~"pktgí.h
"

85 
pktgí_ùv6_˘‹
(
pkt_£q_t
 *
pkt
, 
ùv6Hdr_t
 *
ù
);

87 
pktgí_¥o˚ss_pög6
(
πe_mbuf
 *
m
, 
uöt32_t
 
pid
,

88 
uöt32_t
 
vœn
);

	@app/pktgen-log.c

68 
	~"pktgí-log.h
"

70 
	~<°dio.h
>

71 
	~<°rög.h
>

72 
	~<°dlib.h
>

73 
	~<time.h
>

74 
	~<sys/time.h
>

75 
	~<°d¨g.h
>

76 
	~<libgí.h
>

78 
	~"pktgí-di•œy.h
"

79 
	~<πe_rwlock.h
>

82 
	#LOG_HISTORY
 64

	)

83 
	#LOG_MAX_LINE
 1024

	)

86 
	slog_msg_s
 {

87 
timevÆ
 
	mtv
;

88 
	mÀvñ
;

89 *
	mfûe
;

90 
	mlöe
;

91 *
	mfunc
;

92 
	mmsg
[
LOG_MAX_LINE
];

93 } 
	tlog_msg_t
;

96 
	slog_s
 {

97 
log_msg_t
 
	mmsg
[
LOG_HISTORY
];

98 
uöt16_t
 
	mhód
;

99 
uöt16_t
 
	mèû
;

100 
uöt8_t
 
	m√ed_ª‰esh
;

101 
πe_rwlock_t
 
	mlock
;

102 } 
	tlog_t
;

104 
log_t
 
	glog_hi°‹y
;

106 
FILE
 *
	glog_fûe
 = 
NULL
;

107 
	glog_Àvñ_s¸ìn
 = 
LOG_LEVEL_INFO
;

110 c⁄° *
pktgí_f‹m©_msg_∑ge
(c⁄° 
log_msg_t
 *
log_msg
);

111 c⁄° *
pktgí_f‹m©_msg_fûe
(c⁄° 
log_msg_t
 *
log_msg
);

112 c⁄° *
pktgí_f‹m©_msg_°dout
(c⁄° 
log_msg_t
 *
log_msg
);

116 
	$pktgí_öô_log
()

118 
	`mem£t
(&
log_hi°‹y
, 0, (log_history));

119 
log_hi°‹y
.
hód
 = 0;

120 
log_hi°‹y
.
èû
 = 0;

121 
log_hi°‹y
.
√ed_ª‰esh
 = 0;

122 
	}
}

126 
	$pktgí_log_£t_s¸ìn_Àvñ
(
Àvñ
)

128 
log_Àvñ_s¸ìn
 = 
Àvñ
;

129 
	}
}

133 
	$pktgí_log
(
Àvñ
, c⁄° *
fûe
, 
löe
,

134 c⁄° *
func
, c⁄° *
fmt
, ...)

136 
log_msg_t
 *
cuº_msg
;

137 
va_li°
 
¨gs
;

139 
	`πe_rwlock_wrôe_lock
(&
log_hi°‹y
.
lock
);

141 
cuº_msg
 = &
log_hi°‹y
.
msg
[log_hi°‹y.
hód
];

144 
	`gëtimeofday
(&
cuº_msg
->
tv
, 
NULL
);

146 
cuº_msg
->
Àvñ
 =Üevel;

148 i‡(
cuº_msg
->
fûe
 !
NULL
)

149 
	`‰ì
(
cuº_msg
->
fûe
);

150 
cuº_msg
->
fûe
 = 
	`°rdup
(file);

152 
cuº_msg
->
löe
 =Üine;

154 i‡(
cuº_msg
->
func
 !
NULL
)

155 
	`‰ì
(
cuº_msg
->
func
);

156 
cuº_msg
->
func
 = 
	`°rdup
(func);

159 
	`va_°¨t
(
¨gs
, 
fmt
);

160 
	`v¢¥ötf
(
cuº_msg
->
msg
, 
LOG_MAX_LINE
, 
fmt
, 
¨gs
);

161 
	`va_íd
(
¨gs
);

168 
log_hi°‹y
.
hód
 = (log_hi°‹y.hód + 1Ë% 
LOG_HISTORY
;

170 i‡(
log_hi°‹y
.
hód
 =log_hi°‹y.
èû
)

171 
log_hi°‹y
.
èû
 = (log_hi°‹y.èû + 1Ë% 
LOG_HISTORY
;

174 i‡(
log_fûe
 !
NULL
)

175 
	`Ârötf
(
log_fûe
, "%s\n", 
	`pktgí_f‹m©_msg_fûe
(
cuº_msg
));

178 i‡(
Àvñ
 >
log_Àvñ_s¸ìn
)

179 
	`Ârötf
(
°dout
, "%s\n", 
	`pktgí_f‹m©_msg_°dout
(
cuº_msg
));

181 
log_hi°‹y
.
√ed_ª‰esh
 = 1;

183 
	`πe_rwlock_wrôe_u∆ock
(&
log_hi°‹y
.
lock
);

184 
	}
}

188 
	$pktgí_log_£t_fûe
(c⁄° *
fûíame
)

190 
FILE
 *
Â
;

193 i‡(
log_fûe
 !
NULL
) {

194 
	`f˛o£
(
log_fûe
);

195 
log_fûe
 = 
NULL
;

199 i‡(
fûíame
 =
NULL
)

202 
Â
 = 
	`f›í
(
fûíame
, "w");

204 i‡(
Â
 =
NULL
)

205 
	`pktgí_log_w¨nög
("UnableÅo openÜog file '%s' for writing",

206 
fûíame
);

209 i‡(
Â
 !
NULL
)

210 
	`£tbuf
(
Â
, 
NULL
);

212 
log_fûe
 = 
Â
;

213 
	}
}

217 
	$pktgí_∑ge_log
(
uöt32_t
 
¥öt_œbñs
)

220 
	#MAX_PAGE_LINES
 28

	)

222 
uöt32_t
 
row
, 
cuº_msg
, 
ouçut_löes
, 
cuº_ch¨
;

223 
cuº_löe
;

224 
löes
[
MAX_PAGE_LINES
][
LOG_MAX_LINE
];

226 i‡(!
¥öt_œbñs
 && !
log_hi°‹y
.
√ed_ª‰esh
)

229 
	`di•œy_t›löe
("<Logged messages>");

230 
row
 = 2;

233 
	`wr_s¸n_¥ötf
(
row
++, 1, "%1s %8s %-32s %s",

236 
cuº_löe
 = 
ouçut_löes
 = 0;

237 
cuº_msg
 = 
log_hi°‹y
.
hód
;

238 (
cuº_msg
 !
log_hi°‹y
.
èû
) &&

239 (
ouçut_löes
 < 
MAX_PAGE_LINES
)) {

241 
cuº_msg
 = (cuº_msg + 
LOG_HISTORY
 - 1) % LOG_HISTORY;

243 
	`¢¥ötf
(
löes
[
cuº_löe
], 
LOG_MAX_LINE
, "%s",

244 
	`pktgí_f‹m©_msg_∑ge
(&
log_hi°‹y
.
msg
[
cuº_msg
]));

250 
cuº_ch¨
 = 0; 
löes
[
cuº_löe
][curr_char] != '\0';

251 ++
cuº_ch¨
)

252 i‡(
löes
[
cuº_löe
][
cuº_ch¨
] == '\n')

253 ++
ouçut_löes
;

255 ++
ouçut_löes
;

257 ++
cuº_löe
;

265 --
cuº_löe
; curr_line >= 0; --curr_line) {

266 
	`wr_s¸n_¥ötf
(
row
++, 1, "%s", 
löes
[
cuº_löe
]);

269 
cuº_ch¨
 = 0; 
löes
[
cuº_löe
][curr_char] != '\0';

270 ++
cuº_ch¨
)

271 i‡(
löes
[
cuº_löe
][
cuº_ch¨
] == '\n')

272 ++
row
;

275 i‡(
row
 < 
MAX_PAGE_LINES
)

276 
row
 = 
MAX_PAGE_LINES
;

278 
	`di•œy_dashlöe
(++
row
);

279 
log_hi°‹y
.
√ed_ª‰esh
 = 0;

281 #unde‡
MAX_PAGE_LINES


282 
	}
}

303 
	$pktgí_f‹m©_msg_∑ge
(c⁄° 
log_msg_t
 *
log_msg
)

308 
msg
[
LOG_MAX_LINE
] = { 0 };

309 
time°amp
[9] = { 0 };

310 
func
[32];

312 
	`°r·ime
(
time°amp
, (timestamp), "%H:%M:%S",

313 
	`loˇ…ime
(&
log_msg
->
tv
.
tv_£c
));

315 i‡(
	`°æí
(
log_msg
->
func
) > (func) - 1)

316 
	`¢¥ötf
(
func
, (func), "‚Ä¶%s",

317 &
log_msg
->
func
[
	`°æí
(

318 
log_msg
->
func
) - (func) -

321 
	`•rötf
(
func
, "%s", 
log_msg
->func);

323 
	`¢¥ötf
(
msg
, (msg), "%1s %8s %-*s %s",

324 (
log_msg
->
Àvñ
 =
LOG_LEVEL_TRACE
) ? "t"

325 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_DEBUG
) ? "d"

326 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_INFO
) ? "I"

327 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_WARNING
) ? "W"

328 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_ERROR
) ? "E"

329 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_PANIC
) ? "P"

331 
time°amp
, ()(
func
), func, 
log_msg
->
msg
);

333  
msg
;

334 
	}
}

358 
	$pktgí_f‹m©_msg_fûe
(c⁄° 
log_msg_t
 *
log_msg
)

363 
msg
[
LOG_MAX_LINE
] = { 0 };

364 
time°amp
[32] = { 0 };

365 *
fûe
;

367 
	`°r·ime
(
time°amp
, (timestamp), "%Y-%m-%d %H:%M:%S",

368 
	`loˇ…ime
(&
log_msg
->
tv
.
tv_£c
));

370 
fûe
 = 
	`°rdup
(
log_msg
->file);

372 
	`¢¥ötf
(
msg
, (msg), "%s %s.%03ld [%s:%ld(%s)] %s",

373 (
log_msg
->
Àvñ
 =
LOG_LEVEL_TRACE
) ? "tt"

374 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_DEBUG
) ? "dd"

375 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_INFO
) ? "II"

376 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_WARNING
) ? "WW"

377 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_ERROR
) ? "EE"

378 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_PANIC
) ? "PP"

380 
time°amp
, 
log_msg
->
tv
.
tv_u£c
 / 1000,

381 
	`ba£«me
(
fûe
), 
log_msg
->
löe
,Üog_msg->
func
,Üog_msg->
msg
);

383 
	`‰ì
(
fûe
);

385  
msg
;

386 
	}
}

410 
	$pktgí_f‹m©_msg_°dout
(c⁄° 
log_msg_t
 *
log_msg
)

415 
msg
[
LOG_MAX_LINE
] = { 0 };

417 
	`¢¥ötf
(
msg
, (msg), "%s%s",

418 (
log_msg
->
Àvñ
 <
LOG_LEVEL_INFO
) ? ""

419 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_WARNING
) ? "WARNING: "

420 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_ERROR
) ? "!ERROR!: "

421 : (
log_msg
->
Àvñ
 =
LOG_LEVEL_PANIC
) ? "!PANIC!: "

423 
log_msg
->
msg
);

425  
msg
;

426 
	}
}

	@app/pktgen-log.h

68 #i‚de‡
_PKTGEN_LOG_H_


69 
	#_PKTGEN_LOG_H_


	)

71 
	~<°döt.h
>

75 
	#LOG_LEVEL_ALL
 0

	)

76 
	#LOG_LEVEL_TRACE
 1

	)

77 
	#LOG_LEVEL_DEBUG
 2

	)

78 
	#LOG_LEVEL_INFO
 3

	)

79 
	#LOG_LEVEL_WARNING
 4

	)

80 
	#LOG_LEVEL_ERROR
 5

	)

81 
	#LOG_LEVEL_PANIC
 6

	)

82 
	#LOG_LEVEL_NONE
 7

	)

90 #i‚de‡
LOG_LEVEL


91 
	#LOG_LEVEL
 
LOG_LEVEL_INFO


	)

97 #i‡
LOG_LEVEL
 <
LOG_LEVEL_TRACE


98 
	#pktgí_log_åa˚
(
fmt
, ...Ë
	`pktgí_log
(
LOG_LEVEL_TRACE
, \

99 
__FILE__
, \

100 
__LINE__
, \

101 
__FUNCTION__
, \

102 
fmt
, \

103 ## 
__VA_ARGS__
)

	)

105 
	#pktgí_log_åa˚
(
fmt
, ...Ë

	)

108 #i‡
LOG_LEVEL
 <
LOG_LEVEL_DEBUG


109 
	#pktgí_log_debug
(
fmt
, ...Ë
	`pktgí_log
(
LOG_LEVEL_DEBUG
, \

110 
__FILE__
, \

111 
__LINE__
, \

112 
__FUNCTION__
, \

113 
fmt
, \

114 ## 
__VA_ARGS__
)

	)

116 
	#pktgí_log_debug
(
fmt
, ...Ë

	)

119 #i‡
LOG_LEVEL
 <
LOG_LEVEL_INFO


120 
	#pktgí_log_öfo
(
fmt
, ...Ë
	`pktgí_log
(
LOG_LEVEL_INFO
, \

121 
__FILE__
, \

122 
__LINE__
, \

123 
__FUNCTION__
, \

124 
fmt
, \

125 ## 
__VA_ARGS__
)

	)

127 
	#pktgí_log_öfo
(
fmt
, ...Ë

	)

130 #i‡
LOG_LEVEL
 <
LOG_LEVEL_WARNING


131 
	#pktgí_log_w¨nög
(
fmt
, ...Ë
	`pktgí_log
(
LOG_LEVEL_WARNING
, \

132 
__FILE__
, \

133 
__LINE__
, \

134 
__FUNCTION__
, \

135 
fmt
, \

136 ## 
__VA_ARGS__
)

	)

138 
	#pktgí_log_w¨nög
(
fmt
, ...Ë

	)

141 #i‡
LOG_LEVEL
 <
LOG_LEVEL_ERROR


142 
	#pktgí_log_îr‹
(
fmt
, ...Ë
	`pktgí_log
(
LOG_LEVEL_ERROR
, \

143 
__FILE__
, \

144 
__LINE__
, \

145 
__FUNCTION__
, \

146 
fmt
, \

147 ## 
__VA_ARGS__
)

	)

149 
	#pktgí_log_îr‹
(
fmt
, ...Ë

	)

152 #i‡
LOG_LEVEL
 <
LOG_LEVEL_PANIC


153 
	#pktgí_log_∑nic
(
fmt
, ...) do { \

154 
	`pktgí_log
(
LOG_LEVEL_PANIC
, 
__FILE__
, 
__LINE__
, 
__FUNCTION__
, \

155 
fmt
, ## 
__VA_ARGS__
); \

156 
	`πe_∑nic
(
fmt
, ## 
__VA_ARGS__
); \

157 } 0)

	)

159 
	#pktgí_log_∑nic
(
fmt
, ...Ë
	`πe_∑nic
(fmt, ## 
__VA_ARGS__
)

	)

167 
	#°∫ˇtf
(
de°
, 
fmt
, ...) do { \

168 
_buff
[1024]; \

169 
	`¢¥ötf
(
_buff
, (_buff), 
fmt
, ## 
__VA_ARGS__
); \

170 
	`°∫ˇt
(
de°
, 
_buff
, (de°Ë- 
	`°æí
(dest) - 1); \

171 } 0)

	)

174 
pktgí_öô_log
();

188 
pktgí_log_£t_s¸ìn_Àvñ
(
Àvñ
);

201 
pktgí_log
(
Àvñ
, c⁄° *
fûe
, 
löe
,

202 c⁄° *
func
, c⁄° *
fmt
, ...);

216 
pktgí_log_£t_fûe
(c⁄° *
fûíame
);

229 
pktgí_∑ge_log
(
uöt32_t
 
¥öt_œbñs
);

	@app/pktgen-main.c

68 
	~"pktgí-maö.h
"

70 
	~"pktgí.h
"

71 
	~"Õktgílib.h
"

72 
	~"lua_shñl.h
"

73 
	~"lua-sockë.h
"

74 
	~"pktgí-cmds.h
"

75 
	~"pktgí-˝u.h
"

76 
	~"cmd-fun˘i⁄s.h
"

77 
	~"pktgí-di•œy.h
"

78 
	~"pktgí-log.h
"

81 
execuã_lua_˛o£
(
lua_Sèã
 *
L
);

82 #ifde‡
GUI


83 
pktgí_gui_maö
(
¨gc
, *
¨gv
[]);

99 
	$pktgí_l2p_dump
()

101 
	`wr_øw_dump_l2p
(
pktgí
.
l2p
);

102 
	}
}

104 
	~<pﬁl.h
>

119 
	$pktgí_öãø˘
(
cmdlöe
 *
˛
)

121 
c
;

122 
pﬁlfd
 
fds
;

123 
uöt64_t
 
cuº_tsc
;

124 
uöt64_t
 
√xt_pﬁl
;

125 
uöt64_t
 
ªlﬂd
;

127 
fds
.
fd
 = 
˛
->
s_ö
;

128 
fds
.
evíts
 = 
POLLIN
;

129 
fds
.
ªvíts
 = 0;

131 
c
 = -1;

132 
ªlﬂd
 = (
pktgí
.
hz
 / 1000);

133 
√xt_pﬁl
 = 
	`πe_rdtsc
(Ë+ 
ªlﬂd
;

136 
	`πe_timî_m™age
();

137 
cuº_tsc
 = 
	`πe_rdtsc
();

138 i‡(
	`u∆ikñy
(
cuº_tsc
 >
√xt_pﬁl
) ) {

139 
√xt_pﬁl
 = 
cuº_tsc
 + 
ªlﬂd
;

140 i‡(
	`pﬁl
(&
fds
, 1, 0) ) {

141 i‡–(
fds
.
ªvíts
 &

142 (
POLLERR
 | 
POLLNVAL
 | 
POLLHUP
)) )

144 i‡–(
fds
.
ªvíts
 & 
POLLIN
) ) {

145 i‡(
	`ªad
(
˛
->
s_ö
, &
c
, 1) < 0)

147 i‡(
	`cmdlöe_ö
(
˛
, &
c
, 1) < 0)

153 
	}
}

168 
	$pktgí_gë_lua
()

170  
pktgí
.
L
;

171 
	}
}

186 
	$pktgí_ußge
(c⁄° *
¥g«me
)

188 
	`¥ötf
("Usage: %s [EAL options] -- [-h] [-P] [-G] [-T] [-f cmd_file] [-lÜog_file] [-s P:PCAP_file] [-m <string>]\n"

231 
¥g«me
);

232 
	}
}

247 
	$pktgí_∑r£_¨gs
(
¨gc
, **
¨gv
)

249 
›t
, 
ªt
, 
p‹t
;

250 **
¨gv›t
;

251 
›ti⁄_ödex
;

252 *
¥g«me
 = 
¨gv
[0], *
p
;

253 
›ti⁄
 
lg›ts
[] = {

254 {
NULL
, 0, 0, 0}

257 
¨gv›t
 = 
¨gv
;

259 
pktgí
.
ho°«me
 = (*)
	`°rdupf
(pktgen.hostname, "localhost");

260 
pktgí
.
sockë_p‹t
 = 0x5606;

262 
pktgí
.
¨gc
 =árgc;

263 
›t
 = 0; o± < 
¨gc
; opt++)

264 
pktgí
.
¨gv
[
›t
] = 
	`°rdup
(argv[opt]);

266 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv›t
, "p:m:f:l:s:g:hPNGT",

267 
lg›ts
, &
›ti⁄_ödex
)Ë!
EOF
)

268 
›t
) {

274 
pktgí
.
cmd_fûíame
 = 
	`°rdup
(
›èrg
);

278 
	`pktgí_log_£t_fûe
(
›èrg
);

282 i‡(
	`wr_∑r£_m©rix
(
pktgí
.
l2p
, 
›èrg
) == -1) {

283 
	`pktgí_log_îr‹
("invalid matrix string (%s)",

284 
›èrg
);

285 
	`pktgí_ußge
(
¥g«me
);

291 
p‹t
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

292 
p
 = 
	`°rchr
(
›èrg
, ':');

293 i‡–(
p
 =
NULL
) ||

294 (
pktgí
.
öfo
[
p‹t
].
pˇp
 =

295 
	`wr_pˇp_›í
(++
p
, 
p‹t
)Ë=
NULL
) {

296 
	`pktgí_log_îr‹
(

298 
›èrg
);

299 
	`pktgí_ußge
(
¥g«me
);

305 
pktgí
.
Êags
 |
PROMISCUOUS_ON_FLAG
;

309 
pktgí
.
Êags
 |
NUMA_SUPPORT_FLAG
;

313 
pktgí
.
Êags
 |(
ENABLE_GUI_FLAG
 | 
IS_SERVER_FLAG
);

317 
pktgí
.
Êags
 |(
ENABLE_GUI_FLAG
 | 
IS_SERVER_FLAG
);

319 
p
 = 
	`°rchr
(
›èrg
, ':');

320 i‡(
p
 =
NULL
)

321 
pktgí
.
ho°«me
 = (*)
	`°rdupf
(

322 
pktgí
.
ho°«me
,

323 
›èrg
);

325 
c
 = *
p
;

327 *
p
 = '\0';

328 i‡(
p
 !
›èrg
)

329 
pktgí
.
ho°«me
 = (*)
	`°rdupf
(

330 
pktgí
.
ho°«me
,

331 
›èrg
);

333 
pktgí
.
sockë_p‹t
 = 
	`°πﬁ
(++
p
, 
NULL
, 0);

334 
	`pktgí_log_öfo
(

336 
pktgí
.
ho°«me
,

337 
c
,

338 
pktgí
.
sockë_p‹t
);

343 
pktgí
.
Êags
 |
ENABLE_THEME_FLAG
;

347 
	`pktgí_ußge
(
¥g«me
);

352 
	`pktgí_ußge
(
¥g«me
);

357 i‡(
›töd
 >= 0)

358 
¨gv
[
›töd
 - 1] = 
¥g«me
;

360 
ªt
 = 
›töd
 - 1;

361 
›töd
 = 0;

362  
ªt
;

363 
	}
}

378 
	$maö
(
¨gc
, **
¨gv
)

380 
uöt32_t
 
i
;

381 
öt32_t
 
ªt
;

383 
	`wr_s¸n_£tw
(1);

384 
	`wr_s¸n_pos
(100, 1);

386 
	`¥ötf
("\n%†%s\n", 
	`wr_c›yright_msg
(), 
	`wr_powîed_by
());

387 
	`fÊush
(
°dout
);

390 ()
	`πe_£t_≠∂iˇti⁄_ußge_hook
(
pktgí_ußge
);

392 
	`mem£t
(&
pktgí
, 0, (pktgen));

394 
pktgí
.
Êags
 = 
PRINT_LABELS_FLAG
;

395 
pktgí
.
idít
 = 0x1234;

396 
pktgí
.
nb_rxd
 = 
DEFAULT_RX_DESC
;

397 
pktgí
.
nb_txd
 = 
DEFAULT_TX_DESC
;

398 
pktgí
.
nb_p‹ts_≥r_∑ge
 = 
DEFAULT_PORTS_PER_PAGE
;

400 i‡–(
pktgí
.
l2p
 = 
	`wr_l2p_¸óã
()Ë=
NULL
)

401 
	`pktgí_log_∑nic
("UnableÅo createÜ2p");

403 
pktgí
.
p‹tdesc_˙t
 = 
	`wr_gë_p‹tdesc
’ktgí.
p‹éi°
,

404 
pktgí
.
p‹tdesc
,

405 
RTE_MAX_ETHPORTS
,

409 
	`pktgí_öô_log
();

410 
	`pktgí_˝u_öô
();

413 
ªt
 = 
	`πe_ól_öô
(
¨gc
, 
¨gv
);

414 i‡(
ªt
 < 0)

416 
¨gc
 -
ªt
;

417 
¨gv
 +
ªt
;

419 
pktgí
.
hz
 = 
	`πe_gë_timî_hz
();

422 
ªt
 = 
	`pktgí_∑r£_¨gs
(
¨gc
, 
¨gv
);

423 i‡(
ªt
 < 0)

426 
	`pktgí_öô_s¸ìn
(

427 (
pktgí
.
Êags
 & 
ENABLE_THEME_FLAG
Ë? 
THEME_ON
 : 
THEME_OFF
);

429 
	`πe_dñay_ms
(100);

431 
	`wr_¥öt_c›yright
(
PKTGEN_APP_NAME
, 
PKTGEN_CREATED_BY
);

433 
	`lua_√wlib_add
(
_lua_›ílib
);

436 i‡–(
pktgí
.
L
 = 
	`lua_¸óã_ö°™˚
()Ë=
NULL
) {

437 
	`pktgí_log_îr‹
("FailedÅo open LuaÖktgen supportÜibrary");

441 
	`pktgí_log_öfo
(

443 
DEFAULT_PKT_BURST
,

444 
DEFAULT_RX_DESC
,

445 
DEFAULT_TX_DESC
,

446 
MAX_MBUFS_PER_PORT
,

447 
MBUF_CACHE_SIZE
);

450 
	`pktgí_c⁄fig_p‹ts
();

452 
	`pktgí_log_öfo
("");

453 
	`pktgí_log_öfo
("==Di•œyÖro˚ssög o¿lc‹ê%d", 
	`πe_lc‹e_id
());

456 
i
 = 0; i < 
RTE_MAX_LCORE
; i++) {

457 i‡–(
i
 =
	`πe_gë_ma°î_lc‹e
()Ë|| !
	`πe_lc‹e_is_íabÀd
(i) )

459 
ªt
 = 
	`πe_ól_ªmŸe_œunch
(
pktgí_œunch_⁄e_lc‹e
, 
NULL
, 
i
);

460 i‡(
ªt
 != 0)

461 
	`pktgí_log_îr‹
("FailedÅo startÜcore %d,Ñeturn %d",

462 
i
,

463 
ªt
);

465 
	`πe_dñay_ms
(1000);

469 
	`pktgí_log_£t_s¸ìn_Àvñ
(
LOG_LEVEL_WARNING
);

470 
	`wr_s¸n_îa£
(
pktgí
.
s¸n
->
ƒows
);

472 
	`wr_logo
(3, 16, 
PKTGEN_APP_NAME
);

473 
	`wr_•œsh_s¸ìn
(3, 16, 
PKTGEN_APP_NAME
, 
PKTGEN_CREATED_BY
);

475 
	`wr_s¸n_ªsume
();

477 
	`pktgí_ªdi•œy
(1);

479 
	`πe_timî_£tup
();

481 i‡(
pktgí
.
Êags
 & 
ENABLE_GUI_FLAG
) {

482 i‡(!
	`wr_s¸n_is_∑u£d
() ) {

483 
	`wr_s¸n_∑u£
();

484 
	`wr_s¸n_˛s
();

485 
	`wr_s¸n_£tw
(1);

486 
	`wr_s¸n_pos
(
pktgí
.
s¸n
->
ƒows
, 1);

489 
	`lua_öô_sockë
(
pktgí
.
L
,

490 &
pktgí
.
thªad
,

491 
pktgí
.
ho°«me
,

492 
pktgí
.
sockë_p‹t
);

493 #ifde‡
GUI


494 
	`pktgí_gui_maö
(
¨gc
, 
¨gv
);

498 
	`pktgí_cmdlöe_°¨t
();

500 
	`execuã_lua_˛o£
(
pktgí
.
L
);

501 
	`pktgí_°›_ru¬ög
();

503 
	`wr_s¸n_∑u£
();

505 
	`wr_s¸n_£tw
(1);

506 
	`wr_s¸n_¥ötf
(100, 1, "\n");

509 
	`πe_ól_mp_waô_lc‹e
();

512 
	}
}

527 
	$pktgí_°›_ru¬ög
()

529 
uöt8_t
 
lid
;

531 
lid
 = 0;Üid < 
RTE_MAX_LCORE
;Üid++)

532 
	`wr_°›_lc‹e
(
pktgí
.
l2p
, 
lid
);

533 
	}
}

	@app/pktgen-main.h

68 #i‚de‡
_PKTGEN_MAIN_H_


69 
	#_PKTGEN_MAIN_H_


	)

71 
	~<°döt.h
>

72 
	~<ãrmios.h
>

73 
	~<°dio.h
>

75 
	~<cmdlöe_∑r£.h
>

76 
	~<cmdlöe_rdlöe.h
>

77 
	~<cmdlöe.h
>

79 
pktgí_l2p_dump
();

81 
pktgí_öãø˘
(
cmdlöe
 *
˛
);

83 *
pktgí_gë_lua
();

85 
pktgí_°›_ru¬ög
();

99 *
pktgí_gë_lua
();

	@app/pktgen-pcap.c

68 
	~"pktgí-di•œy.h
"

69 
	~"pktgí-log.h
"

71 
	~"pktgí.h
"

86 
	$pktgí_¥öt_pˇp
(
uöt16_t
 
pid
)

88 
uöt32_t
 
i
, 
row
, 
cﬁ
, 
max_pkts
, 
Àn
;

89 
uöt16_t
 
ty≥
, 
vœn
, 
skù
;

90 
uöt8_t
 
¥Ÿo
;

91 
p‹t_öfo_t
 *
öfo
;

92 
pkt_hdr_t
 *
hdr
;

93 
pˇp_öfo_t
 *
pˇp
;

94 
pˇ¥ec_hdr_t
 
pˇp_hdr
;

95 
buff
[64];

96 
pkt_buff
[2048];

98 
	`di•œy_t›löe
("<PCAP Page>");

99 
	`wr_s¸n_¥ötf
(1, 3, "P‹à%d o‡%d", 
pid
, 
pktgí
.
nb_p‹ts
);

101 
öfo
 = &
pktgí
.öfo[
pid
];

102 
pˇp
 = 
öfo
->pcap;

104 
row
 = 
PORT_STATE_ROW
;

105 
cﬁ
 = 1;

106 i‡(
pˇp
 =
NULL
) {

107 
	`wr_s¸n_˚¡î
(10,

108 
pktgí
.
s¸n
->
ncﬁs
,

110 
row
 = 28;

111 
Àave
;

114 
	`wr_s¸n_eﬁ_pos
(
row
, 
cﬁ
);

115 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "Port: %d, PCAP Count: %d of %d",

116 
pid
, 
pˇp
->
pkt_idx
,Öˇp->
pkt_cou¡
);

117 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s %*s%*s%*s%*s%*s%*s%*s",

119 
COLUMN_WIDTH_0
, "Dst MAC",

120 
COLUMN_WIDTH_0
, "Src MAC",

121 
COLUMN_WIDTH_0
, "Dst IP",

122 
COLUMN_WIDTH_0
 + 2, "Src IP",

127 
max_pkts
 = 
pˇp
->
pkt_idx
 + 
PCAP_PAGE_SIZE
;

128 i‡(
max_pkts
 > 
pˇp
->
pkt_cou¡
)

129 
max_pkts
 = 
pˇp
->
pkt_cou¡
;

131 
	`wr_pˇp_skù
(
pˇp
,Öˇp->
pkt_idx
);

133 
i
 = 
pˇp
->
pkt_idx
; i < 
max_pkts
; i++) {

134 
cﬁ
 = 1;

135 
skù
 = 0;

137 
Àn
 = 
	`wr_pˇp_ªad
(
pˇp
, &
pˇp_hdr
, 
pkt_buff
, (pkt_buff));

138 i‡(
Àn
 == 0)

142 i‡(
pˇp_hdr
.
ö˛_Àn
 > (
pkt_buff
) ) {

143 
i
--;

144 
skù
++;

147 
ty≥
 = 
	`¡ohs
–((
uöt16_t
 *)
pkt_buff
)[6]);

148 i‡(
	`u∆ikñy
(
ty≥
 =
ETHER_TYPE_VLAN
) )

149 
ty≥
 = 
	`¡ohs
–((
uöt16_t
 *)
pkt_buff
)[8]);

151 i‡(
	`u∆ikñy
(
ty≥
 < 
MAX_ETHER_TYPE_SIZE
) )

152 
skù
++;

154 
hdr
 = (
pkt_hdr_t
 *)&
pkt_buff
[0];

156 
	`wr_s¸n_eﬁ_pos
(
row
, 
cﬁ
);

158 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%5d:", 
i
);

159 
cﬁ
 += 7;

160 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

161 
	`öë_mtﬂ
(
buff
, (buff), &
hdr
->
ëh
.
d_addr
));

162 
cﬁ
 +
COLUMN_WIDTH_1
;

163 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

164 
	`öë_mtﬂ
(
buff
, (buff), &
hdr
->
ëh
.
s_addr
));

165 
cﬁ
 +
COLUMN_WIDTH_1
;

167 
ty≥
 = 
	`¡ohs
(
hdr
->
ëh
.
ëhî_ty≥
);

168 
¥Ÿo
 = 
hdr
->
u
.
ùv4
.proto;

169 
vœn
 = 0;

170 i‡(
ty≥
 =
ETHER_TYPE_VLAN
) {

171 
vœn
 = 
	`¡ohs
–((
uöt16_t
 *)&
hdr
->
ëh
.
ëhî_ty≥
)[1]);

172 
ty≥
 = 
	`¡ohs
–((
uöt16_t
 *)&
hdr
->
ëh
.
ëhî_ty≥
)[2]);

173 
¥Ÿo
 = ((
ùHdr_t
 *)((*)&
hdr
->
u
.
ùv4
 + 4))->proto;

176 i‡(
ty≥
 =
ETHER_TYPE_IPv4
) {

177 
	`wr_s¸n_¥ötf
(
row
,

178 
cﬁ
,

180 
COLUMN_WIDTH_1
,

181 
	`öë_¡›4
(
buff
, (buff),

182 
hdr
->
u
.
ùv4
.
d°
,

184 
cﬁ
 +
COLUMN_WIDTH_1
;

185 
	`wr_s¸n_¥ötf
(
row
,

186 
cﬁ
,

188 
COLUMN_WIDTH_1
 + 2,

189 
	`öë_¡›4
(
buff
, (buff),

190 
hdr
->
u
.
ùv4
.
§c
,

192 
cﬁ
 +
COLUMN_WIDTH_1
 + 2;

194 
	`¢¥ötf
(
buff
, (buff), "%d/%d",

195 
	`¡ohs
(
hdr
->
u
.
uù
.
udp
.
•‹t
),

196 
	`¡ohs
(
hdr
->
u
.
uù
.
udp
.
dp‹t
));

197 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 12, 
buff
);

198 
cﬁ
 += 12;

200 
skù
++;

201 
cﬁ
 +((2 * 
COLUMN_WIDTH_1
) + 2 + 12);

203 
	`¢¥ötf
(
buff
, (buff), "%s/%s:%4d",

204 (
ty≥
 =
ETHER_TYPE_IPv4
) ? "IPv4" :

205 (
ty≥
 =
ETHER_TYPE_IPv6
) ? "IPv6" : "Other",

206 (
ty≥
 =
PG_IPPROTO_TCP
) ? "TCP" :

207 (
¥Ÿo
 =
PG_IPPROTO_ICMP
) ? "ICMP" : "UDP",

208 (
vœn
 & 0xFFF));

209 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 15, 
buff
);

210 
cﬁ
 += 15;

211 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%5d", 
Àn
);

213 i‡(
skù
 && (
ty≥
 < 
ETHER_TYPE_IPv4
) )

214 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
 + 7, "<<< Skù %04x", 
ty≥
);

215 i‡(
skù
 && (
ty≥
 !
ETHER_TYPE_IPv4
) )

216 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
 + 7, " EthTy≥ %04x", 
ty≥
);

217 
row
++;

219 
Àave
:

220 
	`di•œy_dashlöe
(
row
 + 2);

222 
pktgí
.
Êags
 &~
PRINT_LABELS_FLAG
;

223 
	}
}

238 
	$pktgí_∑ge_pˇp
(
uöt16_t
 
pid
)

240 i‡(
pktgí
.
Êags
 & 
PRINT_LABELS_FLAG
)

241 
	`pktgí_¥öt_pˇp
(
pid
);

242 
	}
}

256 
	$pktgí_pˇp_mbuf_˘‹
(
πe_mempoﬁ
 *
mp
,

257 *
›aque_¨g
,

258 *
_m
,

259 
i
)

261 
πe_mbuf
 *
m
 = 
_m
;

262 
uöt32_t
 
buf_Àn
 = 
mp
->
ñt_size
 - (
πe_mbuf
);

263 
pˇ¥ec_hdr_t
 
hdr
;

264 
ssize_t
 
Àn
 = -1;

265 
buf„r
[2048];

266 
pˇp_öfo_t
 *
pˇp
 = (pˇp_öfo_à*)
›aque_¨g
;

268 
	`RTE_MBUF_ASSERT
(
mp
->
ñt_size
 >(
πe_mbuf
));

270 
	`mem£t
(
m
, 0, 
mp
->
ñt_size
);

273 
m
->
buf_addr
 = (*)m + (
πe_mbuf
);

274 
m
->
buf_phyßddr
 = 
	`πe_mempoﬁ_vút2phy
(
mp
, m->
buf_addr
);

275 
m
->
buf_Àn
 = (
uöt16_t
)buf_len;

278 
m
->
d©a_off
 = 
	`RTE_MIN
(
RTE_PKTMBUF_HEADROOM
, m->
buf_Àn
);

281 
m
->
poﬁ
 = 
mp
;

282 
m
->
nb_£gs
 = 1;

283 
m
->
p‹t
 = 0xff;

284 
m
->
ﬁ_Êags
 = 0;

287 i‡–(
i
 & 0x3ff) == 0) {

288 
	`πe_¥ötf_°©us
("%c\b", "-\\|/"[(
i
 >> 10) & 3]);

289 
i
++;

292 i‡(
	`u∆ikñy
(
	`wr_pˇp_ªad
(
pˇp
, &
hdr
, 
buf„r
,

293 (
buf„r
)) <= 0) ) {

294 
	`wr_pˇp_ªwöd
(
pˇp
);

298 
Àn
 = 
hdr
.
ö˛_Àn
;

301 i‡(
Àn
 < (
ETHER_MIN_LEN
 - 4) )

302 
Àn
 = (
ETHER_MIN_LEN
 - 4);

303 i‡(
Àn
 > (
ETHER_MAX_LEN
 - 4) )

304 
Àn
 = (
ETHER_MAX_LEN
 - 4);

306 
m
->
d©a_Àn
 = 
Àn
;

307 
m
->
pkt_Àn
 = 
Àn
;

309 
	`πe_mem˝y
((
uöt8_t
 *)
m
->
buf_addr
 + m->
d©a_off
, 
buf„r
, 
Àn
);

312 
	}
}

327 
	$pktgí_pˇp_∑r£
(
pˇp_öfo_t
 *
pˇp
, 
p‹t_öfo_t
 *
öfo
, 
qid
)

329 
pˇ¥ec_hdr_t
 
hdr
;

330 
uöt32_t
 
ñt_cou¡
, 
d©a_size
, 
Àn
, 
i
;

331 
uöt64_t
 
pkt_sizes
 = 0;

332 
buf„r
[2048];

333 
«me
[
RTE_MEMZONE_NAMESIZE
];

335 i‡–(
pˇp
 =
NULL
Ë|| (
öfo
 == NULL) )

338 
	`wr_pˇp_ªwöd
(
pˇp
);

340 
	`¢¥ötf
(
«me
, “ame), "%-12s%d:%d", "PCAP TX", 
öfo
->
pid
, 
qid
);

341 
	`πe_¥ötf_°©us
(" Pro˚ss: %-*†", 18, 
«me
);

343 
pkt_sizes
 = 
ñt_cou¡
 = 
i
 = 0;

346 
	`wr_pˇp_ªad
(
pˇp
, &
hdr
, 
buf„r
, (buffer)) > 0) {

348 
Àn
 = 
hdr
.
ö˛_Àn
;

350 i‡(
Àn
 < (
ETHER_MIN_LEN
 - 4) )

351 
Àn
 = (
ETHER_MIN_LEN
 - 4);

352 i‡(
Àn
 > (
ETHER_MAX_LEN
 - 4) )

353 
Àn
 = (
ETHER_MAX_LEN
 - 4);

355 
ñt_cou¡
++;

357 i‡–(
ñt_cou¡
 & 0x3ff) == 0)

358 
	`πe_¥ötf_°©us
("%c\b", "-\\|/"[
i
++ & 3]);

360 
pkt_sizes
 +
Àn
;

364 i‡(
ñt_cou¡
 > 0) {

366 
öfo
->
pˇp
->
pkt_size
 = (
pkt_sizes
 / 
ñt_cou¡
);

367 
öfo
->
pˇp
->
pkt_cou¡
 = 
ñt_cou¡
;

368 
öfo
->
pˇp
->
pkt_idx
 = 0;

370 
	`wr_pˇp_ªwöd
(
pˇp
);

373 i‡(
ñt_cou¡
 < 
MAX_MBUFS_PER_PORT
)

374 
ñt_cou¡
 = 
MAX_MBUFS_PER_PORT
;

375 
ñt_cou¡
 = 
	`πe_Æign32pow2
(elt_count);

377 
	`πe_¥ötf_°©us
("\∏ Cª©e: %-*† \b", 16, 
«me
);

378 
öfo
->
q
[
qid
].
pˇp_mp
 = 
	`πe_mempoﬁ_¸óã
(
«me
,

379 
ñt_cou¡
,

380 
MBUF_SIZE
,

383 
πe_pktmbuf_poﬁ_¥iv©e
),

384 
πe_pktmbuf_poﬁ_öô
,

385 
NULL
,

386 
pktgí_pˇp_mbuf_˘‹
,

387 (*)
pˇp
,

388 
	`πe_lc‹e_to_sockë_id
(

390 
MEMPOOL_F_DMA
);

391 
	`πe_¥ötf_°©us
("\r");

392 i‡(
öfo
->
q
[
qid
].
pˇp_mp
 =
NULL
)

393 
	`pktgí_log_∑nic
("Cannot initÖort %d for PCAPÖackets",

394 
öfo
->
pid
);

396 
d©a_size
 = (
öfo
->
pˇp
->
pkt_cou¡
 * 
MBUF_SIZE
);

397 
	`πe_¥ötf_°©us
(

400 
«me
,

401 
ñt_cou¡
,

402 
öfo
->
pˇp
->
pkt_cou¡
,

403 (
d©a_size
 + 1023) / 1024);

404 
pktgí
.
mem_u£d
 +
d©a_size
;

405 
pktgí
.
tŸÆ_mem_u£d
 +
d©a_size
;

407 
	`pktgí_£t_p‹t_Êags
(
öfo
, 
SEND_PCAP_PKTS
);

410 
	`pktgí_∑ckë_øã
(
öfo
);

412 
	}
}

	@app/pktgen-pcap.h

68 #i‚de‡
_PKTGEN_PCAP_H_


69 
	#_PKTGEN_PCAP_H_


	)

71 
	~<wr_pˇp.h
>

73 
	gp‹t_öfo_s
;

75 
pktgí_pˇp_∑r£
(
pˇp_öfo_t
 *
pˇp
,

76 
p‹t_öfo_s
 *
öfo
,

77 
qid
);

79 
pktgí_∑ge_pˇp
(
uöt16_t
 
pid
);

	@app/pktgen-port-cfg.c

68 
	~"pktgí-p‹t-cfg.h
"

70 
	~"pktgí.h
"

71 
	~"pktgí-cmds.h
"

72 
	~"pktgí-log.h
"

75 
	mRX_PTHRESH
 = 8,

76 
	mRX_HTHRESH
 = 8,

77 
	mRX_WTHRESH
 = 4,

79 
	mTX_PTHRESH
 = 36,

80 
	mTX_HTHRESH
 = 0,

81 
	mTX_WTHRESH
 = 0,

82 
	mTX_WTHRESH_1GB
 = 16,

85 c⁄° 
πe_ëh_c⁄f
 
	gdeÁu…_p‹t_c⁄f
 = {

86 .
rxmode
 = {

87 .
•lô_hdr_size
 = 0,

88 .
	ghódî_•lô
 = 0,

89 .
	ghw_ù_checksum
 = 0,

90 .
	ghw_vœn_fûãr
 = 0,

91 .
	ghw_vœn_°rù
 = 0,

92 .
	ghw_vœn_exãnd
 = 0,

93 .
	gjumbo_‰ame
 = 0,

94 .
	ghw_°rù_¸c
 = 0,

96 .
	grx_adv_c⁄f
 = {

97 .
rss_c⁄f
 = {

98 .
rss_key
 = 
NULL
,

99 .
	grss_hf
 = 
ETH_RSS_IP
,

102 .
	gtxmode
 = {

103 .
mq_mode
 = 
ETH_MQ_TX_NONE
,

107 c⁄° 
rög_c⁄f_t
 
	gdeÁu…_rög_c⁄f
 = {

108 .
rx_±hªsh
 = 
RTE_PMD_PARAM_UNSET
,

109 .
	grx_hthªsh
 = 
RTE_PMD_PARAM_UNSET
,

110 .
	grx_wthªsh
 = 
RTE_PMD_PARAM_UNSET
,

112 .
	gtx_±hªsh
 = 
RTE_PMD_PARAM_UNSET
,

113 .
	gtx_hthªsh
 = 
RTE_PMD_PARAM_UNSET
,

114 .
	gtx_wthªsh
 = 
RTE_PMD_PARAM_UNSET
,

116 .
	grx_‰ì_thªsh
 = 
RTE_PMD_PARAM_UNSET
,

117 .
	grx_dr›_í
 = 
RTE_PMD_PARAM_UNSET
,

118 .
	gtx_‰ì_thªsh
 = 
RTE_PMD_PARAM_UNSET
,

119 .
	gtx_rs_thªsh
 = 
RTE_PMD_PARAM_UNSET
,

120 .
	gtxq_Êags
 = 
RTE_PMD_PARAM_UNSET
,

121 .
	grss_hf
 = 
ETH_RSS_IP


136 
πe_mempoﬁ
 *

137 
	$pktgí_mbuf_poﬁ_¸óã
(c⁄° *
ty≥
, 
uöt8_t
 
pid
, uöt8_à
queue_id
,

138 
uöt32_t
 
nb_mbufs
, 
sockë_id
, 
ˇche_size
){

139 
πe_mempoﬁ
 *
mp
;

140 
«me
[
RTE_MEMZONE_NAMESIZE
];

142 
	`¢¥ötf
(
«me
, “ame), "%-12s%u:%u", 
ty≥
, 
pid
, 
queue_id
);

143 
	`pktgí_log_öfo
(

146 
«me
,

147 
nb_mbufs
,

148 
MBUF_SIZE
,

149 (
πe_mbuf
),

150 (
πe_mempoﬁ
),

151 (((
nb_mbufs
 * (
MBUF_SIZE
 + (
πe_mbuf
)) +

152 (
πe_mempoﬁ
))Ë+ 1023Ë/ 1024, 
RTE_PKTMBUF_HEADROOM
, 
RTE_MBUF_DEFAULT_BUF_SIZE
);

153 
pktgí
.
mem_u£d
 +=

154 ((
nb_mbufs
 * (
MBUF_SIZE
 + (
πe_mbuf
)) +

155 (
πe_mempoﬁ
)));

156 
pktgí
.
tŸÆ_mem_u£d
 +=

157 ((
nb_mbufs
 * (
MBUF_SIZE
 + (
πe_mbuf
)) +

158 (
πe_mempoﬁ
)));

161 
mp
 = 
	`πe_pktmbuf_poﬁ_¸óã
(
«me
,

162 
nb_mbufs
,

163 
ˇche_size
,

164 
DEFAULT_PRIV_SIZE
,

165 
MBUF_SIZE
,

166 
sockë_id
);

167 i‡(
mp
 =
NULL
)

168 
	`pktgí_log_∑nic
(

170 
«me
,

171 
pid
,

172 
queue_id
,

173 
nb_mbufs
,

174 
sockë_id
,

175 
	`πe_°ªº‹
(
î∫o
));

177  
mp
;

178 
	}
}

181 
	$rxtx_p‹t_c⁄fig
(
uöt32_t
 
pid
)

183 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

184 
rög_c⁄f_t
 *
rc
 = &
öfo
->
rög_c⁄f
;

186 
öfo
->
rx_c⁄f
 = info->
dev_öfo
.
deÁu…_rxc⁄f
;

187 
öfo
->
tx_c⁄f
 = info->
dev_öfo
.
deÁu…_txc⁄f
;

190 i‡(
rc
->
rx_±hªsh
 !
RTE_PMD_PARAM_UNSET
)

191 
öfo
->
rx_c⁄f
.
rx_thªsh
.
±hªsh
 = 
rc
->
rx_±hªsh
;

193 i‡(
rc
->
rx_hthªsh
 !
RTE_PMD_PARAM_UNSET
)

194 
öfo
->
rx_c⁄f
.
rx_thªsh
.
hthªsh
 = 
rc
->
rx_hthªsh
;

196 i‡(
rc
->
rx_wthªsh
 !
RTE_PMD_PARAM_UNSET
)

197 
öfo
->
rx_c⁄f
.
rx_thªsh
.
wthªsh
 = 
rc
->
rx_wthªsh
;

199 i‡(
rc
->
rx_‰ì_thªsh
 !
RTE_PMD_PARAM_UNSET
)

200 
öfo
->
rx_c⁄f
.
rx_‰ì_thªsh
 = 
rc
->rx_free_thresh;

202 i‡(
rc
->
rx_dr›_í
 !
RTE_PMD_PARAM_UNSET
)

203 
öfo
->
rx_c⁄f
.
rx_dr›_í
 = 
rc
->rx_drop_en;

205 i‡(
rc
->
tx_±hªsh
 !
RTE_PMD_PARAM_UNSET
)

206 
öfo
->
tx_c⁄f
.
tx_thªsh
.
±hªsh
 = 
rc
->
tx_±hªsh
;

208 i‡(
rc
->
tx_hthªsh
 !
RTE_PMD_PARAM_UNSET
)

209 
öfo
->
tx_c⁄f
.
tx_thªsh
.
hthªsh
 = 
rc
->
tx_hthªsh
;

211 i‡(
rc
->
tx_wthªsh
 !
RTE_PMD_PARAM_UNSET
)

212 
öfo
->
tx_c⁄f
.
tx_thªsh
.
wthªsh
 = 
rc
->
tx_wthªsh
;

214 i‡(
rc
->
tx_rs_thªsh
 !
RTE_PMD_PARAM_UNSET
)

215 
öfo
->
tx_c⁄f
.
tx_rs_thªsh
 = 
rc
->tx_rs_thresh;

217 i‡(
rc
->
tx_‰ì_thªsh
 !
RTE_PMD_PARAM_UNSET
)

218 
öfo
->
tx_c⁄f
.
tx_‰ì_thªsh
 = 
rc
->tx_free_thresh;

220 i‡(
rc
->
txq_Êags
 !
RTE_PMD_PARAM_UNSET
)

221 
öfo
->
tx_c⁄f
.
txq_Êags
 = 
rc
->txq_flags;

222 
	}
}

225 
	$pktgí_p‹t_c⁄f_£tup
(
uöt32_t
 
pid
, 
rxtx_t
 *
π
, c⁄° 
πe_ëh_c⁄f
 *
dpc
)

227 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

228 
πe_ëh_c⁄f
 *
c⁄f
 = &
öfo
->
p‹t_c⁄f
;

229 
πe_ëh_dev_öfo
 *
dev
 = &
öfo
->
dev_öfo
;

231 
	`mem˝y
(
c⁄f
, 
dpc
, (
πe_ëh_c⁄f
));

232 
	`mem˝y
(&
öfo
->
rög_c⁄f
, &
deÁu…_rög_c⁄f
, (
rög_c⁄f_t
));

234 
	`πe_ëh_dev_öfo_gë
(
pid
, 
dev
);

236 
	`pktgí_dump_dev_öfo
(
°dout
, 
dev
);

238 i‡(
π
->
rx
 > 1) {

239 
c⁄f
->
rx_adv_c⁄f
.
rss_c⁄f
.
rss_key
 = 
NULL
;

240 
c⁄f
->
rx_adv_c⁄f
.
rss_c⁄f
.
rss_hf
 = 
ETH_RSS_IP
;

242 
c⁄f
->
rx_adv_c⁄f
.
rss_c⁄f
.
rss_key
 = 
NULL
;

243 
c⁄f
->
rx_adv_c⁄f
.
rss_c⁄f
.
rss_hf
 = 0;

246 i‡(
dev
->
max_vfs
 == 0) {

247 i‡(
c⁄f
->
rx_adv_c⁄f
.
rss_c⁄f
.
rss_hf
 != 0)

248 
c⁄f
->
rxmode
.
mq_mode
 = 
ETH_MQ_RX_RSS
;

250 
c⁄f
->
rxmode
.
mq_mode
 = 
ETH_MQ_RX_NONE
;

253 i‡(
dev
->
max_vfs
 != 0) {

254 i‡(
c⁄f
->
rx_adv_c⁄f
.
rss_c⁄f
.
rss_hf
 != 0)

255 
c⁄f
->
rxmode
.
mq_mode
 = 
ETH_MQ_RX_VMDQ_RSS
;

257 
c⁄f
->
rxmode
.
mq_mode
 = 
ETH_MQ_RX_NONE
;

259 
c⁄f
->
txmode
.
mq_mode
 = 
ETH_MQ_TX_NONE
;

262 
	`rxtx_p‹t_c⁄fig
(
pid
);

263 
	}
}

278 
	$pktgí_c⁄fig_p‹ts
()

280 
uöt32_t
 
lid
, 
pid
, 
i
, 
s
, 
q
, 
sid
;

281 
rxtx_t
 
π
;

282 
pkt_£q_t
 *
pkt
;

283 
p‹t_öfo_t
 *
öfo
;

284 
buff
[
RTE_MEMZONE_NAMESIZE
];

285 
öt32_t
 
ªt
, 
ˇche_size
;

286 
ouçut_buff
[256] = { 0 };

290 
pktgí
.
nb_p‹ts
 = 
	`πe_ëh_dev_cou¡
();

291 i‡(
pktgí
.
nb_p‹ts
 > 
RTE_MAX_ETHPORTS
)

292 
pktgí
.
nb_p‹ts
 = 
RTE_MAX_ETHPORTS
;

294 i‡(
pktgí
.
nb_p‹ts
 == 0)

295 
	`pktgí_log_∑nic
("*** DidÇot findányÖortsÅo use ***");

297 
pktgí
.
°¨tög_p‹t
 = 0;

300 i‡(
pktgí
.
nb_p‹ts
 >Öktgí.
nb_p‹ts_≥r_∑ge
)

301 
pktgí
.
ídög_p‹t
 =Öktgí.
°¨tög_p‹t
 +

302 
pktgí
.
nb_p‹ts_≥r_∑ge
;

304 
pktgí
.
ídög_p‹t
 =Öktgí.
°¨tög_p‹t
 +Öktgí.
nb_p‹ts
;

306 
	`wr_p‹t_m©rix_dump
(
pktgí
.
l2p
);

308 
	`pktgí_log_öfo
(

310 
pktgí
.
nb_p‹ts
,

311 
MBUF_SIZE
,

312 
MBUF_CACHE_SIZE
);

315 
lid
 = 0;Üid < 
RTE_MAX_LCORE
;Üid++) {

316 i‡(
	`wr_gë_m≠
(
pktgí
.
l2p
, 
RTE_MAX_ETHPORTS
, 
lid
) == 0)

320 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts
;Öid++) {

322 i‡(
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
lid
) == 0)

324 
	`wr_£t_p‹t_¥iv©e
(
pktgí
.
l2p
, 
pid
, &pktgí.
öfo
[pid]);

325 
pktgí
.
öfo
[
pid
].pid =Öid;

328 
	`wr_dump_l2p
(
pktgí
.
l2p
);

330 
pktgí
.
tŸÆ_mem_u£d
 = 0;

332 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts
;Öid++) {

334 i‡–(
π
.
rxtx
 =

335 
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
RTE_MAX_LCORE
)) == 0)

338 
pktgí
.
p‹t_˙t
++;

339 
	`¢¥ötf
(
ouçut_buff
,

340 (
ouçut_buff
),

342 
pid
,

343 
π
.
tx
,

344 
π
.
rx
);

346 
öfo
 = 
	`wr_gë_p‹t_¥iv©e
(
pktgí
.
l2p
, 
pid
);

348 
öfo
->
fûl_∑âîn_ty≥
 = 
ABC_FILL_PATTERN
;

349 
	`°∫˝y
(
öfo
->
u£r_∑âîn
,

351 
USER_PATTERN_SIZE
);

353 
	`πe_•ölock_öô
(&
öfo
->
p‹t_lock
);

356 
	`¢¥ötf
(
buff
, (buff), "£q_hdr_%d", 
pid
);

357 
öfo
->
£q_pkt
 =

358 (
pkt_£q_t
 *)
	`πe_zmÆloc_sockë
(
buff
,

359 ((
pkt_£q_t
) *

360 
NUM_TOTAL_PKTS
),

361 
RTE_CACHE_LINE_SIZE
,

362 
	`πe_sockë_id
());

363 i‡(
öfo
->
£q_pkt
 =
NULL
)

364 
	`pktgí_log_∑nic
(

366 
NUM_TOTAL_PKTS
);

368 
öfo
->
£qIdx
 = 0;

369 
öfo
->
£qC¡
 = 0;

371 
öfo
->
nb_mbufs
 = 
MAX_MBUFS_PER_PORT
;

372 
ˇche_size
 = (
öfo
->
nb_mbufs
 > 
RTE_MEMPOOL_CACHE_MAX_SIZE
) ?

373 
RTE_MEMPOOL_CACHE_MAX_SIZE
 : 
öfo
->
nb_mbufs
;

375 
	`pktgí_p‹t_c⁄f_£tup
(
pid
, &
π
, &
deÁu…_p‹t_c⁄f
);

377 i‡–(
ªt
 =

378 
	`πe_ëh_dev_c⁄figuª
(
pid
, 
π
.
rx
,Ñt.
tx
,

379 &
öfo
->
p‹t_c⁄f
)) < 0)

380 
	`pktgí_log_∑nic
(

382 
pid
,

383 
π
.
rx
,

384 
π
.
tx
,

385 
î∫o
,

386 
	`πe_°ªº‹
(-
ªt
));

388 
pkt
 = &
öfo
->
£q_pkt
[
SINGLE_PKT
];

391 
	`πe_ëh_maˇddr_gë
(
pid
, &
pkt
->
ëh_§c_addr
);

392 
	`pktgí_log_öfo
("%s, Src MAC %02x:%02x:%02x:%02x:%02x:%02x",

393 
ouçut_buff
,

394 
pkt
->
ëh_§c_addr
.
addr_byãs
[0],

395 
pkt
->
ëh_§c_addr
.
addr_byãs
[1],

396 
pkt
->
ëh_§c_addr
.
addr_byãs
[2],

397 
pkt
->
ëh_§c_addr
.
addr_byãs
[3],

398 
pkt
->
ëh_§c_addr
.
addr_byãs
[4],

399 
pkt
->
ëh_§c_addr
.
addr_byãs
[5]);

402 
i
 = 0; i < 
NUM_SEQ_PKTS
; i++)

403 
	`ëhAddrC›y
(&
öfo
->
£q_pkt
[
i
].
ëh_§c_addr
,

404 &
pkt
->
ëh_§c_addr
);

406 
pktgí
.
mem_u£d
 = 0;

408 
q
 = 0; q < 
π
.
rx
; q++) {

410 
sid
 =

411 
	`πe_lc‹e_to_sockë_id
(
	`wr_gë_p‹t_lid
(
pktgí
.

412 
l2p
, 
pid
,

413 
q
));

416 
öfo
->
q
[q].
rx_mp
 = 
	`pktgí_mbuf_poﬁ_¸óã
("Default RX",

417 
pid
,

418 
q
,

419 
öfo
->
nb_mbufs
,

420 
sid
,

421 
ˇche_size
);

422 i‡(
öfo
->
q
[q].
rx_mp
 =
NULL
)

423 
	`pktgí_log_∑nic
(

425 
pid
);

427 
ªt
 = 
	`πe_ëh_rx_queue_£tup
(
pid
,

428 
q
,

429 
pktgí
.
nb_rxd
,

430 
sid
,

431 &
öfo
->
rx_c⁄f
,

432 
pktgí
.
öfo
[
pid
].
q
[q].
rx_mp
);

433 i‡(
ªt
 < 0)

434 
	`pktgí_log_∑nic
(

436 
ªt
,

437 
pid
,

438 
	`πe_°ªº‹
(-
ªt
));

440 
	`pktgí_log_öfo
("");

442 
q
 = 0; q < 
π
.
tx
; q++) {

444 
sid
 =

445 
	`πe_lc‹e_to_sockë_id
(
	`wr_gë_p‹t_lid
(
pktgí
.

446 
l2p
, 
pid
,

447 
q
));

450 
öfo
->
q
[q].
tx_mp
 = 
	`pktgí_mbuf_poﬁ_¸óã
("Default TX",

451 
pid
,

452 
q
,

453 
MAX_MBUFS_PER_PORT
,

454 
sid
,

455 
ˇche_size
);

456 i‡(
öfo
->
q
[q].
tx_mp
 =
NULL
)

457 
	`pktgí_log_∑nic
(

459 
pid
);

462 
öfo
->
q
[q].
ønge_mp
 = 
	`pktgí_mbuf_poﬁ_¸óã
(

464 
pid
,

465 
q
,

466 
MAX_MBUFS_PER_PORT
,

467 
sid
,

469 i‡(
öfo
->
q
[q].
ønge_mp
 =
NULL
)

470 
	`pktgí_log_∑nic
(

472 
pid
);

475 
öfo
->
q
[q].
£q_mp
 = 
	`pktgí_mbuf_poﬁ_¸óã
(

477 
pid
,

478 
q
,

479 
MAX_MBUFS_PER_PORT
,

480 
sid
,

481 
ˇche_size
);

482 i‡(
öfo
->
q
[q].
£q_mp
 =
NULL
)

483 
	`pktgí_log_∑nic
(

485 
pid
);

488 
öfo
->
q
[q].
•ecül_mp
 = 
	`pktgí_mbuf_poﬁ_¸óã
(

490 
pid
,

491 
q
,

492 
MAX_SPECIAL_MBUFS
,

493 
sid
,

495 i‡(
öfo
->
q
[q].
•ecül_mp
 =
NULL
)

496 
	`pktgí_log_∑nic
(

498 
pid
);

501 i‡(
pktgí
.
öfo
[
pid
].
pˇp
 !
NULL
)

502 i‡(
	`pktgí_pˇp_∑r£
(
pktgí
.
öfo
[
pid
].
pˇp
,

503 
öfo
, 
q
) == -1)

504 
	`pktgí_log_∑nic
(

506 
pid
);

508 
	`pktgí_gë_lök_°©us
(
öfo
, 
pid
, 0);

510 
ªt
 = 
	`πe_ëh_tx_queue_£tup
(
pid
,

511 
q
,

512 
pktgí
.
nb_txd
,

513 
sid
,

514 &
öfo
->
tx_c⁄f
);

515 i‡(
ªt
 < 0)

516 
	`pktgí_log_∑nic
(

518 
ªt
,

519 
pid
,

520 
	`πe_°ªº‹
(-
ªt
));

521 
	`pktgí_log_öfo
("");

523 
	`pktgí_log_öfo
("%*sPort memory used = %6lu KB", 71, " ",

524 (
pktgí
.
mem_u£d
 + 1023) / 1024);

526 
	`pktgí_log_öfo
("%*sTotal memory used = %6lu KB", 70, " ",

527 (
pktgí
.
tŸÆ_mem_u£d
 + 1023) / 1024);

530 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts
;Öid++) {

531 i‡(
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
RTE_MAX_LCORE
) == 0)

534 
öfo
 = 
	`wr_gë_p‹t_¥iv©e
(
pktgí
.
l2p
, 
pid
);

537 i‡–(
ªt
 = 
	`πe_ëh_dev_°¨t
(
pid
)) < 0)

538 
	`pktgí_log_∑nic
("rte_eth_dev_start:Öort=%d, %s",

539 
pid
,

540 
	`πe_°ªº‹
(-
ªt
));

542 
	`pktgí_gë_lök_°©us
(
öfo
, 
pid
, 1);

544 i‡(
öfo
->
lök
.
lök_°©us
)

545 
	`¢¥ötf
(
ouçut_buff
,

546 (
ouçut_buff
),

548 
pid
,

549 (
uöt32_t
)
öfo
->
lök
.
lök_•ìd
,

550 (
öfo
->
lök
.
lök_du∂ex
 =
ETH_LINK_FULL_DUPLEX
) ?

553 
	`¢¥ötf
(
ouçut_buff
,

554 (
ouçut_buff
),

556 
pid
);

559 i‡(
pktgí
.
Êags
 & 
PROMISCUOUS_ON_FLAG
) {

560 
	`°∫ˇtf
(
ouçut_buff
, " <EnableÖromiscuous mode>");

561 
	`πe_ëh_¥omiscuous_íabÀ
(
pid
);

564 
	`pktgí_log_öfo
("%s", 
ouçut_buff
);

565 
pktgí
.
öfo
[
pid
].
£q_pkt
[
SINGLE_PKT
].
pktSize
 = 
MIN_PKT_SIZE
;

568 
s
 = 0; s < 
NUM_TOTAL_PKTS
; s++)

569 
	`pktgí_p‹t_deÁu…s
(
pid
, 
s
);

571 
	`pktgí_ønge_£tup
(
öfo
);

573 
	`πe_ëh_°©s_gë
(
pid
, &
öfo
->
öô_°©s
);

575 
	`pktgí_∫d_bôs_öô
(&
pktgí
.
öfo
[
pid
].
∫d_bôfõlds
);

579 
	`pktgí_log_öfo
("");

582 
sid
 =

584 
sid
 < 
	`wr_c‹em≠_˙t
(
pktgí
.
c‹e_öfo
,Öktgí.
c‹e_˙t
, 0);

585 
sid
++)

586 
	`pktgí_∑ckë_ˇ±uª_öô
(&
pktgí
.
ˇ±uª
[
sid
], sid);

587 
	}
}

	@app/pktgen-port-cfg.h

68 #i‚de‡
_PKTGEN_PORT_CFG_H_


69 
	#_PKTGEN_PORT_CFG_H_


	)

71 
	~<°dio.h
>

72 
	~<°rög.h
>

73 
	~<πe_vîsi⁄.h
>

74 
	~<πe_©omic.h
>

75 
	~<πe_•ölock.h
>

77 #unde‡
BPF_MAJOR_VERSION


78 
	~<pˇp/pˇp.h
>

80 
	~"pktgí-£q.h
"

81 
	~"pktgí-ønge.h
"

82 
	~"pktgí-°©s.h
"

83 
	~"pktgí-pˇp.h
"

84 
	~"pktgí-dump.h
"

85 
	~"pktgí-ëhî.h
"

86 
	~"pktgí-øndom.h
"

88 
	#MAX_PORT_DESC_SIZE
 132

	)

89 
	#USER_PATTERN_SIZE
 16

	)

90 
	#DNS_DOMAIN_SIZE
 255

	)

92 
	sp‹t_sizes_s
 {

93 
uöt64_t
 
	m_64
;

94 
uöt64_t
 
	m_65_127
;

95 
uöt64_t
 
	m_128_255
;

96 
uöt64_t
 
	m_256_511
;

97 
uöt64_t
 
	m_512_1023
;

98 
uöt64_t
 
	m_1024_1518
;

99 
uöt64_t
 
	mbrﬂdˇ°
;

100 
uöt64_t
 
	mmu…iˇ°
;

101 
uöt64_t
 
	mjumbo
;

102 
uöt64_t
 
	mru¡
;

103 } 
	tp‹t_sizes_t
;

105 
	smbuf_èbÀ
 {

106 
	mÀn
;

107 
πe_mbuf
 *
	mm_èbÀ
[
DEFAULT_PKT_BURST
 + 1];

111 
	mSEND_ARP_REQUEST
 = 0x00000001,

112 
	mSEND_GRATUITOUS_ARP
 = 0x00000002,

113 
	mICMP_ECHO_ENABLE_FLAG
 = 0x00000004,

114 
	mSEND_PCAP_PKTS
 = 0x00000008,

115 
	mSEND_RANGE_PKTS
 = 0x00000010,

116 
	mSEND_SEQ_PKTS
 = 0x00000020,

117 
	mPROCESS_INPUT_PKTS
 = 0x00000040,

118 
	mSEND_PING4_REQUEST
 = 0x00000080,

119 
	mSEND_PING6_REQUEST
 = 0x00000100,

120 
	mPROCESS_RX_TAP_PKTS
 = 0x00000200,

121 
	mPROCESS_TX_TAP_PKTS
 = 0x00000400,

122 
	mSEND_VLAN_ID
 = 0x00000800,

123 
	mPROCESS_GARP_PKTS
 = 0x00001000,

124 
	mCAPTURE_PKTS
 = 0x00002000,

125 
	mSEND_MPLS_LABEL
 = 0x00004000,

126 
	mSEND_Q_IN_Q_IDS
 = 0x00008000,

127 
	mSEND_GRE_IPv4_HEADER
 = 0x00010000,

128 
	mSEND_RANDOM_PKTS
 = 0x00020000,

129 
	mSEND_GRE_ETHER_HEADER
 = 0x00040000,

130 
	mSEND_LATENCY_PKTS
 = 0x00080000,

131 
	mSENDING_PACKETS
 = 0x40000000,

132 
	mSEND_FOREVER
 = 0x80000000,

133 
	mSEND_ARP_PING_REQUESTS
 =

134 (
SEND_ARP_REQUEST
 | 
SEND_GRATUITOUS_ARP
 | 
SEND_PING4_REQUEST
 |

135 
SEND_PING6_REQUEST
)

138 
	#RTE_PMD_PARAM_UNSET
 -1

	)

143 
	srög_c⁄f_s
 {

144 
öt8_t
 
	mrx_±hªsh
;

145 
öt8_t
 
	mrx_hthªsh
;

146 
öt8_t
 
	mrx_wthªsh
;

148 
öt8_t
 
	mtx_±hªsh
;

149 
öt8_t
 
	mtx_hthªsh
;

150 
öt8_t
 
	mtx_wthªsh
;

155 
öt16_t
 
	mrx_‰ì_thªsh
;

160 
öt8_t
 
	mrx_dr›_í
;

165 
öt16_t
 
	mtx_‰ì_thªsh
;

170 
öt16_t
 
	mtx_rs_thªsh
;

175 
öt32_t
 
	mtxq_Êags
;

180 
uöt64_t
 
	mrss_hf
;

181 } 
	trög_c⁄f_t
;

184 
	mZERO_FILL_PATTERN
 = 1,

185 
	mABC_FILL_PATTERN
,

186 
	mUSER_FILL_PATTERN
,

187 
	mNO_FILL_PATTERN
,

188 } 
	tfûl_t
;

190 (*
	ttx_func_t
)(
	tp‹t_öfo_s
 *
	töfo
, 
	tuöt16_t
 
	tqid
);

192 
	sp‹t_öfo_s
 {

193 
tx_func_t
 
£nd_bur°
;

194 
uöt16_t
 
pid
;

195 
uöt16_t
 
tx_bur°
;

196 
uöt8_t
 
∑d0
;

197 
uöt8_t
 
tx_øã
;

198 
πe_©omic32_t
 
p‹t_Êags
;

200 
πe_©omic64_t
 
å™smô_cou¡
;

201 
πe_©omic64_t
 
cuºít_tx_cou¡
;

202 
uöt64_t
 
tx_cy˛es
;

203 
uöt64_t
 
tx_µs
;

204 
uöt64_t
 
dñè
;

205 
uöt64_t
 
tx_cou¡
;

208 
uöt16_t
 
£qIdx
;

209 
uöt16_t
 
£qC¡
;

210 
uöt16_t
 
¥ime_˙t
;

211 
uöt16_t
 
vœnid
;

212 
πe_•ölock_t
 
p‹t_lock
;

213 
pkt_£q_t
 *
£q_pkt
;

214 
ønge_öfo_t
 
ønge
;

216 
uöt32_t
 
m∂s_íåy
;

217 
uöt16_t
 
qöq_ouãrid
;

218 
uöt16_t
 
qöq_ö√rid
;

219 
uöt32_t
 
gª_key
;

221 
uöt16_t
 
nb_mbufs
;

222 
uöt16_t
 
∑d1
;

224 
pkt_°©s_t
 
°©s
;

225 
p‹t_sizes_t
 
sizes
;

227 
ëh_°©s_t
 
öô_°©s
;

228 
ëh_°©s_t
 
p‹t_°©s
;

229 
ëh_°©s_t
 
øã_°©s
;

230 
uöt64_t
 
max_ùackës
;

231 
uöt64_t
 
max_›ackës
;

233 
πe_ëh_lök
 
lök
;

235 
	sq_öfo
 {

236 
πe_©omic32_t
 
Êags
;

237 
mbuf_èbÀ
 
tx_mbufs
;

238 
πe_mempoﬁ
 *
rx_mp
;

239 
πe_mempoﬁ
 *
tx_mp
;

240 
πe_mempoﬁ
 *
ønge_mp
;

241 
πe_mempoﬁ
 *
£q_mp
;

242 
πe_mempoﬁ
 *
pˇp_mp
;

243 
πe_mempoﬁ
 *
•ecül_mp
;

244 
uöt64_t
 
tx_˙t
, 
rx_˙t
;

245 } 
q
[
NUM_Q
];

247 
öt32_t
 
rx_èpfd
;

248 
öt32_t
 
tx_èpfd
;

249 
pˇp_öfo_t
 *
pˇp
;

250 
uöt64_t
 
pˇp_cy˛es
;

252 
öt32_t
 
pˇp_ªsu…
;

253 
bpf_¥ogøm
 
pˇp_¥ogøm
;

256 
	s∑ckë
 {

257 *
d©a
;

258 
uöt32_t
 
Àn
;

259 } 
dump_li°
[
MAX_DUMP_PACKETS
];

260 
uöt8_t
 
dump_hód
;

261 
uöt8_t
 
dump_èû
;

262 
uöt8_t
 
dump_cou¡
;

264 
∫d_bôs_s
 *
∫d_bôfõlds
;

266 
πe_ëh_c⁄f
 
p‹t_c⁄f
;

267 
πe_ëh_dev_öfo
 
dev_öfo
;

268 
πe_ëh_rxc⁄f
 
rx_c⁄f
;

269 
πe_ëh_txc⁄f
 
tx_c⁄f
;

270 
rög_c⁄f_t
 
rög_c⁄f
;

271 
u£r_∑âîn
[
USER_PATTERN_SIZE
];

272 
dns_domaö
[
DNS_DOMAIN_SIZE
];

273 
fûl_t
 
fûl_∑âîn_ty≥
;

274 } 
	tp‹t_öfo_t
;

276 
	`pktgí_c⁄fig_p‹ts
();

288 
ölöe
 
uöt64_t


289 
	$pkt_©omic64_tx_cou¡
(
πe_©omic64_t
 *
v
, 
öt64_t
 
bur°
)

291 
suc˚ss
;

292 
öt64_t
 
tmp1
, 
tmp2
;

295 
tmp1
 = 
v
->
˙t
;

296 i‡(
tmp1
 == 0)

298 
tmp2
 = 
	`likñy
(
tmp1
 > 
bur°
) ? burst :Åmp1;

299 
suc˚ss
 = 
	`πe_©omic64_cmp£t
((vﬁ©ûê
uöt64_t
 *)&
v
->
˙t
,

300 
tmp1
,

301 
tmp1
 - 
tmp2
);

302 } 
suc˚ss
 == 0);

304  
tmp2
;

305 
	}
}

307 
ölöe
 

308 
	$pktgí_dump_rx_c⁄f
(
FILE
 *
f
, 
πe_ëh_rxc⁄f
 *
rx
){

309 
	`Ârötf
(
f
, "** RX Conf **\n");

310 
	`Ârötf
(
f
,

312 
rx
->
rx_thªsh
.
±hªsh
,

313 
rx
->
rx_thªsh
.
hthªsh
,

314 
rx
->
rx_thªsh
.
wthªsh
);

315 
	`Ârötf
(
f
,

317 
rx
->
rx_‰ì_thªsh
,

318 
rx
->
rx_dr›_í
,

319 
rx
->
rx_de„ºed_°¨t
);

320 
	}
}

322 
ölöe
 

323 
	$pktgí_dump_tx_c⁄f
(
FILE
 *
f
, 
πe_ëh_txc⁄f
 *
tx
){

324 
	`Ârötf
(
f
, "** TX Conf **\n");

325 
	`Ârötf
(
f
,

327 
tx
->
tx_thªsh
.
±hªsh
,

328 
tx
->
tx_thªsh
.
hthªsh
,

329 
tx
->
tx_thªsh
.
wthªsh
);

330 
	`Ârötf
(
f
,

332 
tx
->
tx_‰ì_thªsh
,

333 
tx
->
tx_rs_thªsh
,

334 
tx
->
tx_de„ºed_°¨t
,

335 
tx
->
txq_Êags
);

336 
	}
}

338 
ölöe
 

339 
	$pktgí_dump_dev_öfo
(
FILE
 *
f
, 
πe_ëh_dev_öfo
 *
di
) {

340 
	`Ârötf
(
f
, "\n** Dev Infÿ(%s:%dË**\n", 
di
->
drivî_«me
, di->
if_ödex
);

341 
	`Ârötf
(
f
,

343 
di
->
pci_dev
 ? di->pci_dev->
max_vfs
 : 0,

344 
di
->
mö_rx_bufsize
,

345 
di
->
max_rx_pkéí
,

346 
di
->
max_rx_queues
,

347 
di
->
max_tx_queues
);

348 
	`Ârötf
(
f
,

350 
di
->
max_mac_addrs
,

351 
di
->
max_hash_mac_addrs
,

352 
di
->
max_vmdq_poﬁs
);

353 
	`Ârötf
(
f
,

355 
di
->
rx_ofÊﬂd_ˇ∑
,

356 
di
->
tx_ofÊﬂd_ˇ∑
,

357 
di
->
ªè_size
,

358 #i‡
	`deföed
(
RTE_VER_MAJOR
) && (RTE_VER_MAJOR < 2)

361 
di
->
Êow_ty≥_rss_ofÊﬂds


364 
	`Ârötf
(
f
,

366 
di
->
vmdq_queue_ba£
,

367 
di
->
vmdq_queue_num
,

368 
di
->
vmdq_poﬁ_ba£
);

369 
	`pktgí_dump_rx_c⁄f
(
f
, &
di
->
deÁu…_rxc⁄f
);

370 
	`pktgí_dump_tx_c⁄f
(
f
, &
di
->
deÁu…_txc⁄f
);

371 
	`Ârötf
(
f
, "\n");

372 
	}
}

	@app/pktgen-random.c

68 
	~"pktgí-øndom.h
"

70 
	~<°ddef.h
>

71 
	~<°rög.h
>

72 
	~<°dio.h
>

74 
	~<πe_mÆloc.h
>

76 
	~"pktgí-di•œy.h
"

77 
	~"pktgí-log.h
"

79 
	~"x‹shi·128∂us.h
"

83 
	sbf_•ec_s
 {

84 
uöt8_t
 
	moff£t
;

86 
BITFIELD_T
 
	m™dMask
;

87 
BITFIELD_T
 
	m‹Mask
;

88 
BITFIELD_T
 
	m∫dMask
;

89 } 
	tbf_•ec_t
;

91 
	s∫d_bôs_s
 {

92 
uöt32_t
 
	ma˘ive_•ecs
;

94 
bf_•ec_t
 
	m•ecs
[
MAX_RND_BITFIELDS
];

95 } 
	t∫d_bôs_t
;

99 #ifde‡
TESTING


100 
∫d_func_t
 
	g_∫d_func
 = 
NULL
;

104 
pktgí_öô_deÁu…_∫d
();

122 
__ölöe__
 
uöt32_t


123 
	$pktgí_deÁu…_∫d_func
()

125  
	`x‹_√xt
();

126 
	}
}

141 
	$pktgí_∫d_bôs_öô
(
∫d_bôs_t
 **
∫d_bôs
)

143 
i
;

145 *
∫d_bôs
 = (
∫d_bôs_t
 *)
	`πe_zmÆloc_sockë
(

147 (
∫d_bôs_t
),

149 
	`πe_sockë_id
());

152 
i
 = 0; i < 
MAX_RND_BITFIELDS
; ++i) {

153 
	`pktgí_£t_øndom_bôfõld
(*
∫d_bôs
,

154 
i
,

157 
	`pktgí_£t_øndom_bôfõld
(*
∫d_bôs
, 
i
, 0, "");

160 
	`pktgí_öô_deÁu…_∫d
();

161 
	}
}

176 
uöt32_t


177 
	$pktgí_£t_øndom_bôfõld
(
∫d_bôs_t
 *
∫d_bôs
,

178 
uöt8_t
 
idx
,

179 
uöt8_t
 
off£t
,

180 c⁄° *
mask
)

182 i‡(
idx
 >
MAX_RND_BITFIELDS
)

183 
Àave
;

185 
size_t
 
mask_Àn
 = 
	`°æí
(
mask
);

186 i‡(
mask_Àn
 > 
MAX_BITFIELD_SIZE
)

187 
Àave
;

190 i‡(
mask_Àn
 == 0) {

191 
∫d_bôs
->
a˘ive_•ecs
 &~((
uöt32_t
)1 << 
idx
);

192 
Àave
;

200 
BITFIELD_T
 
mask0
 = 0, 
mask1
 = 0, 
maskRnd
 = 0;

202 
uöt32_t
 
i
;

203 
i
 = 0; i < 
mask_Àn
; ++i) {

204 
mask0
 <<= 1;

205 
mask1
 <<= 1;

206 
maskRnd
 <<= 1;

208 
mask
[
i
]) {

209 '0': 
mask0
 += 1; ;

210 '1': 
mask1
 += 1; ;

212 'X': 
maskRnd
 += 1; ;

214 
Àave
;

223 
∑d_Àn
 = 
MAX_BITFIELD_SIZE
 - 
mask_Àn
;

224 
mask0
 <<
∑d_Àn
;

225 
mask1
 <<
∑d_Àn
;

226 
maskRnd
 <<
∑d_Àn
;

228 
∫d_bôs
->
a˘ive_•ecs
 |(1 << 
idx
);

230 
∫d_bôs
->
•ecs
[
idx
].
off£t
 = offset;

240 
∫d_bôs
->
•ecs
[
idx
].
™dMask
 = 
	`ht⁄l
(~(
mask0
 | 
maskRnd
));

244 
∫d_bôs
->
•ecs
[
idx
].
‹Mask
 = 
	`ht⁄l
(
mask1
);

253 
∫d_bôs
->
•ecs
[
idx
].
∫dMask
 = 
	`ht⁄l
(
maskRnd
);

255 
Àave
:

256  
∫d_bôs
->
a˘ive_•ecs
;

257 
	}
}

273 
	$pktgí_∫d_bôs_≠∂y
(
p‹t_öfo_t
 *
öfo
,

274 
πe_mbuf
 **
pkts
,

275 
size_t
 
˙t
,

276 
∫d_bôs_t
 *
rbôs
)

278 
∫d_bôs_t
 *
∫d_bôs
;

279 
size_t
 
mbuf_˙t
;

280 
uöt32_t
 
a˘ive_•ecs
;

281 
uöt32_t
 *
pkt_d©a
;

282 
BITFIELD_T
 
∫d_vÆue
;

283 
bf_•ec_t
 *
bf_•ec
;

286 
∫d_bôs
 = (
rbôs
Ë?Ñbô†: 
öfo
->
∫d_bôfõlds
;

287 i‡((
a˘ive_•ecs
 = 
∫d_bôs
->active_specs) == 0)

290 
mbuf_˙t
 = 0; mbuf_˙à< 
˙t
; ++mbuf_cnt) {

291 
bf_•ec
 = 
∫d_bôs
->
•ecs
;

293 
a˘ive_•ecs
 > 0) {

294 i‡(
	`likñy
(
a˘ive_•ecs
 & 1) ) {

297 
pkt_d©a
 =

298 (
uöt32_t
 *)(&
	`πe_pktmbuf_mtod
(
pkts
[

299 
mbuf_˙t


301 
uöt8_t
 *)

302 [
bf_•ec
->
off£t
]);

304 *
pkt_d©a
 &
bf_•ec
->
™dMask
;

305 *
pkt_d©a
 |
bf_•ec
->
‹Mask
;

307 i‡(
bf_•ec
->
∫dMask
) {

308 #ifde‡
TESTING


310 
∫d_vÆue
 =

311 
_∫d_func
 ? 
	`_∫d_func
() :

312 
	`pktgí_deÁu…_∫d_func
();

315 
∫d_vÆue
 = 
	`pktgí_deÁu…_∫d_func
();

317 
∫d_vÆue
 &
bf_•ec
->
∫dMask
;

318 *
pkt_d©a
 |
∫d_vÆue
;

322 ++
bf_•ec
;

323 
a˘ive_•ecs
 >>= 1;

326 
a˘ive_•ecs
 = 
∫d_bôs
->active_specs;

328 
	}
}

342 
	$pktgí_∑ge_øndom_bôfõlds
(
uöt32_t
 
¥öt_œbñs
,

343 
uöt16_t
 
pid
,

344 
∫d_bôs_t
 *
∫d_bôs
)

346 
uöt32_t
 
row
, 
bômask_idx
, 
i
, 
cuº_bô
;

347 
mask
[36];

348 
bf_•ec_t
 *
cuº_•ec
;

350 i‡(!
¥öt_œbñs
)

353 
mask
[35] = '\0';

354 
mask
[8] = mask[17] = mask[26] = ' ';

356 
	`di•œy_t›löe
("<Random bitfield Page>");

358 
	`wr_s¸n_¥ötf
(1, 3, "P‹à%d", 
pid
);

360 
row
 = 
PORT_STATE_ROW
;

362 i‡(
∫d_bôs
 =
NULL
) {

363 
	`wr_s¸n_˚¡î
(10,

364 
pktgí
.
s¸n
->
ncﬁs
,

366 
row
 = 28;

367 
Àave
;

370 
	`wr_s¸n_¥ötf
(
row
++, 1, "%8s %8s %8s %s",

374 
bômask_idx
 = 0; bômask_idx < 
MAX_RND_BITFIELDS
; ++bitmask_idx) {

375 
cuº_•ec
 = &
∫d_bôs
->
•ecs
[
bômask_idx
];

378 
i
 = 0; i < 
MAX_BITFIELD_SIZE
; ++i) {

379 
cuº_bô
 = (
uöt32_t
)1 << (
MAX_BITFIELD_SIZE
 - 
i
 - 1);

384 
mask
[
i
 +

385 (
i
 >>

387 ((
	`¡ohl
(
cuº_•ec
->
∫dMask
Ë& 
cuº_bô
) !=

389 : ((
	`¡ohl
(
cuº_•ec
->
™dMask
Ë& 
cuº_bô
) ==

391 : ((
	`¡ohl
(
cuº_•ec
->
‹Mask
Ë& 
cuº_bô
) !=

396 
	`wr_s¸n_¥ötf
(
row
++,

399 
bômask_idx
,

400 
cuº_•ec
->
off£t
,

401 (
∫d_bôs
->
a˘ive_•ecs
 & (1 << 
bômask_idx
)) ? "YES" : "no",

402 
mask
);

405 
Àave
:

406 
	`di•œy_dashlöe
(++
row
);

407 
	}
}

410 
	$pktgí_öô_deÁu…_∫d
()

412 
FILE
 *
dev_øndom
;

414 i‡((
dev_øndom
 = 
	`f›í
("/dev/uøndom", "r")Ë=
NULL
) {

415 
	`pktgí_log_îr‹
("CouldÇot open /dev/urandom forÑeading");

420 i‡(
	`‰ód
(
x‹_£ed
, (x‹_£ed[0]), 2, 
dev_øndom
) != 2) {

421 
	`pktgí_log_îr‹
(

426 
	`f˛o£
(
dev_øndom
);

427 
	}
}

429 #ifde‡
TESTING


443 
∫d_func_t


444 
	$pktgí_£t_∫d_func
(
∫d_func_t
 
∫d_func
)

446 
∫d_func_t
 
¥ev_∫d_func
 = 
_∫d_func
;

448 
_∫d_func
 = 
∫d_func
;

450  
¥ev_∫d_func
;

451 
	}
}

	@app/pktgen-random.h

68 #i‚de‡
_PKTGEN_RANDOM_H_


69 
	#_PKTGEN_RANDOM_H_


	)

71 
	~<°döt.h
>

73 
	~<πe_mbuf.h
>

75 
	~"pktgí-£q.h
"

78 
	#MAX_RND_BITFIELDS
 32

	)

80 
	#BITFIELD_T
 
uöt32_t


	)

81 
	#MAX_BITFIELD_SIZE
 ((
BITFIELD_T
Ë<< 3)

	)

83 
	g∫d_bôs_s
;

84 
	gp‹t_öfo_s
;

87 
pktgí_∫d_bôs_öô
(
∫d_bôs_s
 **
∫d_bôs
);

90 
uöt32_t
 
pktgí_£t_øndom_bôfõld
(
∫d_bôs_s
 *
∫d_bôs
,

91 
uöt8_t
 
idx
,

92 
uöt8_t
 
off£t
,

93 c⁄° *
mask
);

96 
pktgí_∫d_bôs_≠∂y
(
p‹t_öfo_s
 *
öfo
,

97 
πe_mbuf
 **
pkt
,

98 
size_t
 
˙t
,

99 
∫d_bôs_s
 *
rbôs
);

102 
pktgí_∑ge_øndom_bôfõlds
(
uöt32_t
 
¥öt_œbñs
,

103 
uöt16_t
 
pid
,

104 
∫d_bôs_s
 *
∫d_bôs
);

106 #ifde‡
TESTING


108 
	$BITFIELD_T
 (*
	t∫d_func_t
)();

109 
∫d_func_t
 
	`pktgí_£t_∫d_func
‘nd_func_à
∫d_func
);

	@app/pktgen-range.c

68 
	~"pktgí-di•œy.h
"

69 
	~"pktgí-log.h
"

70 
	~"pktgí.h
"

71 
	~"x‹shi·128∂us.h
"

86 
	$pktgí_ønge_˘‹
(
p‹t_öfo_t
 *
öfo
, 
pkt_£q_t
 *
pkt
)

88 
ønge_öfo_t
 *
ønge
 = &
öfo
->range;

89 
pkt
->
ëhTy≥
) {

90 
ETHER_TYPE_IPv4
:

91 
pkt
->
ùPrŸo
) {

92 
PG_IPPROTO_TCP
:

93 
PG_IPPROTO_UDP
:

95 i‡(
pkt
->
dp‹t
 =
PG_IPPROTO_L4_GTPU_PORT
) {

96 i‡(
	`u∆ikñy
(
ønge
->
gçu_ãid_öc
 != 0) ) {

97 
uöt32_t
 
ãid
 = 
pkt
->
gçu_ãid
;

98 
ãid
 +
ønge
->
gçu_ãid_öc
;

99 i‡(
ãid
 < 
ønge
->
gçu_ãid_mö
)

100 
ãid
 = 
ønge
->
gçu_ãid_max
;

101 i‡(
ãid
 > 
ønge
->
gçu_ãid_max
)

102 
ãid
 = 
ønge
->
gçu_ãid_mö
;

103 
pkt
->
gçu_ãid
 = 
ãid
;

105 
pkt
->
gçu_ãid
 = 
ønge
->gtpu_teid;

108 i‡(
	`u∆ikñy
(
ønge
->
§c_p‹t_öc
 != 0) ) {

109 
uöt16_t
 
•‹t
 = 
pkt
->sport;

110 
•‹t
 +
ønge
->
§c_p‹t_öc
;

111 i‡(
•‹t
 < 
ønge
->
§c_p‹t_mö
)

112 
•‹t
 = 
ønge
->
§c_p‹t_max
;

113 i‡(
•‹t
 > 
ønge
->
§c_p‹t_max
)

114 
•‹t
 = 
ønge
->
§c_p‹t_mö
;

115 
pkt
->
•‹t
 = sport;

117 
pkt
->
•‹t
 = 
ønge
->
§c_p‹t
;

119 i‡(
	`u∆ikñy
(
ønge
->
d°_p‹t_öc
 != 0) ) {

120 
uöt16_t
 
dp‹t
 = 
pkt
->dport;

121 
dp‹t
 +
ønge
->
d°_p‹t_öc
;

122 i‡(
dp‹t
 < 
ønge
->
d°_p‹t_mö
)

123 
dp‹t
 = 
ønge
->
d°_p‹t_max
;

124 i‡(
dp‹t
 > 
ønge
->
d°_p‹t_max
)

125 
dp‹t
 = 
ønge
->
d°_p‹t_mö
;

126 
pkt
->
dp‹t
 = dport;

128 
pkt
->
dp‹t
 = 
ønge
->
d°_p‹t
;

130 i‡(
	`u∆ikñy
(
ønge
->
§c_ù_öc
 != 0)) {

131 
uöt32_t
 
p
 = 
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
;

132 
p
 +
ønge
->
§c_ù_öc
;

133 i‡(
p
 < 
ønge
->
§c_ù_mö
)

134 
p
 = 
ønge
->
§c_ù_max
;

135 i‡(
p
 > 
ønge
->
§c_ù_max
)

136 
p
 = 
ønge
->
§c_ù_mö
;

137 
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
 = 
p
 ;

139 
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
 = 
	`øndom_32
();

141 i‡(
	`u∆ikñy
(
ønge
->
d°_ù_öc
 != 0)) {

142 
uöt32_t
 
p
 = 
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
;

143 
p
 +
ønge
->
d°_ù_öc
;

144 i‡(
p
 < 
ønge
->
d°_ù_mö
)

145 
p
 = 
ønge
->
d°_ù_max
;

146 i‡(
p
 > 
ønge
->
d°_ù_max
)

147 
p
 = 
ønge
->
d°_ù_mö
;

148 
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
 = 
p
;

150 
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
 = 
ønge
->
d°_ù
;

152 i‡(
	`u∆ikñy
(
ønge
->
vœn_id_öc
 != 0)) {

153 
uöt32_t
 
p
 = 
pkt
->
vœnid
;

154 
p
 +
ønge
->
vœn_id_öc
;

155 i‡(
p
 < 
ønge
->
vœn_id_mö
)

156 
p
 = 
ønge
->
vœn_id_max
;

157 i‡(
p
 > 
ønge
->
vœn_id_max
)

158 
p
 = 
ønge
->
vœn_id_mö
;

159 
pkt
->
vœnid
 = 
p
;

161 
pkt
->
vœnid
 = 
ønge
->
vœn_id
;

163 i‡(
	`u∆ikñy
(
ønge
->
pkt_size_öc
 != 0)) {

164 
uöt32_t
 
p
 = 
pkt
->
pktSize
;

165 
p
 +
ønge
->
pkt_size_öc
;

166 i‡(
p
 < 
ønge
->
pkt_size_mö
)

167 
p
 = 
ønge
->
pkt_size_max
;

168 i‡(
p
 > 
ønge
->
pkt_size_max
)

169 
p
 = 
ønge
->
pkt_size_mö
;

170 
pkt
->
pktSize
 = 
p
;

172 i‡((
pkt
->
dp‹t
 =
PG_IPPROTO_L4_DNS_PORT
Ë&& (
	`°æí
(
öfo
->
dns_domaö
)))

173 
pkt
->
pktSize
 = (
ønge
->
pkt_size
 + 
	`°æí
(
öfo
->
dns_domaö
));

175 
pkt
->
pktSize
 = 
ønge
->
pkt_size
;

177 i‡(
	`u∆ikñy
(
ønge
->
§c_mac_öc
 != 0)) {

178 
uöt64_t
 
p
;

180 
	`öë_mtoh64
(&
pkt
->
ëh_§c_addr
, &
p
);

182 
p
 +
ønge
->
§c_mac_öc
;

183 i‡(
p
 < 
ønge
->
§c_mac_mö
)

184 
p
 = 
ønge
->
§c_mac_max
;

185 i‡(
p
 > 
ønge
->
§c_mac_max
)

186 
p
 = 
ønge
->
§c_mac_mö
;

188 
	`öë_h64tom
(
p
, &
pkt
->
ëh_§c_addr
);

190 
	`öë_h64tom
(
ønge
->
§c_mac
, &
pkt
->
ëh_§c_addr
);

193 i‡(
	`u∆ikñy
(
ønge
->
d°_mac_öc
 != 0)) {

194 
uöt64_t
 
p
;

196 
	`öë_mtoh64
(&
pkt
->
ëh_d°_addr
, &
p
);

198 
p
 +
ønge
->
d°_mac_öc
;

199 i‡(
p
 < 
ønge
->
d°_mac_mö
)

200 
p
 = 
ønge
->
d°_mac_max
;

201 i‡(
p
 > 
ønge
->
d°_mac_max
)

202 
p
 = 
ønge
->
d°_mac_mö
;

204 
	`öë_h64tom
(
p
, &
pkt
->
ëh_d°_addr
);

206 
	`öë_h64tom
(
ønge
->
d°_mac
, &
pkt
->
ëh_d°_addr
);

211 
	`pktgí_log_öfo
("IPv4 ipPrŸÿ%02x", 
pkt
->
ùPrŸo
);

215 
ETHER_TYPE_IPv6
:

216 
pkt
->
ùPrŸo
) {

217 
PG_IPPROTO_UDP
:

218 
PG_IPPROTO_TCP
:

220 
	`pktgí_log_w¨nög
("IPv6 isÇot yet implemented");

223 
	`pktgí_log_öfo
("IPv6 ipPrŸÿ%04x", 
pkt
->
ùPrŸo
);

228 
	`pktgí_log_öfo
("ëhTy≥ %04x", 
pkt
->
ëhTy≥
);

231 
	}
}

246 
	$pktgí_¥öt_ønge
()

248 
p‹t_öfo_t
 *
öfo
;

249 
ønge_öfo_t
 *
ønge
;

250 
uöt32_t
 
pid
, 
cﬁ
, 
•
;

251 
buff
[32];

252 
öt32_t
 
row
;

253 
ëhî_addr
 
óddr
;

254 
°r
[64];

256 
	`di•œy_t›löe
("<Range Page>");

257 
	`wr_s¸n_¥ötf
(1, 3, "P‹t†%d-%d o‡%d", 
pktgí
.
°¨tög_p‹t
,

258 (
pktgí
.
ídög_p‹t
 - 1),Öktgí.
nb_p‹ts
);

260 
row
 = 
PORT_STATE_ROW
;

261 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Port #");

262 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "dst.ip");

263 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " inc");

264 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min");

265 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " max");

267 
row
++;

268 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "src.ip");

269 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " inc");

270 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min");

271 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " max");

273 
row
++;

274 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "ip_proto");

276 
row
++;

277 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "dst.port / inc");

278 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min / max");

280 
row
++;

281 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "src.port / inc");

282 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min / max");

284 
row
++;

285 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "vlan.id / inc");

286 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min / max");

288 
row
++;

289 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "pkt.size / inc");

290 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min / max");

292 
row
++;

293 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "dst.mac");

294 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " inc");

295 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min");

296 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " max");

298 
row
++;

299 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "src.mac");

300 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " inc");

301 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min");

302 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " max");

304 
row
++;

305 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "gtpu.teid / inc");

306 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " min / max");

309 
pktgí
.
œ°_row
 = ++
row
;

310 
	`di•œy_dashlöe
(
pktgí
.
œ°_row
);

313 
row
 = 3;Ñow < (
pktgí
.
œ°_row
 - 1);Ñow++)

314 
	`wr_s¸n_¥ötf
(
row
, 
COLUMN_WIDTH_0
 - 1, ":");

316 
•
 = 
pktgí
.
°¨tög_p‹t
;

317 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts_≥r_∑ge
;Öid++) {

318 i‡(
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
 + 
•
, 
RTE_MAX_LCORE
) == 0)

321 
öfo
 = &
pktgí
.öfo[
pid
 + 
•
];

324 
cﬁ
 = (
COLUMN_WIDTH_1
 * 
pid
Ë+ 
COLUMN_WIDTH_0
;

325 
row
 = 
PORT_STATE_ROW
;

328 
	`¢¥ötf
(
buff
, (buff), "P‹t-%d", 
pid
 + 
•
);

329 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

331 
ønge
 = &
öfo
->range;

332 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

333 
	`öë_¡›4
(
buff
, (buff),

334 
	`ht⁄l
(
ønge
->
d°_ù
),

336 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

337 
	`öë_¡›4
(
buff
, (buff),

338 
	`ht⁄l
(
ønge
->
d°_ù_öc
),

340 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

341 
	`öë_¡›4
(
buff
, (buff),

342 
	`ht⁄l
(
ønge
->
d°_ù_mö
),

344 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

345 
	`öë_¡›4
(
buff
, (buff),

346 
	`ht⁄l
(
ønge
->
d°_ù_max
),

349 
row
++;

350 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

351 
	`öë_¡›4
(
buff
, (buff),

352 
	`ht⁄l
(
ønge
->
§c_ù
),

354 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

355 
	`öë_¡›4
(
buff
, (buff),

356 
	`ht⁄l
(
ønge
->
§c_ù_öc
),

358 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

359 
	`öë_¡›4
(
buff
, (buff),

360 
	`ht⁄l
(
ønge
->
§c_ù_mö
),

362 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

363 
	`öë_¡›4
(
buff
, (buff),

364 
	`ht⁄l
(
ønge
->
§c_ù_max
),

367 
row
++;

368 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

369 (
ønge
->
ù_¥Ÿo
 =
PG_IPPROTO_TCP
)? "TCP" : "UDP");

371 
row
++;

372 
	`¢¥ötf
(
°r
,

373 (
°r
),

375 
ønge
->
d°_p‹t
,

376 
ønge
->
d°_p‹t_öc
);

377 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

378 
	`¢¥ötf
(
°r
,

379 (
°r
),

381 
ønge
->
d°_p‹t_mö
,

382 
ønge
->
d°_p‹t_max
);

383 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

385 
row
++;

386 
	`¢¥ötf
(
°r
,

387 (
°r
),

389 
ønge
->
§c_p‹t
,

390 
ønge
->
§c_p‹t_öc
);

391 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

392 
	`¢¥ötf
(
°r
,

393 (
°r
),

395 
ønge
->
§c_p‹t_mö
,

396 
ønge
->
§c_p‹t_max
);

397 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

399 
row
++;

400 
	`¢¥ötf
(
°r
,

401 (
°r
),

403 
ønge
->
vœn_id
,

404 
ønge
->
vœn_id_öc
);

405 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

406 
	`¢¥ötf
(
°r
,

407 (
°r
),

409 
ønge
->
vœn_id_mö
,

410 
ønge
->
vœn_id_max
);

411 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

413 
row
++;

414 
	`¢¥ötf
(
°r
,

415 (
°r
),

417 
ønge
->
pkt_size
 + 
FCS_SIZE
,

418 
ønge
->
pkt_size_öc
);

419 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

420 
	`¢¥ötf
(
°r
,

421 (
°r
),

423 
ønge
->
pkt_size_mö
 + 
FCS_SIZE
,

424 
ønge
->
pkt_size_max
 + 
FCS_SIZE
);

425 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

427 
row
++;

428 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

429 
	`öë_mtﬂ
(
buff
, (buff),

430 
	`öë_h64tom
(
ønge
->
d°_mac
, &
óddr
)));

431 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

432 
	`öë_mtﬂ
(
buff
, (buff),

433 
	`öë_h64tom
(
ønge
->
d°_mac_öc
,

434 &
óddr
)));

435 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

436 
	`öë_mtﬂ
(
buff
, (buff),

437 
	`öë_h64tom
(
ønge
->
d°_mac_mö
,

438 &
óddr
)));

439 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

440 
	`öë_mtﬂ
(
buff
, (buff),

441 
	`öë_h64tom
(
ønge
->
d°_mac_max
,

442 &
óddr
)));

444 
row
++;

445 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

446 
	`öë_mtﬂ
(
buff
, (buff),

447 
	`öë_h64tom
(
ønge
->
§c_mac
, &
óddr
)));

448 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

449 
	`öë_mtﬂ
(
buff
, (buff),

450 
	`öë_h64tom
(
ønge
->
§c_mac_öc
,

451 &
óddr
)));

452 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

453 
	`öë_mtﬂ
(
buff
, (buff),

454 
	`öë_h64tom
(
ønge
->
§c_mac_mö
,

455 &
óddr
)));

456 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

457 
	`öë_mtﬂ
(
buff
, (buff),

458 
	`öë_h64tom
(
ønge
->
§c_mac_max
,

459 &
óddr
)));

461 
row
++;

462 
	`¢¥ötf
(
°r
,

463 (
°r
),

465 
ønge
->
gçu_ãid
,

466 
ønge
->
gçu_ãid_öc
);

467 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

468 
	`¢¥ötf
(
°r
,

469 (
°r
),

471 
ønge
->
gçu_ãid_mö
,

472 
ønge
->
gçu_ãid_max
);

473 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
°r
);

476 
pktgí
.
Êags
 &~
PRINT_LABELS_FLAG
;

477 
	}
}

492 
	$pktgí_∑ge_ønge
()

494 i‡(
pktgí
.
Êags
 & 
PRINT_LABELS_FLAG
)

495 
	`pktgí_¥öt_ønge
();

496 
	}
}

511 
	$pktgí_ønge_£tup
(
p‹t_öfo_t
 *
öfo
)

513 
ønge_öfo_t
 *
ønge
 = &
öfo
->range;

515 
ønge
->
d°_ù
 = 
	`IPv4
(192, 168, 
öfo
->
pid
 + 1, 1);

516 
ønge
->
d°_ù_mö
 = 
	`IPv4
(192, 168, 
öfo
->
pid
 + 1, 1);

517 
ønge
->
d°_ù_max
 = 
	`IPv4
(192, 168, 
öfo
->
pid
 + 1, 254);

518 
ønge
->
d°_ù_öc
 = 0x00000001;

520 
ønge
->
§c_ù
 = 
	`IPv4
(192, 168, 
öfo
->
pid
, 1);

521 
ønge
->
§c_ù_mö
 = 
	`IPv4
(192, 168, 
öfo
->
pid
, 1);

522 
ønge
->
§c_ù_max
 = 
	`IPv4
(192, 168, 
öfo
->
pid
, 254);

523 
ønge
->
§c_ù_öc
 = 0x00000000;

525 
ønge
->
ù_¥Ÿo
 = 
PG_IPPROTO_TCP
;

527 
ønge
->
d°_p‹t
 = (
öfo
->
pid
 << 8);

528 
ønge
->
d°_p‹t_öc
 = 0x0001;

529 
ønge
->
d°_p‹t_mö
 =Ñ™ge->
d°_p‹t
 + 0;

530 
ønge
->
d°_p‹t_max
 =Ñ™ge->
d°_p‹t
 + 254;

532 
ønge
->
§c_p‹t
 = (
öfo
->
pid
 << 8);

533 
ønge
->
§c_p‹t_öc
 = 0x0001;

534 
ønge
->
§c_p‹t_mö
 =Ñ™ge->
§c_p‹t
 + 0;

535 
ønge
->
§c_p‹t_max
 =Ñ™ge->
§c_p‹t
 + 254;

537 
ønge
->
vœn_id
 = 
öfo
->
vœnid
;

538 
ønge
->
vœn_id_öc
 = 0;

539 
ønge
->
vœn_id_mö
 = 
MIN_VLAN_ID
;

540 
ønge
->
vœn_id_max
 = 
MAX_VLAN_ID
;

542 
ønge
->
pkt_size
 = 
MIN_PKT_SIZE
;

543 
ønge
->
pkt_size_öc
 = 0;

544 
ønge
->
pkt_size_mö
 = 
MIN_PKT_SIZE
;

545 
ønge
->
pkt_size_max
 = 
MAX_PKT_SIZE
;

547 
öfo
->
£q_pkt
[
RANGE_PKT
].
pktSize
 = 
MIN_PKT_SIZE
;

549 
	`öë_mtoh64
(&
öfo
->
£q_pkt
[
SINGLE_PKT
].
ëh_d°_addr
, &
ønge
->
d°_mac
);

550 
	`mem£t
(&
ønge
->
d°_mac_öc
, 0, (range->dst_mac_inc));

551 
	`mem£t
(&
ønge
->
d°_mac_mö
, 0, (range->dst_mac_min));

552 
	`mem£t
(&
ønge
->
d°_mac_max
, 0, (range->dst_mac_max));

554 
	`öë_mtoh64
(&
öfo
->
£q_pkt
[
SINGLE_PKT
].
ëh_§c_addr
, &
ønge
->
§c_mac
);

555 
	`mem£t
(&
ønge
->
§c_mac_öc
, 0, (range->src_mac_inc));

556 
	`mem£t
(&
ønge
->
§c_mac_mö
, 0, (range->src_mac_min));

557 
	`mem£t
(&
ønge
->
§c_mac_max
, 0, (range->src_mac_max));

558 
	}
}

	@app/pktgen-range.h

68 #i‚de‡
_PKTGEN_RANGE_H_


69 
	#_PKTGEN_RANGE_H_


	)

71 
	~<°döt.h
>

73 
	~"pktgí-£q.h
"

75 
	sønge_öfo_s
 {

76 
uöt32_t
 
	m§c_ù_öc
;

77 
uöt32_t
 
	md°_ù_öc
;

78 
uöt16_t
 
	m§c_p‹t_öc
;

79 
uöt16_t
 
	md°_p‹t_öc
;

80 
uöt16_t
 
	mvœn_id_öc
;

81 
uöt16_t
 
	mpkt_size_öc
;

82 
uöt64_t
 
	m§c_mac_öc
;

83 
uöt64_t
 
	md°_mac_öc
;

85 
uöt32_t
 
	m§c_ù
;

86 
uöt32_t
 
	m§c_ù_mö
;

87 
uöt32_t
 
	m§c_ù_max
;

89 
uöt32_t
 
	md°_ù
;

90 
uöt32_t
 
	md°_ù_mö
;

91 
uöt32_t
 
	md°_ù_max
;

93 
uöt16_t
 
	mù_¥Ÿo
;

95 
uöt16_t
 
	m§c_p‹t
;

96 
uöt16_t
 
	m§c_p‹t_mö
;

97 
uöt16_t
 
	m§c_p‹t_max
;

99 
uöt16_t
 
	md°_p‹t
;

100 
uöt16_t
 
	md°_p‹t_mö
;

101 
uöt16_t
 
	md°_p‹t_max
;

103 
uöt16_t
 
	mvœn_id
;

104 
uöt16_t
 
	mvœn_id_mö
;

105 
uöt16_t
 
	mvœn_id_max
;

107 
uöt16_t
 
	mpkt_size
;

108 
uöt16_t
 
	mpkt_size_mö
;

109 
uöt16_t
 
	mpkt_size_max
;

111 
uöt64_t
 
	md°_mac
;

112 
uöt64_t
 
	md°_mac_mö
;

113 
uöt64_t
 
	md°_mac_max
;

115 
uöt64_t
 
	m§c_mac
;

116 
uöt64_t
 
	m§c_mac_mö
;

117 
uöt64_t
 
	m§c_mac_max
;

119 
uöt32_t
 
	mgçu_ãid
;

120 
uöt32_t
 
	mgçu_ãid_öc
;

121 
uöt32_t
 
	mgçu_ãid_mö
;

122 
uöt32_t
 
	mgçu_ãid_max
;

123 } 
	tønge_öfo_t
;

125 
	gp‹t_öfo_s
;

127 
pktgí_ønge_˘‹
(
p‹t_öfo_s
 *
öfo
, 
pkt_£q_t
 *
pkt
);

128 
pktgí_ønge_£tup
(
p‹t_öfo_s
 *
öfo
);

130 
pktgí_∑ge_ønge
();

	@app/pktgen-seq.c

68 
	~"pktgí-di•œy.h
"

69 
	~"pktgí.h
"

72 
	$pktgí_£nd_£q_pkt
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
£q_idx
)

74 ()
öfo
;

75 ()
£q_idx
;

76 
	}
}

91 
	$pktgí_∑ge_£q
(
uöt32_t
 
pid
)

93 
uöt32_t
 
i
, 
row
, 
cﬁ
;

94 
p‹t_öfo_t
 *
öfo
;

95 
pkt_£q_t
 *
pkt
;

96 
buff
[64];

98 
	`di•œy_t›löe
("<Sequence Page>");

100 
öfo
 = &
pktgí
.öfo[
pid
];

102 
row
 = 
PORT_STATE_ROW
;

103 
cﬁ
 = 1;

104 
	`wr_s¸n_¥ötf
(
row
++,

105 
cﬁ
,

107 
pid
,

108 
öfo
->
£qC¡
,

109 
NUM_SEQ_PKTS
);

110 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s %*s%*s%*s%*s%*s%*s%*s%*s",

112 
COLUMN_WIDTH_0
, "Dst MAC",

113 
COLUMN_WIDTH_0
, "Src MAC",

114 
COLUMN_WIDTH_0
, "Dst IP",

115 
COLUMN_WIDTH_0
, "Src IP",

116 
COLUMN_WIDTH_0
, "Port S/D",

117 
COLUMN_WIDTH_0
, "Protocol:VLAN",

120 
i
 = 0; i < 
NUM_SEQ_PKTS
; i++) {

121 
cﬁ
 = 1;

122 
pkt
 = &
öfo
->
£q_pkt
[
i
];

124 i‡(
i
 >
öfo
->
£qC¡
) {

125 
	`wr_s¸n_eﬁ_pos
(
row
++, 
cﬁ
);

129 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%5d:", 
i
);

130 
cﬁ
 += 7;

131 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

132 
	`öë_mtﬂ
(
buff
, (buff),

133 &
pkt
->
ëh_d°_addr
));

134 
cﬁ
 +
COLUMN_WIDTH_1
;

135 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

136 
	`öë_mtﬂ
(
buff
, (buff),

137 &
pkt
->
ëh_§c_addr
));

138 
cﬁ
 +
COLUMN_WIDTH_1
;

139 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

140 
	`öë_¡›4
(
buff
, (buff),

141 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
),

143 
cﬁ
 +
COLUMN_WIDTH_1
;

144 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
 + 2,

145 
	`öë_¡›4
(
buff
, (buff),

146 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
),

147 
pkt
->
ù_mask
));

148 
cﬁ
 +
COLUMN_WIDTH_1
 + 2;

150 
	`¢¥ötf
(
buff
, (buff), "%d/%d", 
pkt
->
•‹t
,Ökt->
dp‹t
);

151 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_0
, 
buff
);

152 
cﬁ
 +
COLUMN_WIDTH_0
;

154 
	`¢¥ötf
(
buff
, (buff), "%s/%s:%04x",

155 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv4
) ? "IPv4" :

156 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv6
) ? "IPv6" : "Other",

157 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_TCP
) ? "TCP" :

158 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_ICMP
) ? "ICMP" : "UDP",

159 
pkt
->
vœnid
);

160 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_0
, 
buff
);

161 
cﬁ
 +
COLUMN_WIDTH_1
;

162 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

163 
	`öë_mtﬂ
(
buff
, (buff),

164 &
pkt
->
ëh_§c_addr
));

165 
cﬁ
 +
COLUMN_WIDTH_1
;

166 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

167 
	`öë_¡›4
(
buff
, (buff),

168 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
),

170 
cﬁ
 +
COLUMN_WIDTH_1
;

171 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
 + 2,

172 
	`öë_¡›4
(
buff
, (buff),

173 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
),

174 
pkt
->
ù_mask
));

175 
cﬁ
 +
COLUMN_WIDTH_1
 + 2;

177 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%5d", 
pkt
->
pktSize
 + 
FCS_SIZE
);

178 
cﬁ
 += 10;

179 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%5d", 
pkt
->
gçu_ãid
);

180 
row
++;

183 
	`di•œy_dashlöe
(
row
 + 2);

184 
	}
}

	@app/pktgen-seq.h

68 #i‚de‡
_PKTGEN_SEQ_H_


69 
	#_PKTGEN_SEQ_H_


	)

71 
	~<πe_ëhî.h
>

72 
	~<cmdlöe_∑r£.h
>

73 
	~<cmdlöe_∑r£_ùaddr.h
>

74 
	~<wr_öë.h
>

76 
	~"pktgí-c⁄°™ts.h
"

78 
	spkt_£q_s
 {

80 
ëhî_addr
 
	mëh_d°_addr
;

81 
ëhî_addr
 
	mëh_§c_addr
;

83 
cmdlöe_ùaddr
 
	mù_§c_addr
;

84 
cmdlöe_ùaddr
 
	mù_d°_addr
;

85 
uöt32_t
 
	mù_mask
;

87 
uöt16_t
 
	m•‹t
;

88 
uöt16_t
 
	mdp‹t
;

89 
uöt16_t
 
	mëhTy≥
;

90 
uöt16_t
 
	mùPrŸo
;

91 
uöt16_t
 
	mvœnid
;

92 
uöt16_t
 
	mëhî_hdr_size
;

94 
uöt32_t
 
	mm∂s_íåy
;

95 
uöt16_t
 
	mqöq_ouãrid
;

96 
uöt16_t
 
	mqöq_ö√rid
;

97 
uöt32_t
 
	mgª_key
;

99 
uöt16_t
 
	mpktSize
;

100 
uöt16_t
 
	méí
;

101 
uöt32_t
 
	mgçu_ãid
;

103 
pkt_hdr_t
 
	mhdr
;

105 
uöt8_t
 
	m∑d
[
DEFAULT_BUFF_SIZE
 - (
pkt_hdr_t
)] 
	m__πe_ˇche_Æig√d
;

106 } 
	tpkt_£q_t
;

108 
	gp‹t_öfo_s
;

110 
pktgí_£nd_£q_pkt
(
p‹t_öfo_s
 *
öfo
, 
uöt32_t
 
£q_idx
);

112 
pktgí_∑ge_£q
(
uöt32_t
 
pid
);

	@app/pktgen-stats.c

68 
	~"pktgí-cmds.h
"

69 
	~"pktgí-di•œy.h
"

71 
	~"pktgí.h
"

86 
	$pktgí_¥öt_°©ic_d©a
()

88 
p‹t_öfo_t
 *
öfo
;

89 
uöt32_t
 
pid
, 
cﬁ
, 
row
, 
•
, 
ù_row
;

90 
pkt_£q_t
 *
pkt
;

91 
buff
[32];

92 
di•œy_˙t
;

94 
	`pktgí_di•œy_£t_cﬁ‹
("top.page");

95 
	`di•œy_t›löe
("<Main Page>");

97 
	`pktgí_di•œy_£t_cﬁ‹
("top.ports");

98 
	`wr_s¸n_¥ötf
(1, 3, "P‹t†%d-%d o‡%d", 
pktgí
.
°¨tög_p‹t
,

99 (
pktgí
.
ídög_p‹t
 - 1),Öktgí.
nb_p‹ts
);

101 
row
 = 
PORT_STATE_ROW
;

102 
	`pktgí_di•œy_£t_cﬁ‹
("stats.port.label");

103 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " Flags:Port");

106 
	`pktgí_di•œy_£t_cﬁ‹
("stats.dyn.label");

107 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Link State");

108 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Pkts/s Max/Rx");

109 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " Max/Tx");

110 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "MBits/s Rx/Tx");

112 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Broadcast");

113 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Multicast");

114 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " 64 Bytes");

115 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " 65-127");

116 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " 128-255");

117 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " 256-511");

118 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " 512-1023");

119 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " 1024-1518");

120 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Runts/Jumbos");

122 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Errors Rx/Tx");

123 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Total Rx Pkts");

124 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " Tx Pkts");

125 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " Rx MBs");

126 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, " Tx MBs");

127 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "ARP/ICMP Pkts");

128 i‡(
pktgí
.
Êags
 & 
TX_DEBUG_FLAG
) {

129 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Tx Overrun");

130 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
,

133 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Missed Rx");

134 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Bad CRC Rx");

135 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Bad Len Rx");

136 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "mcasts Rx");

137 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "No Mbuf Rx");

141 
	`pktgí_di•œy_£t_cﬁ‹
("stats.stat.label");

142 
ù_row
 = ++
row
;

143 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Pattern Type");

144 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Tx Count/% Rate");

145 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "PktSize/Tx Burst");

146 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Src/Dest Port");

147 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Pkt Type:VLAN ID");

148 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Dst IP Address");

149 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Src IP Address");

150 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Dst MAC Address");

151 
	`wr_s¸n_¥ötf
(
row
++, 1, "%-*s", 
COLUMN_WIDTH_0
, "Src MAC Address");

154 
pktgí
.
œ°_row
 = ++
row
;

155 
	`di•œy_dashlöe
(
pktgí
.
œ°_row
);

158 
	`pktgí_di•œy_£t_cﬁ‹
("stats.colon");

159 
row
 = 
PORT_STATE_ROW
;Ñow < ((
ù_row
 + 
IP_ADDR_ROWS
) - 2);Ñow++)

160 
	`wr_s¸n_¥ötf
(
row
, 
COLUMN_WIDTH_0
 - 1, ":");

162 
	`pktgí_di•œy_£t_cﬁ‹
("stats.stat.values");

163 
•
 = 
pktgí
.
°¨tög_p‹t
;

164 
di•œy_˙t
 = 0;

165 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts_≥r_∑ge
;Öid++) {

166 i‡(
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
 + 
•
, 
RTE_MAX_LCORE
) == 0)

169 
öfo
 = &
pktgí
.öfo[
pid
 + 
•
];

171 
pkt
 = &
öfo
->
£q_pkt
[
SINGLE_PKT
];

174 
cﬁ
 = (
COLUMN_WIDTH_1
 * 
pid
Ë+ 
COLUMN_WIDTH_0
;

175 
row
 = 
ù_row
;

177 
	`wr_s¸n_¥ötf
(
row
++,

178 
cﬁ
,

180 
COLUMN_WIDTH_1
,

181 (
öfo
->
fûl_∑âîn_ty≥
 =
ABC_FILL_PATTERN
) ? "abcd..." :

182 (
öfo
->
fûl_∑âîn_ty≥
 =
NO_FILL_PATTERN
) ? "None" :

183 (
öfo
->
fûl_∑âîn_ty≥
 =
ZERO_FILL_PATTERN
) ? "Zero" :

184 
öfo
->
u£r_∑âîn
);

185 
	`pktgí_å™smô_cou¡_øã
(
pid
, 
buff
, (buff));

186 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

188 
	`¢¥ötf
(
buff
,

189 (
buff
),

191 
pkt
->
pktSize
 + 
FCS_SIZE
,

192 
öfo
->
tx_bur°
);

193 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

194 
	`¢¥ötf
(
buff
, (buff), "%d /%5d", 
pkt
->
•‹t
,Ökt->
dp‹t
);

195 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

196 
	`¢¥ötf
(
buff
, (buff), "%s / %s:%04x",

197 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv4
) ? "IPv4" :

198 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv6
) ? "IPv6" :

199 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_ARP
) ? "ARP" : "Other",

200 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_TCP
) ? "TCP" :

201 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_ICMP
) ? "ICMP" : "UDP",

202 
pkt
->
vœnid
);

203 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

205 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

206 
	`öë_¡›4
(
buff
, (buff),

207 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
),

209 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

210 
	`öë_¡›4
(
buff
, (buff),

211 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
),

212 
pkt
->
ù_mask
));

213 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

214 
	`öë_mtﬂ
(
buff
, (buff),

215 &
pkt
->
ëh_d°_addr
));

216 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
,

217 
	`öë_mtﬂ
(
buff
, (buff),

218 &
pkt
->
ëh_§c_addr
));

219 
di•œy_˙t
++;

223 
cﬁ
 = (
COLUMN_WIDTH_1
 * 
di•œy_˙t
Ë+ 
COLUMN_WIDTH_0
;

224 
	`pktgí_di•œy_£t_cﬁ‹
("stats.total.label");

225 
	`wr_s¸n_¥ötf
(
LINK_STATE_ROW
,

226 
cﬁ
,

228 
COLUMN_WIDTH_3
,

229 "----TŸÆR©e----"); 
	`wr_s¸n_eﬁ
();

230 
	`pktgí_di•œy_£t_cﬁ‹
(
NULL
);

232 
pktgí
.
Êags
 &~
PRINT_LABELS_FLAG
;

233 
	}
}

249 
	$pktgí_gë_lök_°©us
(
p‹t_öfo_t
 *
öfo
, 
pid
, 
waô
) {

250 
i
;

253 
i
 = 0; i < 
RTE_MAX_ETHPORTS
; i++) {

254 
	`mem£t
(&
öfo
->
lök
, 0, (info->link));

255 
	`πe_ëh_lök_gë_nowaô
(
pid
, &
öfo
->
lök
);

256 i‡(
öfo
->
lök
.
lök_°©us
)

258 i‡(
waô
)

259 
	`πe_dñay_ms
(250);

262 
öfo
->
lök
.
lök_•ìd
 = 10000;

263 
öfo
->
lök
.
lök_du∂ex
 = 
ETH_LINK_FULL_DUPLEX
;

264 
	}
}

279 
	$pktgí_∑ge_°©s
()

281 
p‹t_öfo_t
 *
öfo
;

282 
pid
, 
cﬁ
, 
row
;

283 
•
;

284 
buff
[32];

285 
di•œy_˙t
;

287 i‡(
pktgí
.
Êags
 & 
PRINT_LABELS_FLAG
)

288 
	`pktgí_¥öt_°©ic_d©a
();

290 
	`mem£t
(&
pktgí
.
cumm_øã_tŸÆs
, 0, (
ëh_°©s_t
));

292 
•
 = 
pktgí
.
°¨tög_p‹t
;

293 
di•œy_˙t
 = 0;

294 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts_≥r_∑ge
;Öid++) {

295 i‡(
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
 + 
•
, 
RTE_MAX_LCORE
) == 0)

298 
öfo
 = &
pktgí
.öfo[
pid
 + 
•
];

301 
cﬁ
 = (
COLUMN_WIDTH_1
 * 
pid
Ë+ 
COLUMN_WIDTH_0
;

302 
row
 = 
PORT_STATE_ROW
;

305 
	`¢¥ötf
(
buff
, (buff), "%s:%d", 
	`pktgí_Êags_°rög
(

306 
öfo
), 
pid
 + 
•
);

307 
	`pktgí_di•œy_£t_cﬁ‹
("stats.port.flags");

308 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

309 
	`pktgí_di•œy_£t_cﬁ‹
(
NULL
);

311 
row
 = 
LINK_STATE_ROW
;

314 
	`pktgí_gë_lök_°©us
(
öfo
, 
pid
, 0);

316 
	`pktgí_lök_°©e
(
pid
, 
buff
, (buff));

317 
	`pktgí_di•œy_£t_cﬁ‹
("stats.port.status");

318 
	`wr_s¸n_¥ötf
(
row
, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

319 
	`pktgí_di•œy_£t_cﬁ‹
(
NULL
);

322 
row
 = 
LINK_STATE_ROW
 + 1;

323 
	`¢¥ötf
(
buff
, (buff), "%lu/%lu",

324 
öfo
->
max_ùackës
, info->
øã_°©s
.
ùackës
);

325 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

327 
	`¢¥ötf
(
buff
, (buff), "%lu/%lu",

328 
öfo
->
max_›ackës
, info->
øã_°©s
.
›ackës
);

329 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

331 
	`¢¥ötf
(
buff
, (buff), "%lu/%lu",

332 
	`iBôsTŸÆ
(
öfo
->
øã_°©s
Ë/ 
Mûli⁄
,

333 
	`oBôsTŸÆ
(
öfo
->
øã_°©s
Ë/ 
Mûli⁄
);

334 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

336 
pktgí
.
cumm_øã_tŸÆs
.
ùackës
 +
öfo
->
øã_°©s
.ipackets;

337 
pktgí
.
cumm_øã_tŸÆs
.
›ackës
 +
öfo
->
øã_°©s
.opackets;

338 
pktgí
.
cumm_øã_tŸÆs
.
ibyãs
 +
öfo
->
øã_°©s
.ibytes;

339 
pktgí
.
cumm_øã_tŸÆs
.
obyãs
 +
öfo
->
øã_°©s
.obytes;

340 
pktgí
.
cumm_øã_tŸÆs
.
õº‹s
 +
öfo
->
øã_°©s
.ierrors;

341 
pktgí
.
cumm_øã_tŸÆs
.
€º‹s
 +
öfo
->
øã_°©s
.oerrors;

343 i‡(
pktgí
.
cumm_øã_tŸÆs
.
ùackës
 >Öktgí.
max_tŸÆ_ùackës
)

344 
pktgí
.
max_tŸÆ_ùackës
 =Öktgí.
cumm_øã_tŸÆs
.
ùackës
;

345 i‡(
pktgí
.
cumm_øã_tŸÆs
.
›ackës
 >Öktgí.
max_tŸÆ_›ackës
)

346 
pktgí
.
max_tŸÆ_›ackës
 =Öktgí.
cumm_øã_tŸÆs
.
›ackës
;

348 
pktgí
.
cumm_øã_tŸÆs
.
imis£d
 +
öfo
->
øã_°©s
.imissed;

349 #i‡
RTE_VERSION
 < 
	`RTE_VERSION_NUM
(2, 2, 0, 0)

350 
pktgí
.
cumm_øã_tŸÆs
.
ibad¸c
 +
öfo
->
øã_°©s
.ibadcrc;

351 
pktgí
.
cumm_øã_tŸÆs
.
ibadÀn
 +
öfo
->
øã_°©s
.ibadlen;

353 
pktgí
.
cumm_øã_tŸÆs
.
imˇ°s
 +
öfo
->
øã_°©s
.imcasts;

354 
pktgí
.
cumm_øã_tŸÆs
.
rx_nombuf
 +
öfo
->
øã_°©s
.rx_nombuf;

357 
row
 = 
PKT_SIZE_ROW
;

358 
	`wr_s¸n_¥ötf
(
row
++,

359 
cﬁ
,

361 
COLUMN_WIDTH_1
,

362 
öfo
->
sizes
.
brﬂdˇ°
);

363 
	`wr_s¸n_¥ötf
(
row
++,

364 
cﬁ
,

366 
COLUMN_WIDTH_1
,

367 
öfo
->
sizes
.
mu…iˇ°
);

368 
	`wr_s¸n_¥ötf
(
row
++,

369 
cﬁ
,

371 
COLUMN_WIDTH_1
,

372 
öfo
->
sizes
.
_64
);

373 
	`wr_s¸n_¥ötf
(
row
++,

374 
cﬁ
,

376 
COLUMN_WIDTH_1
,

377 
öfo
->
sizes
.
_65_127
);

378 
	`wr_s¸n_¥ötf
(
row
++,

379 
cﬁ
,

381 
COLUMN_WIDTH_1
,

382 
öfo
->
sizes
.
_128_255
);

383 
	`wr_s¸n_¥ötf
(
row
++,

384 
cﬁ
,

386 
COLUMN_WIDTH_1
,

387 
öfo
->
sizes
.
_256_511
);

388 
	`wr_s¸n_¥ötf
(
row
++,

389 
cﬁ
,

391 
COLUMN_WIDTH_1
,

392 
öfo
->
sizes
.
_512_1023
);

393 
	`wr_s¸n_¥ötf
(
row
++,

394 
cﬁ
,

396 
COLUMN_WIDTH_1
,

397 
öfo
->
sizes
.
_1024_1518
);

398 
	`¢¥ötf
(
buff
,

399 (
buff
),

401 
öfo
->
sizes
.
ru¡
,

402 
öfo
->
sizes
.
jumbo
);

403 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

406 
row
 = 
PKT_TOTALS_ROW
;

407 
	`¢¥ötf
(
buff
,

408 (
buff
),

410 
öfo
->
p‹t_°©s
.
õº‹s
,

411 
öfo
->
p‹t_°©s
.
€º‹s
);

412 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

415 
	`wr_s¸n_¥ötf
(
row
++,

416 
cﬁ
,

418 
COLUMN_WIDTH_1
,

419 
öfo
->
p‹t_°©s
.
ùackës
);

420 
	`wr_s¸n_¥ötf
(
row
++,

421 
cﬁ
,

423 
COLUMN_WIDTH_1
,

424 
öfo
->
p‹t_°©s
.
›ackës
);

427 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*Œu", 
COLUMN_WIDTH_1
,

428 
	`iBôsTŸÆ
(
öfo
->
p‹t_°©s
Ë/ 
Mûli⁄
);

429 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*Œu", 
COLUMN_WIDTH_1
,

430 
	`oBôsTŸÆ
(
öfo
->
p‹t_°©s
Ë/ 
Mûli⁄
);

432 
	`¢¥ötf
(
buff
,

433 (
buff
),

435 
öfo
->
°©s
.
¨p_pkts
,

436 
öfo
->
°©s
.
echo_pkts
);

437 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

439 i‡(
pktgí
.
Êags
 & 
TX_DEBUG_FLAG
) {

440 
	`¢¥ötf
(
buff
,

441 (
buff
),

443 
öfo
->
°©s
.
tx_Áûed
);

444 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

445 
	`¢¥ötf
(
buff
,

446 (
buff
),

448 
öfo
->
tx_µs
,

449 
öfo
->
tx_cy˛es
);

450 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

452 
	`¢¥ötf
(
buff
, (buff), "%lu",

453 
öfo
->
°©s
.
imis£d
);

454 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

455 #i‡
RTE_VERSION
 < 
	`RTE_VERSION_NUM
(2, 2, 0, 0)

456 
	`¢¥ötf
(
buff
, (buff), "%lu",

457 
öfo
->
°©s
.
ibad¸c
);

458 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

459 
	`¢¥ötf
(
buff
, (buff), "%lu",

460 
öfo
->
°©s
.
ibadÀn
);

461 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

463 
	`¢¥ötf
(
buff
, (buff), "%lu",

464 
öfo
->
°©s
.
imˇ°s
);

465 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

466 
	`¢¥ötf
(
buff
,

467 (
buff
),

469 
öfo
->
°©s
.
rx_nombuf
);

470 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_1
, 
buff
);

472 
di•œy_˙t
++;

476 
cﬁ
 = (
COLUMN_WIDTH_1
 * 
di•œy_˙t
Ë+ 
COLUMN_WIDTH_0
;

477 
row
 = 
LINK_STATE_ROW
 + 1;

478 
	`¢¥ötf
(
buff
, (buff), "%lu/%lu",

479 
pktgí
.
max_tŸÆ_ùackës
,Öktgí.
cumm_øã_tŸÆs
.
ùackës
);

480 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_3
, 
buff
); 
	`wr_s¸n_eﬁ
();

481 
	`¢¥ötf
(
buff
, (buff), "%lu/%lu",

482 
pktgí
.
max_tŸÆ_›ackës
,Öktgí.
cumm_øã_tŸÆs
.
›ackës
);

483 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_3
, 
buff
); 
	`wr_s¸n_eﬁ
();

484 
	`¢¥ötf
(
buff
, (buff), "%lu/%lu",

485 
	`iBôsTŸÆ
(
pktgí
.
cumm_øã_tŸÆs
Ë/ 
Mûli⁄
,

486 
	`oBôsTŸÆ
(
pktgí
.
cumm_øã_tŸÆs
Ë/ 
Mûli⁄
);

487 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%*s", 
COLUMN_WIDTH_3
, 
buff
); 
	`wr_s¸n_eﬁ
();

488 
	}
}

503 
	$pktgí_¥o˚ss_°©s
(
πe_timî
 *
tim
 
__πe_unu£d
, *
¨g
 __rte_unused)

505 
pid
;

506 
πe_ëh_°©s
 
°©s
;

507 
p‹t_öfo_t
 *
öfo
;

508 
cou¡î
 = 0;

510 
cou¡î
++;

511 i‡(
pktgí
.
Êags
 & 
BLINK_PORTS_FLAG
)

512 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts
;Öid++) {

513 i‡–(
pktgí
.
blökli°
 & (1ULL << 
pid
)) == 0)

516 i‡(
cou¡î
 & 1)

517 
	`πe_ëh_Àd_⁄
(
pid
);

519 
	`πe_ëh_Àd_off
(
pid
);

522 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts
;Öid++) {

523 i‡(
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
RTE_MAX_LCORE
) == 0)

526 
öfo
 = &
pktgí
.öfo[
pid
];

528 
	`mem£t
(&
°©s
, 0, (stats));

529 
	`πe_ëh_°©s_gë
(
pid
, &
°©s
);

532 
°©s
.
ùackës
 -
öfo
->
öô_°©s
.ipackets;

533 
°©s
.
›ackës
 -
öfo
->
öô_°©s
.opackets;

534 
°©s
.
ibyãs
 -
öfo
->
öô_°©s
.ibytes;

535 
°©s
.
obyãs
 -
öfo
->
öô_°©s
.obytes;

536 
°©s
.
õº‹s
 -
öfo
->
öô_°©s
.ierrors;

537 
°©s
.
€º‹s
 -
öfo
->
öô_°©s
.oerrors;

539 
°©s
.
imis£d
 +
öfo
->
öô_°©s
.imissed;

540 #i‡
RTE_VERSION
 < 
	`RTE_VERSION_NUM
(2, 2, 0, 0)

541 
°©s
.
ibad¸c
 +
öfo
->
öô_°©s
.ibadcrc;

542 
°©s
.
ibadÀn
 +
öfo
->
öô_°©s
.ibadlen;

544 
°©s
.
imˇ°s
 +
öfo
->
öô_°©s
.imcasts;

545 
°©s
.
rx_nombuf
 +
öfo
->
öô_°©s
.rx_nombuf;

547 
öfo
->
øã_°©s
.
ùackës
 = 
°©s
.ipackets -

548 
öfo
->
p‹t_°©s
.
ùackës
;

549 
öfo
->
øã_°©s
.
›ackës
 = 
°©s
.opackets -

550 
öfo
->
p‹t_°©s
.
›ackës
;

551 
öfo
->
øã_°©s
.
ibyãs
 = 
°©s
.ibytes -

552 
öfo
->
p‹t_°©s
.
ibyãs
;

553 
öfo
->
øã_°©s
.
obyãs
 = 
°©s
.obytes -

554 
öfo
->
p‹t_°©s
.
obyãs
;

555 
öfo
->
øã_°©s
.
õº‹s
 = 
°©s
.ierrors -

556 
öfo
->
p‹t_°©s
.
õº‹s
;

557 
öfo
->
øã_°©s
.
€º‹s
 = 
°©s
.oerrors -

558 
öfo
->
p‹t_°©s
.
€º‹s
;

560 i‡(
öfo
->
øã_°©s
.
ùackës
 > info->
max_ùackës
)

561 
öfo
->
max_ùackës
 = info->
øã_°©s
.
ùackës
;

562 i‡(
öfo
->
øã_°©s
.
›ackës
 > info->
max_›ackës
)

563 
öfo
->
max_›ackës
 = info->
øã_°©s
.
›ackës
;

565 
öfo
->
øã_°©s
.
imis£d
 +
°©s
.imissed -

566 
öfo
->
öô_°©s
.
imis£d
;

567 #i‡
RTE_VERSION
 < 
	`RTE_VERSION_NUM
(2, 2, 0, 0)

568 
öfo
->
øã_°©s
.
ibad¸c
 +
°©s
.ibadcrc -

569 
öfo
->
öô_°©s
.
ibad¸c
;

570 
öfo
->
øã_°©s
.
ibadÀn
 +
°©s
.ibadlen -

571 
öfo
->
öô_°©s
.
ibadÀn
;

573 
öfo
->
øã_°©s
.
imˇ°s
 +
°©s
.imcasts -

574 
öfo
->
öô_°©s
.
imˇ°s
;

575 
öfo
->
øã_°©s
.
rx_nombuf
 +
°©s
.rx_nombuf -

576 
öfo
->
öô_°©s
.
rx_nombuf
;

579 *(
πe_ëh_°©s
 *)&
öfo
->
p‹t_°©s
 =

580 *(
πe_ëh_°©s
 *)&
°©s
;

582 
	}
}

	@app/pktgen-stats.h

68 #i‚de‡
_PKTGEN_STATS_H_


69 
	#_PKTGEN_STATS_H_


	)

71 
	~<πe_timî.h
>

73 
	spkt_°©s_s
 {

74 
uöt64_t
 
	m¨p_pkts
;

75 
uöt64_t
 
	mecho_pkts
;

76 
uöt64_t
 
	mù_pkts
;

77 
uöt64_t
 
	mùv6_pkts
;

78 
uöt64_t
 
	mvœn_pkts
;

79 
uöt64_t
 
	mdr›≥d_pkts
;

80 
uöt64_t
 
	munknown_pkts
;

81 
uöt64_t
 
	mtx_Áûed
;

82 
uöt64_t
 
	mimis£d
;

83 
uöt64_t
 
	mibad¸c
;

84 
uöt64_t
 
	mibadÀn
;

85 
uöt64_t
 
	mimˇ°s
;

86 
uöt64_t
 
	mrx_nombuf
;

87 } 
	tpkt_°©s_t
;

89 
	gp‹t_öfo_s
;

91 
pktgí_gë_lök_°©us
(
p‹t_öfo_s
 *
öfo
, 
pid
, 
waô
);

92 
pktgí_¥o˚ss_°©s
(
πe_timî
 *
tim
, *
¨g
);

94 
pktgí_∑ge_°©s
();

	@app/pktgen-tcp.c

68 
	~"pktgí.h
"

70 
	~"pktgí-t˝.h
"

71 
	~"x‹shi·128∂us.h
"

86 
	$pktgí_t˝_hdr_˘‹
(
pkt_£q_t
 *
pkt
, 
t˝ù_t
 *
tù
, 
ty≥
 
__πe_unu£d
)

88 
uöt16_t
 
éí
;

91 
	`mem£t
((*)
tù
, 0, (
t˝ù_t
));

94 
tù
->
ù
.
§c
 = 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
);

95 
tù
->
ù
.
d°
 = 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
);

96 
éí
 = 
pkt
->
pktSize
 -

97 (
pkt
->
ëhî_hdr_size
 + (
ùHdr_t
));

99 
tù
->
ù
.
Àn
 = 
	`ht⁄s
(
éí
);

100 
tù
->
ù
.
¥Ÿo
 = 
pkt
->
ùPrŸo
;

102 
tù
->
t˝
.
•‹t
 = 
	`ht⁄s
(
pkt
->sport);

103 
tù
->
t˝
.
dp‹t
 = 
	`ht⁄s
(
pkt
->dport);

104 
tù
->
t˝
.
£q
 = 
	`ht⁄l
(
	`øndom_32
());

105 
tù
->
t˝
.
ack
 = 0;

106 
tù
->
t˝
.
off£t
 = (((
t˝Hdr_t
Ë/ (
uöt32_t
)) << 4);

107 
tù
->
t˝
.
Êags
 = 
SYN_FLAG
;

108 
tù
->
t˝
.
wödow
 = 
	`ht⁄s
(
DEFAULT_WND_SIZE
);

109 
tù
->
t˝
.
urgít
 = 0;

111 
éí
 = 
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
;

113 
tù
->
t˝
.
cksum
 = 
	`cksum
—ù, 
éí
, 0);

114 
	}
}

	@app/pktgen-tcp.h

68 #i‚de‡
_PKTGEN_TCP_H_


69 
	#_PKTGEN_TCP_H_


	)

71 
	~<wr_öë.h
>

73 
	~"pktgí-£q.h
"

87 
pktgí_t˝_hdr_˘‹
(
pkt_£q_t
 * 
pkt
, 
t˝ù_t
 * 
tù
, 
__©åibuã__
 (

88 (
unu£d
)Ë
ty≥
);

	@app/pktgen-udp.c

68 
	~"pktgí.h
"

70 
	~"pktgí-udp.h
"

85 
	$pktgí_udp_hdr_˘‹
(
pkt_£q_t
 *
pkt
, 
udpù_t
 *
uù
, 
ty≥
 
__πe_unu£d
)

87 
uöt16_t
 
éí
;

90 
	`mem£t
((*)
uù
, 0, (
udpù_t
));

93 
uù
->
ù
.
§c
 = 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
);

94 
uù
->
ù
.
d°
 = 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
);

95 
éí
 = 
pkt
->
pktSize
 -

96 (
pkt
->
ëhî_hdr_size
 + (
ùHdr_t
));

98 
uù
->
ù
.
Àn
 = 
	`ht⁄s
(
éí
);

99 
uù
->
ù
.
¥Ÿo
 = 
pkt
->
ùPrŸo
;

101 
uù
->
udp
.
Àn
 = 
	`ht⁄s
(
éí
);

102 
uù
->
udp
.
•‹t
 = 
	`ht⁄s
(
pkt
->sport);

103 
uù
->
udp
.
dp‹t
 = 
	`ht⁄s
(
pkt
->dport);

106 
éí
 = 
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
;

108 
uù
->
udp
.
cksum
 = 
	`cksum
(uù, 
éí
, 0);

109 i‡(
uù
->
udp
.
cksum
 == 0)

110 
uù
->
udp
.
cksum
 = 0xFFFF;

111 
	}
}

	@app/pktgen-udp.h

68 #i‚de‡
_PKTGEN_UDP_H_


69 
	#_PKTGEN_UDP_H_


	)

71 
	~<wr_öë.h
>

73 
	~"pktgí-£q.h
"

87 
pktgí_udp_hdr_˘‹
(
pkt_£q_t
 *
pkt
, 
udpù_t
 *
uù
, 
ty≥
);

	@app/pktgen-vlan.c

68 
	~"pktgí.h
"

69 
	~"pktgí-¨p.h
"

70 
	~"pktgí-ùv4.h
"

71 
	~"pktgí-ùv6.h
"

72 
	~"pktgí-vœn.h
"

87 
	$pktgí_¥o˚ss_vœn
(
πe_mbuf
 *
m
, 
uöt32_t
 
pid
)

89 
pktTy≥_e
 
pTy≥
;

90 
ëhî_hdr
 *
ëh
;

91 
vœn_hdr
 *vlan_hdr;

92 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

94 
ëh
 = 
	`πe_pktmbuf_mtod
(
m
, 
ëhî_hdr
 *);

97 
vœn_hdr
 = (vœn_hd∏*)(
ëh
 + 1);

99 
pTy≥
 = 
	`¡ohs
(
vœn_hdr
->
ëh_¥Ÿo
);

102 ()
pTy≥
) {

103 
ETHER_TYPE_ARP
: 
öfo
->
°©s
.
¨p_pkts
++;

104 
	`pktgí_¥o˚ss_¨p
(
m
, 
pid
, 1); ;

105 
ETHER_TYPE_IPv4
: 
öfo
->
°©s
.
ù_pkts
++;

106 
	`pktgí_¥o˚ss_pög4
(
m
, 
pid
, 1); ;

107 
ETHER_TYPE_IPv6
: 
öfo
->
°©s
.
ùv6_pkts
++;

108 
	`pktgí_¥o˚ss_pög6
(
m
, 
pid
, 1); ;

109 
UNKNOWN_PACKET
:

112 
	}
}

	@app/pktgen-vlan.h

68 #i‚de‡
_PKTGEN_VLAN_H_


69 
	#_PKTGEN_VLAN_H_


	)

71 
	~<°döt.h
>

73 
	~<πe_mbuf.h
>

75 
pktgí_¥o˚ss_vœn
(
πe_mbuf
 *
m
, 
uöt32_t
 
pid
);

	@app/pktgen.c

68 
	~<°döt.h
>

69 
	~<time.h
>

71 
	~"pktgí.h
"

72 
	~"pktgí-gª.h
"

73 
	~"pktgí-t˝.h
"

74 
	~"pktgí-ùv4.h
"

75 
	~"pktgí-ùv6.h
"

76 
	~"pktgí-udp.h
"

77 
	~"pktgí-dns.h
"

78 
	~"pktgí-¨p.h
"

79 
	~"pktgí-vœn.h
"

80 
	~"pktgí-˝u.h
"

81 
	~"pktgí-di•œy.h
"

82 
	~"pktgí-øndom.h
"

83 
	~"pktgí-log.h
"

84 
	~"pktgí-gçu.h
"

87 
pktgí_t
 
	gpktgí
;

101 
__ölöe__
 
uöt64_t


102 
	$pktgí_wúe_size
(
p‹t_öfo_t
 *
öfo
) {

103 
uöt64_t
 
i
, 
size
 = 0;

105 i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
SEND_PCAP_PKTS
)

106 
size
 = 
öfo
->
pˇp
->
pkt_size
 + 
PKT_PREAMBLE_SIZE
 +

107 
INTER_FRAME_GAP
 + 
FCS_SIZE
;

109 i‡(
	`u∆ikñy
(
öfo
->
£qC¡
 > 0) ) {

110 
i
 = 0; i < 
öfo
->
£qC¡
; i++)

111 
size
 +
öfo
->
£q_pkt
[
i
].
pktSize
 +

112 
PKT_PREAMBLE_SIZE
 + 
INTER_FRAME_GAP
 +

113 
FCS_SIZE
;

114 
size
 = sizê/ 
öfo
->
£qC¡
;

116 
size
 = 
öfo
->
£q_pkt
[
SINGLE_PKT
].
pktSize
 +

117 
PKT_PREAMBLE_SIZE
 + 
INTER_FRAME_GAP
 + 
FCS_SIZE
;

119  
size
;

120 
	}
}

135 
	$pktgí_∑ckë_øã
(
p‹t_öfo_t
 *
öfo
)

138 
öt64_t
 
ff
[11] = { 31, 30, 25, 30, 17, 17, 17, 20, 50, 60, 90 };

139 
uöt64_t
 
wúe_size
 = (
	`pktgí_wúe_size
(
öfo
) * 8);

140 
uöt64_t
 
lök
 = (uöt64_t)
öfo
->lök.
lök_•ìd
 * 
Mûli⁄
;

141 
uöt64_t
 
µs
 = ((
lök
 / 
wúe_size
Ë* 
öfo
->
tx_øã
) / 100;

142 
uöt64_t
 
˝p
 = (
µs
 > 0Ë? (
pktgí
.
hz
 /Öps) : (pktgen.hz / 4);

144 
öfo
->
tx_µs
 = 
µs
;

145 
öfo
->
tx_cy˛es
 = ((
˝p
 * info->
tx_bur°
) /

146 
	`wr_gë_p‹t_tx˙t
(
pktgí
.
l2p
, 
öfo
->
pid
));

147 
öfo
->
tx_cy˛es
 -
ff
[öfo->
tx_øã
 / 10];

148 
	}
}

162 
__ölöe__
 

163 
	$pktgí_fûl_∑âîn
(
uöt8_t
 *
p
, 
uöt32_t
 
Àn
, uöt32_à
ty≥
, *
u£r
) {

164 
uöt32_t
 
i
;

166 
ty≥
) {

167 
USER_FILL_PATTERN
:

168 
	`mem£t
(
p
, 0, 
Àn
);

169 
i
 = 0; i < 
Àn
; i++)

170 
p
[
i
] = 
u£r
[ò& (
USER_PATTERN_SIZE
 - 1)];

173 
NO_FILL_PATTERN
:

176 
ZERO_FILL_PATTERN
:

177 
	`mem£t
(
p
, 0, 
Àn
);

181 
ABC_FILL_PATTERN
:

182 
i
 = 0; i < 
Àn
; i++)

183 
p
[
i
] = "abcdefghijklmnopqrstuvwxyz012345"[i & 0x1f];

186 
	}
}

200 
pkt_£q_t
 *

201 
	$pktgí_föd_m©chög_ù§c
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
addr
)

203 
pkt_£q_t
 *
pkt
 = 
NULL
;

204 
i
;

206 
addr
 = 
	`¡ohl
(addr);

209 
i
 = 0; i < 
öfo
->
£qC¡
; i++)

210 i‡(
addr
 =
öfo
->
£q_pkt
[
i
].
ù_§c_addr
.addr.
ùv4
.
s_addr
) {

211 
pkt
 = &
öfo
->
£q_pkt
[
i
];

216 i‡(
pkt
 =
NULL
)

217 i‡(
addr
 =
öfo
->
£q_pkt
[
SINGLE_PKT
].
ù_§c_addr
.addr.
ùv4
.
s_addr
)

218 
pkt
 = &
öfo
->
£q_pkt
[
SINGLE_PKT
];

220  
pkt
;

221 
	}
}

235 
pkt_£q_t
 *

236 
	$pktgí_föd_m©chög_ùd°
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
addr
)

238 
pkt_£q_t
 *
pkt
 = 
NULL
;

239 
i
;

241 
addr
 = 
	`¡ohl
(addr);

244 
i
 = 0; i < 
öfo
->
£qC¡
; i++)

245 i‡(
addr
 =
öfo
->
£q_pkt
[
i
].
ù_d°_addr
.addr.
ùv4
.
s_addr
) {

246 
pkt
 = &
öfo
->
£q_pkt
[
i
];

251 i‡(
pkt
 =
NULL
)

252 i‡(
addr
 =
öfo
->
£q_pkt
[
SINGLE_PKT
].
ù_d°_addr
.addr.
ùv4
.
s_addr
)

253 
pkt
 = &
öfo
->
£q_pkt
[
SINGLE_PKT
];

256 i‡(
pkt
 =
NULL
)

257 i‡(
addr
 =
öfo
->
£q_pkt
[
RANGE_PKT
].
ù_d°_addr
.addr.
ùv4
.
s_addr
)

258 
pkt
 = &
öfo
->
£q_pkt
[
RANGE_PKT
];

260  
pkt
;

261 
	}
}

263 
ölöe
 

264 
	$pktgí_œãncy_≠∂y
(
p‹t_öfo_t
 *
öfo
 
__πe_unu£d
,

265 
πe_mbuf
 **
mbufs
,

266 
˙t
)

268 *
pkt
;

269 
i
;

271 
i
 = 0; i < 
˙t
; i++) {

272 
pkt
 = 
	`πe_pktmbuf_mtod
(
mbufs
[
i
], *);

273 
pkt
 +(
ëhî_hdr
Ë+ (
ùv4_hdr
);

274 
	`˛ock_gëtime
(
CLOCK_MONOTONIC_RAW
, (
time•ec
 *)
pkt
);

276 
	}
}

278 
ölöe
 

279 
	$pktgí_do_tx_èp
(
p‹t_öfo_t
 *
öfo
, 
πe_mbuf
 **
pkts
, 
nb_pkts
)

281 
i
;

283 
i
 = 0; i < 
nb_pkts
; i++)

284 i‡(
	`wrôe
(
öfo
->
tx_èpfd
, 
	`πe_pktmbuf_mtod
(
pkts
[
i
], *),

285 
pkts
[
i
]->
pkt_Àn
) < 0) {

286 
	`pktgí_log_îr‹
("Write failed forÅx_tap%d",

287 
öfo
->
pid
);

290 
	}
}

305 
	$_£nd_bur°_Á°
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
qid
)

307 
mbuf_èbÀ
 *
mèb
 = &
öfo
->
q
[
qid
].
tx_mbufs
;

308 
πe_mbuf
 **
pkts
;

309 
uöt32_t
 
ªt
, 
˙t
, 
Êags
;

311 
˙t
 = 
mèb
->
Àn
;

312 
mèb
->
Àn
 = 0;

314 
pkts
 = 
mèb
->
m_èbÀ
;

315 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

316 i‡(
	`u∆ikñy
(
Êags
 & 
PROCESS_TX_TAP_PKTS
) )

317 
˙t
) {

318 
ªt
 = 
	`πe_ëh_tx_bur°
(
öfo
->
pid
, 
qid
, 
pkts
, 
˙t
);

320 
	`pktgí_do_tx_èp
(
öfo
, 
pkts
, 
ªt
);

322 
pkts
 +
ªt
;

323 
˙t
 -
ªt
;

326 
˙t
) {

327 
ªt
 = 
	`πe_ëh_tx_bur°
(
öfo
->
pid
, 
qid
, 
pkts
, 
˙t
);

329 
pkts
 +
ªt
;

330 
˙t
 -
ªt
;

332 
	}
}

347 
	$_£nd_bur°_øndom
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
qid
)

349 
mbuf_èbÀ
 *
mèb
 = &
öfo
->
q
[
qid
].
tx_mbufs
;

350 
πe_mbuf
 **
pkts
;

351 
uöt32_t
 
ªt
, 
˙t
, 
Êags
;

353 
˙t
 = 
mèb
->
Àn
;

354 
mèb
->
Àn
 = 0;

355 
pkts
 = 
mèb
->
m_èbÀ
;

357 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

358 i‡(
	`u∆ikñy
(
Êags
 & 
PROCESS_TX_TAP_PKTS
) )

359 
˙t
) {

360 
	`pktgí_∫d_bôs_≠∂y
(
öfo
, 
pkts
, 
˙t
, 
NULL
);

362 
ªt
 = 
	`πe_ëh_tx_bur°
(
öfo
->
pid
, 
qid
, 
pkts
, 
˙t
);

364 
	`pktgí_do_tx_èp
(
öfo
, 
pkts
, 
ªt
);

366 
pkts
 +
ªt
;

367 
˙t
 -
ªt
;

370 
˙t
) {

371 
	`pktgí_∫d_bôs_≠∂y
(
öfo
, 
pkts
, 
˙t
, 
NULL
);

373 
ªt
 = 
	`πe_ëh_tx_bur°
(
öfo
->
pid
, 
qid
, 
pkts
, 
˙t
);

375 
pkts
 +
ªt
;

376 
˙t
 -
ªt
;

378 
	}
}

393 
	$_£nd_bur°_œãncy
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
qid
)

395 
mbuf_èbÀ
 *
mèb
 = &
öfo
->
q
[
qid
].
tx_mbufs
;

396 
πe_mbuf
 **
pkts
;

397 
uöt32_t
 
ªt
, 
˙t
;

399 
˙t
 = 
mèb
->
Àn
;

400 
mèb
->
Àn
 = 0;

401 
pkts
 = 
mèb
->
m_èbÀ
;

402 
˙t
) {

403 
	`pktgí_œãncy_≠∂y
(
öfo
, 
pkts
, 
˙t
);

405 
ªt
 = 
	`πe_ëh_tx_bur°
(
öfo
->
pid
, 
qid
, 
pkts
, 
˙t
);

407 
pkts
 +
ªt
;

408 
˙t
 -
ªt
;

410 
	}
}

424 
__ölöe__
 

425 
	$pktgí_tx_Êush
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
qid
)

428 i‡(
öfo
->
£nd_bur°
)

429 
öfo
->
	`£nd_bur°
(öfo, 
qid
);

431 
	`πe_dñay_ms
(2);

434 
	`pktgí_˛r_q_Êags
(
öfo
, 
qid
, 
DO_TX_FLUSH
);

435 
	}
}

449 
__ölöe__
 

450 
	$pktgí_exô_˛ónup
(
uöt8_t
 
lid
)

452 
p‹t_öfo_t
 *
öfo
;

453 
uöt8_t
 
idx
, 
pid
, 
qid
;

455 
idx
 = 0; idx < 
	`wr_gë_lc‹e_tx˙t
(
pktgí
.
l2p
, 
lid
); idx++) {

456 
pid
 = 
	`wr_gë_tx_pid
(
pktgí
.
l2p
, 
lid
, 
idx
);

457 i‡–(
öfo
 = (
p‹t_öfo_t
 *)
	`wr_gë_p‹t_¥iv©e
(
pktgí
.
l2p
, 
pid
)Ë!
NULL
) {

458 
qid
 = 
	`wr_gë_txque
(
pktgí
.
l2p
, 
lid
, 
pid
);

459 
	`pktgí_tx_Êush
(
öfo
, 
qid
);

460 
	`πe_dñay_ms
(100);

461 
	`πe_ëh_dev_°›
(
pid
);

462 
	`πe_ëh_dev_˛o£
(
pid
);

465 
	}
}

479 
__ölöe__
 

480 
	$pktgí_has_w‹k
()

482 i‡(!
	`wr_gë_m≠
(
pktgí
.
l2p
, 
RTE_MAX_ETHPORTS
, 
	`πe_lc‹e_id
()) ) {

483 
	`pktgí_log_w¨nög
("NothingÅo do onÜcore %d:Éxiting",

484 
	`πe_lc‹e_id
());

488 
	}
}

503 
	$pktgí_∑ckë_˘‹
(
p‹t_öfo_t
 *
öfo
, 
öt32_t
 
£q_idx
, i¡32_à
ty≥
)

505 
pkt_£q_t
 *
pkt
 = &
öfo
->
£q_pkt
[
£q_idx
];

506 
ëhî_hdr
 *
ëh
 = (ëhî_hd∏*)&
pkt
->
hdr
.eth;

507 
uöt16_t
 
éí
;

510 
	`pktgí_fûl_∑âîn
((
uöt8_t
 *)&
pkt
->
hdr
,

511 ((
pkt_hdr_t
Ë+ (
pkt
->
∑d
)),

512 
öfo
->
fûl_∑âîn_ty≥
, info->
u£r_∑âîn
);

514 *
ëhî_hdr
 = 
	`pktgí_ëhî_hdr_˘‹
(
öfo
, 
pkt
, 
ëh
);

517 i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
SEND_GRE_IPv4_HEADER
)

518 
ëhî_hdr
 =

519 
	`pktgí_gª_hdr_˘‹
(
öfo
, 
pkt
, (
gªIp_t
 *)
ëhî_hdr
);

520 i‡(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
SEND_GRE_ETHER_HEADER
)

521 
ëhî_hdr
 = 
	`pktgí_gª_ëhî_hdr_˘‹
(
öfo
,

522 
pkt
,

523 (
gªEthî_t
 *)
ëhî_hdr
);

525 i‡(
	`likñy
(
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv4
) ) {

526 i‡(
	`likñy
(
pkt
->
ùPrŸo
 =
PG_IPPROTO_TCP
) ) {

527 i‡(
pkt
->
dp‹t
 !
PG_IPPROTO_L4_GTPU_PORT
) {

528 
t˝ù_t
 *
tù
;

531 
tù
 = (
t˝ù_t
 *)
ëhî_hdr
;

534 
	`pktgí_t˝_hdr_˘‹
(
pkt
, 
tù
, 
ETHER_TYPE_IPv4
);

537 
	`pktgí_ùv4_˘‹
(
pkt
, (
ùHdr_t
 *)
tù
);

539 
pkt
->
éí
 =Ökt->
ëhî_hdr_size
 +

540 (
ùHdr_t
Ë+ (
t˝Hdr_t
);

542 
gçuT˝Ip_t
 *
t˝Gçu
;

545 
t˝Gçu
 = (
gçuT˝Ip_t
 *)
ëhî_hdr
;

547 
	`pktgí_gçu_hdr_˘‹
(
pkt
,

548 (
gçuHdr_t
 *)
t˝Gçu
,

549 
pkt
->
ùPrŸo
);

552 
	`pktgí_t˝_hdr_˘‹
(
pkt
,

553 (
t˝ù_t
 *)
t˝Gçu
,

554 
ETHER_TYPE_IPv4
);

557 
	`pktgí_ùv4_˘‹
(
pkt
, (
ùHdr_t
 *)
t˝Gçu
);

559 
pkt
->
éí
 =Ökt->
ëhî_hdr_size
 +

560 (
ùHdr_t
Ë+ (
t˝Hdr_t
) +

561 (
gçuHdr_t
);

563 } i‡(
pkt
->
ùPrŸo
 =
PG_IPPROTO_UDP
) {

564 i‡(
pkt
->
dp‹t
 =
PG_IPPROTO_L4_DNS_PORT
) {

565 
dnsUdpIp_t
 *
udpDns
;

567 
udpDns
 = (
dnsUdpIp_t
 *)
ëhî_hdr
;

570 
	`pktgí_dns_hdr_˘‹
(
öfo
,

571 (
dnsHdr_t
 *)
udpDns
,

572 
pkt
->
ùPrŸo
);

575 
	`pktgí_udp_hdr_˘‹
(
pkt
,

576 (
udpù_t
 *)
udpDns
,

577 
ETHER_TYPE_IPv4
);

580 
	`pktgí_ùv4_˘‹
(
pkt
, (
ùHdr_t
 *)
udpDns
);

582 
pkt
->
éí
 =Ökt->
ëhî_hdr_size
 +

583 (
ùHdr_t
Ë+ (
udpHdr_t
) +

584 (
dnsHdr_t
Ë+ (
dnsQuîy_t
);

589 } i‡(
pkt
->
dp‹t
 =
PG_IPPROTO_L4_GTPU_PORT
) {

590 
gçuUdpIp_t
 *
udpGçu
;

592 
udpGçu
 = (
gçuUdpIp_t
 *)
ëhî_hdr
;

595 
	`pktgí_gçu_hdr_˘‹
(
pkt
,

596 (
gçuHdr_t
 *)
udpGçu
,

597 
pkt
->
ùPrŸo
);

600 
	`pktgí_udp_hdr_˘‹
(
pkt
,

601 (
udpù_t
 *)
udpGçu
,

602 
ETHER_TYPE_IPv4
);

605 
	`pktgí_ùv4_˘‹
(
pkt
, (
ùHdr_t
 *)
udpGçu
);

607 
pkt
->
éí
 =Ökt->
ëhî_hdr_size
 +

608 (
ùHdr_t
Ë+ (
udpHdr_t
) +

609 (
gçuHdr_t
);

611 
udpù_t
 *
udp
;

615 
udp
 = (
udpù_t
 *)
ëhî_hdr
;

618 
	`pktgí_udp_hdr_˘‹
(
pkt
, 
udp
, 
ETHER_TYPE_IPv4
);

621 
	`pktgí_ùv4_˘‹
(
pkt
, (
ùHdr_t
 *)
udp
);

623 
pkt
->
éí
 =Ökt->
ëhî_hdr_size
 +

624 (
ùHdr_t
Ë+ (
udpHdr_t
);

627 } i‡(
pkt
->
ùPrŸo
 =
PG_IPPROTO_ICMP
) {

628 
udpù_t
 *
uù
;

629 
icmpv4Hdr_t
 *
icmp
;

632 
uù
 = (
udpù_t
 *)
ëhî_hdr
;

635 
uù
->
ù
.
§c
 = 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
);

636 
uù
->
ù
.
d°
 = 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
);

637 
éí
 = 
pkt
->
pktSize
 -

638 (
pkt
->
ëhî_hdr_size
 + (
ùHdr_t
));

639 
uù
->
ù
.
Àn
 = 
	`ht⁄s
(
éí
);

640 
uù
->
ù
.
¥Ÿo
 = 
pkt
->
ùPrŸo
;

642 
icmp
 = (
icmpv4Hdr_t
 *)&
uù
->
udp
;

643 
icmp
->
code
 = 0;

644 i‡–(
ty≥
 =-1Ë|| (ty≥ =
ICMP4_TIMESTAMP
) ) {

645 
icmp
->
ty≥
 =

646 
ICMP4_TIMESTAMP
;

647 
icmp
->
d©a
.
time°amp
.
idít
 = 0x1234;

648 
icmp
->
d©a
.
time°amp
.
£q
 = 0x5678;

649 
icmp
->
d©a
.
time°amp
.
‹igö©e
 = 0x80004321;

650 
icmp
->
d©a
.
time°amp
.
ª˚ive
 = 0;

651 
icmp
->
d©a
.
time°amp
.
å™smô
 = 0;

652 } i‡(
ty≥
 =
ICMP4_ECHO
) {

653 
icmp
->
ty≥
 = 
ICMP4_ECHO
;

654 
icmp
->
d©a
.
echo
.
idít
 = 0x1234;

655 
icmp
->
d©a
.
echo
.
£q
 = 0x5678;

656 
icmp
->
d©a
.
echo
.data = 0;

658 
icmp
->
cksum
 = 0;

659 
éí
 = 
pkt
->
pktSize
 -

660 (
pkt
->
ëhî_hdr_size
 + (
ùHdr_t
));

661 
icmp
->
cksum
 = 
	`cksum
(icmp, 
éí
, 0);

662 i‡(
icmp
->
cksum
 == 0)

663 
icmp
->
cksum
 = 0xFFFF;

666 
	`pktgí_ùv4_˘‹
(
pkt
, (
ùHdr_t
 *)
uù
);

668 
pkt
->
éí
 =Ökt->
ëhî_hdr_size
 + (
ùHdr_t
) +

669 
ICMP4_TIMESTAMP_SIZE
;

671 } i‡(
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv6
) {

672 i‡(
pkt
->
ùPrŸo
 =
PG_IPPROTO_TCP
) {

673 
t˝ùv6_t
 *
tù
;

676 
tù
 = (
t˝ùv6_t
 *)
ëhî_hdr
;

679 ()
	`πe_mem˝y
(
tù
->
ù
.
daddr
, &
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
,

680 (
ö6_addr
));

681 ()
	`πe_mem˝y
(
tù
->
ù
.
ßddr
, &
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
,

682 (
ö6_addr
));

684 
éí
 = (
t˝Hdr_t
) +

685 (
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
 -

686 (
ùv6Hdr_t
Ë- (
t˝Hdr_t
));

687 
tù
->
ù
.
t˝_Àngth
 = 
	`ht⁄l
(
éí
);

688 
tù
->
ù
.
√xt_hódî
 = 
pkt
->
ùPrŸo
;

690 
tù
->
t˝
.
•‹t
 = 
	`ht⁄s
(
pkt
->sport);

691 
tù
->
t˝
.
dp‹t
 = 
	`ht⁄s
(
pkt
->dport);

692 
tù
->
t˝
.
£q
 = 
	`ht⁄l
(
DEFAULT_PKT_NUMBER
);

693 
tù
->
t˝
.
ack
 = 
	`ht⁄l
(
DEFAULT_ACK_NUMBER
);

694 
tù
->
t˝
.
off£t
 =

695 (((
t˝Hdr_t
Ë/ (
uöt32_t
)) << 4);

696 
tù
->
t˝
.
wödow
 = 
	`ht⁄s
(
DEFAULT_WND_SIZE
);

697 
tù
->
t˝
.
urgít
 = 0;

698 
tù
->
t˝
.
Êags
 = 
ACK_FLAG
;

700 
éí
 = (
t˝ùv6_t
) +

701 (
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
 -

702 (
ùv6Hdr_t
Ë- (
t˝Hdr_t
));

703 
tù
->
t˝
.
cksum
 = 
	`cksum
—ù, 
éí
, 0);

706 
	`pktgí_ùv6_˘‹
(
pkt
, (
ùv6Hdr_t
 *)&
tù
->
ù
);

708 
pkt
->
éí
 = (
t˝Hdr_t
Ë+Ökt->
ëhî_hdr_size
 +

709 (
ùv6Hdr_t
);

710 i‡(
	`u∆ikñy
(
pkt
->
pktSize
 <Ökt->
éí
) )

711 
pkt
->
pktSize
 =Ökt->
éí
;

712 } i‡(
pkt
->
ùPrŸo
 =
PG_IPPROTO_UDP
) {

713 
uöt32_t
 
addr
;

714 
udpùv6_t
 *
uù
;

717 
uù
 = (
udpùv6_t
 *)
ëhî_hdr
;

720 
addr
 = 
	`ht⁄l
(
pkt
->
ù_d°_addr
.addr.
ùv4
.
s_addr
);

721 ()
	`πe_mem˝y
(&
uù
->
ù
.
daddr
[8], &
addr
,

722 (
uöt32_t
));

723 
addr
 = 
	`ht⁄l
(
pkt
->
ù_§c_addr
.addr.
ùv4
.
s_addr
);

724 ()
	`πe_mem˝y
(&
uù
->
ù
.
ßddr
[8], &
addr
,

725 (
uöt32_t
));

727 
éí
 = (
udpHdr_t
) +

728 (
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
 -

729 (
ùv6Hdr_t
Ë- (
udpHdr_t
));

730 
uù
->
ù
.
t˝_Àngth
 = 
	`ht⁄l
(
éí
);

731 
uù
->
ù
.
√xt_hódî
 = 
pkt
->
ùPrŸo
;

733 
uù
->
udp
.
•‹t
 = 
	`ht⁄s
(
pkt
->sport);

734 
uù
->
udp
.
dp‹t
 = 
	`ht⁄s
(
pkt
->dport);

736 
éí
 = (
udpùv6_t
) +

737 (
pkt
->
pktSize
 -Ökt->
ëhî_hdr_size
 -

738 (
ùv6Hdr_t
Ë- (
udpHdr_t
));

739 
uù
->
udp
.
cksum
 = 
	`cksum
(uù, 
éí
, 0);

740 i‡(
uù
->
udp
.
cksum
 == 0)

741 
uù
->
udp
.
cksum
 = 0xFFFF;

744 
	`pktgí_ùv6_˘‹
(
pkt
, (
ùv6Hdr_t
 *)&
uù
->
ù
);

746 
pkt
->
éí
 = (
udpHdr_t
Ë+Ökt->
ëhî_hdr_size
 +

747 (
ùv6Hdr_t
);

748 i‡(
	`u∆ikñy
(
pkt
->
pktSize
 <Ökt->
éí
) )

749 
pkt
->
pktSize
 =Ökt->
éí
;

751 } i‡(
pkt
->
ëhTy≥
 =
ETHER_TYPE_ARP
) {

753 
¨pPkt_t
 *
¨p
 = (¨pPkt_à*)
ëhî_hdr
;

755 
¨p
->
hrd
 = 
	`ht⁄s
(1);

756 
¨p
->
¥o
 = 
	`ht⁄s
(
ETHER_TYPE_IPv4
);

757 
¨p
->
h 
 = 
ETHER_ADDR_LEN
;

758 
¨p
->
∂n
 = 4;

761 
¨p
->
›
 = 
	`ht⁄s
(2);

763 
	`ëhî_addr_c›y
(&
pkt
->
ëh_§c_addr
,

764 (
ëhî_addr
 *)&
¨p
->
sha
);

765 
¨p
->
•a
.
_32
 = 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
);

767 
	`ëhî_addr_c›y
(&
pkt
->
ëh_d°_addr
,

768 (
ëhî_addr
 *)&
¨p
->
tha
);

769 
¨p
->
ça
.
_32
 = 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
);

771 
	`pktgí_log_îr‹
("Unknow¿EthîTy≥ 0x%04x", 
pkt
->
ëhTy≥
);

772 
	}
}

788 
	$pktgí_£nd_mbuf
(
πe_mbuf
 *
m
, 
uöt8_t
 
pid
, 
uöt16_t
 
qid
)

790 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

791 
mbuf_èbÀ
 *
mèb
 = &
öfo
->
q
[
qid
].
tx_mbufs
;

794 
mèb
->
m_èbÀ
[mèb->
Àn
++] = 
m
;

797 i‡(
	`u∆ikñy
(
mèb
->
Àn
 >
öfo
->
tx_bur°
))

798 
öfo
->
	`£nd_bur°
(öfo, 
qid
);

799 
	}
}

814 
__ölöe__
 
pktTy≥_e


815 
	$pktgí_∑ckë_ty≥
(
πe_mbuf
 *
m
)

817 
pktTy≥_e
 
ªt
;

818 
ëhî_hdr
 *
ëh
;

820 
ëh
 = 
	`πe_pktmbuf_mtod
(
m
, 
ëhî_hdr
 *);

822 
ªt
 = 
	`¡ohs
(
ëh
->
ëhî_ty≥
);

824  
ªt
;

825 
	}
}

841 
	$pktgí_∑ckë_˛assify
(
πe_mbuf
 *
m
, 
pid
)

843 
p‹t_öfo_t
 *
öfo
 = &
pktgí
.öfo[
pid
];

844 
∂í
 = (
m
->
pkt_Àn
 + 
FCS_SIZE
);

845 
uöt32_t
 
Êags
;

846 
pktTy≥_e
 
pTy≥
;

848 
pTy≥
 = 
	`pktgí_∑ckë_ty≥
(
m
);

850 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

851 i‡(
	`u∆ikñy
(
Êags
 & (
PROCESS_INPUT_PKTS
 | 
PROCESS_RX_TAP_PKTS
)) ) {

852 i‡(
	`u∆ikñy
(
Êags
 & 
PROCESS_RX_TAP_PKTS
) )

853 i‡(
	`wrôe
(
öfo
->
rx_èpfd
, 
	`πe_pktmbuf_mtod
(
m
, *),

854 
m
->
pkt_Àn
) < 0)

855 
	`pktgí_log_îr‹
("Write failed forÑx_tap%d",

856 
pid
);

858 ()
pTy≥
) {

859 
ETHER_TYPE_ARP
: 
öfo
->
°©s
.
¨p_pkts
++;

860 
	`pktgí_¥o˚ss_¨p
(
m
, 
pid
, 0); ;

861 
ETHER_TYPE_IPv4
: 
öfo
->
°©s
.
ù_pkts
++;

862 
	`pktgí_¥o˚ss_pög4
(
m
, 
pid
, 0); ;

863 
ETHER_TYPE_IPv6
: 
öfo
->
°©s
.
ùv6_pkts
++;

864 
	`pktgí_¥o˚ss_pög6
(
m
, 
pid
, 0); ;

865 
ETHER_TYPE_VLAN
: 
öfo
->
°©s
.
vœn_pkts
++;

866 
	`pktgí_¥o˚ss_vœn
(
m
, 
pid
); ;

867 
UNKNOWN_PACKET
:

872 ()
pTy≥
) {

873 
ETHER_TYPE_ARP
: 
öfo
->
°©s
.
¨p_pkts
++; ;

874 
ETHER_TYPE_IPv4
: 
öfo
->
°©s
.
ù_pkts
++; ;

875 
ETHER_TYPE_IPv6
: 
öfo
->
°©s
.
ùv6_pkts
++; ;

876 
ETHER_TYPE_VLAN
: 
öfo
->
°©s
.
vœn_pkts
++; ;

881 i‡(
∂í
 =
ETHER_MIN_LEN
)

882 
öfo
->
sizes
.
_64
++;

883 i‡–(
∂í
 >(
ETHER_MIN_LEN
 + 1)) && (plen <= 127) )

884 
öfo
->
sizes
.
_65_127
++;

885 i‡–(
∂í
 >= 128) && (plen <= 255) )

886 
öfo
->
sizes
.
_128_255
++;

887 i‡–(
∂í
 >= 256) && (plen <= 511) )

888 
öfo
->
sizes
.
_256_511
++;

889 i‡–(
∂í
 >= 512) && (plen <= 1023) )

890 
öfo
->
sizes
.
_512_1023
++;

891 i‡–(
∂í
 >1024Ë&& (∂í <
ETHER_MAX_LEN
) )

892 
öfo
->
sizes
.
_1024_1518
++;

893 i‡(
∂í
 < 
ETHER_MIN_LEN
)

894 
öfo
->
sizes
.
ru¡
++;

895 i‡(
∂í
 >(
ETHER_MAX_LEN
 + 1) )

896 
öfo
->
sizes
.
jumbo
++;

899 i‡(
	`u∆ikñy
(((
uöt8_t
 *)
m
->
buf_addr
 + m->
d©a_off
)[0] == 0xFF) ) {

900 i‡–(((
uöt64_t
 *)
m
->
buf_addr
 + m->
d©a_off
)[0] &

902 
öfo
->
sizes
.
brﬂdˇ°
++;

903 i‡–((
uöt8_t
 *)
m
->
buf_addr
 + m->
d©a_off
)[0] & 1)

904 
öfo
->
sizes
.
mu…iˇ°
++;

906 
	}
}

920 
	#PREFETCH_OFFSET
 3

	)

921 
__ölöe__
 

922 
	$pktgí_∑ckë_˛assify_bulk
(
πe_mbuf
 **
pkts
, 
nb_rx
, 
pid
)

924 
j
;

927 
j
 = 0; j < 
PREFETCH_OFFSET
 && j < 
nb_rx
; j++)

928 
	`πe_¥e„tch0
(
	`πe_pktmbuf_mtod
(
pkts
[
j
], *));

931 
j
 = 0; j < (
nb_rx
 - 
PREFETCH_OFFSET
); j++) {

932 
	`πe_¥e„tch0
(
	`πe_pktmbuf_mtod
(
pkts
[
j
 + 
PREFETCH_OFFSET
],

934 
	`pktgí_∑ckë_˛assify
(
pkts
[
j
], 
pid
);

938 ; 
j
 < 
nb_rx
; j++)

939 
	`pktgí_∑ckë_˛assify
(
pkts
[
j
], 
pid
);

940 
	}
}

955 
	$pktgí_£nd_•ecül
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
Êags
)

957 
uöt32_t
 
s
;

960 
s
 = 0; s < 
öfo
->
£qC¡
; s++) {

961 i‡(
Êags
 & 
SEND_GRATUITOUS_ARP
)

962 
	`pktgí_£nd_¨p
(
öfo
->
pid
, 
GRATUITOUS_ARP
, 
s
);

963 i‡(
Êags
 & 
SEND_ARP_REQUEST
)

964 
	`pktgí_£nd_¨p
(
öfo
->
pid
, 0, 
s
);

966 i‡(
Êags
 & 
SEND_PING4_REQUEST
)

967 
	`pktgí_£nd_pög4
(
öfo
->
pid
, 
s
);

968 #ifde‡
INCLUDE_PING6


969 i‡(
Êags
 & 
SEND_PING6_REQUEST
)

970 
	`pktgí_£nd_pög6
(
öfo
->
pid
, 
s
);

975 i‡(
Êags
 & 
SEND_GRATUITOUS_ARP
)

976 
	`pktgí_£nd_¨p
(
öfo
->
pid
, 
GRATUITOUS_ARP
, 
SINGLE_PKT
);

977 i‡(
Êags
 & 
SEND_ARP_REQUEST
)

978 
	`pktgí_£nd_¨p
(
öfo
->
pid
, 0, 
SINGLE_PKT
);

980 i‡(
Êags
 & 
SEND_PING4_REQUEST
)

981 
	`pktgí_£nd_pög4
(
öfo
->
pid
, 
SINGLE_PKT
);

982 #ifde‡
INCLUDE_PING6


983 i‡(
Êags
 & 
SEND_PING6_REQUEST
)

984 
	`pktgí_£nd_pög6
(
öfo
->
pid
, 
SINGLE_PKT
);

987 
	`pktgí_˛r_p‹t_Êags
(
öfo
, 
SEND_ARP_PING_REQUESTS
);

988 
	}
}

1002 
__ölöe__
 

1003 
	$pktgí_£tup_∑ckës
(
p‹t_öfo_t
 *
öfo
, 
πe_mempoﬁ
 *
mp
, 
uöt16_t
 
qid
)

1005 
πe_mbuf
 *
m
, *
mm
;

1006 
pkt_£q_t
 *
pkt
, *
£q_pkt
 = 
NULL
;

1007 
uöt16_t
 
£qIdx
;

1009 
	`pktgí_˛r_q_Êags
(
öfo
, 
qid
, 
CLEAR_FAST_ALLOC_FLAG
);

1011 i‡(
mp
 =
öfo
->
q
[
qid
].
pˇp_mp
)

1014 
	`πe_•ölock_lock
(&
öfo
->
p‹t_lock
);

1016 
£q_pkt
 = 
öfo
->seq_pkt;

1017 
£qIdx
 = 
öfo
->seqIdx;

1019 
mm
 = 
NULL
;

1020 
pkt
 = 
NULL
;

1022 i‡(
mp
 =
öfo
->
q
[
qid
].
tx_mp
)

1023 
pkt
 = &
£q_pkt
[
SINGLE_PKT
];

1024 i‡(
mp
 =
öfo
->
q
[
qid
].
ønge_mp
)

1025 
pkt
 = &
£q_pkt
[
RANGE_PKT
];

1026 i‡(
mp
 =
öfo
->
q
[
qid
].
£q_mp
)

1027 
pkt
 = &
£q_pkt
[
öfo
->
£qIdx
];

1031 
m
 = 
	`πe_pktmbuf_Æloc
(
mp
);

1032 i‡(
	`u∆ikñy
(
m
 =
NULL
) )

1036 
m
->
√xt
 = 
mm
;

1037 
mm
 = 
m
;

1039 i‡(
mp
 =
öfo
->
q
[
qid
].
tx_mp
) {

1040 
	`pktgí_∑ckë_˘‹
(
öfo
, 
SINGLE_PKT
, -1);

1042 
	`πe_mem˝y
((
uöt8_t
 *)
m
->
buf_addr
 + m->
d©a_off
,

1043 (
uöt8_t
 *)&
pkt
->
hdr
,

1044 
MAX_PKT_SIZE
);

1046 
m
->
pkt_Àn
 = 
pkt
->
pktSize
;

1047 
m
->
d©a_Àn
 = 
pkt
->
pktSize
;

1048 } i‡(
mp
 =
öfo
->
q
[
qid
].
ønge_mp
) {

1049 
	`pktgí_ønge_˘‹
(
öfo
, 
pkt
);

1050 
	`pktgí_∑ckë_˘‹
(
öfo
, 
RANGE_PKT
, -1);

1052 
	`πe_mem˝y
((
uöt8_t
 *)
m
->
buf_addr
 + m->
d©a_off
,

1053 (
uöt8_t
 *)&
pkt
->
hdr
,

1054 
MAX_PKT_SIZE
);

1056 
m
->
pkt_Àn
 = 
pkt
->
pktSize
;

1057 
m
->
d©a_Àn
 = 
pkt
->
pktSize
;

1058 } i‡(
mp
 =
öfo
->
q
[
qid
].
£q_mp
) {

1059 
	`pktgí_∑ckë_˘‹
(
öfo
, 
£qIdx
, -1);

1061 
	`πe_mem˝y
((
uöt8_t
 *)
m
->
buf_addr
 + m->
d©a_off
,

1062 (
uöt8_t
 *)&
pkt
->
hdr
,

1063 
MAX_PKT_SIZE
);

1065 
m
->
pkt_Àn
 = 
pkt
->
pktSize
;

1066 
m
->
d©a_Àn
 = 
pkt
->
pktSize
;

1069 i‡(
	`u∆ikñy
(++
£qIdx
 >
öfo
->
£qC¡
) )

1070 
£qIdx
 = 0;

1071 
öfo
->
£qIdx
 = seqIdx;

1072 
pkt
 = &
£q_pkt
[
£qIdx
];

1075 
	`πe_•ölock_u∆ock
(&
öfo
->
p‹t_lock
);

1077 i‡(
mm
 !
NULL
)

1078 
	`πe_pktmbuf_‰ì
(
mm
);

1079 
	}
}

1093 
__ölöe__
 

1094 
	$pktgí_£nd_pkts
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
qid
, 
πe_mempoﬁ
 *
mp
)

1096 
uöt32_t
 
Êags
;

1097 
Àn
 = 0;

1099 i‡(
	`u∆ikñy
(
	`πe_©omic32_ªad
(&
öfo
->
q
[
qid
].
Êags
) &

1100 
CLEAR_FAST_ALLOC_FLAG
) )

1101 
	`pktgí_£tup_∑ckës
(
öfo
, 
mp
, 
qid
);

1103 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

1105 i‡(
	`u∆ikñy
(
Êags
 & 
SEND_RANDOM_PKTS
) )

1106 
öfo
->
£nd_bur°
 = 
_£nd_bur°_øndom
;

1107 i‡(
	`u∆ikñy
(
Êags
 & 
SEND_LATENCY_PKTS
) )

1108 
öfo
->
£nd_bur°
 = 
_£nd_bur°_œãncy
;

1110 
öfo
->
£nd_bur°
 = 
_£nd_bur°_Á°
;

1112 i‡(
	`likñy
(
Êags
 & 
SEND_FOREVER
) ) {

1113 
Àn
 = 
	`wr_pktmbuf_Æloc_bulk_n‹e£t
(
mp
,

1114 
öfo
->
q
[
qid
].
tx_mbufs
.
m_èbÀ
,

1115 
öfo
->
tx_bur°
);

1116 i‡(
	`likñy
(
Àn
) ) {

1117 
öfo
->
q
[
qid
].
tx_mbufs
.
Àn
 =Üen;

1118 
öfo
->
q
[
qid
].
tx_˙t
 +
Àn
;

1119 
öfo
->
	`£nd_bur°
(öfo, 
qid
);

1122 
öt64_t
 
txC¡
;

1124 
txC¡
 = 
	`pkt_©omic64_tx_cou¡
(&
öfo
->
cuºít_tx_cou¡
,

1125 
öfo
->
tx_bur°
);

1126 i‡(
	`likñy
(
txC¡
) ) {

1127 
Àn
 = 
	`wr_pktmbuf_Æloc_bulk_n‹e£t
(
mp
,

1128 
öfo
->
q
[
qid
].
tx_mbufs
.
m_èbÀ
,

1129 
txC¡
);

1130 i‡(
	`likñy
(
Àn
) ) {

1131 
öfo
->
q
[
qid
].
tx_mbufs
.
Àn
 =Üen;

1132 
öfo
->
	`£nd_bur°
(öfo, 
qid
);

1135 
	`pktgí_˛r_p‹t_Êags
(
öfo
,

1136 (
SENDING_PACKETS
 | 
SEND_FOREVER
));

1139 
	}
}

1153 
__ölöe__
 

1154 
	$pktgí_maö_å™smô
(
p‹t_öfo_t
 *
öfo
, 
uöt16_t
 
qid
)

1156 
πe_mempoﬁ
 *
mp
 = 
NULL
;

1157 
uöt32_t
 
Êags
;

1159 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

1164 i‡(
	`u∆ikñy
((
Êags
 & 
SEND_ARP_PING_REQUESTS
)) )

1165 
	`pktgí_£nd_•ecül
(
öfo
, 
Êags
);

1168 i‡(
	`likñy
(
Êags
 & 
SENDING_PACKETS
) ) {

1169 
mp
 = 
öfo
->
q
[
qid
].
tx_mp
;

1171 i‡(
	`u∆ikñy
(
Êags
 &

1172 (
SEND_RANGE_PKTS
 | 
SEND_PCAP_PKTS
 |

1173 
SEND_SEQ_PKTS
)) ) {

1174 i‡(
Êags
 & 
SEND_RANGE_PKTS
)

1175 
mp
 = 
öfo
->
q
[
qid
].
ønge_mp
;

1176 i‡(
Êags
 & 
SEND_SEQ_PKTS
)

1177 
mp
 = 
öfo
->
q
[
qid
].
£q_mp
;

1178 i‡(
Êags
 & 
SEND_PCAP_PKTS
)

1179 
mp
 = 
öfo
->
q
[
qid
].
pˇp_mp
;

1182 
	`pktgí_£nd_pkts
(
öfo
, 
qid
, 
mp
);

1185 
Êags
 = 
	`πe_©omic32_ªad
(&
öfo
->
q
[
qid
].flags);

1186 i‡(
	`u∆ikñy
(
Êags
 & 
DO_TX_FLUSH
) )

1187 
	`pktgí_tx_Êush
(
öfo
, 
qid
);

1188 
	}
}

1203 
__ölöe__
 

1204 
	$pktgí_maö_ª˚ive
(
p‹t_öfo_t
 *
öfo
,

1205 
uöt8_t
 
lid
,

1206 
πe_mbuf
 *
pkts_bur°
[])

1208 
uöt8_t
 
pid
;

1209 
uöt16_t
 
qid
, 
nb_rx
;

1210 
ˇ±uª_t
 *
ˇ±uª
;

1212 
pid
 = 
öfo
->pid;

1213 
qid
 = 
	`wr_gë_rxque
(
pktgí
.
l2p
, 
lid
, 
pid
);

1218 i‡–(
nb_rx
 = 
	`πe_ëh_rx_bur°
(
pid
, 
qid
, 
pkts_bur°
,

1219 
öfo
->
tx_bur°
)) == 0)

1222 
öfo
->
q
[
qid
].
rx_˙t
 +
nb_rx
;

1225 
	`pktgí_∑ckë_˛assify_bulk
(
pkts_bur°
, 
nb_rx
, 
pid
);

1227 i‡(
	`u∆ikñy
(
öfo
->
dump_cou¡
 > 0) )

1228 
	`pktgí_∑ckë_dump_bulk
(
pkts_bur°
, 
nb_rx
, 
pid
);

1230 i‡(
	`u∆ikñy
(
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
Ë& 
CAPTURE_PKTS
) ) {

1231 
ˇ±uª
 = &
pktgí
.ˇ±uª[pktgí.
c‹e_öfo
[
lid
].
s
.
sockë_id
];

1232 i‡(
	`u∆ikñy
((
ˇ±uª
->
p‹t
 =
pid
) &&

1233 (
ˇ±uª
->
lc‹e
 =
lid
)) )

1234 
	`pktgí_∑ckë_ˇ±uª_bulk
(
pkts_bur°
, 
nb_rx
, 
ˇ±uª
);

1237 
	`πe_pktmbuf_‰ì_bulk
(
pkts_bur°
, 
nb_rx
);

1238 
	}
}

1254 
	$pktgí_maö_rxtx_lo›
(
uöt8_t
 
lid
)

1256 
πe_mbuf
 *
pkts_bur°
[
DEFAULT_PKT_BURST
];

1257 
p‹t_öfo_t
 *
öfos
[
RTE_MAX_ETHPORTS
];

1258 
uöt8_t
 
qids
[
RTE_MAX_ETHPORTS
];

1259 
uöt8_t
 
idx
, 
pid
, 
tx˙t
, 
rx˙t
;

1260 
uöt64_t
 
cuº_tsc
;

1261 
uöt64_t
 
√xt_ru¬ög
;

1262 
uöt64_t
 
tx_√xt_cy˛e
;

1263 
msg
[256];

1265 
tx˙t
 = 
	`wr_gë_lc‹e_tx˙t
(
pktgí
.
l2p
, 
lid
);

1266 
rx˙t
 = 
	`wr_gë_lc‹e_rx˙t
(
pktgí
.
l2p
, 
lid
);

1267 
	`¢¥ötf
(
msg
,

1268 (
msg
),

1270 
lid
,

1271 
rx˙t
,

1272 
tx˙t
);

1274 
idx
 = 0; idx < 
	`wr_gë_lc‹e_tx˙t
(
pktgí
.
l2p
, 
lid
); idx++) {

1275 
pid
 = 
	`wr_gë_rx_pid
(
pktgí
.
l2p
, 
lid
, 
idx
);

1276 i‡((
öfos
[
idx
] = 
	`wr_gë_p‹t_¥iv©e
(
pktgí
.
l2p
, 
pid
)Ë=
NULL
)

1278 
qids
[
idx
] = 
	`wr_gë_txque
(
pktgí
.
l2p
, 
lid
, 
pid
);

1279 
	`°∫ˇtf
(
msg
, " %d/%d", 
öfos
[
idx
]->
pid
, 
qids
[idx]);

1280 
öfos
[
idx
]->
£nd_bur°
 = 
_£nd_bur°_Á°
;

1282 
	`pktgí_log_öfo
("%s", 
msg
);

1284 
tx_√xt_cy˛e
 = 
	`πe_rdtsc
(Ë+ (
öfos
[0]->
tx_cy˛es
 * 2);

1285 
√xt_ru¬ög
 = 0;

1287 
	`wr_°¨t_lc‹e
(
pktgí
.
l2p
, 
lid
);

1289 
idx
 = 0; idx < 
rx˙t
; idx++)

1293 
	`pktgí_maö_ª˚ive
(
öfos
[
idx
], 
lid
, 
pkts_bur°
);

1295 
cuº_tsc
 = 
	`πe_rdtsc
();

1298 i‡(
	`u∆ikñy
(
cuº_tsc
 >
tx_√xt_cy˛e
) ) {

1299 
tx_√xt_cy˛e
 = 
cuº_tsc
 + 
öfos
[0]->
tx_cy˛es
;

1301 
idx
 = 0; idx < 
tx˙t
; idx++)

1305 
	`pktgí_maö_å™smô
(
öfos
[
idx
], 
qids
[idx]);

1309 i‡(
cuº_tsc
 >
√xt_ru¬ög
) {

1310 i‡(!
	`wr_lc‹e_is_ru¬ög
(
pktgí
.
l2p
, 
lid
) )

1312 
√xt_ru¬ög
 = 
cuº_tsc
 + 
pktgí
.
hz
;

1316 
	`pktgí_log_debug
("Exô %d", 
lid
);

1318 
	`pktgí_exô_˛ónup
(
lid
);

1319 
	}
}

1334 
	$pktgí_maö_tx_lo›
(
uöt8_t
 
lid
)

1336 
uöt8_t
 
idx
, 
tx˙t
, 
pid
;

1337 
p‹t_öfo_t
 *
öfos
[
RTE_MAX_ETHPORTS
];

1338 
uöt8_t
 
qids
[
RTE_MAX_ETHPORTS
];

1339 
uöt64_t
 
cuº_tsc
;

1340 
uöt64_t
 
tx_√xt_cy˛e
;

1341 
uöt64_t
 
√xt_ru¬ög
;

1342 
msg
[256];

1344 
tx˙t
 = 
	`wr_gë_lc‹e_tx˙t
(
pktgí
.
l2p
, 
lid
);

1345 
	`¢¥ötf
(
msg
, (msg),

1347 
lid
, 
tx˙t
);

1349 
idx
 = 0; idx < 
tx˙t
; idx++) {

1350 
pid
 = 
	`wr_gë_tx_pid
(
pktgí
.
l2p
, 
lid
, 
idx
);

1351 i‡((
öfos
[
idx
] = 
	`wr_gë_p‹t_¥iv©e
(
pktgí
.
l2p
, 
pid
)Ë=
NULL
)

1353 
qids
[
idx
] = 
	`wr_gë_txque
(
pktgí
.
l2p
, 
lid
, 
pid
);

1354 
	`°∫ˇtf
(
msg
, " %d/%d", 
öfos
[
idx
]->
pid
, 
qids
[idx]);

1355 
öfos
[
idx
]->
£nd_bur°
 = 
_£nd_bur°_Á°
;

1357 
	`pktgí_log_öfo
("%s", 
msg
);

1359 
tx_√xt_cy˛e
 = 
	`πe_rdtsc
(Ë+ (
öfos
[0]->
tx_cy˛es
 * 2);

1360 
√xt_ru¬ög
 = 0;

1362 
	`wr_°¨t_lc‹e
(
pktgí
.
l2p
, 
lid
);

1364 
cuº_tsc
 = 
	`πe_rdtsc
();

1367 i‡(
	`likñy
(
cuº_tsc
 >
tx_√xt_cy˛e
) ) {

1368 
tx_√xt_cy˛e
 = 
cuº_tsc
 + 
öfos
[0]->
tx_cy˛es
;

1370 
idx
 = 0; idx < 
tx˙t
; idx++)

1372 
	`pktgí_maö_å™smô
(
öfos
[
idx
], 
qids
[idx]);

1376 i‡(
cuº_tsc
 >
√xt_ru¬ög
) {

1377 i‡(!
	`wr_lc‹e_is_ru¬ög
(
pktgí
.
l2p
, 
lid
))

1379 
√xt_ru¬ög
 = 
cuº_tsc
 + 
pktgí
.
hz
;

1383 
	`pktgí_log_debug
("Exô %d", 
lid
);

1385 
	`pktgí_exô_˛ónup
(
lid
);

1386 
	}
}

1402 
	$pktgí_maö_rx_lo›
(
uöt8_t
 
lid
)

1404 
πe_mbuf
 *
pkts_bur°
[
DEFAULT_PKT_BURST
];

1405 
uöt8_t
 
pid
, 
idx
, 
rx˙t
;

1406 
p‹t_öfo_t
 *
öfos
[
RTE_MAX_ETHPORTS
];

1407 
uöt64_t
 
cuº_tsc
, 
√xt_ru¬ög
;

1408 
msg
[256];

1410 
rx˙t
 = 
	`wr_gë_lc‹e_rx˙t
(
pktgí
.
l2p
, 
lid
);

1411 
	`¢¥ötf
(
msg
, (msg),

1413 
lid
, 
rx˙t
);

1415 
	`mem£t
(
öfos
, '\0', (infos));

1416 
idx
 = 0; idx < 
rx˙t
; idx++) {

1417 
pid
 = 
	`wr_gë_rx_pid
(
pktgí
.
l2p
, 
lid
, 
idx
);

1418 i‡–(
öfos
[
idx
] =

1419 
	`wr_gë_p‹t_¥iv©e
(
pktgí
.
l2p
, 
pid
)Ë=
NULL
)

1421 
	`°∫ˇtf
(
msg
, " %d/%d", 
öfos
[
idx
]->
pid
,

1422 
	`wr_gë_rxque
(
pktgí
.
l2p
, 
lid
, 
pid
));

1424 
öfos
[
idx
]->
£nd_bur°
 = 
_£nd_bur°_Á°
;

1426 
	`pktgí_log_öfo
("%s", 
msg
);

1428 
√xt_ru¬ög
 = 0;

1430 
	`wr_°¨t_lc‹e
(
pktgí
.
l2p
, 
lid
);

1432 
idx
 = 0; idx < 
rx˙t
; idx++)

1434 
	`pktgí_maö_ª˚ive
(
öfos
[
idx
], 
lid
, 
pkts_bur°
);

1435 
cuº_tsc
 = 
	`πe_rdtsc
();

1438 i‡(
cuº_tsc
 >
√xt_ru¬ög
) {

1439 i‡(!
	`wr_lc‹e_is_ru¬ög
(
pktgí
.
l2p
, 
lid
))

1441 
√xt_ru¬ög
 = 
cuº_tsc
 + 
pktgí
.
hz
;

1445 
	`pktgí_log_debug
("Exô %d", 
lid
);

1447 
	`pktgí_exô_˛ónup
(
lid
);

1448 
	}
}

1463 
	$pktgí_œunch_⁄e_lc‹e
(*
¨g
 
__πe_unu£d
)

1465 
uöt8_t
 
lid
 = 
	`πe_lc‹e_id
();

1467 i‡(
	`pktgí_has_w‹k
() )

1470 
	`πe_dñay_ms
((
lid
 + 1) * 21);

1472 
	`wr_gë_ty≥
(
pktgí
.
l2p
, 
lid
)) {

1473 
RX_TYPE
: 
	`pktgí_maö_rx_lo›
(
lid
); ;

1474 
TX_TYPE
: 
	`pktgí_maö_tx_lo›
(
lid
); ;

1475 (
RX_TYPE
 | 
TX_TYPE
): 
	`pktgí_maö_rxtx_lo›
(
lid
); ;

1478 
	}
}

1493 
	$pktgí_∑ge_c⁄fig
()

1495 
	`di•œy_t›löe
("<Config Page>");

1497 
	`wr_s¸n_˚¡î
(20,

1498 
pktgí
.
s¸n
->
ncﬁs
,

1500 
	`di•œy_dashlöe
(22);

1501 
	}
}

1516 
	$pktgí_∑ge_di•œy
(
πe_timî
 *
tim
 
__πe_unu£d
, *
¨g
 __rte_unused)

1518 
cou¡î
 = 0;

1521 i‡(
	`wr_s¸n_is_∑u£d
() )

1524 
	`wr_s¸n_ßve
();

1526 
	`pktgí_di•œy_£t_cﬁ‹
("top.spinner");

1527 
	`wr_s¸n_¥ötf
(1, 1, "%c", "-\\|/"[(
cou¡î
++ & 3)]);

1528 
	`pktgí_di•œy_£t_cﬁ‹
(
NULL
);

1530 i‡(
pktgí
.
Êags
 & 
CPU_PAGE_FLAG
)

1531 
	`pktgí_∑ge_˝u
();

1532 i‡(
pktgí
.
Êags
 & 
PCAP_PAGE_FLAG
)

1533 
	`pktgí_∑ge_pˇp
(
pktgí
.
p‹tNum
);

1534 i‡(
pktgí
.
Êags
 & 
RANGE_PAGE_FLAG
)

1535 
	`pktgí_∑ge_ønge
();

1536 i‡(
pktgí
.
Êags
 & 
CONFIG_PAGE_FLAG
)

1537 
	`pktgí_∑ge_c⁄fig
();

1538 i‡(
pktgí
.
Êags
 & 
SEQUENCE_PAGE_FLAG
)

1539 
	`pktgí_∑ge_£q
(
pktgí
.
p‹tNum
);

1540 i‡(
pktgí
.
Êags
 & 
RND_BITFIELD_PAGE_FLAG
)

1541 
	`pktgí_∑ge_øndom_bôfõlds
(
pktgí
.
Êags
 & 
PRINT_LABELS_FLAG
,

1542 
pktgí
.
p‹tNum
,

1543 
pktgí
.
öfo
[pktgí.
p‹tNum
].
∫d_bôfõlds
);

1546 i‡(
pktgí
.
Êags
 & 
LOG_PAGE_FLAG
)

1547 
	`pktgí_∑ge_log
(
pktgí
.
Êags
 & 
PRINT_LABELS_FLAG
);

1549 
	`pktgí_∑ge_°©s
();

1551 
	`wr_s¸n_ª°‹e
();

1553 
	`pktgí_¥öt_∑ckë_dump
();

1555 i‡(
pktgí
.
Êags
 & 
PRINT_LABELS_FLAG
)

1556 
pktgí
.
Êags
 &~
PRINT_LABELS_FLAG
;

1557 
	}
}

1559 
πe_timî
 
	gtimî0
;

1560 
πe_timî
 
	gtimî1
;

1575 
	$πe_timî_£tup
()

1577 
lc‹e_id
 = 
	`πe_gë_ma°î_lc‹e
();

1580 
	`πe_timî_subsy°em_öô
();

1583 
	`πe_timî_öô
(&
timî0
);

1584 
	`πe_timî_öô
(&
timî1
);

1587 
	`πe_timî_ª£t
(&
timî0
,

1588 (
pktgí
.
hz
 * 2),

1589 
PERIODICAL
,

1590 
lc‹e_id
,

1591 
pktgí_∑ge_di•œy
,

1592 
NULL
);

1595 
	`πe_timî_ª£t
(&
timî1
,

1596 
pktgí
.
hz
,

1597 
PERIODICAL
,

1598 
lc‹e_id
,

1599 
pktgí_¥o˚ss_°©s
,

1600 
NULL
);

1601 
	}
}

	@app/pktgen.h

69 #i‚de‡
_PKTGEN_H_


70 
	#_PKTGEN_H_


	)

72 
	~<°dio.h
>

73 
	~<°dlib.h
>

74 
	~<°döt.h
>

75 
	~<öây≥s.h
>

76 
	~<sys/ty≥s.h
>

77 
	~<uni°d.h
>

78 
	~<°rög.h
>

79 
	~<sys/queue.h
>

80 
	~<√töë/ö.h
>

81 
	~<√t/if.h
>

82 
	~<f˙é.h
>

83 
	~<£tjmp.h
>

84 
	~<°d¨g.h
>

85 
	~<˘y≥.h
>

86 
	~<î∫o.h
>

87 
	~<gë›t.h
>

88 
	~<ãrmios.h
>

89 
	~<sys/io˘l.h
>

90 
	~<libgí.h
>

91 
	~<löux/if_tun.h
>

92 
	~<¨∑/öë.h
>

93 
	~<√tdb.h
>

94 
	~<pﬁl.h
>

95 
	~<as£π.h
>

96 
	~<time.h
>

98 
	~<πe_vîsi⁄.h
>

99 
	~<πe_c⁄fig.h
>

101 
	~<πe_î∫o.h
>

102 
	~<πe_log.h
>

103 
	~<πe_èûq.h
>

104 
	~<πe_comm⁄.h
>

105 
	~<πe_mem‹y.h
>

106 
	~<πe_mem˝y.h
>

107 
	~<πe_memz⁄e.h
>

108 
	~<πe_mÆloc.h
>

109 
	~<πe_ól.h
>

110 
	~<πe_≥r_lc‹e.h
>

111 
	~<πe_œunch.h
>

112 
	~<πe_©omic.h
>

113 
	~<πe_cy˛es.h
>

114 
	~<πe_¥e„tch.h
>

115 
	~<πe_lc‹e.h
>

116 
	~<πe_≥r_lc‹e.h
>

117 
	~<πe_bønch_¥edi˘i⁄.h
>

118 
	~<πe_pci.h
>

119 
	~<πe_øndom.h
>

120 
	~<πe_timî.h
>

121 
	~<πe_ëhî.h
>

122 
	~<πe_ëhdev.h
>

123 
	~<πe_rög.h
>

124 
	~<πe_mempoﬁ.h
>

125 
	~<πe_mbuf.h
>

126 
	~<πe_ù.h
>

128 
	~<cmdlöe_rdlöe.h
>

129 
	~<cmdlöe_∑r£.h
>

130 
	~<cmdlöe_sockë.h
>

131 
	~<cmdlöe_∑r£_°rög.h
>

132 
	~<cmdlöe_∑r£_num.h
>

133 
	~<cmdlöe_∑r£_ùaddr.h
>

134 
	~<cmdlöe_∑r£_ëhîaddr.h
>

135 
	~<cmdlöe_∑r£_p‹éi°.h
>

136 
	~<cmdlöe.h
>

138 
	~<wr_s¸n.h
>

140 
	~<wr_c›yright_öfo.h
>

141 
	~<wr_l2p.h
>

142 
	~<wr_p‹t_c⁄fig.h
>

143 
	~<wr_c‹e_öfo.h
>

145 
	~<wr_pˇp.h
>

146 
	~<wr_öë.h
>

147 
	~<wr_cksum.h
>

149 
	~<wr_cy˛es.h
>

150 
	~<wr_mbuf.h
>

151 
	~<wr_c‹em≠.h
>

152 
	~<wr_ls˝u.h
>

153 
	~<wr_utûs.h
>

155 
	~"pktgí-p‹t-cfg.h
"

156 
	~"pktgí-ˇ±uª.h
"

157 
	~"pktgí-log.h
"

159 
	~"pktgí-£q.h
"

161 
	#PKTGEN_VERSION
 "2.9.17"

	)

162 
	#PKTGEN_APP_NAME
 "Pktgí"

	)

163 
	#PKTGEN_CREATED_BY
 "Keôh Wûes"

	)

165 
	#MAX_MATRIX_ENTRIES
 128

	)

166 
	#MAX_STRING
 256

	)

167 
	#Mûli⁄
 (
uöt64_t
)(1000ULL * 1000ULL)

	)

168 
	#Mega
 (
uöt64_t
)(1024ULL * 1024ULL)

	)

170 
	#iBôsTŸÆ
(
_x
) \

171 (((
_x
.
ùackës
 * (
INTER_FRAME_GAP
 + 
PKT_PREAMBLE_SIZE
)Ë+ _x.
ibyãs
Ë<< 3)

	)

172 
	#oBôsTŸÆ
(
_x
) \

173 (((
_x
.
›ackës
 * (
INTER_FRAME_GAP
 + 
PKT_PREAMBLE_SIZE
)Ë+ _x.
obyãs
Ë<< 3)

	)

175 
	#_do
(
_exp
Ëdÿ{ _exp; } (0))

	)

177 
	#f‹Æl_p‹ts
(
_a˘i⁄
) \

179 
uöt32_t
 
pid
; \

180 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts
;Öid++) { \

181 
p‹t_öfo_t
 *
öfo
; \

182 
öfo
 = &
pktgí
.öfo[
pid
]; \

183 i‡(
öfo
->
£q_pkt
 =
NULL
) \

185 
_a˘i⁄
; \

187 } (0))

	)

189 
	#f‹óch_p‹t
(
_p‹éi°
, 
_a˘i⁄
) \

191 
uöt32_t
 *
_∂
 = (uöt32_à*)&
_p‹éi°
; \

192 
uöt32_t
 
pid
, 
idx
, 
bô
; \

193 
pid
 = 0;Öid < 
pktgí
.
nb_p‹ts
;Öid++) { \

194 
p‹t_öfo_t
 *
öfo
; \

195 
idx
 = (
pid
 / ((
uöt32_t
) * 8)); \

196 
bô
 = (
pid
 - (
idx
 * ((
uöt32_t
) * 8))); \

197 i‡–(
_∂
[
idx
] & (1 << 
bô
)) == 0) \

199 
öfo
 = &
pktgí
.öfo[
pid
]; \

200 i‡(
öfo
->
£q_pkt
 =
NULL
) \

202 
_a˘i⁄
; \

204 } (0))

	)

217 
ölöe
 
__©åibuã__
((
Æways_ölöe
))

218 
	$πe_pktmbuf_‰ì_bulk
(
πe_mbuf
 *
m_li°
[], 
öt16_t
 
≈kts
)

220 
≈kts
--)

221 
	`πe_pktmbuf_‰ì
(*
m_li°
++);

222 
	}
}

224 íum { 
	mPACKET_CONSUMED
 = 0, 
	mUNKNOWN_PACKET
 = 0xEEEE,

225 
	mDROP_PACKET
 = 0xFFFE, 
	mFREE_PACKET
 = 0xFFFF } 
	tpktTy≥_e
;

228 
	mMAX_SCRN_ROWS
 = 44,

229 
	mMAX_SCRN_COLS
 = 132,

231 
	mCOLUMN_WIDTH_0
 = 18,

232 
	mCOLUMN_WIDTH_1
 = 20,

233 
	mCOLUMN_WIDTH_3
 = 24,

236 
	mPORT_STATE_ROWS
 = 1,

237 
	mLINK_STATE_ROWS
 = 4,

238 
	mPKT_SIZE_ROWS
 = 9,

239 
	mPKT_TOTALS_ROWS
 = 7,

240 
	mIP_ADDR_ROWS
 = 10,

242 
	mPORT_STATE_ROW
 = 2,

243 
	mLINK_STATE_ROW
 = (
PORT_STATE_ROW
 + 
PORT_STATE_ROWS
),

244 
	mPKT_SIZE_ROW
 = (
LINK_STATE_ROW
 + 
LINK_STATE_ROWS
),

245 
	mPKT_TOTALS_ROW
 = (
PKT_SIZE_ROW
 + 
PKT_SIZE_ROWS
),

246 
	mIP_ADDR_ROW
 = (
PKT_TOTALS_ROW
 + 
PKT_TOTALS_ROWS
),

248 
	mDEFAULT_NETMASK
 = 0xFFFFFF00,

249 
	mDEFAULT_IP_ADDR
 = (192 << 24) | (168 << 16),

250 
	mDEFAULT_TX_COUNT
 = 0,

251 
	mDEFAULT_TX_RATE
 = 100,

252 
	mDEFAULT_PRIME_COUNT
 = 1,

253 
	mDEFAULT_SRC_PORT
 = 1234,

254 
	mDEFAULT_DST_PORT
 = 5678,

255 
	mDEFAULT_PKT_NUMBER
 = 0x012345678,

256 
	mDEFAULT_ACK_NUMBER
 = 0x012345690,

257 
	mDEFAULT_WND_SIZE
 = 8192,

258 
	mMIN_VLAN_ID
 = 1,

259 
	mMAX_VLAN_ID
 = 4095,

260 
	mDEFAULT_VLAN_ID
 = 
MIN_VLAN_ID
,

261 
	mMAX_ETHER_TYPE_SIZE
 = 0x600,

262 
	mOVERHEAD_FUDGE_VALUE
 = 50,

264 
	mDEFAULT_PORTS_PER_PAGE
 = 4,

265 
	mVLAN_TAG_SIZE
 = 4,

266 
	mMAX_PRIME_COUNT
 = 4,

268 
	mNUM_SEQ_PKTS
 = 16,

269 
	mNUM_EXTRA_TX_PKTS
 = 8,

271 
	mFIRST_SEQ_PKT
 = 0,

272 
	mSINGLE_PKT
 = (
FIRST_SEQ_PKT
 + 
NUM_SEQ_PKTS
),

273 
	mPING_PKT
 = (
SINGLE_PKT
 + 1),

274 
	mRANGE_PKT
 = (
PING_PKT
 + 1),

275 
	mEXTRA_TX_PKT
 = (
RANGE_PKT
 + 1),

276 
	mNUM_TOTAL_PKTS
 = (
EXTRA_TX_PKT
 + 
NUM_EXTRA_TX_PKTS
),

278 
	mINTER_FRAME_GAP
 = 12,

279 
	mPKT_PREAMBLE_SIZE
 = 8,

280 
	mFCS_SIZE
 = 4,

281 
	mMIN_PKT_SIZE
 = (
ETHER_MIN_LEN
 - 
FCS_SIZE
),

282 
	mMAX_PKT_SIZE
 = (
ETHER_MAX_LEN
 - 
FCS_SIZE
),

284 
	mMAX_RX_QUEUES
 = 16,

285 
	mMAX_TX_QUEUES
 = 16,

287 
	mPCAP_PAGE_SIZE
 = 25,

289 
	mSOCKET0
 = 0

292 
πe_mbuf
 
	tπe_mbuf_t
;

295 
ëhî_addr
 
	maddr
;

296 
uöt64_t
 
	mu64
;

297 } 
	tëhaddr_t
;

299 
	#MAX_PORT_DESC_SIZE
 132

	)

302 
	spktgí_s
 {

303 
cmdlöe
 *
	m˛
;

304 *
	mcmd_fûíame
;

305 *
	mL
;

306 *
	mho°«me
;

307 
wr_s¸n_t
 *
	ms¸n
;

309 
öt32_t
 
	msockë_p‹t
;

310 
uöt32_t
 
	mblökli°
;

311 
uöt32_t
 
	mÊags
;

312 
uöt16_t
 
	midít
;

313 
uöt16_t
 
	mœ°_row
;

314 
uöt16_t
 
	mnb_p‹ts
;

315 
uöt8_t
 
	m°¨tög_p‹t
;

316 
uöt8_t
 
	mídög_p‹t
;

317 
uöt8_t
 
	mnb_p‹ts_≥r_∑ge
;

319 
uöt16_t
 
	mnb_rxd
;

320 
uöt16_t
 
	mnb_txd
;

321 
uöt16_t
 
	mp‹tNum
;

322 
uöt16_t
 
	mp‹t_˙t
;

323 
uöt64_t
 
	mhz
;

325 (*
	mˇŒout
)(*
	mˇŒout_¨g
);

326 *
	mˇŒout_¨g
;

328 
πe_pci_addr
 
	mbœckli°
[
RTE_MAX_ETHPORTS
];

329 
πe_pci_addr
 
	mp‹éi°
[
RTE_MAX_ETHPORTS
];

330 
uöt8_t
 *
	mp‹tdesc
[
RTE_MAX_ETHPORTS
];

331 
uöt32_t
 
	mp‹tdesc_˙t
;

332 
uöt32_t
 
	mbœckli°_˙t
;

335 
l2p_t
 *
	ml2p
;

337 
p‹t_öfo_t
 
	möfo
[
RTE_MAX_ETHPORTS
];

338 
lc_öfo_t
 
	mc‹e_öfo
[
RTE_MAX_LCORE
];

339 
uöt16_t
 
	mc‹e_˙t
;

340 
uöt16_t
 
	m∑d0
;

341 
ls˝u_t
 *
	mls˝u
;

342 *
	mu«me
;

343 
ëh_°©s_t
 
	mcumm_øã_tŸÆs
;

344 
uöt64_t
 
	mmax_tŸÆ_ùackës
;

345 
uöt64_t
 
	mmax_tŸÆ_›ackës
;

347 
±hªad_t
 
	mthªad
;

349 
uöt64_t
 
	mcou¡î
;

350 
uöt64_t
 
	mmem_u£d
;

351 
uöt64_t
 
	mtŸÆ_mem_u£d
;

352 
öt32_t
 
	m¨gc
;

353 *
	m¨gv
[64];

355 
ˇ±uª_t
 
	mˇ±uª
[
RTE_MAX_NUMA_NODES
];

356 } 
	tpktgí_t
;

359 
	mCLEAR_FAST_ALLOC_FLAG
 = 0x00000001,

360 
	mDO_TX_FLUSH
 = 0x00000002

364 
	mPRINT_LABELS_FLAG
 = (1 << 0),

365 
	mMAC_FROM_ARP_FLAG
 = (1 << 1),

366 
	mPROMISCUOUS_ON_FLAG
 = (1 << 2),

367 
	mNUMA_SUPPORT_FLAG
 = (1 << 3),

368 
	mIS_SERVER_FLAG
 = (1 << 4),

369 
	mENABLE_GUI_FLAG
 = (1 << 5),

370 
	mLUA_SHELL_FLAG
 = (1 << 6),

371 
	mTX_DEBUG_FLAG
 = (1 << 7),

372 
	mNŸ_USED
 = (1 << 8),

373 
	mFAKE_PORTS_FLAG
 = (1 << 9),

374 
	mBLINK_PORTS_FLAG
 = (1 << 10),

375 
	mENABLE_THEME_FLAG
 = (1 << 11),

377 
	mCONFIG_PAGE_FLAG
 = (1 << 16),

378 
	mSEQUENCE_PAGE_FLAG
 = (1 << 17),

379 
	mRANGE_PAGE_FLAG
 = (1 << 18),

380 
	mPCAP_PAGE_FLAG
 = (1 << 19),

381 
	mCPU_PAGE_FLAG
 = (1 << 20),

382 
	mRND_BITFIELD_PAGE_FLAG
 = (1 << 21),

383 
	mLOG_PAGE_FLAG
 = (1 << 22)

386 
	#PAGE_MASK_BITS
 (
CONFIG_PAGE_FLAG
 | 
SEQUENCE_PAGE_FLAG
 | \

387 
RANGE_PAGE_FLAG
 | \

388 
PCAP_PAGE_FLAG
 | 
CPU_PAGE_FLAG
 | \

389 
RND_BITFIELD_PAGE_FLAG
 | \

390 
LOG_PAGE_FLAG
)

	)

392 
	scmdlöe_ëhîaddr
 {

393 
uöt8_t
 
	mmac
[6];

395 
cmdlöe_ëhîaddr
 
	tcmdlöe_ëhîaddr_t
;

397 
pktgí_t
 
pktgí
;

399 
pktgí_∑ge_di•œy
(
πe_timî
 *
tim
, *
¨g
);

401 
pktgí_∑ckë_˘‹
(
p‹t_öfo_t
 *
öfo
, 
öt32_t
 
£q_idx
,

402 
öt32_t
 
ty≥
);

403 
pktgí_∑ckë_øã
(
p‹t_öfo_t
 *
öfo
);

405 
pktgí_£nd_mbuf
(
πe_mbuf
 *
m
, 
uöt8_t
 
pid
, 
uöt16_t
 
qid
);

407 
pkt_£q_t
 *
pktgí_föd_m©chög_ù§c
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
addr
);

408 
pkt_£q_t
 *
pktgí_föd_m©chög_ùd°
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
addr
);

410 
pktgí_œunch_⁄e_lc‹e
(*
¨g
);

412 
πe_timî_£tup
();

414 
__ölöe__
 

415 
	$pktgí_£t_p‹t_Êags
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
Êags
) {

416 
uöt32_t
 
vÆ
;

419 
vÆ
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

420 
	`πe_©omic32_cmp£t
((vﬁ©ûê
uöt32_t
 *)&
öfo
->
p‹t_Êags
.
˙t
,

421 
vÆ
, (vÆ | 
Êags
)) == 0);

422 
	}
}

424 
__ölöe__
 

425 
	$pktgí_˛r_p‹t_Êags
(
p‹t_öfo_t
 *
öfo
, 
uöt32_t
 
Êags
) {

426 
uöt32_t
 
vÆ
;

429 
vÆ
 = 
	`πe_©omic32_ªad
(&
öfo
->
p‹t_Êags
);

430 
	`πe_©omic32_cmp£t
((vﬁ©ûê
uöt32_t
 *)&
öfo
->
p‹t_Êags
.
˙t
,

431 
vÆ
, (vÆ & ~
Êags
)) == 0);

432 
	}
}

434 
__ölöe__
 

435 
	$pktgí_£t_q_Êags
(
p‹t_öfo_t
 *
öfo
, 
uöt8_t
 
q
, 
uöt32_t
 
Êags
) {

436 
uöt32_t
 
vÆ
;

439 
vÆ
 = 
	`πe_©omic32_ªad
(&
öfo
->
q
[q].
Êags
);

440 
	`πe_©omic32_cmp£t
((vﬁ©ûê
uöt32_t
 *)&
öfo
->
q
[q].
Êags
.
˙t
,

441 
vÆ
, (vÆ | 
Êags
)) == 0);

442 
	}
}

444 
__ölöe__
 

445 
	$pktgí_˛r_q_Êags
(
p‹t_öfo_t
 *
öfo
, 
uöt8_t
 
q
, 
uöt32_t
 
Êags
) {

446 
uöt32_t
 
vÆ
;

449 
vÆ
 = 
	`πe_©omic32_ªad
(&
öfo
->
q
[q].
Êags
);

450 
	`πe_©omic32_cmp£t
((vﬁ©ûê
uöt32_t
 *)&
öfo
->
q
[q].
Êags
.
˙t
,

451 
vÆ
, (vÆ & ~
Êags
)) == 0);

452 
	}
}

459 
ölöe
 const *

460 
	$pktgí_vîsi⁄
() {

461 
pkt_vîsi⁄
[128];

463 
	`¢¥ötf
(
pkt_vîsi⁄
, (pkt_version),

464 "Vî: %†(%s)", 
PKTGEN_VERSION
, 
	`πe_vîsi⁄
());

465  
pkt_vîsi⁄
;

466 
	}
}

468 
__ölöe__
 *

469 
	$°rdupf
(*
°r
, c⁄° *
√w
) {

470 i‡(
°r
)

471 
	`‰ì
(
°r
);

472  (
√w
 =
NULL
Ë? NULL : 
	`°rdup
(new);

473 
	}
}

488 
__ölöe__
 

489 
	$do_comm™d
(c⁄° *
cmd
, (*
di•œy
)(*, )) {

490 
FILE
 *
f
;

491 
i
;

492 *
löe
 = 
NULL
;

493 
size_t
 
löe_size
 = 0;

495 
f
 = 
	`p›í
(
cmd
, "r");

496 i‡(
f
 =
NULL
) {

497 
	`pktgí_log_îr‹
("U«bÀÅÿru¿'%s' comm™d", 
cmd
);

501 
i
 = 0;

502 
	`gëlöe
(&
löe
, &
löe_size
, 
f
) > 0)

503 
i
 = 
	`di•œy
(
löe
, i);

505 i‡(
f
)

506 
	`f˛o£
(
f
);

507 i‡(
löe
)

508 
	`‰ì
(
löe
);

510  
i
;

511 
	}
}

513 #i‚de‡
MEMPOOL_F_DMA


514 
	#MEMPOOL_F_DMA
 0

	)

	@app/t/commands.t.c

12 
	~"pktgí.h
"

13 
	~"Õktgílib.h
"

15 
	~<wr_s¸n.h
>

16 
wr_s¸n_t
 *
	gs¸n
 = 
NULL
;

18 
pktgí_t
 
	gpktgí
;

19 
	gπe_cy˛es_vmw¨e_tsc_m≠
 = 0;

20 
timî_sour˚
 
	gól_timî_sour˚
 = 
EAL_TIMER_HPET
;

24 
	$maö
() {

25 
	`∂™
(1);

26 
	`ok
(1, "ok works");

28 
	`d⁄e_ã°ög
();

30 
	}
}

	@app/t/helpers/fake_impl.c

1 #i‚de‡
_FAKE_IMPL_H


2 
	#_FAKE_IMPL_H


	)

12 #ifde‡
STUB_RTE_MALLOC_H


14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	$πe_zmÆloc
(c⁄° *
ty≥
, 
size_t
 
size
, 
Æign
)

19 *
mem
 = 
	`mÆloc
(
size
);

21 
	`mem£t
(
mem
, 0, 
size
);

23  
mem
;

24 
	}
}

28 #ifde‡
STUB_RTE_DEBUG_H


30 
	~<°dio.h
>

32 
	$__πe_∑nic
(c⁄° *
fun˙ame
, c⁄° *
f‹m©
, ...)

34 
va_li°
 
≠
;

36 
	`va_°¨t
(
≠
, 
f‹m©
);

37 
	`Ârötf
(
°dîr
, "PANIC: %s(): ", 
fun˙ame
);

38 
	`Ârötf
(
°dîr
, 
f‹m©
, 
≠
);

39 
	`va_íd
(
≠
);

40 
	}
}

44 #ifde‡
STUB_CMDLINE_H


46 
	~<cmdlöe_∑r£.h
>

47 
cmdlöe_tokí_›s
 
	gcmdlöe_tokí_°rög_›s
;

48 
cmdlöe_tokí_›s
 
	gcmdlöe_tokí_p‹éi°_›s
;

49 
cmdlöe_tokí_›s
 
	gcmdlöe_tokí_num_›s
;

50 
cmdlöe_tokí_›s
 
	gcmdlöe_tokí_ëhîaddr_›s
;

51 
cmdlöe_tokí_›s
 
	gcmdlöe_tokí_ùaddr_›s
;

55 #ifde‡
STUB_LUA_SOCKET_H


57 
	~<lua.h
>

59 
	$execuã_lua_˛o£
(
lua_Sèã
 *
L
) {

60 
	}
}

64 #ifde‡
STUB_RTE_LCORE_H


66 
	~<πe_lc‹e.h
>

67 
lc‹e_c⁄fig
 
	glc‹e_c⁄fig
[
RTE_MAX_LCORE
];

71 #ifde‡
STUB_RTE_SCRN_H


73 
	~<wr_s¸n.h
>

74 
wr_s¸n_t
 *
	gs¸n
;

	@app/t/helpers/test_helpers.h

1 #i‚de‡
_TEST_HELPERS_H


2 
	#_TEST_HELPERS_H


	)

18 
	#STUB_FUNC
(
ªt_ty≥
, 
func_«me
, 
ªt_vÆue
, ...) \

19 
ªt_ty≥
 
	`func_«me
(
__VA_ARGS__
Ë{  
ªt_vÆue
; }

	)

21 
	#STUB_VOID
(
func_«me
, ...) \

22 
	`STUB_FUNC
(, 
func_«me
, , 
__VA_ARGS__
)

	)

24 
	#STUB_NULL
(
ªt_ty≥
, 
func_«me
, ...) \

25 
	`STUB_FUNC
(
ªt_ty≥
, 
func_«me
, 
NULL
, 
__VA_ARGS__
)

	)

30 
	#ZERO
(
v¨
Ë
	`mem£t
(&v¨, 0, (v¨));

	)

35 
	#_UNWRAP
(...Ë
__VA_ARGS__


	)

36 
	#cmp_mem_lô
(
g
, 
e
, ...) \

38 c⁄° 
e2
[] = { 
_UNWRAP
 
e
 }; \

39 
	`cmp_mem
(
g
, 
e2
, ”2), ## 
__VA_ARGS__
); \

40 } 0)

	)

47 
	#cmp_mem_lô_ö¸
(
g
, 
e
, ...) \

49 c⁄° 
e2
[] = { 
_UNWRAP
 
e
 }; \

50 
	`cmp_mem
(
g
, 
e2
, ”2), ## 
__VA_ARGS__
); \

51 
g
 +(
e2
); \

52 } 0)

	)

	@app/t/libtap/tap.c

7 
	#_BSD_SOURCE
 1

	)

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°d¨g.h
>

12 
	~<°rög.h
>

13 
	~"èp.h
"

15 
	gex≥˘ed_ã°s
 = 
NO_PLAN
;

16 
	gÁûed_ã°s
;

17 
	gcuºít_ã°
;

18 *
	gtodo_mesg
;

21 
	$v°rdupf
(c⁄° *
fmt
, 
va_li°
 
¨gs
) {

22 *
°r
;

23 
size
;

24 
va_li°
 
¨gs2
;

26 
	`va_c›y
(
¨gs2
, 
¨gs
);

27 i‡(!
fmt
)

28 
fmt
 = "";

29 
size
 = 
	`v¢¥ötf
(
NULL
, 0, 
fmt
, 
¨gs2
) + 2;

30 
°r
 = 
	`mÆloc
(
size
);

31 i‡(!
°r
) {

32 
	`≥º‹
("mallocÉrror");

33 
	`exô
(1);

35 
	`v•rötf
(
°r
, 
fmt
, 
¨gs
);

36 
	`va_íd
(
¨gs2
);

37  
°r
;

38 
	}
}

41 
	$èp_∂™
(
ã°s
, c⁄° *
fmt
, ...) {

42 
ex≥˘ed_ã°s
 = 
ã°s
;

43 i‡(
ã°s
 =
SKIP_ALL
) {

44 *
why
;

45 
va_li°
 
¨gs
;

46 
	`va_°¨t
(
¨gs
, 
fmt
);

47 
why
 = 
	`v°rdupf
(
fmt
, 
¨gs
);

48 
	`va_íd
(
¨gs
);

49 
	`¥ötf
("1..0 ");

50 
	`nŸe
("SKIP %s\n", 
why
);

51 
	`exô
(0);

53 i‡(
ã°s
 !
NO_PLAN
)

54 
	`¥ötf
("1..%d\n", 
ã°s
);

55 
	}
}

58 
	$vok_©_loc
(c⁄° *
fûe
, 
löe
, 
ã°
, c⁄° *
fmt
,

59 
va_li°
 
¨gs
)

61 *
«me
 = 
	`v°rdupf
(
fmt
, 
¨gs
);

63 i‡(!
ã°
)

64 
	`¥ötf
("not ");

65 
	`¥ötf
("ok %d", ++
cuºít_ã°
);

66 i‡(*
«me
)

67 
	`¥ötf
(" - %s", 
«me
);

68 i‡(
todo_mesg
) {

69 
	`¥ötf
(" # TODO");

70 i‡(*
todo_mesg
)

71 
	`¥ötf
(" %s", 
todo_mesg
);

73 
	`¥ötf
("\n");

74 i‡(!
ã°
) {

75 
	`Ârötf
(
°dîr
, "# Failed ");

76 i‡(
todo_mesg
)

77 
	`Ârötf
(
°dîr
, "(TODO) ");

78 
	`Ârötf
(
°dîr
, "test ");

79 i‡(*
«me
)

80 
	`Ârötf
(
°dîr
, "'%s'\n# ", 
«me
);

81 
	`Ârötf
(
°dîr
, "© %†löê%d.\n", 
fûe
, 
löe
);

82 i‡(!
todo_mesg
)

83 
Áûed_ã°s
++;

85 
	`‰ì
(
«me
);

86  
ã°
;

87 
	}
}

90 
	$ok_©_loc
(c⁄° *
fûe
, 
löe
, 
ã°
, c⁄° *
fmt
, ...) {

91 
va_li°
 
¨gs
;

93 
	`va_°¨t
(
¨gs
, 
fmt
);

94 
	`vok_©_loc
(
fûe
, 
löe
, 
ã°
, 
fmt
, 
¨gs
);

95 
	`va_íd
(
¨gs
);

96  
ã°
;

97 
	}
}

100 
	$my°rcmp
(c⁄° *
a
, c⁄° *
b
) {

101  
a
 =
b
 ? 0 : !®? -1 : !b ? 1 : 
	`°rcmp
(a, b);

102 
	}
}

104 
	#eq
(
a
, 
b
Ë(!
	`my°rcmp
◊, b))

	)

105 
	#√
(
a
, 
b
Ë(
	`my°rcmp
◊, b))

	)

108 
	$is_©_loc
(c⁄° *
fûe
, 
löe
, c⁄° *
gŸ
, c⁄° *
ex≥˘ed
,

109 c⁄° *
fmt
, ...)

111 
ã°
 = 
	`eq
(
gŸ
, 
ex≥˘ed
);

112 
va_li°
 
¨gs
;

114 
	`va_°¨t
(
¨gs
, 
fmt
);

115 
	`vok_©_loc
(
fûe
, 
löe
, 
ã°
, 
fmt
, 
¨gs
);

116 
	`va_íd
(
¨gs
);

117 i‡(!
ã°
) {

118 
	`düg
(" gŸ: '%s'", 
gŸ
);

119 
	`düg
("Éx≥˘ed: '%s'", 
ex≥˘ed
);

121  
ã°
;

122 
	}
}

125 
	$i¢t_©_loc
(c⁄° *
fûe
, 
löe
, c⁄° *
gŸ
, c⁄° *
ex≥˘ed
,

126 c⁄° *
fmt
, ...)

128 
ã°
 = 
	`√
(
gŸ
, 
ex≥˘ed
);

129 
va_li°
 
¨gs
;

131 
	`va_°¨t
(
¨gs
, 
fmt
);

132 
	`vok_©_loc
(
fûe
, 
löe
, 
ã°
, 
fmt
, 
¨gs
);

133 
	`va_íd
(
¨gs
);

134 i‡(!
ã°
) {

135 
	`düg
(" gŸ: '%s'", 
gŸ
);

136 
	`düg
("Éxpected:ánythingÉlse");

138  
ã°
;

139 
	}
}

142 
	$cmp_ok_©_loc
(c⁄° *
fûe
, 
löe
, 
a
, c⁄° *
›
, 
b
,

143 c⁄° *
fmt
, ...)

145 
ã°
 = 
	`eq
(
›
, "||"Ë? 
a
 || 
b


146 : 
	`eq
(
›
, "&&"Ë? 
a
 && 
b


147 : 
	`eq
(
›
, "|"Ë? 
a
 | 
b


148 : 
	`eq
(
›
, "^"Ë? 
a
 ^ 
b


149 : 
	`eq
(
›
, "&"Ë? 
a
 & 
b


150 : 
	`eq
(
›
, "=="Ë? 
a
 =
b


151 : 
	`eq
(
›
, "!="Ë? 
a
 !
b


152 : 
	`eq
(
›
, "<"Ë? 
a
 < 
b


153 : 
	`eq
(
›
, ">"Ë? 
a
 > 
b


154 : 
	`eq
(
›
, "<="Ë? 
a
 <
b


155 : 
	`eq
(
›
, ">="Ë? 
a
 >
b


156 : 
	`eq
(
›
, "<<"Ë? 
a
 << 
b


157 : 
	`eq
(
›
, ">>"Ë? 
a
 >> 
b


158 : 
	`eq
(
›
, "+"Ë? 
a
 + 
b


159 : 
	`eq
(
›
, "-"Ë? 
a
 - 
b


160 : 
	`eq
(
›
, "*"Ë? 
a
 * 
b


161 : 
	`eq
(
›
, "/"Ë? 
a
 / 
b


162 : 
	`eq
(
›
, "%"Ë? 
a
 % 
b


163 : 
	`düg
("uƒecognized o≥øt‹ '%s'", 
›
);

164 
va_li°
 
¨gs
;

166 
	`va_°¨t
(
¨gs
, 
fmt
);

167 
	`vok_©_loc
(
fûe
, 
löe
, 
ã°
, 
fmt
, 
¨gs
);

168 
	`va_íd
(
¨gs
);

169 i‡(!
ã°
) {

170 
	`düg
(" %d", 
a
);

171 
	`düg
(" %s", 
›
);

172 
	`düg
(" %d", 
b
);

174  
ã°
;

175 
	}
}

178 
	$föd_mem_diff
(c⁄° *
a
, c⁄° *
b
, 
size_t
 
n
, size_à*
off£t
) {

179 
size_t
 
i
;

181 i‡(
a
 =
b
)

183 i‡(!
a
 || !
b
)

185 
i
 = 0; i < 
n
; i++)

186 i‡(
a
[
i
] !
b
[i]) {

187 *
off£t
 = 
i
;

191 
	}
}

194 
	$cmp_mem_©_loc
(c⁄° *
fûe
, 
löe
, c⁄° *
gŸ
,

195 c⁄° *
ex≥˘ed
, 
size_t
 
n
, c⁄° *
fmt
, ...)

197 
size_t
 
off£t
;

198 
diff
 = 
	`föd_mem_diff
(
gŸ
, 
ex≥˘ed
, 
n
, &
off£t
);

199 
va_li°
 
¨gs
;

201 
	`va_°¨t
(
¨gs
, 
fmt
);

202 
	`vok_©_loc
(
fûe
, 
löe
, !
diff
, 
fmt
, 
¨gs
);

203 
	`va_íd
(
¨gs
);

204 i‡(
diff
 == 1) {

205 
	`düg
(" Dif„ªn˚ sèπ†© off£à%d", 
off£t
);

206 
	`düg
(" gŸ: 0x%02x", ((*)
gŸ
)[
off£t
]);

207 
	`düg
("Éxpected: 0x%02x",

208 ((*)
ex≥˘ed
)[
off£t
]);

209 } i‡(
diff
 == 2) {

210 
	`düg
(" gŸ: %s", 
gŸ
 ? "not NULL" : "NULL");

211 
	`düg
("Éx≥˘ed: %s", 
ex≥˘ed
 ? "not NULL" : "NULL");

213  !
diff
;

214 
	}
}

217 
	$vdüg_to_fh
(
FILE
 *
fh
, c⁄° *
fmt
, 
va_li°
 
¨gs
) {

218 *
mesg
, *
löe
;

219 
i
;

221 i‡(!
fmt
)

223 
mesg
 = 
	`v°rdupf
(
fmt
, 
¨gs
);

224 
löe
 = 
mesg
;

225 
i
 = 0; *
löe
; i++) {

226 
c
 = 
mesg
[
i
];

227 i‡(!
c
 || c == '\n') {

228 
mesg
[
i
] = '\0';

229 
	`Ârötf
(
fh
, "# %s\n", 
löe
);

230 i‡(!
c
)

232 
mesg
[
i
] = 
c
;

233 
löe
 = 
mesg
 + 
i
 + 1;

236 
	`‰ì
(
mesg
);

237 
	}
}

240 
	$düg
(c⁄° *
fmt
, ...) {

241 
va_li°
 
¨gs
;

243 
	`va_°¨t
(
¨gs
, 
fmt
);

244 
	`vdüg_to_fh
(
°dîr
, 
fmt
, 
¨gs
);

245 
	`va_íd
(
¨gs
);

247 
	}
}

250 
	$nŸe
(c⁄° *
fmt
, ...) {

251 
va_li°
 
¨gs
;

253 
	`va_°¨t
(
¨gs
, 
fmt
);

254 
	`vdüg_to_fh
(
°dout
, 
fmt
, 
¨gs
);

255 
	`va_íd
(
¨gs
);

257 
	}
}

260 
	$exô_°©us
() {

261 
ªtvÆ
 = 0;

263 i‡(
ex≥˘ed_ã°s
 =
NO_PLAN
)

264 
	`¥ötf
("1..%d\n", 
cuºít_ã°
);

265 i‡(
cuºít_ã°
 !
ex≥˘ed_ã°s
) {

266 
	`düg
("LooksÜike youÖlanned %dÅest%s butÑan %d.",

267 
ex≥˘ed_ã°s
,Éxpected_tests > 1 ? "s" : "",

268 
cuºít_ã°
);

269 
ªtvÆ
 = 255;

271 i‡(
Áûed_ã°s
) {

272 
	`düg
("LooksÜike you failed %dÅest%s of %dÑun.",

273 
Áûed_ã°s
, faûed_ã°†> 1 ? "s" : "", 
cuºít_ã°
);

274 i‡(
ex≥˘ed_ã°s
 =
NO_PLAN
)

275 
ªtvÆ
 = 
Áûed_ã°s
;

277 
ªtvÆ
 = 
ex≥˘ed_ã°s
 - 
cuºít_ã°
 + 
Áûed_ã°s
;

279  
ªtvÆ
;

280 
	}
}

283 
	$baû_out
(
ign‹e
, c⁄° *
fmt
, ...) {

284 
va_li°
 
¨gs
;

286 
	`va_°¨t
(
¨gs
, 
fmt
);

287 
	`¥ötf
("Bail out! ");

288 
	`v¥ötf
(
fmt
, 
¨gs
);

289 
	`¥ötf
("\n");

290 
	`va_íd
(
¨gs
);

291 
	`exô
(255);

293 
	}
}

296 
	$èp_skù
(
n
, c⁄° *
fmt
, ...) {

297 *
why
;

298 
va_li°
 
¨gs
;

300 
	`va_°¨t
(
¨gs
, 
fmt
);

301 
why
 = 
	`v°rdupf
(
fmt
, 
¨gs
);

302 
	`va_íd
(
¨gs
);

303 
n
-- > 0) {

304 
	`¥ötf
("ok %d ", ++
cuºít_ã°
);

305 
	`nŸe
("skù %s\n", 
why
);

307 
	`‰ì
(
why
);

308 
	}
}

311 
	$èp_todo
(
ign‹e
, c⁄° *
fmt
, ...) {

312 
va_li°
 
¨gs
;

314 
	`va_°¨t
(
¨gs
, 
fmt
);

315 
todo_mesg
 = 
	`v°rdupf
(
fmt
, 
¨gs
);

316 
	`va_íd
(
¨gs
);

317 
	}
}

320 
	$èp_íd_todo
() {

321 
	`‰ì
(
todo_mesg
);

322 
todo_mesg
 = 
NULL
;

323 
	}
}

325 #i‚de‡
_WIN32


326 
	~<sys/mm™.h
>

327 
	~<sys/∑øm.h
>

328 
	~<ªgex.h
>

330 #i‡
deföed
 
__APPLE__
 || deföed 
BSD


331 
	#MAP_ANONYMOUS
 
MAP_ANON


	)

337 
	$èp_ã°_dõd
(
°©us
) {

338 *
ã°_dõd
 = 
NULL
;

339 
¥ev
;

341 i‡(!
ã°_dõd
) {

342 
ã°_dõd
 = 
	`mm≠
(0, (), 
PROT_READ
 | 
PROT_WRITE
,

343 
MAP_SHARED
 | 
MAP_ANONYMOUS
, -1, 0);

344 *
ã°_dõd
 = 0;

346 
¥ev
 = *
ã°_dõd
;

347 *
ã°_dõd
 = 
°©us
;

348  
¥ev
;

349 
	}
}

352 
	$like_©_loc
(
f‹_m©ch
, c⁄° *
fûe
, 
löe
, c⁄° *
gŸ
,

353 c⁄° *
ex≥˘ed
, c⁄° *
fmt
, ...)

355 
ã°
;

356 
ªgex_t
 
ª
;

357 
va_li°
 
¨gs
;

358 
îr
 = 
	`ªgcomp
(&
ª
, 
ex≥˘ed
, 
REG_EXTENDED
);

360 i‡(
îr
) {

361 
îrbuf
[256];

362 
	`ªgîr‹
(
îr
, &
ª
, 
îrbuf
, Érrbuf);

363 
	`Ârötf
(
°dîr
,

365 
ex≥˘ed
,

366 
îrbuf
,

367 
fûe
,

368 
löe
);

369 
	`exô
(255);

371 
îr
 = 
	`ªgexec
(&
ª
, 
gŸ
, 0, 
NULL
, 0);

372 
	`ªg‰ì
(&
ª
);

373 
ã°
 = 
f‹_m©ch
 ? !
îr
 :Érr;

374 
	`va_°¨t
(
¨gs
, 
fmt
);

375 
	`vok_©_loc
(
fûe
, 
löe
, 
ã°
, 
fmt
, 
¨gs
);

376 
	`va_íd
(
¨gs
);

377 i‡(!
ã°
) {

378 i‡(
f‹_m©ch
) {

379 
	`düg
(" '%s'", 
gŸ
);

380 
	`düg
(" d€¢'àm©ch: '%s'", 
ex≥˘ed
);

382 
	`düg
(" '%s'", 
gŸ
);

383 
	`düg
(" m©ches: '%s'", 
ex≥˘ed
);

386  
ã°
;

387 
	}
}

	@app/t/libtap/tap.h

7 #i‚de‡
__TAP_H__


8 
	#__TAP_H__


	)

10 #ifde‡
__˝lu•lus


14 #i‚de‡
va_c›y


15 #ifde‡
__va_c›y


16 
	#va_c›y
 
__va_c›y


	)

18 
	#va_c›y
(
d
, 
s
Ë((dË(s))

	)

22 
	~<°dio.h
>

23 
	~<°dlib.h
>

24 
	~<°d¨g.h
>

26 
vok_©_loc
(c⁄° *
fûe
, 
löe
, 
ã°
, c⁄° *
fmt
,

27 
va_li°
 
¨gs
);

28 
ok_©_loc
(c⁄° *
fûe
, 
löe
, 
ã°
, c⁄° *
fmt
,

30 
is_©_loc
(c⁄° *
fûe
, 
löe
, c⁄° *
gŸ
,

31 c⁄° *
ex≥˘ed
, c⁄° *
fmt
, ...);

32 
i¢t_©_loc
(c⁄° *
fûe
, 
löe
, c⁄° *
gŸ
,

33 c⁄° *
ex≥˘ed
, c⁄° *
fmt
, ...);

34 
cmp_ok_©_loc
(c⁄° *
fûe
, 
löe
, 
a
, c⁄° *
›
,

35 
b
, c⁄° *
fmt
, ...);

36 
cmp_mem_©_loc
(c⁄° *
fûe
, 
löe
, c⁄° *
gŸ
,

37 c⁄° *
ex≥˘ed
, 
size_t
 
n
, c⁄° *
fmt
, ...);

38 
baû_out
(
ign‹e
, c⁄° *
fmt
, ...);

39 
èp_∂™
(
ã°s
, c⁄° *
fmt
, ...);

40 
düg
(c⁄° *
fmt
, ...);

41 
nŸe
(c⁄° *
fmt
, ...);

42 
exô_°©us
();

43 
èp_skù
(
n
, c⁄° *
fmt
, ...);

44 
èp_todo
(
ign‹e
, c⁄° *
fmt
, ...);

45 
èp_íd_todo
();

47 
	#NO_PLAN
 -1

	)

48 
	#SKIP_ALL
 -2

	)

49 
	#ok
(...Ë
	`ok_©_loc
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
, 
NULL
)

	)

50 
	#is
(...Ë
	`is_©_loc
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
, 
NULL
)

	)

51 
	#i¢t
(...Ë
	`i¢t_©_loc
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
, 
NULL
)

	)

52 
	#cmp_ok
(...Ë
	`cmp_ok_©_loc
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
, 
NULL
)

	)

53 
	#cmp_mem
(...Ë
	`cmp_mem_©_loc
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
, 
NULL
);

	)

54 
	#∂™
(...Ë
	`èp_∂™
(
__VA_ARGS__
, 
NULL
)

	)

55 
	#d⁄e_ã°ög
(Ë 
	`exô_°©us
()

	)

56 
	#BAIL_OUT
(...Ë
	`baû_out
(0, "" 
__VA_ARGS__
, 
NULL
)

	)

57 
	#∑ss
(...Ë
	`ok
(1, "" 
__VA_ARGS__
)

	)

58 
	#Áû
(...Ë
	`ok
(0, "" 
__VA_ARGS__
)

	)

60 
	#skù
(
ã°
, ...Ëdÿ{i‡—e°Ë{
	`èp_skù
(
__VA_ARGS__
, 
NULL
); ; }

	)

61 
	#íd_skù
 } 0)

	)

63 
	#todo
(...Ë
	`èp_todo
(0, "" 
__VA_ARGS__
, 
NULL
)

	)

64 
	#íd_todo
 
	`èp_íd_todo
()

	)

66 
	#dõs_ok
(...Ë
	`dõs_ok_comm⁄
(1, 
__VA_ARGS__
)

	)

67 
	#lives_ok
(...Ë
	`dõs_ok_comm⁄
(0, 
__VA_ARGS__
)

	)

69 #ifde‡
_WIN32


70 
	#like
(...Ë
	`èp_skù
(1, "likêi†nŸ im∂emíãd o¿Wödows")

	)

71 
	#u∆ike
 
	`èp_skù
(1, "u∆ikêi†nŸ im∂emíãd o¿Wödows")

	)

72 
	#dõs_ok_comm⁄
(...) \

73 
	`èp_skù
(1, "Dóth dëe˘i⁄ i†nŸ suµ‹ãd o¿Wödows")

	)

75 
	#like
(...Ë
	`like_©_loc
(1, 
__FILE__
, 
__LINE__
, 
__VA_ARGS__
, 
NULL
)

	)

76 
	#u∆ike
(...Ë
	`like_©_loc
(0, 
__FILE__
, 
__LINE__
, 
__VA_ARGS__
, 
NULL
)

	)

77 
like_©_loc
(
f‹_m©ch
, c⁄° *
fûe
, 
löe
,

78 c⁄° *
gŸ
, c⁄° *
ex≥˘ed
,

79 c⁄° *
fmt
, ...);

80 
	~<uni°d.h
>

81 
	~<sys/ty≥s.h
>

82 
	~<sys/waô.h
>

83 
èp_ã°_dõd
(
°©us
);

84 
	#dõs_ok_comm⁄
(
f‹_dóth
, 
code
, ...) \

86 
˝id
; \

87 
ô_dõd
; \

88 
	`èp_ã°_dõd
(1); \

89 
˝id
 = 
	`f‹k
(); \

90 
˝id
) { \

92 
	`≥º‹
("forkÉrror"); \

93 
	`exô
(1); \

95 
	`˛o£
(1); \

96 
	`˛o£
(2); \

97 
code
 \

98 
	`èp_ã°_dõd
(0); \

99 
	`exô
(0); \

101 i‡(
	`waôpid
(
˝id
, 
NULL
, 0) < 0) { \

102 
	`≥º‹
("waitpidÉrror"); \

103 
	`exô
(1); \

105 
ô_dõd
 = 
	`èp_ã°_dõd
(0); \

106 i‡(!
ô_dõd
) \

107 {
code
} \

108 
	`ok
(
f‹_dóth
 ? 
ô_dõd
 : !ô_dõd, "" 
__VA_ARGS__
); \

109 } 0)

	)

112 #ifde‡
__˝lu•lus


	@app/t/lpktgenlib.t.c

11 
	~"pktgí.h
"

13 
pktgí_t
 
	gpktgí
;

15 c⁄° *
	ghñp_öfo
[] = {"", "Hñ∞öfÿ°ub", 
NULL
 };

19 
	$maö
() {

20 
	`∂™
(1);

21 
	`ok
(1, "ok works");

23 
	`d⁄e_ã°ög
();

25 
	}
}

	@app/t/pktgen-arp.t.c

7 
	~"pktgí.h
"

9 
pktgí_t
 
	gpktgí
;

12 
__thªad
 
	g≥r_lc‹e__lc‹e_id
;

16 
	$maö
() {

17 
	`∂™
(1);

18 
	`ok
(1, "ok works");

20 
	`d⁄e_ã°ög
();

22 
	}
}

	@app/t/pktgen-capture.t.c

8 
	~<πe_mbuf.h
>

9 
	~<πe_memz⁄e.h
>

11 
	~<°rög.h
>

13 
	~"pktgí-cmds.h
"

16 
pktgí_t
 
	gpktgí
;

20 
	$wr_s¸n_Ârötf
(
öt16_t
 
r
, i¡16_à
c
, 
FILE
 *
f
, c⁄° *
fmt
, ...Ë{ 
	}
}

23 
ˇ±uª_t
 
	g_c
;

25 
	g_mz_poﬁ
[1024];

26 
πe_memz⁄e
 
	g_mz
;

28 
πe_mbuf
 
	g_mb
;

29 
πe_mbuf
 *
	g_mb_p
;

31 
p‹t_öfo_t
 
	g_öfo
;

34 c⁄° 
πe_memz⁄e
 *

35 
	$πe_memz⁄e_ª£rve
(c⁄° *
«me
, 
size_t
 
Àn
, 
sockë_id
,

36 
Êags
){

37 
	`°∫˝y
(
_mz
.
«me
,Çame, (_mz.name));

38 
_mz
.
«me
[(_mz.name) - 1] = '\0';

40 
_mz
.
phys_addr
 = (
phys_addr_t
)&
_mz_poﬁ
;

41 
_mz
.
Àn
 =Üí ?Üí : (
_mz_poﬁ
);

42 
_mz
.
hugïage_sz
 = 0;

43 
_mz
.
sockë_id
 = socket_id;

44 
_mz
.
Êags
 = flags;

45 
_mz
.
addr
 = &
_mz_poﬁ
;

47  &
_mz
;

48 
	}
}

54 
	$ã°_£tup
()

56 
	`ZERO
(
pktgí
);

57 
	`ZERO
(
_c
);

58 
	`ZERO
(
_mz_poﬁ
);

59 
	`ZERO
(
_mz
);

61 
	`ZERO
(
_mb
);

62 
_mb_p
 = &
_mb
;

64 
	`ZERO
(
_öfo
);

65 
	}
}

71 
	$ã°_pktgí_∑ckë_ˇ±uª_öô
()

73 
	`lives_ok
({ 
	`pktgí_∑ckë_ˇ±uª_öô
(
NULL
,

78 c⁄° 
öt32_t
 
sockë_id
 = 5;

80 
	`lives_ok
({ 
	`pktgí_∑ckë_ˇ±uª_öô
(&
_c
,

81 
sockë_id
); },

83 
	`cmp_ok
(
_c
.
lc‹e
, ">", 0, "...ánd setÜcore member");

84 
	`cmp_ok
(
_c
.
p‹t
, ">", 0, "...ánd setÖort member");

85 
	`cmp_ok
(
_c
.
mem_u£d
, "==", 0, "...ánd setÇo memory used");

86 
	`ok
(
_c
.
mz
 !
NULL
, "...ánd initialize memzone");

87 
	`is
(
_c
.
mz
->
«me
, "Capture_MZ_5", " ... withá descriptiveÇame");

88 
	`cmp_ok
(
_c
.
mz
->
Àn
,

90 (
_mz_poﬁ
),

92 
	`cmp_ok
(
_c
.
mz
->
sockë_id
,

94 
sockë_id
,

96 
	`ok
(
_c
.
mz
->
Êags
 & 
RTE_MEMZONE_1GB
,

98 
	`ok
(
_c
.
mz
->
Êags
 & 
RTE_MEMZONE_SIZE_HINT_ONLY
,

100 
	}
}

103 
	$ã°_pktgí_£t_ˇ±uª
()

105 
	`lives_ok
({ 
	`pktgí_£t_ˇ±uª
(&
_öfo
,

106 
DISABLE_STATE
); },

111 
	}
}

114 
	$ã°_pktgí_∑ckë_ˇ±uª_bulk
()

116 
nb_dump
 = 0;

118 
	`lives_ok
({ 
	`pktgí_∑ckë_ˇ±uª_bulk
(&
_mb_p
,

119 
nb_dump
,

120 &
_c
); },

122 
	}
}

126 
	$maö
() {

129 
	`ã°_£tup
();

131 
	`ã°_pktgí_∑ckë_ˇ±uª_öô
();

132 
	`ã°_pktgí_£t_ˇ±uª
();

133 
	`ã°_pktgí_∑ckë_ˇ±uª_bulk
();

135 
	`d⁄e_ã°ög
();

137 
	}
}

	@app/t/pktgen-cmds.t.c

9 
	~"pktgí.h
"

11 
	~<wr_s¸n.h
>

12 
wr_s¸n_t
 *
	gs¸n
;

14 
pktgí_t
 
	gpktgí
;

19 
	$πe_ëh_Àd_⁄
(
uöt8_t
 
p‹t_id
Ë{  0; 
	}
}

21 
	$πe_ëh_°©s_gë
(
uöt8_t
 
p‹t_id
, 
πe_ëh_°©s
 *
°©s
Ë{ 
	}
}

25 
	$maö
() {

26 
	`∂™
(1);

27 
	`ok
(1, "ok works");

29 
	`d⁄e_ã°ög
();

31 
	}
}

	@app/t/pktgen-cpu.t.c

11 
	~"pktgí.h
"

15 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...Ë{ 
	}
}

17 
pktgí_t
 
	gpktgí
;

21 
	$maö
() {

22 
	`∂™
(1);

23 
	`ok
(1, "ok works");

25 
	`d⁄e_ã°ög
();

27 
	}
}

	@app/t/pktgen-dump.t.c

6 
	~"pktgí.h
"

8 
pktgí_t
 
	gpktgí
;

12 
	$maö
() {

13 
	`∂™
(1);

14 
	`ok
(1, "ok works");

16 
	`d⁄e_ã°ög
();

18 
	}
}

	@app/t/pktgen-ether.t.c

8 
	$maö
() {

9 
	`∂™
(1);

10 
	`ok
(1, "ok works");

12 
	`d⁄e_ã°ög
();

14 
	}
}

	@app/t/pktgen-gre.t.c

6 
	~"pktgí.h
"

8 
pktgí_t
 
	gpktgí
;

12 
	$maö
() {

13 
	`∂™
(1);

14 
	`ok
(1, "ok works");

16 
	`d⁄e_ã°ög
();

18 
	}
}

	@app/t/pktgen-ipv4.t.c

8 
	~"pktgí.h
"

10 
pktgí_t
 
	gpktgí
;

12 
__thªad
 
	g≥r_lc‹e__lc‹e_id
;

16 
	$maö
() {

17 
	`∂™
(1);

18 
	`ok
(1, "ok works");

20 
	`d⁄e_ã°ög
();

22 
	}
}

	@app/t/pktgen-ipv6.t.c

8 
	$maö
() {

9 
	`∂™
(1);

10 
	`ok
(1, "ok works");

12 
	`d⁄e_ã°ög
();

14 
	}
}

	@app/t/pktgen-main.t.c

9 
	~<wr_s¸n.h
>

10 
wr_s¸n_t
 *
	gs¸n
 = 
NULL
;

13 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...Ë{ 
	}
}

15 
	~"pktgí.h
"

17 
pktgí_t
 
	gpktgí
;

18 
	gπe_cy˛es_vmw¨e_tsc_m≠
;

19 
timî_sour˚
 
	gól_timî_sour˚
;

20 
__thªad
 
	g≥r_lc‹e__lc‹e_id
;

21 
πe_logs
 
	gπe_logs
;

27 
	$πe_igb_pmd_öô
(Ë{  0; 
	}
}

29 
	$πe_igbvf_pmd_öô
(Ë{  0; 
	}
}

31 
	$πe_em_pmd_öô
(Ë{  0; 
	}
}

33 
	$πe_ixgbe_pmd_öô
(Ë{  0; 
	}
}

35 
	$πe_ixgbevf_pmd_öô
(Ë{  0; 
	}
}

37 
	$πe_vútio_pmd_öô
(Ë{  0; 
	}
}

39 
	$πe_vmx√t3_pmd_öô
(Ë{  0; 
	}
}

45 
	$πe_log
(
uöt32_t
 
Àvñ
, uöt32_à
logty≥
, c⁄° *
f‹m©
, ...Ë{  0; 
	}
}

51 
	$πe_°ªº‹
(
î∫um
Ë{  
NULL
; 
	}
}

55 
	$maö
() {

56 
	`∂™
(1);

57 
	`ok
(1, "ok works");

59 
	`d⁄e_ã°ög
();

61 
	}
}

	@app/t/pktgen-pcap.t.c

7 
	~"pktgí.h
"

11 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...Ë{ 
	}
}

13 
	$wr_s¸n_Ârötf
(
öt16_t
 
r
, i¡16_à
c
, 
FILE
 *
f
, c⁄° *
fmt
, ...Ë{ 
	}
}

15 
	$wr_s¸n_˚¡î
(
öt16_t
 
r
, c⁄° *
fmt
, ...Ë{ 
	}
}

17 
pktgí_t
 
	gpktgí
;

21 
	$maö
() {

22 
	`∂™
(1);

23 
	`ok
(1, "ok works");

25 
	`d⁄e_ã°ög
();

27 
	}
}

	@app/t/pktgen-port-cfg.t.c

8 
	~"pktgí.h
"

14 
	$πe_°ªº‹
(
î∫um
Ë{  
NULL
; 
	}
}

18 
uöt8_t


19 
	$πe_ëh_dev_cou¡
(Ë{  0; 
	}
}

21 
	$πe_ëh_dev_c⁄figuª
(
uöt8_t
 
p‹t_id
,

22 
uöt16_t
 
nb_rx_queue
,

23 
uöt16_t
 
nb_tx_queue
,

24 c⁄° 
πe_ëh_c⁄f
 *
ëh_c⁄f
Ë{  0; 
	}
}

26 
	$πe_ëh_maˇddr_gë
(
uöt8_t
 
p‹t_id
, 
ëhî_addr
 *
mac_addr
Ë{ 
	}
}

28 
	$πe_ëh_rx_queue_£tup
(
uöt8_t
 
p‹t_id
,

29 
uöt16_t
 
rx_queue_id
,

30 
uöt16_t
 
nb_rx_desc
,

31 
sockë_id
,

32 c⁄° 
πe_ëh_rxc⁄f
 *
rx_c⁄f
,

33 
πe_mempoﬁ
 *
mb_poﬁ
Ë{  0; 
	}
}

35 
	$πe_ëh_tx_queue_£tup
(
uöt8_t
 
p‹t_id
,

36 
uöt16_t
 
tx_queue_id
,

37 
uöt16_t
 
nb_tx_desc
,

38 
sockë_id
,

39 c⁄° 
πe_ëh_txc⁄f
 *
tx_c⁄f
Ë{  0; 
	}
}

41 
	$πe_ëh_dev_°¨t
(
uöt8_t
 
p‹t_id
Ë{  0; 
	}
}

43 
	$πe_ëh_¥omiscuous_íabÀ
(
uöt8_t
 
p‹t_id
Ë{ 
	}
}

45 
pktgí_t
 
	gpktgí
;

49 
	$maö
() {

50 
	`∂™
(1);

51 
	`ok
(1, "ok works");

53 
	`d⁄e_ã°ög
();

55 
	}
}

	@app/t/pktgen-random.t.c

10 
	~<¨∑/öë.h
>

14 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...Ë{ 
	}
}

16 
	$wr_s¸n_˚¡î
(
öt16_t
 
r
, c⁄° *
fmt
, ...Ë{ 
	}
}

19 
BITFIELD_T


20 
	$Æl_bôs_0
() {

22 
	}
}

24 
BITFIELD_T


25 
	$Æl_bôs_1
() {

26  ~(
BITFIELD_T
)0;

27 
	}
}

39 
πe_mbuf
 *

40 
	$_Æloc_mbuf
(
uöt16_t
 
d©a_Àn
){

41 
πe_mbuf
 *
m
 = 
	`mÆloc
((rte_mbuf));

43 
m
->
pkt
.
√xt
 = 
NULL
;

44 
m
->
pkt
.
pkt_Àn
 = 
d©a_Àn
;

45 
m
->
pkt
.
vœn_macù
.
d©a
 = 0;

46 
m
->
pkt
.
nb_£gs
 = 1;

47 
m
->
pkt
.
ö_p‹t
 = 0xff;

49 
m
->
ﬁ_Êags
 = 0;

50 
m
->
pkt
.
d©a
 = 
	`mÆloc
(
d©a_Àn
);

51 
m
->
pkt
.
d©a_Àn
 = data_len;

53 
m
->
pkt
.
hash
.
sched
 = 0;

55  
m
;

56 
	}
}

59 
	$_‰ì_mbuf
(
πe_mbuf
 *
m
)

61 
	`‰ì
(
m
->
pkt
.
d©a
);

62 
	`‰ì
(
m
);

63 
	}
}

66 
ã°_pktgí_∫d_bôs_öô
();

67 
ã°_pktgí_£t_øndom_bôfõld
();

68 
ã°_pktgí_∫d_bôs_≠∂y
();

74 
	$maö
() {

75 
	`ã°_pktgí_∫d_bôs_öô
();

76 
	`ã°_pktgí_£t_øndom_bôfõld
();

77 
	`ã°_pktgí_∫d_bôs_≠∂y
();

79 
	`d⁄e_ã°ög
();

81 
	}
}

87 
	$ã°_pktgí_∫d_bôs_öô
()

89 
∫d_bôs_t
 *
∫d
 = 
NULL
;

90 
i
;

92 
	`lives_ok
({ 
	`pktgí_∫d_bôs_öô
(

93 &
∫d
); }, "pktgen_rnd_bits_init() mustÇot crash");

94 
	`ok
(
∫d
 !
NULL
, "...ándállocate memory");

95 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
, "==", 0, "...ánd disableáll specs");

97 
i
 = 0; i < 
MAX_RND_BITFIELDS
; ++i) {

98 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
off£t
,

102 
i
);

103 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
™dMask
,

107 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
‹Mask
,

111 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
∫dMask
,

116 
	}
}

119 
	$ã°_pktgí_£t_øndom_bôfõld
()

121 
∫d_bôs_t
 *
∫d
 = 
NULL
;

122 
i
;

124 
	`pktgí_∫d_bôs_öô
(&
∫d
);

133 
	`pktgí_£t_øndom_bôfõld
(
∫d
,

137 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

142 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
MAX_RND_BITFIELDS
 + 1, 50, "01.X");

143 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

148 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 0, 50, "01&");

149 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

155 
i
 = 0; i < 
MAX_RND_BITFIELDS
; ++i) {

156 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, i, "01.X");

157 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

159 (1 << 
i
),

161 
i
,

162 
i
);

163 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
off£t
,

165 
i
,

167 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
™dMask
,

171 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
‹Mask
,

175 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
∫dMask
,

180 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, 0, "");

181 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

185 
i
);

187 
	}
}

190 
	$ã°_pktgí_∫d_bôs_≠∂y
()

192 
∫d_bôs_t
 *
∫d
 = 
NULL
;

193 
i
;

196 c⁄° 
uöt8_t
 
Æl_0x00
[64] = { 0 };

197 c⁄° 
uöt8_t
 
Æl_0xff
[64] = { [0 ... 63] = 0xff };

199 
πe_mbuf
 *
mbuf
 = 
	`_Æloc_mbuf
(64);

200 
uöt8_t
 *
d©a_±r
 = (uöt8_à*)
mbuf
->
pkt
.
d©a
;

202 
	`pktgí_∫d_bôs_öô
(&
∫d
);

206 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0x00, 64);

207 
	`pktgí_∫d_bôs_≠∂y
(
NULL
, &
mbuf
, 1, 
∫d
);

209 
	`cmp_mem
(
d©a_±r
,

210 
Æl_0x00
,

215 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0xff, 64);

216 
	`pktgí_∫d_bôs_≠∂y
(
NULL
, &
mbuf
, 1, 
∫d
);

218 
	`cmp_mem
(
d©a_±r
,

219 
Æl_0xff
,

224 
i
 = 1; i < 
MAX_BITFIELD_SIZE
; ++i) {

226 
mask0
[
i
 + 1], 
mask1
[ò+ 1], 
maskIgn
[ò+ 1], 
maskRnd
[i + 1];

227 
j
;

228 
j
 = 0; j < 
i
; ++j) {

229 
mask0
[
j
] = '0';

230 
mask1
[
j
] = '1';

231 
maskIgn
[
j
] = '.';

232 
maskRnd
[
j
] = 'X';

234 
mask0
[
i
] = 
mask1
[i] = 
maskRnd
[i] = 
maskIgn
[i] = '\0';

253 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, i, 
mask0
);

254 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

256 (1 << 
i
),

258 
mask0
,

259 
i
,

260 
i
);

261 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
off£t
,

263 
i
,

265 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
™dMask
, "==", 
	`ht⁄l
(

266 ~(
uöt32_t
)0 >> 
i
),

268 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
‹Mask
, "==", 
	`ht⁄l
(

271 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
∫dMask
, "==", 
	`ht⁄l
(

278 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0x00, 64);

280 
	`lives_ok
({ 
	`pktgí_∫d_bôs_≠∂y
(
NULL
,

281 &
mbuf
,

283 
∫d
);

285 
	`cmp_mem
(
d©a_±r
,

286 
Æl_0x00
,

287 
i
,

289 
	`cmp_ok
(*(
uöt32_t
 *)&(
d©a_±r
[
i
]),

293 
	`cmp_mem
(
d©a_±r
 + 
i
 + 4,

294 
Æl_0x00
 + 
i
 + 4,

295 64 - (
i
 + 4),

301 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0xff, 64);

303 
	`lives_ok
({ 
	`pktgí_∫d_bôs_≠∂y
(
NULL
,

304 &
mbuf
,

306 
∫d
);

308 
	`cmp_mem
(
d©a_±r
,

309 
Æl_0xff
,

310 
i
,

312 
	`cmp_ok
(*(
uöt32_t
 *)&(
d©a_±r
[
i
]), "==",

313 
	`ht⁄l
(

314 ~(
uöt32_t
)0 >> 
i
),

316 
	`cmp_mem
(
d©a_±r
 + 
i
 + 4,

317 
Æl_0xff
 + 
i
 + 4,

318 64 - (
i
 + 4),

322 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, 0, "");

341 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, i, 
mask1
);

342 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
, "==", (1 << 
i
),

343 "Mask [%s] wôhÜígth %d mu° bêac˚±ed", 
mask1
, 
i
);

344 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
off£t
,

346 
i
,

348 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
™dMask
, "==", 
	`ht⁄l
(

349 ~(
uöt32_t
)0),

351 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
‹Mask
, "==",

352 
	`ht⁄l
(~(
uöt32_t
)0 << (
MAX_BITFIELD_SIZE
 - 
i
)),

354 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
∫dMask
, "==", 
	`ht⁄l
(

361 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0x00, 64);

363 
	`lives_ok
({ 
	`pktgí_∫d_bôs_≠∂y
(
NULL
,

364 &
mbuf
,

366 
∫d
);

368 
	`cmp_mem
(
d©a_±r
,

369 
Æl_0x00
,

370 
i
,

372 
	`cmp_ok
(*(
uöt32_t
 *)&(
d©a_±r
[
i
]), "==",

373 
	`ht⁄l
((~(
uöt32_t
)0Ë<< (
MAX_BITFIELD_SIZE
 - 
i
)),

375 
	`cmp_mem
(
d©a_±r
 + 
i
 + 4,

376 
Æl_0x00
 + 
i
 + 4,

377 64 - (
i
 + 4),

383 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0xff, 64);

385 
	`lives_ok
({ 
	`pktgí_∫d_bôs_≠∂y
(
NULL
,

386 &
mbuf
,

388 
∫d
);

390 
	`cmp_mem
(
d©a_±r
,

391 
Æl_0xff
,

392 
i
,

394 
	`cmp_ok
(*(
uöt32_t
 *)&(
d©a_±r
[
i
]), "==", ~(uint32_t)0,

396 
	`cmp_mem
(
d©a_±r
 + 
i
 + 4,

397 
Æl_0xff
 + 
i
 + 4,

398 64 - (
i
 + 4),

402 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, 0, "");

421 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, i, 
maskIgn
);

422 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

424 (1 << 
i
),

426 
maskIgn
,

427 
i
);

428 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
off£t
,

430 
i
,

432 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
™dMask
,

434 ~(
uöt32_t
)0,

436 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
‹Mask
,

440 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
∫dMask
,

448 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0x00, 64);

450 
	`lives_ok
({ 
	`pktgí_∫d_bôs_≠∂y
(
NULL
,

451 &
mbuf
,

453 
∫d
);

455 
	`cmp_mem
(
d©a_±r
,

456 
Æl_0x00
,

463 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0xff, 64);

465 
	`lives_ok
({ 
	`pktgí_∫d_bôs_≠∂y
(
NULL
,

466 &
mbuf
,

468 
∫d
);

470 
	`cmp_mem
(
d©a_±r
,

471 
Æl_0xff
,

476 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, 0, "");

495 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, i, 
maskRnd
);

496 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

498 (1 << 
i
),

500 
maskRnd
,

501 
i
);

502 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
off£t
,

504 
i
,

506 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
™dMask
, "==", 
	`ht⁄l
(

507 ~(
uöt32_t
)0 >> 
i
),

509 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
‹Mask
, "==", 
	`ht⁄l
(

512 
	`cmp_ok
(
∫d
->
•ecs
[
i
].
∫dMask
, "==",

513 
	`ht⁄l
(~(
uöt32_t
)0 << (
MAX_BITFIELD_SIZE
 - 
i
)),

516 
∫d_func
;

517 
∫d_func
 = 0;Ñnd_func < 2; ++rnd_func) {

521 i‡(
∫d_func
 == 0)

522 
	`pktgí_£t_∫d_func
(
Æl_bôs_0
);

524 
	`pktgí_£t_∫d_func
(
Æl_bôs_1
);

529 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0x00, 64);

531 
	`lives_ok
({ 
	`pktgí_∫d_bôs_≠∂y
(
NULL
,

532 &
mbuf
,

534 
∫d
);

536 
	`cmp_mem
(
d©a_±r
,

537 
Æl_0x00
,

538 
i
,

540 
	`cmp_ok
(*(
uöt32_t
 *)&(
d©a_±r
[
i
]), "==",

541 
	`ht⁄l
((
∫d_func
 ==

542 0Ë? 0 : (~(
uöt32_t
)0 <<

543 (
MAX_BITFIELD_SIZE
 - 
i
))),

545 
	`cmp_mem
(
d©a_±r
 + 
i
 + 4,

546 
Æl_0x00
 + 
i
 + 4,

547 64 - (
i
 + 4),

553 
	`mem£t
(
mbuf
->
pkt
.
d©a
, 0xff, 64);

555 
	`lives_ok
({ 
	`pktgí_∫d_bôs_≠∂y
(
NULL
,

556 &
mbuf
,

558 
∫d
);

560 
	`cmp_mem
(
d©a_±r
,

561 
Æl_0xff
,

562 
i
,

564 
	`cmp_ok
(*(
uöt32_t
 *)&(
d©a_±r
[
i
]), "==",

565 
	`ht⁄l
((
∫d_func
 ==

566 0Ë? (~(
uöt32_t
)0 >> 
i
) : ~(uint32_t)0),

568 
	`cmp_mem
(
d©a_±r
 + 
i
 + 4,

569 
Æl_0xff
 + 
i
 + 4,

570 64 - (
i
 + 4),

575 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 
i
, 0, "");

579 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 4, 50, "01");

580 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 2, 60, "10");

581 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

586 
	`pktgí_£t_øndom_bôfõld
(
∫d
, 4, 0, "");

587 
	`cmp_ok
(
∫d
->
a˘ive_•ecs
,

591 
	}
}

	@app/t/pktgen-range.t.c

9 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...Ë{ 
	}
}

11 
	~"pktgí.h
"

13 
pktgí_t
 
	gpktgí
;

17 
	$maö
() {

18 
	`∂™
(1);

19 
	`ok
(1, "ok works");

21 
	`d⁄e_ã°ög
();

23 
	}
}

	@app/t/pktgen-seq.t.c

8 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...Ë{ 
	}
}

10 
	~"pktgí.h
"

12 
pktgí_t
 
	gpktgí
;

16 
	$maö
() {

17 
	`∂™
(1);

18 
	`ok
(1, "ok works");

20 
	`d⁄e_ã°ög
();

22 
	}
}

	@app/t/pktgen-stats.t.c

9 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...Ë{ 
	}
}

11 
	$s¸n_¢¥ötf
(*
buff
, 
öt16_t
 
Àn
, c⁄° *
fmt
, ...Ë{ 
	}
}

16 
	gπe_ëh_lök
;

17 
	gπe_ëh_°©s
;

20 
	$πe_ëh_lök_gë_nowaô
(
uöt8_t
 
p‹t_id
, 
πe_ëh_lök
 *
ëh_lök
) {

21 
	}
}

24 
	$πe_ëh_Àd_⁄
(
uöt8_t
 
p‹t_id
Ë{  0; 
	}
}

26 
	$πe_ëh_Àd_off
(
uöt8_t
 
p‹t_id
Ë{  0; 
	}
}

28 
	$πe_ëh_°©s_gë
(
uöt8_t
 
p‹t_id
, 
πe_ëh_°©s
 *
°©s
Ë{ 
	}
}

30 
	~"pktgí.h
"

32 
pktgí_t
 
	gpktgí
;

36 
	$maö
() {

37 
	`∂™
(1);

38 
	`ok
(1, "ok works");

40 
	`d⁄e_ã°ög
();

42 
	}
}

	@app/t/pktgen-tcp.t.c

9 
	$maö
() {

10 
	`∂™
(1);

11 
	`ok
(1, "ok works");

13 
	`d⁄e_ã°ög
();

15 
	}
}

	@app/t/pktgen-udp.t.c

9 
	$maö
() {

10 
	`∂™
(1);

11 
	`ok
(1, "ok works");

13 
	`d⁄e_ã°ög
();

15 
	}
}

	@app/t/pktgen-vlan.t.c

8 
	~"pktgí.h
"

10 
pktgí_t
 
	gpktgí
;

14 
	$maö
() {

15 
	`∂™
(1);

16 
	`ok
(1, "ok works");

18 
	`d⁄e_ã°ög
();

20 
	}
}

	@app/t/pktgen.t.c

11 
	~<wr_s¸n.h
>

13 
	$wr_s¸n_˚¡î
(
öt16_t
 
r
, c⁄° *
fmt
, ...Ë{ 
	}
}

15 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...Ë{ 
	}
}

16 
wr_s¸n_t
 *
	gs¸n
 = 
NULL
;

22 
	$πe_ëh_dev_°›
(
uöt8_t
 
p‹t_id
Ë{ 
	}
}

24 
	$πe_ëh_dev_°¨t
(
uöt8_t
 
p‹t_id
Ë{  0; 
	}
}

26 
	gπe_cy˛es_vmw¨e_tsc_m≠
;

27 
__thªad
 
	g≥r_lc‹e__lc‹e_id
;

28 
πe_ëh_dev
 
	gπe_ëh_devi˚s
[
RTE_MAX_ETHPORTS
];

31 
ã°_pktgí_∑ckë_˘‹_IPv4_UDP
();

33 
ã°_pktgí_∑ckë_˘‹_IPv4_GRE_Ethî
();

41 
	$maö
() {

42 
	`ã°_pktgí_∑ckë_˘‹_IPv4_UDP
();

43 
	`ã°_pktgí_∑ckë_˘‹_IPv4_GRE_Ethî
();

45 
	`d⁄e_ã°ög
();

47 
	}
}

53 
	$ã°_pktgí_∑ckë_˘‹_IPv4_UDP
()

55 
p‹t_öfo_t
 
öfo
;

56 
pkt_£q_t
 
pkt
;

57 
uöt8_t
 *
d©a
;

59 
öfo
.
£q_pkt
 = &
pkt
;

60 
d©a
 = (
uöt8_t
 *)&
pkt
.
hdr
;

62 
pkt
 = (
pkt_£q_t
) {

63 .
ëh_d°_addr
 =

64 (
ëhî_addr
Ë{.
addr_byãs
 =

67 .
ëh_§c_addr
 =

68 (
ëhî_addr
Ë{.
addr_byãs
 =

72 .
ù_§c_addr
 = (192 << 24) + (168 << 16) + ( 0 << 8) +

74 .
ù_d°_addr
 = (192 << 24) + (168 << 16) + ( 1 << 8) +

76 .
ù_mask
 = (255 << 24) + (255 << 16) + (255 << 8) +

79 .
•‹t
 = 3333,

80 .
dp‹t
 = 4444,

81 .
ëhTy≥
 = 
ETHER_TYPE_IPv4
,

82 .
ùPrŸo
 = 
PG_IPPROTO_UDP
,

84 .
pktSize
 = 60,

87 
	`lives_ok
({ 
	`pktgí_∑ckë_˘‹
(&
öfo
,

92 
	`nŸe
("... with Ethernet header");

93 
	`cmp_mem_lô_ö¸
(
d©a
,

96 
	`cmp_mem_lô_ö¸
(
d©a
,

99 
	`cmp_mem_lô_ö¸
(
d©a
, (0x08, 0x00), " ...ánd correct EtherType");

101 
	`nŸe
("...ánd with IP header");

102 
	`cmp_mem_lô_ö¸
(
d©a
, (0x45), " ... with correct versionánd IHL");

103 
	`cmp_mem_lô_ö¸
(
d©a
, (0x00), " ...ánd correct TOS");

104 
	`cmp_mem_lô_ö¸
(
d©a
, (0x00, 0x2e),

106 
d©a
 += 2;

107 
	`cmp_mem_lô_ö¸
(
d©a
,

110 
	`cmp_mem_lô_ö¸
(
d©a
, (0x04), " ...ánd default TTL");

111 
	`cmp_mem_lô_ö¸
(
d©a
,

112 (
PG_IPPROTO_UDP
),

114 
d©a
 += 2;

115 
	`cmp_mem_lô_ö¸
(
d©a
, (192, 168, 0, 1), " ...ánd correct src IP");

116 
	`cmp_mem_lô_ö¸
(
d©a
, (192, 168, 1, 2), " ...ánd correct dest IP");

118 
	`nŸe
("...ánd with UDP header");

119 
	`cmp_mem_lô_ö¸
(
d©a
,

122 
	`cmp_mem_lô_ö¸
(
d©a
,

125 
	`cmp_mem_lô_ö¸
(
d©a
, (0, 26), " ...ánd correctÜength");

126 
d©a
 += 2;

129 
	}
}

132 
	$ã°_pktgí_∑ckë_˘‹_IPv4_GRE_Ethî
()

134 
p‹t_öfo_t
 
öfo
;

135 
pkt_£q_t
 
pkt
;

136 
uöt8_t
 *
d©a
;

138 
öfo
.
£q_pkt
 = &
pkt
;

139 
d©a
 = (
uöt8_t
 *)&
pkt
.
hdr
;

141 
	`pktgí_£t_p‹t_Êags
(&
öfo
, 
SEND_GRE_ETHER_HEADER
);

143 
pkt
 = (
pkt_£q_t
) {

144 .
ëh_d°_addr
 =

145 (
ëhî_addr
Ë{.
addr_byãs
 =

148 .
ëh_§c_addr
 =

149 (
ëhî_addr
Ë{.
addr_byãs
 =

153 .
ù_§c_addr
 = (192 << 24) + (168 << 16) + ( 0 << 8) +

155 .
ù_d°_addr
 = (192 << 24) + (168 << 16) + ( 1 << 8) +

157 .
ù_mask
 = (255 << 24) + (255 << 16) + (255 << 8) +

160 .
•‹t
 = 3333,

161 .
dp‹t
 = 4444,

162 .
ëhTy≥
 = 
ETHER_TYPE_IPv4
,

163 .
ùPrŸo
 = 
PG_IPPROTO_UDP
,

165 .
pktSize
 = 102,

168 
	`pktgí_∑ckë_˘‹
(&
öfo
, 0, 0);

170 
	`lives_ok
({ 
	`pktgí_∑ckë_˘‹
(&
öfo
,

175 
	`nŸe
("... with outer Ethernet header");

176 
	`cmp_mem_lô_ö¸
(
d©a
,

179 
	`cmp_mem_lô_ö¸
(
d©a
,

182 
	`cmp_mem_lô_ö¸
(
d©a
, (0x08, 0x00), " ...ánd correct EtherType");

184 
	`nŸe
("...ánd with outer IP header");

185 
	`cmp_mem_lô_ö¸
(
d©a
, (0x45), " ... with correct versionánd IHL");

186 
	`cmp_mem_lô_ö¸
(
d©a
, (0x00), " ...ánd correct TOS");

187 
	`cmp_mem_lô_ö¸
(
d©a
, (0x00, 0x58),

189 
d©a
 += 2;

190 
	`cmp_mem_lô_ö¸
(
d©a
,

193 
	`cmp_mem_lô_ö¸
(
d©a
, (0x40), " ...ánd default TTL");

194 
	`cmp_mem_lô_ö¸
(
d©a
,

195 (
PG_IPPROTO_GRE
),

197 
d©a
 += 2;

198 
	`cmp_mem_lô_ö¸
(
d©a
, (10, 10, 1, 1), " ...ánd correct src IP");

199 
	`cmp_mem_lô_ö¸
(
d©a
, (10, 10, 1, 2), " ...ánd correct dest IP");

201 
	`nŸe
("...ánd with GRE header");

202 
	`cmp_mem_lô_ö¸
(
d©a
,

205 
	`cmp_mem_lô_ö¸
(
d©a
, (0x65, 0x58),

207 
d©a
 += 4;

210 
	`nŸe
("... with inner Ethernet header");

211 
	`cmp_mem_lô_ö¸
(
d©a
,

214 
	`cmp_mem_lô_ö¸
(
d©a
,

217 
	`cmp_mem_lô_ö¸
(
d©a
, (0x08, 0x00), " ...ánd correct EtherType");

219 
	`nŸe
("...ánd with inner IP header");

220 
	`cmp_mem_lô_ö¸
(
d©a
, (0x45), " ... with correct versionánd IHL");

221 
	`cmp_mem_lô_ö¸
(
d©a
, (0x00), " ...ánd correct TOS");

222 
	`cmp_mem_lô_ö¸
(
d©a
, (0x00, 0x2e),

224 
d©a
 += 2;

225 
	`cmp_mem_lô_ö¸
(
d©a
,

228 
	`cmp_mem_lô_ö¸
(
d©a
, (0x04), " ...ánd default TTL");

229 
	`cmp_mem_lô_ö¸
(
d©a
,

230 (
PG_IPPROTO_UDP
),

232 
d©a
 += 2;

233 
	`cmp_mem_lô_ö¸
(
d©a
, (192, 168, 0, 1), " ...ánd correct src IP");

234 
	`cmp_mem_lô_ö¸
(
d©a
, (192, 168, 1, 2), " ...ánd correct dest IP");

236 
	`nŸe
("...ánd with UDP header");

237 
	`cmp_mem_lô_ö¸
(
d©a
,

240 
	`cmp_mem_lô_ö¸
(
d©a
,

243 
	`cmp_mem_lô_ö¸
(
d©a
, (0, 26), " ...ánd correctÜength");

244 
d©a
 += 2;

247 
	}
}

	@app/xorshift128plus.h

3 #i‚de‡
_XORSHIFT128PLUS_H_


4 
	#_XORSHIFT128PLUS_H_


	)

14 
	~<°döt.h
>

25 
uöt64_t
 
	gx‹_£ed
[ 2 ];

27 
ölöe
 
uöt64_t


28 
	$x‹_√xt
() {

29 
uöt64_t
 
s1
 = 
x‹_£ed
[ 0 ];

30 c⁄° 
uöt64_t
 
s0
 = 
x‹_£ed
[ 1 ];

32 
x‹_£ed
[ 0 ] = 
s0
;

33 
s1
 ^= s1 << 23;

34  ( 
x‹_£ed
[ 1 ] = ( 
s1
 ^ 
s0
 ^ ( s1 >> 17 ) ^ ( s0 >> 26 ) ) ) +

35 
s0
;

36 
	}
}

38 
ölöe
 
uöt32_t


39 
	$øndom_32
()

41  
	`x‹_√xt
();

42 
	}
}

44 
ölöe
 
uöt16_t


45 
	$øndom_16
()

47  
	`x‹_√xt
();

48 
	}
}

50 
ölöe
 
uöt8_t


51 
	$øndom_ch
()

53  "abcdefghigklmn›kr°uvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"[
	`øndom_16
() % 62];

54 
	}
}

	@gui/pktgen-gui.c

68 
	~"pktgí-gui.h
"

70 
GtkTªeModñ
 *

71 
	$fûl_chassis_öfo
()

73 
GtkTªeSt‹e
 *
åì°‹e_chassis
;

74 
GtkTªeIãr
 
t›Àvñ
, 
chûd
;

75 
uöt32_t
 
pid
;

76 
rxtx_t
 
˙t
;

78 
°r_p‹t
[15];

80 
åì°‹e_chassis
 = 
	`gtk_åì_°‹e_√w
(
NUM_COLS
, 
G_TYPE_STRING
);

83 
	`gtk_åì_°‹e_≠≥nd
(
åì°‹e_chassis
, &
t›Àvñ
, 
NULL
);

84 
	`gtk_åì_°‹e_£t
(
åì°‹e_chassis
, &
t›Àvñ
,

85 
COL_CHASSIS_PORTS
, "[127.0.0.1]",

88 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

89 
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
RTE_MAX_LCORE
);

90 i‡(
˙t
.
rxtx
 == 0)

93 
	`•rötf
(
°r_p‹t
, "%s%d", "P‹t-", 
pid
);

96 
	`gtk_åì_°‹e_≠≥nd
(
åì°‹e_chassis
, &
chûd
, &
t›Àvñ
);

97 
	`gtk_åì_°‹e_£t
(
åì°‹e_chassis
,

98 &
chûd
,

99 
COL_CHASSIS_PORTS
,

100 
°r_p‹t
,

104  
	`GTK_TREE_MODEL
(
åì°‹e_chassis
);

105 
	}
}

107 
GtkTªeModñ
 *

108 
	$fûl_p‹t_öfo
(
pid
, 
gboﬁón
 
is_°©ic
)

110 
GtkTªeIãr
 
t›Àvñ
;

111 
göt
 
i
;

113 i‡(
is_°©ic
 =
TRUE
) {

114 
åì°‹e_°©ic
[
pid
] = 
	`gtk_åì_°‹e_√w
(
NUM_COLS
,

115 
G_TYPE_STRING
);

116 
i
 = 0; i < (
PKTGEN_GUI_MAX_STATIC
); i++) {

118 
	`gtk_åì_°‹e_≠≥nd
(
åì°‹e_°©ic
[
pid
],

119 &
t›Àvñ
,

120 
NULL
);

121 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

122 &
t›Àvñ
,

123 
COL_CHASSIS_PORTS
,

128  
	`GTK_TREE_MODEL
(
åì°‹e_°©ic
[
pid
]);

130 
åì°‹e_°©s
[
pid
] = 
	`gtk_åì_°‹e_√w
(
NUM_COLS
, 
G_TYPE_INT
);

132 
i
 = 0; i < (
PKTGEN_GUI_MAX_STATS
); i++) {

134 
	`gtk_åì_°‹e_≠≥nd
(
åì°‹e_°©s
[
pid
],

135 &
t›Àvñ
,

136 
NULL
);

137 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

138 &
t›Àvñ
,

139 
COL_CHASSIS_PORTS
,

144  
	`GTK_TREE_MODEL
(
åì°‹e_°©s
[
pid
]);

146 
	}
}

149 
	$upd©e_p‹ts_°©ic_°©
(
pid
)

151 
uöt8_t
 
i
 = 0;

152 
GtkTªeIãr
 
t›Àvñ
;

153 
p‹t_öfo_t
 *
öfo
 = 
NULL
;

154 
pkt_£q_t
 *
pkt
 = 
NULL
;

155 
gch¨
 
buf
[20];

157 
öfo
 = &
pktgí
.öfo[
pid
];

158 
pkt
 = &
öfo
->
£q_pkt
[
SINGLE_PKT
];

160 
	`gtk_åì_modñ_gë_ôî_fú°
(
modñ_°©ic
[
pid
], &
t›Àvñ
);

162 
i
 = 0; i < (
PKTGEN_GUI_MAX_STATIC
); i++) {

163 
i
) {

165 
	`g_¢¥ötf
(

166 
buf
,

167 (
buf
),

169 (
öfo
->
fûl_∑âîn_ty≥
 ==

170 
ABC_FILL_PATTERN
) ? "abcd..." :

171 (
öfo
->
fûl_∑âîn_ty≥
 ==

172 
NO_FILL_PATTERN
) ? "None" :

173 (
öfo
->
fûl_∑âîn_ty≥
 ==

174 
ZERO_FILL_PATTERN
Ë? "Zîo" : 
öfo
->

175 
u£r_∑âîn
);

178 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

179 &
t›Àvñ
,

180 
COL_CHASSIS_PORTS
,

181 
buf
,

187 i‡(
	`πe_©omic64_ªad
(&
öfo
->
å™smô_cou¡
) == 0)

188 
	`g_¢¥ötf
(
buf
, (buf), "%s", "Forever");

190 
	`g_¢¥ötf
(
buf
,

191 (
buf
),

193 
	`πe_©omic64_ªad
(&
öfo
->

194 
å™smô_cou¡
));

196 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

197 &
t›Àvñ
,

198 
COL_CHASSIS_PORTS
,

199 
buf
,

205 
	`g_¢¥ötf
(
buf
, (buf), "%d", 
öfo
->
tx_øã
);

206 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

207 &
t›Àvñ
,

208 
COL_CHASSIS_PORTS
,

209 
buf
,

215 
	`g_¢¥ötf
(
buf
, (buf), "%d",

216 (
pkt
->
pktSize
 + 
FCS_SIZE
));

217 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

218 &
t›Àvñ
,

219 
COL_CHASSIS_PORTS
,

220 
buf
,

225 
	`g_¢¥ötf
(
buf
, (buf), "%d", 
öfo
->
tx_bur°
);

226 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

227 &
t›Àvñ
,

228 
COL_CHASSIS_PORTS
,

229 
buf
,

234 
	`g_¢¥ötf
(
buf
, (buf), "%d", 
pkt
->
•‹t
);

235 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

236 &
t›Àvñ
,

237 
COL_CHASSIS_PORTS
,

238 
buf
,

243 
	`g_¢¥ötf
(
buf
, (buf), "%d", 
pkt
->
dp‹t
);

244 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

245 &
t›Àvñ
,

246 
COL_CHASSIS_PORTS
,

247 
buf
,

251 
	`g_¢¥ötf
(

252 
buf
,

253 (
buf
),

255 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv4
) ? "IPv4" :

256 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_IPv6
) ? "IPv6" :

257 (
pkt
->
ëhTy≥
 =
ETHER_TYPE_ARP
) ? "ARP" :

258 (
pkt
->
ùPrŸo
 =
PG_IPPROTO_TCP
) ? "TCP" :

259 (
pkt
->
ùPrŸo
 ==

260 
PG_IPPROTO_ICMP
) ? "ICMP" : "UDP");

262 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

263 &
t›Àvñ
,

264 
COL_CHASSIS_PORTS
,

265 
buf
,

270 
	`g_¢¥ötf
(
buf
, (buf), "%d", 
pkt
->
vœnid
);

271 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

272 &
t›Àvñ
,

273 
COL_CHASSIS_PORTS
,

274 
buf
,

279 
	`°r˝y
(
buf
, 
	`öë_¡›4
(buf, (buf),

280 
	`ht⁄l
(
pkt
->
ù_d°_addr
.
addr
.
ùv4
.
s_addr
),

282 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

283 &
t›Àvñ
,

284 
COL_CHASSIS_PORTS
,

285 
buf
,

290 
	`°r˝y
(
buf
, 
	`öë_¡›4
(buf, (buf),

291 
	`ht⁄l
(
pkt
->
ù_§c_addr
.
addr
.
ùv4
.
s_addr
),

292 
pkt
->
ù_mask
));

293 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

294 &
t›Àvñ
,

295 
COL_CHASSIS_PORTS
,

296 
buf
,

301 
	`°r˝y
(
buf
, 
	`öë_mtﬂ
(buf, (buf),

302 &
pkt
->
ëh_d°_addr
));

303 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

304 &
t›Àvñ
,

305 
COL_CHASSIS_PORTS
,

306 
buf
,

311 
	`°r˝y
(
buf
, 
	`öë_mtﬂ
(buf, (buf),

312 &
pkt
->
ëh_§c_addr
));

313 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

314 &
t›Àvñ
,

315 
COL_CHASSIS_PORTS
,

316 
buf
,

321 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©ic
[
pid
],

322 &
t›Àvñ
,

323 
COL_CHASSIS_PORTS
,

328 i‡(
FALSE
 ==

329 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©ic
[
pid
],

330 &
t›Àvñ
))

333 
	}
}

336 
	$upd©e_p‹ts_°©
(* 
¨g
)

338 
GtkWidgë
 *
wödow
 = (GtkWidgë *)
¨g
;

339 
pid
 = 0;

340 
p‹t_öfo_t
 *
öfo
 = 
NULL
;

342 
GtkTªeIãr
 
t›Àvñ
;

343 
GtkTªeIãr
 
tŸT›Àvñ
;

344 
rxtx_t
 
˙t
;

345 
ëh_°©s_t
 
tŸ_°©s
 = {0};

347 
	`¥ötf
("Here\n");

348 i‡(
gui_¸óãd
 =
TRUE
) {

349 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

350 
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
RTE_MAX_LCORE
);

351 i‡(
˙t
.
rxtx
 == 0)

354 
öfo
 = &
pktgí
.öfo[
pid
];

356 
tŸ_°©s
.
ùackës
 +
öfo
->
øã_°©s
.ipackets;

357 
tŸ_°©s
.
›ackës
 +
öfo
->
øã_°©s
.opackets;

358 
tŸ_°©s
.
ibyãs
 +
öfo
->
øã_°©s
.ibytes;

359 
tŸ_°©s
.
obyãs
 +
öfo
->
øã_°©s
.obytes;

360 
tŸ_°©s
.
õº‹s
 +
öfo
->
øã_°©s
.ierrors;

361 
tŸ_°©s
.
€º‹s
 +
öfo
->
øã_°©s
.oerrors;

363 
tŸ_°©s
.
imis£d
 +
öfo
->
øã_°©s
.imissed;

364 #i‡
RTE_VERSION
 < 
	`RTE_VERSION_NUM
(2, 2, 0, 0)

365 
tŸ_°©s
.
ibad¸c
 +
öfo
->
øã_°©s
.ibadcrc;

366 
tŸ_°©s
.
ibadÀn
 +
öfo
->
øã_°©s
.ibadlen;

368 
tŸ_°©s
.
imˇ°s
 +
öfo
->
øã_°©s
.imcasts;

369 
tŸ_°©s
.
rx_nombuf
 +
öfo
->
øã_°©s
.rx_nombuf;

371 
	`gtk_åì_modñ_gë_ôî_fú°
(
modñ_°©s
[
pid
],

372 &
t›Àvñ
);

375 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

376 &
t›Àvñ
,

377 
COL_CHASSIS_PORTS
,

378 
öfo
->
øã_°©s
.
ùackës
,

381 i‡(
FALSE
 ==

382 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

383 &
t›Àvñ
))

384 
_exô
;

386 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

387 &
t›Àvñ
,

388 
COL_CHASSIS_PORTS
,

389 
öfo
->
øã_°©s
.
›ackës
,

391 i‡(
FALSE
 ==

392 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

393 &
t›Àvñ
))

394 
_exô
;

396 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

397 &
t›Àvñ
,

398 
COL_CHASSIS_PORTS
,

399 
	`iBôsTŸÆ
(

400 
öfo
->
øã_°©s
Ë/ 
Mûli⁄
,

402 i‡(
FALSE
 ==

403 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

404 &
t›Àvñ
))

405 
_exô
;

407 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

408 &
t›Àvñ
,

409 
COL_CHASSIS_PORTS
,

410 
	`oBôsTŸÆ
(

411 
öfo
->
øã_°©s
Ë/ 
Mûli⁄
,

413 i‡(
FALSE
 ==

414 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

415 &
t›Àvñ
))

416 
_exô
;

419 
¥ev_°©s_vÆ
[
pid
].
__brﬂdˇ°
 = 
öfo
->
sizes
.
brﬂdˇ°
;

420 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

421 &
t›Àvñ
,

422 
COL_CHASSIS_PORTS
,

423 
öfo
->
sizes
.
brﬂdˇ°
,

426 i‡(
FALSE
 ==

427 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

428 &
t›Àvñ
))

429 
_exô
;

431 
¥ev_°©s_vÆ
[
pid
].
__mu…iˇ°
 = 
öfo
->
sizes
.
mu…iˇ°
;

432 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

433 &
t›Àvñ
,

434 
COL_CHASSIS_PORTS
,

435 
öfo
->
sizes
.
mu…iˇ°
,

438 i‡(
FALSE
 ==

439 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

440 &
t›Àvñ
))

441 
_exô
;

443 
¥ev_°©s_vÆ
[
pid
].
__64
 = 
öfo
->
sizes
.
_64
;

444 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

445 &
t›Àvñ
,

446 
COL_CHASSIS_PORTS
,

447 
öfo
->
sizes
.
_64
,

450 i‡(
FALSE
 ==

451 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

452 &
t›Àvñ
))

453 
_exô
;

455 
¥ev_°©s_vÆ
[
pid
].
__65_127
 = 
öfo
->
sizes
.
_65_127
;

456 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

457 &
t›Àvñ
,

458 
COL_CHASSIS_PORTS
,

459 
öfo
->
sizes
.
_65_127
,

461 i‡(
FALSE
 ==

462 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

463 &
t›Àvñ
))

464 
_exô
;

466 
¥ev_°©s_vÆ
[
pid
].
__128_255
 = 
öfo
->
sizes
.
_128_255
;

467 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

468 &
t›Àvñ
,

469 
COL_CHASSIS_PORTS
,

470 
öfo
->
sizes
.
_128_255
,

472 i‡(
FALSE
 ==

473 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

474 &
t›Àvñ
))

475 
_exô
;

477 
¥ev_°©s_vÆ
[
pid
].
__256_511
 = 
öfo
->
sizes
.
_256_511
;

478 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

479 &
t›Àvñ
,

480 
COL_CHASSIS_PORTS
,

481 
öfo
->
sizes
.
_256_511
,

483 i‡(
FALSE
 ==

484 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

485 &
t›Àvñ
))

486 
_exô
;

488 
¥ev_°©s_vÆ
[
pid
].
__512_1023
 = 
öfo
->
sizes
.
_512_1023
;

489 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

490 &
t›Àvñ
,

491 
COL_CHASSIS_PORTS
,

492 
öfo
->
sizes
.
_512_1023
,

494 i‡(
FALSE
 ==

495 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

496 &
t›Àvñ
))

497 
_exô
;

499 
¥ev_°©s_vÆ
[
pid
].
__1024_1518
 =

500 
öfo
->
sizes
.
_1024_1518
;

501 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

502 &
t›Àvñ
,

503 
COL_CHASSIS_PORTS
,

504 
öfo
->
sizes
.
_1024_1518
,

506 i‡(
FALSE
 ==

507 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

508 &
t›Àvñ
))

509 
_exô
;

512 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

513 &
t›Àvñ
,

514 
COL_CHASSIS_PORTS
,

515 
öfo
->
sizes
.
ru¡
,

517 i‡(
FALSE
 ==

518 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

519 &
t›Àvñ
))

520 
_exô
;

522 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

523 &
t›Àvñ
,

524 
COL_CHASSIS_PORTS
,

525 
öfo
->
sizes
.
jumbo
,

527 i‡(
FALSE
 ==

528 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

529 &
t›Àvñ
))

530 
_exô
;

533 
¥ev_°©s_vÆ
[
pid
].
__õº‹s
 =

534 
öfo
->
p‹t_°©s
.
õº‹s
;

535 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

536 &
t›Àvñ
,

537 
COL_CHASSIS_PORTS
,

538 
öfo
->
p‹t_°©s
.
õº‹s
,

540 i‡(
FALSE
 ==

541 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

542 &
t›Àvñ
))

543 
_exô
;

545 
¥ev_°©s_vÆ
[
pid
].
__€º‹s
 =

546 
öfo
->
p‹t_°©s
.
€º‹s
;

547 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

548 &
t›Àvñ
,

549 
COL_CHASSIS_PORTS
,

550 
öfo
->
p‹t_°©s
.
€º‹s
,

552 i‡(
FALSE
 ==

553 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

554 &
t›Àvñ
))

555 
_exô
;

558 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

559 &
t›Àvñ
,

560 
COL_CHASSIS_PORTS
,

561 
öfo
->
p‹t_°©s
.
ùackës
,

563 i‡(
FALSE
 ==

564 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

565 &
t›Àvñ
))

566 
_exô
;

568 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

569 &
t›Àvñ
,

570 
COL_CHASSIS_PORTS
,

571 
öfo
->
p‹t_°©s
.
›ackës
,

573 i‡(
FALSE
 ==

574 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

575 &
t›Àvñ
))

576 
_exô
;

579 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

580 &
t›Àvñ
,

581 
COL_CHASSIS_PORTS
,

582 
	`iBôsTŸÆ
(

583 
öfo
->
p‹t_°©s
Ë/ 
Mûli⁄
,

585 i‡(
FALSE
 ==

586 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

587 &
t›Àvñ
))

588 
_exô
;

590 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

591 &
t›Àvñ
,

592 
COL_CHASSIS_PORTS
,

593 
	`oBôsTŸÆ
(

594 
öfo
->
p‹t_°©s
Ë/ 
Mûli⁄
,

596 i‡(
FALSE
 ==

597 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

598 &
t›Àvñ
))

599 
_exô
;

602 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

603 &
t›Àvñ
,

604 
COL_CHASSIS_PORTS
,

605 
öfo
->
°©s
.
¨p_pkts
,

607 i‡(
FALSE
 ==

608 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pid
],

609 &
t›Àvñ
))

610 
_exô
;

612 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pid
],

613 &
t›Àvñ
,

614 
COL_CHASSIS_PORTS
,

615 
öfo
->
°©s
.
echo_pkts
,

617 
_exô
:

621 
	`gtk_åì_modñ_gë_ôî_fú°
(
modñ_°©s
[
pktgí
.
ídög_p‹t
],

622 &
tŸT›Àvñ
);

624 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pktgí
.
ídög_p‹t
],

625 &
tŸT›Àvñ
,

626 
COL_CHASSIS_PORTS
,

627 
tŸ_°©s
.
ùackës
,

629 i‡(
FALSE
 ==

630 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pktgí
.
ídög_p‹t
],

631 &
tŸT›Àvñ
))

632 
_exô_1
;

634 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pktgí
.
ídög_p‹t
],

635 &
tŸT›Àvñ
,

636 
COL_CHASSIS_PORTS
,

637 
tŸ_°©s
.
›ackës
,

639 i‡(
FALSE
 ==

640 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pktgí
.
ídög_p‹t
],

641 &
tŸT›Àvñ
))

642 
_exô_1
;

644 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pktgí
.
ídög_p‹t
],

645 &
tŸT›Àvñ
,

646 
COL_CHASSIS_PORTS
,

647 
	`iBôsTŸÆ
(
tŸ_°©s
Ë/ 
Mûli⁄
,

649 i‡(
FALSE
 ==

650 
	`gtk_åì_modñ_ôî_√xt
(
modñ_°©s
[
pktgí
.
ídög_p‹t
],

651 &
tŸT›Àvñ
))

652 
_exô_1
;

654 
	`gtk_åì_°‹e_£t
(
åì°‹e_°©s
[
pktgí
.
ídög_p‹t
],

655 &
tŸT›Àvñ
,

656 
COL_CHASSIS_PORTS
,

657 
	`oBôsTŸÆ
(
tŸ_°©s
Ë/ 
Mûli⁄
,

660 
_exô_1
:

661 
	`gtk_widgë_queue_døw
(
	`GTK_WIDGET
(
wödow
));

662 
	`gtk_widgë_show_Æl
(
wödow
);

664 
	}
}

667 
°¨t_°›_åaffic
(
GtkTªeModñ
 *
modñ
,

668 
GtkTªeP©h
 
__©åibuã__
((
unu£d
)Ë*
∑th
,

669 
GtkTªeIãr
 *
ôî
,

670 
gpoöãr
 
u£rd©a
)

672 
gch¨
 *
	g«me
;

673 
p‹t_öfo_t
 *
	göfo
 = 
NULL
;

674 
	gpid
;

675 
guöt
 *
	gÊag
 = (guöà*)
u£rd©a
;

677 
gtk_åì_modñ_gë
(
modñ
, 
ôî
, 
COL_CHASSIS_PORTS
, &
«me
, -1);

679 i‡(0 !
g_°rcmp0
(
«me
, "[127.0.0.1]")) {

680 
	goff£t
 = 
°æí
(
«me
);

681 
	gpid
 = 
©oi
((
«me
 + 
off£t
) - 1);

682 
	göfo
 = &
pktgí
.
öfo
[
pid
];

683 i‡((
	göfo
 !
NULL
Ë&& (*
Êag
 == 1))

684 
pktgí_°¨t_å™smôtög
(
öfo
);

685 i‡((
	göfo
 !
NULL
Ë&& (*
Êag
 == 2))

686 
pktgí_°›_å™smôtög
(
öfo
);

688 i‡(*
	gÊag
 == 1)

689 
f‹Æl_p‹ts
(
pktgí_°¨t_å™smôtög
(
öfo
));

691 
f‹Æl_p‹ts
(
pktgí_°›_å™smôtög
(
öfo
));

696 
	$about_dülog
()

698 
GdkPixbuf
 *
pixbuf
 = 
	`gdk_pixbuf_√w_‰om_fûe
("gui/ic⁄s/logo.≤g", 
NULL
);

700 
GtkWidgë
 *
about_dülog
 = 
	`gtk_about_dülog_√w
();

702 
	`gtk_about_dülog_£t_«me
(
	`GTK_ABOUT_DIALOG
(

703 
about_dülog
), 
PKTGEN_APP_NAME
);

704 
	`gtk_about_dülog_£t_vîsi⁄
(
	`GTK_ABOUT_DIALOG
(

705 
about_dülog
), 
PKTGEN_VERSION
);

706 
	`gtk_about_dülog_£t_c›yright
(
	`GTK_ABOUT_DIALOG
(

707 
about_dülog
), 
COPYRIGHT_MSG
);

708 
	`gtk_about_dülog_£t_commíts
(
	`GTK_ABOUT_DIALOG
(

709 
about_dülog
), 
POWERED_BY_DPDK
);

710 
	`gtk_about_dülog_£t_websôe
(
	`GTK_ABOUT_DIALOG
(

711 
about_dülog
), "http://dpdk.org");

712 
	`gtk_about_dülog_£t_li˚n£
(
	`GTK_ABOUT_DIALOG
(

713 
about_dülog
), 
öãl_c›yright
);

714 
	`gtk_about_dülog_£t_auth‹s
(
	`GTK_ABOUT_DIALOG
(
about_dülog
), 
auth‹s
);

715 
	`gtk_about_dülog_£t_logo
(
	`GTK_ABOUT_DIALOG
(
about_dülog
), 
pixbuf
);

716 
	`g_obje˘_uƒef
(
pixbuf
),Öixbu‡
NULL
;

717 
	`gtk_dülog_run
(
	`GTK_DIALOG
(
about_dülog
));

718 
	`gtk_widgë_de°roy
(
about_dülog
);

720 i‡(
about_dülog
) {

721 
	`gtk_wödow_¥e£¡
(
	`GTK_WINDOW
(
about_dülog
));

725 
	`g_sig«l_c⁄√˘
(
	`GTK_DIALOG
(
about_dülog
), "destroy",

726 
	`G_CALLBACK
(
gtk_widgë_de°royed
), &
about_dülog
);

727 
	}
}

730 
åaffic_°¨t_ˇŒback
(
GtkWidgë
 
__©åibuã__
(

731 (
unu£d
)Ë*
w
, 
gpoöãr
 
d©a
)

733 
guöt
 
	gÊag
 = 1;

734 
GtkTªeSñe˘i⁄
 *
	g£À˘i⁄
 = 
gtk_åì_võw_gë_£À˘i⁄
(

735 
GTK_TREE_VIEW
(
d©a
));

737 
gtk_åì_£À˘i⁄_£À˘ed_f‹óch
(
£À˘i⁄
,

738 
°¨t_°›_åaffic
,

739 (
gpoöãr
Ë& 
Êag
);

743 
åaffic_°›_ˇŒback
(
GtkWidgë
 
__©åibuã__
(

744 (
unu£d
)Ë*
w
, 
gpoöãr
 
d©a
)

746 
guöt
 
	gÊag
 = 2;

747 
GtkTªeSñe˘i⁄
 *
	g£À˘i⁄
 = 
gtk_åì_võw_gë_£À˘i⁄
(

748 
GTK_TREE_VIEW
(
d©a
));

750 
gtk_åì_£À˘i⁄_£À˘ed_f‹óch
(
£À˘i⁄
,

751 
°¨t_°›_åaffic
,

752 (
gpoöãr
Ë& 
Êag
);

756 
°¨t_°›_ˇ±uª
(
GtkTªeModñ
 *
modñ
,

757 
GtkTªeP©h
 
__©åibuã__
((
unu£d
)Ë*
∑th
,

758 
GtkTªeIãr
 *
ôî
,

759 
gpoöãr
 
u£rd©a
)

761 
gch¨
 *
	g«me
;

762 
p‹t_öfo_t
 *
	göfo
 = 
NULL
;

763 
	gpid
;

764 
guöt
 *
	gÊag
 = (guöà*)
u£rd©a
;

766 
gtk_åì_modñ_gë
(
modñ
, 
ôî
, 
COL_CHASSIS_PORTS
, &
«me
, -1);

768 i‡(0 !
g_°rcmp0
(
«me
, "[127.0.0.1]")) {

769 
	goff£t
 = 
°æí
(
«me
);

770 
	gpid
 = 
©oi
((
«me
 + 
off£t
) - 1);

771 
	göfo
 = &
pktgí
.
öfo
[
pid
];

772 i‡((
	göfo
 !
NULL
Ë&& (*
Êag
 == 1))

773 
pktgí_£t_ˇ±uª
(
öfo
, 
ENABLE_STATE
);

774 i‡((
	göfo
 !
NULL
Ë&& (*
Êag
 == 2))

775 
pktgí_£t_ˇ±uª
(
öfo
, 
DISABLE_STATE
);

780 
ˇ±uª_°¨t_ˇŒback
(
GtkWidgë
 
__©åibuã__
(

781 (
unu£d
)Ë*
w
, 
gpoöãr
 
d©a
)

783 
guöt
 
	gÊag
 = 1;

784 
GtkTªeSñe˘i⁄
 *
	g£À˘i⁄
 = 
gtk_åì_võw_gë_£À˘i⁄
(

785 
GTK_TREE_VIEW
(
d©a
));

787 
gtk_åì_£À˘i⁄_£À˘ed_f‹óch
(
£À˘i⁄
,

788 
°¨t_°›_ˇ±uª
,

789 (
gpoöãr
Ë& 
Êag
);

793 
ˇ±uª_°›_ˇŒback
(
GtkWidgë
 
__©åibuã__
(

794 (
unu£d
)Ë*
w
, 
gpoöãr
 
d©a
)

796 
guöt
 
	gÊag
 = 2;

797 
GtkTªeSñe˘i⁄
 *
	g£À˘i⁄
 = 
gtk_åì_võw_gë_£À˘i⁄
(

798 
GTK_TREE_VIEW
(
d©a
));

800 
gtk_åì_£À˘i⁄_£À˘ed_f‹óch
(
£À˘i⁄
,

801 
°¨t_°›_ˇ±uª
,

802 (
gpoöãr
Ë& 
Êag
);

806 
about_ˇŒback
(
GtkWidgë
 
__©åibuã__
(

807 (
unu£d
)Ë*
w
, 
gpoöãr
 
__©åibuã__
(

808 (
unu£d
)Ë
d©a
)

810 
about_dülog
();

813 
GtkWidgë
 *

814 
	$chassis_åì_võw
()

816 
GtkWidgë
 *
võw
;

817 
GtkTªeVõwCﬁumn
 *
cﬁ
;

818 
GtkCñlRídîî
 *
ªndîî
;

819 
GtkTªeModñ
 *
modñ
;

821 
GtkTªeSñe˘i⁄
 *
chassis_£À˘i⁄
;

823 
võw
 = 
	`gtk_åì_võw_√w
();

825 
cﬁ
 = 
	`gtk_åì_võw_cﬁumn_√w
();

827 
	`gtk_åì_võw_cﬁumn_£t_tôÀ
(
cﬁ
, "Chassis");

828 
	`gtk_åì_võw_cﬁumn_£t_ex∑nd
(
cﬁ
, 
TRUE
);

831 
	`gtk_åì_võw_≠≥nd_cﬁumn
(
	`GTK_TREE_VIEW
(
võw
), 
cﬁ
);

833 
ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

836 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
(
cﬁ
, 
ªndîî
, 
TRUE
);

840 
	`gtk_åì_võw_cﬁumn_add_©åibuã
(
cﬁ
,

841 
ªndîî
,

843 
COL_CHASSIS_PORTS
);

845 
	`gtk_åì_võw_£t_grid_löes
(
	`GTK_TREE_VIEW
(
võw
),

846 
GTK_TREE_VIEW_GRID_LINES_BOTH
);

848 
modñ
 = 
	`fûl_chassis_öfo
();

849 
	`gtk_åì_võw_£t_modñ
(
	`GTK_TREE_VIEW
(
võw
), 
modñ
);

850 
	`g_obje˘_uƒef
(
modñ
);

852 
	`gtk_åì_võw_ex∑nd_Æl
(
	`GTK_TREE_VIEW
(
võw
));

854 
chassis_£À˘i⁄
 = 
	`gtk_åì_võw_gë_£À˘i⁄
(
	`GTK_TREE_VIEW
(
võw
));

855 
	`gtk_åì_£À˘i⁄_£t_mode
(
chassis_£À˘i⁄
, 
GTK_SELECTION_MULTIPLE
);

857  
võw
;

858 
	}
}

860 
GtkWidgë
 *

861 
	$p‹t_åì_võw
(
p‹t_id
, c⁄° *
tôÀ
, 
gboﬁón
 
is_°©ic
)

863 
GtkTªeVõwCﬁumn
 *
cﬁ_°©s
;

864 
GtkCñlRídîî
 *
ªndîî_°©s
;

865 
°r_p‹t
[15];

867 i‡(
p‹t_id
 !()(
pktgí
.
ídög_p‹t
))

868 
	`•rötf
(
°r_p‹t
, "%s%d", 
tôÀ
, 
p‹t_id
);

870 
	`•rötf
(
°r_p‹t
, "%s", 
tôÀ
);

872 i‡(
is_°©ic
 =
TRUE
) {

873 
võw_°©ic
[
p‹t_id
] = 
	`gtk_åì_võw_√w
();

874 
	`gtk_åì_võw_£t_hódîs_visibÀ
(
	`GTK_TREE_VIEW
(
võw_°©ic
[
p‹t_id
]), 
TRUE
);

876 
võw_°©s
[
p‹t_id
] = 
	`gtk_åì_võw_√w
();

877 
	`gtk_åì_võw_£t_hódîs_visibÀ
(
	`GTK_TREE_VIEW
(
võw_°©s
[
p‹t_id
]), 
TRUE
);

880 
cﬁ_°©s
 = 
	`gtk_åì_võw_cﬁumn_√w
();

882 
	`gtk_åì_võw_cﬁumn_£t_tôÀ
(
cﬁ_°©s
, 
°r_p‹t
);

884 
	`gtk_åì_võw_cﬁumn_£t_Æignmít
(
cﬁ_°©s
, 0.5);

885 
	`gtk_åì_võw_cﬁumn_£t_mö_width
(
cﬁ_°©s
, 30);

887 
	`gtk_åì_võw_cﬁumn_£t_ex∑nd
(
cﬁ_°©s
, 
TRUE
);

889 i‡(
is_°©ic
 =
TRUE
)

891 
	`gtk_åì_võw_≠≥nd_cﬁumn
(
	`GTK_TREE_VIEW
(

892 
võw_°©ic
[
p‹t_id
]),

893 
cﬁ_°©s
);

896 
	`gtk_åì_võw_≠≥nd_cﬁumn
(
	`GTK_TREE_VIEW
(

897 
võw_°©s
[
p‹t_id
]),

898 
cﬁ_°©s
);

900 
ªndîî_°©s
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

903 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
(
cﬁ_°©s
, 
ªndîî_°©s
, 
TRUE
);

907 
	`gtk_åì_võw_cﬁumn_add_©åibuã
(
cﬁ_°©s
,

908 
ªndîî_°©s
,

910 
COL_CHASSIS_PORTS
);

912 i‡(
is_°©ic
 =
TRUE
) {

913 
	`gtk_åì_võw_£t_grid_löes
(
	`GTK_TREE_VIEW
(

914 
võw_°©ic
[
p‹t_id
]),

915 
GTK_TREE_VIEW_GRID_LINES_BOTH
);

916 
modñ_°©ic
[
p‹t_id
] = 
	`fûl_p‹t_öfo
’‹t_id, 
TRUE
);

917 
	`gtk_åì_võw_£t_modñ
(
	`GTK_TREE_VIEW
(
võw_°©ic
[
p‹t_id
]),

918 
modñ_°©ic
[
p‹t_id
]);

919  
võw_°©ic
[
p‹t_id
];

921 
	`gtk_åì_võw_£t_grid_löes
(
	`GTK_TREE_VIEW
(
võw_°©s
[
p‹t_id
]),

922 
GTK_TREE_VIEW_GRID_LINES_BOTH
);

923 
modñ_°©s
[
p‹t_id
] = 
	`fûl_p‹t_öfo
’‹t_id, 
FALSE
);

924 
	`gtk_åì_võw_£t_modñ
(
	`GTK_TREE_VIEW
(
võw_°©s
[
p‹t_id
]),

925 
modñ_°©s
[
p‹t_id
]);

926  
võw_°©s
[
p‹t_id
];

928 
	}
}

931 
GtkWidgë
 *

932 
	$buâ⁄_box
(
GtkWidgë
 *
võw
, c⁄° *
tôÀ
, 
göt
 
œyout
)

934 
GtkWidgë
 *
‰ame
;

935 
GtkWidgë
 *
bbox
;

937 
GtkWidgë
 *
buâ⁄ImageSå
, *
buâ⁄ImageSç
, *
buâ⁄ImageC≠Så
,

938 *
buâ⁄ImageC≠Sç
, *
buâ⁄ImageAbt
;

940 
GtkSëtögs
 *
deÁu…_£âögs
 = 
	`gtk_£âögs_gë_deÁu…
();

942 
	`g_obje˘_£t
(
deÁu…_£âögs
, "gtk-buâ⁄-images", 
TRUE
, 
NULL
);

944 
buâ⁄ImageSå
 = 
	`gtk_image_√w
();

945 
	`gtk_image_£t_‰om_fûe
(
	`GTK_IMAGE
(
buâ⁄ImageSå
), "gui/icons/traffic_start.png");

947 
åaffic_°¨t_buâ⁄
 = 
	`gtk_buâ⁄_√w
();

948 
	`gtk_widgë_£t_toﬁtù_ãxt
(
	`GTK_WIDGET
(
åaffic_°¨t_buâ⁄
), "Start Traffic");

949 
	`gtk_buâ⁄_£t_ªlõf
((
GtkBuâ⁄
 *)
åaffic_°¨t_buâ⁄
, 
GTK_RELIEF_NONE
);

950 
	`gtk_buâ⁄_£t_image
((
GtkBuâ⁄
 *)
åaffic_°¨t_buâ⁄
, 
buâ⁄ImageSå
);

951 
	`gtk_buâ⁄_£t_image_posôi⁄
((
GtkBuâ⁄
 *)
åaffic_°¨t_buâ⁄
, 
GTK_POS_RIGHT
);

953 
‰ame
 = 
	`gtk_‰ame_√w
(
tôÀ
);

954 
bbox
 = 
	`gtk_vbuâ⁄_box_√w
();

956 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
‰ame
), 
bbox
);

958 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
åaffic_°¨t_buâ⁄
), 5);

959 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
bbox
), 
åaffic_°¨t_buâ⁄
);

961 
	`gtk_sig«l_c⁄√˘
(
	`GTK_OBJECT
(
åaffic_°¨t_buâ⁄
),

963 
	`GTK_SIGNAL_FUNC
(
åaffic_°¨t_ˇŒback
),

964 
võw
);

966 
åaffic_°›_buâ⁄
 = 
	`gtk_buâ⁄_√w
();

967 
	`gtk_widgë_£t_toﬁtù_ãxt
(
	`GTK_WIDGET
(
åaffic_°›_buâ⁄
), "Stop Traffic");

969 
buâ⁄ImageSç
 = 
	`gtk_image_√w
();

970 
	`gtk_image_£t_‰om_fûe
(
	`GTK_IMAGE
(
buâ⁄ImageSç
), "gui/icons/traffic_stop.png");

971 
	`gtk_buâ⁄_£t_ªlõf
((
GtkBuâ⁄
 *)
åaffic_°›_buâ⁄
, 
GTK_RELIEF_NONE
);

972 
	`gtk_buâ⁄_£t_image
((
GtkBuâ⁄
 *)
åaffic_°›_buâ⁄
, 
buâ⁄ImageSç
);

973 
	`gtk_buâ⁄_£t_image_posôi⁄
((
GtkBuâ⁄
 *)
åaffic_°›_buâ⁄
, 
GTK_POS_RIGHT
);

975 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
åaffic_°›_buâ⁄
), 5);

976 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
bbox
), 
åaffic_°›_buâ⁄
);

978 
	`gtk_sig«l_c⁄√˘
(
	`GTK_OBJECT
(
åaffic_°›_buâ⁄
),

980 
	`GTK_SIGNAL_FUNC
(
åaffic_°›_ˇŒback
),

981 
võw
);

983 
ˇ±uª_°¨t_buâ⁄
 = 
	`gtk_buâ⁄_√w
();

984 
	`gtk_widgë_£t_toﬁtù_ãxt
(
	`GTK_WIDGET
(
ˇ±uª_°¨t_buâ⁄
), "Start Capture");

986 
buâ⁄ImageC≠Så
 = 
	`gtk_image_√w
();

987 
	`gtk_image_£t_‰om_fûe
(
	`GTK_IMAGE
(
buâ⁄ImageC≠Så
),

989 
	`gtk_buâ⁄_£t_ªlõf
((
GtkBuâ⁄
 *)
ˇ±uª_°¨t_buâ⁄
, 
GTK_RELIEF_NONE
);

990 
	`gtk_buâ⁄_£t_image
((
GtkBuâ⁄
 *)
ˇ±uª_°¨t_buâ⁄
, 
buâ⁄ImageC≠Så
);

991 
	`gtk_buâ⁄_£t_image_posôi⁄
((
GtkBuâ⁄
 *)
ˇ±uª_°¨t_buâ⁄
, 
GTK_POS_LEFT
);

993 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
ˇ±uª_°¨t_buâ⁄
), 5);

994 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
bbox
), 
ˇ±uª_°¨t_buâ⁄
);

996 
	`gtk_sig«l_c⁄√˘
(
	`GTK_OBJECT
(
ˇ±uª_°¨t_buâ⁄
),

998 
	`GTK_SIGNAL_FUNC
(
ˇ±uª_°¨t_ˇŒback
),

999 
võw
);

1001 
ˇ±uª_°›_buâ⁄
 = 
	`gtk_buâ⁄_√w
();

1002 
	`gtk_widgë_£t_toﬁtù_ãxt
(
	`GTK_WIDGET
(
ˇ±uª_°›_buâ⁄
),"Stop Capture");

1004 
buâ⁄ImageC≠Sç
 = 
	`gtk_image_√w
();

1005 
	`gtk_image_£t_‰om_fûe
(
	`GTK_IMAGE
(
buâ⁄ImageC≠Sç
),

1007 
	`gtk_buâ⁄_£t_ªlõf
((
GtkBuâ⁄
 *)
ˇ±uª_°›_buâ⁄
, 
GTK_RELIEF_NONE
);

1008 
	`gtk_buâ⁄_£t_image
((
GtkBuâ⁄
 *)
ˇ±uª_°›_buâ⁄
, 
buâ⁄ImageC≠Sç
);

1009 
	`gtk_buâ⁄_£t_image_posôi⁄
((
GtkBuâ⁄
 *)
ˇ±uª_°›_buâ⁄
, 
GTK_POS_RIGHT
);

1011 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
ˇ±uª_°›_buâ⁄
), 5);

1012 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
bbox
), 
ˇ±uª_°›_buâ⁄
);

1014 
	`gtk_sig«l_c⁄√˘
(
	`GTK_OBJECT
(
ˇ±uª_°›_buâ⁄
),

1016 
	`GTK_SIGNAL_FUNC
(
ˇ±uª_°›_ˇŒback
),

1017 
võw
);

1019 
about_buâ⁄
 = 
	`gtk_buâ⁄_√w
();

1020 
	`gtk_widgë_£t_toﬁtù_ãxt
(
	`GTK_WIDGET
(
about_buâ⁄
), "About");

1022 
buâ⁄ImageAbt
 = 
	`gtk_image_√w
();

1023 
	`gtk_image_£t_‰om_fûe
(
	`GTK_IMAGE
(
buâ⁄ImageAbt
), "gui/icons/about.png");

1024 
	`gtk_buâ⁄_£t_ªlõf
((
GtkBuâ⁄
 *)
about_buâ⁄
, 
GTK_RELIEF_NONE
);

1025 
	`gtk_buâ⁄_£t_image
((
GtkBuâ⁄
 *)
about_buâ⁄
, 
buâ⁄ImageAbt
);

1026 
	`gtk_buâ⁄_£t_image_posôi⁄
((
GtkBuâ⁄
 *)
about_buâ⁄
, 
GTK_POS_RIGHT
);

1028 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
about_buâ⁄
), 5);

1029 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
bbox
), 
about_buâ⁄
);

1031 
	`gtk_sig«l_c⁄√˘
(
	`GTK_OBJECT
(
about_buâ⁄
),

1033 
	`GTK_SIGNAL_FUNC
(
about_ˇŒback
),

1034 
võw
);

1037 
	`gtk_buâ⁄_box_£t_œyout
(
	`GTK_BUTTON_BOX
(
bbox
), 
œyout
);

1039  
‰ame
;

1040 
	}
}

1043 
	$c⁄sﬁe_ˇŒback
(
GtkWidgë
 *
widgë
, GtkWidgë *
íåy
)

1045 
GtkTextM¨k
 *
m¨k
;

1046 
GtkAdju°mít
 *
vadj
;

1047 c⁄° 
gch¨
 *
íåy_ãxt
 = 
NULL
;

1048 c⁄° 
gch¨
 *
cmd_¥om±
 = "Pktgen> ";

1050 
íåy_ãxt
 = 
	`gtk_íåy_gë_ãxt
(
	`GTK_ENTRY
(
widgë
));

1052 
m¨k
 = 
	`gtk_ãxt_buf„r_gë_ö£π
(
buf„r
);

1053 
	`gtk_ãxt_buf„r_gë_ôî_©_m¨k
(
buf„r
, &
buf„r_ôî
, 
m¨k
);

1056 i‡(
	`gtk_ãxt_buf„r_gë_ch¨_cou¡
(
buf„r
))

1057 
	`gtk_ãxt_buf„r_ö£π
(
buf„r
, &
buf„r_ôî
, "\n", 1);

1060 
	`gtk_ãxt_buf„r_ö£π
(
buf„r
, &
buf„r_ôî
,

1061 
	`g_°rc⁄ˇt
(
cmd_¥om±
, 
íåy_ãxt
, 
NULL
), -1);

1063 
	`cmdlöe_ö
(
pktgí
.
˛
, 
íåy_ãxt
, 
	`°æí
(entry_text));

1064 
	`cmdlöe_ö
(
pktgí
.
˛
, "\r", 1);

1067 
vadj
 = 
	`gtk_s¸ﬁÀd_wödow_gë_vadju°mít
(
	`GTK_SCROLLED_WINDOW
(
íåy
));

1068 
	`gtk_adju°mít_£t_vÆue
(
vadj
, vadj->
uµî
);

1069 
	`gtk_s¸ﬁÀd_wödow_£t_vadju°mít
(
	`GTK_SCROLLED_WINDOW
(
íåy
), 
vadj
);

1071 
	`gtk_íåy_£t_ãxt
(
	`GTK_ENTRY
(
widgë
), "");

1072 
	}
}

1074 
GtkWidgë
 *

1075 
	$¸óã_chassis
()

1077 
GtkWidgë
 *
‰ame
;

1078 
GtkWidgë
 *
võw
;

1080 
‰ame
 = 
	`gtk_‰ame_√w
(
NULL
);

1082 
	`gtk_widgë_£t_size_ªque°
(
‰ame
, 300, 200);

1084 
võw
 = 
	`chassis_åì_võw
();

1086 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
‰ame
), 
võw
);

1088  
‰ame
;

1089 
	}
}

1091 
GtkWidgë
 *

1092 
	$pktgí_c⁄sﬁe_box
(c⁄° *
tôÀ
)

1094 
GtkWidgë
*
ãxtAªa
 = 
	`gtk_ãxt_võw_√w
();

1095 
GtkWidgë
*
s¸ﬁÀdwödow
 = 
	`gtk_s¸ﬁÀd_wödow_√w
(
NULL
, NULL);

1096 
GtkWidgë
*
ãxtE¡ry
 = 
	`gtk_íåy_√w
();

1097 
GtkWidgë
*
c⁄sﬁe
 = 
	`gtk_èbÀ_√w
(3, 1, 
FALSE
);

1099 
GtkWidgë
 *
‰ame
 = 
	`gtk_‰ame_√w
(
tôÀ
);

1102 
buf„r
 = 
	`gtk_ãxt_võw_gë_buf„r
(
	`GTK_TEXT_VIEW
(
ãxtAªa
));

1104 
	`gtk_ãxt_võw_£t_edôabÀ
(
	`GTK_TEXT_VIEW
(
ãxtAªa
), 
FALSE
);

1106 
	`gtk_s¸ﬁÀd_wödow_£t_pﬁicy
(
	`GTK_SCROLLED_WINDOW
(
s¸ﬁÀdwödow
),

1107 
GTK_POLICY_AUTOMATIC
, 
GTK_POLICY_ALWAYS
);

1109 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
s¸ﬁÀdwödow
), 
ãxtAªa
);

1110 
	`gtk_èbÀ_£t_homogíeous
(
	`GTK_TABLE
(
c⁄sﬁe
), 
FALSE
);

1112 
	`gtk_èbÀ_©èch_deÁu…s
(
	`GTK_TABLE
(

1113 
c⁄sﬁe
), 
s¸ﬁÀdwödow
, 0, 1, 0, 1);

1114 
	`gtk_èbÀ_©èch
(
	`GTK_TABLE
(

1115 
c⁄sﬁe
), 
ãxtE¡ry
, 0, 1, 1, 2, 
GTK_FILL
,

1116 
GTK_FILL
, 0, 0);

1118 
	`gtk_ãxt_buf„r_gë_ôî_©_off£t
(
buf„r
, &
buf„r_ôî
, 0);

1119 
	`gtk_íåy_£t_max_Àngth
(
	`GTK_ENTRY
(
ãxtE¡ry
), 250);

1120 
	`g_sig«l_c⁄√˘
(
ãxtE¡ry
, "activate",

1121 
	`G_CALLBACK
(
c⁄sﬁe_ˇŒback
),

1122 
s¸ﬁÀdwödow
);

1124 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
‰ame
), 
c⁄sﬁe
);

1126  
‰ame
;

1127 
	}
}

1129 
GtkTªeModñ
 *

1130 
	$pktgí_°©s_hódî_fûl
(
gboﬁón
 
is_°©ic
)

1132 
GtkTªeSt‹e
 *
°©s_œbñ_åì°‹e
;

1133 
GtkTªeIãr
 
t›Àvñ
;

1134 
göt
 
i
;

1136 
°©s_œbñ_åì°‹e
 = 
	`gtk_åì_°‹e_√w
(
NUM_COLS
, 
G_TYPE_STRING
);

1138 i‡(
is_°©ic
 =
TRUE
)

1139 
i
 = 0; i < 
PKTGEN_GUI_MAX_STATIC
; i++) {

1141 
	`gtk_åì_°‹e_≠≥nd
(
°©s_œbñ_åì°‹e
,

1142 &
t›Àvñ
,

1143 
NULL
);

1144 
	`gtk_åì_°‹e_£t
(
°©s_œbñ_åì°‹e
,

1145 &
t›Àvñ
,

1146 
COL_CHASSIS_PORTS
,

1147 
pktgí_°©ic_fõlds
[
i
],

1152 
i
 = 0; i < 
PKTGEN_GUI_MAX_STATS
; i++) {

1154 
	`gtk_åì_°‹e_≠≥nd
(
°©s_œbñ_åì°‹e
,

1155 &
t›Àvñ
,

1156 
NULL
);

1157 
	`gtk_åì_°‹e_£t
(
°©s_œbñ_åì°‹e
,

1158 &
t›Àvñ
,

1159 
COL_CHASSIS_PORTS
,

1160 
pktgí_°©s_fõlds
[
i
],

1164  
	`GTK_TREE_MODEL
(
°©s_œbñ_åì°‹e
);

1165 
	}
}

1167 
GtkWidgë
 *

1168 
	$pktgí_°©s_hódî_åì_võw
(
gboﬁón
 
is_°©ic
)

1170 
GtkTªeVõwCﬁumn
 *
°©s_œbñ_cﬁ
;

1171 
GtkCñlRídîî
 *
°©s_œbñ_ªndîî
;

1172 
GtkWidgë
 *
°©s_œbñ_võw
;

1173 
GtkTªeModñ
 *
°©s_œbñ_modñ
;

1175 
GtkTªeSñe˘i⁄
 *
°©s_œbñ_£À˘i⁄
;

1177 
°r_p‹t
[15] = "Port#";

1179 
°©s_œbñ_võw
 = 
	`gtk_åì_võw_√w
();

1181 
	`gtk_åì_võw_£t_hódîs_visibÀ
(
	`GTK_TREE_VIEW
(
°©s_œbñ_võw
), 
TRUE
);

1183 
°©s_œbñ_cﬁ
 = 
	`gtk_åì_võw_cﬁumn_√w
();

1185 
	`gtk_åì_võw_cﬁumn_£t_tôÀ
(
°©s_œbñ_cﬁ
, 
°r_p‹t
);

1187 
	`gtk_åì_võw_cﬁumn_£t_Æignmít
(
°©s_œbñ_cﬁ
, 0.5);

1189 
	`gtk_åì_võw_cﬁumn_£t_sizög
(
	`GTK_TREE_VIEW_COLUMN
(

1190 
°©s_œbñ_cﬁ
),

1191 
GTK_TREE_VIEW_COLUMN_FIXED
);

1192 
	`gtk_åì_võw_cﬁumn_£t_mö_width
(
°©s_œbñ_cﬁ
, 200);

1193 
	`gtk_åì_võw_cﬁumn_£t_max_width
(
°©s_œbñ_cﬁ
, 200);

1195 
	`gtk_åì_võw_cﬁumn_£t_fixed_width
(
°©s_œbñ_cﬁ
, 200);

1196 
	`gtk_åì_võw_≠≥nd_cﬁumn
(
	`GTK_TREE_VIEW
(

1197 
°©s_œbñ_võw
), 
°©s_œbñ_cﬁ
);

1199 
°©s_œbñ_ªndîî
 = 
	`gtk_˚Œ_ªndîî_ãxt_√w
();

1201 
	`gtk_åì_võw_cﬁumn_∑ck_°¨t
(
°©s_œbñ_cﬁ
,

1202 
°©s_œbñ_ªndîî
,

1203 
TRUE
);

1205 
	`gtk_åì_võw_cﬁumn_add_©åibuã
(
°©s_œbñ_cﬁ
,

1206 
°©s_œbñ_ªndîî
,

1208 
COL_CHASSIS_PORTS
);

1212 
	`g_obje˘_£t
(
°©s_œbñ_ªndîî
,

1213 "weight", 
PANGO_WEIGHT_BOLD
,

1214 "weight-£t", 
TRUE
,

1215 
NULL
);

1218 
	`g_obje˘_£t
(
°©s_œbñ_ªndîî
,

1220 "˚Œ-background-£t", 
TRUE
,

1221 
NULL
);

1223 
	`gtk_åì_võw_£t_grid_löes
(
	`GTK_TREE_VIEW
(
°©s_œbñ_võw
),

1224 
GTK_TREE_VIEW_GRID_LINES_BOTH
);

1226 
°©s_œbñ_modñ
 = 
	`pktgí_°©s_hódî_fûl
(
is_°©ic
);

1228 
	`gtk_åì_võw_£t_modñ
(
	`GTK_TREE_VIEW
(
°©s_œbñ_võw
),

1229 
°©s_œbñ_modñ
);

1230 
	`g_obje˘_uƒef
(
°©s_œbñ_modñ
);

1232 
°©s_œbñ_£À˘i⁄
 =

1233 
	`gtk_åì_võw_gë_£À˘i⁄
(
	`GTK_TREE_VIEW
(
°©s_œbñ_võw
));

1234 
	`gtk_åì_£À˘i⁄_£t_mode
(
°©s_œbñ_£À˘i⁄
, 
GTK_SELECTION_NONE
);

1236  
°©s_œbñ_võw
;

1237 
	}
}

1239 
GtkWidgë
 *

1240 
	$pktgí_show_°©ic_c⁄f
()

1242 
GtkWidgë
 *
hbox_°©s
;

1243 
GtkWidgë
 *
‰ame_h‹z_c⁄f
;

1244 
GtkWidgë
 *
s¸ﬁÀd_wödow
;

1245 
GtkWidgë
 *
èbÀ
;

1246 
uöt32_t
 
pid
;

1247 
rxtx_t
 
˙t
;

1250 
s¸ﬁÀd_wödow
 = 
	`gtk_s¸ﬁÀd_wödow_√w
(
NULL
, NULL);

1252 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
s¸ﬁÀd_wödow
), 10);

1254 
	`gtk_s¸ﬁÀd_wödow_£t_pﬁicy
(
	`GTK_SCROLLED_WINDOW
(
s¸ﬁÀd_wödow
),

1255 
GTK_POLICY_AUTOMATIC
, 
GTK_POLICY_ALWAYS
);

1257 
‰ame_h‹z_c⁄f
 = 
	`gtk_‰ame_√w
("Static configuration");

1258 
	`gtk_widgë_£t_size_ªque°
(
‰ame_h‹z_c⁄f
, -1, 200);

1260 
hbox_°©s
 = 
	`gtk_hbox_√w
(
FALSE
, 0);

1261 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
hbox_°©s
), 10);

1263 
	`gtk_box_∑ck_°¨t
(
	`GTK_BOX
(
hbox_°©s
), 
s¸ﬁÀd_wödow
, 
TRUE
, TRUE, 0);

1264 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
‰ame_h‹z_c⁄f
), 
hbox_°©s
);

1267 
èbÀ
 = 
	`gtk_èbÀ_√w
(1, (
pktgí
.
ídög_p‹t
 + 1), 
FALSE
);

1270 
	`gtk_èbÀ_£t_row_•acögs
(
	`GTK_TABLE
(
èbÀ
), 5);

1271 
	`gtk_èbÀ_£t_cﬁ_•acögs
(
	`GTK_TABLE
(
èbÀ
), 5);

1273 
	`gtk_s¸ﬁÀd_wödow_add_wôh_võwp‹t
(
	`GTK_SCROLLED_WINDOW
(

1274 
s¸ﬁÀd_wödow
), 
èbÀ
);

1275 
	`gtk_widgë_show
(
èbÀ
);

1278 
	`gtk_èbÀ_©èch_deÁu…s
(
	`GTK_TABLE
(

1279 
èbÀ
),

1280 
	`pktgí_°©s_hódî_åì_võw
(

1281 
TRUE
), 0, 1, 0, 1);

1284 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

1285 
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
RTE_MAX_LCORE
);

1286 i‡(
˙t
.
rxtx
 == 0)

1289 
	`gtk_èbÀ_©èch_deÁu…s
(
	`GTK_TABLE
(
èbÀ
),

1290 
	`p‹t_åì_võw
(
pid
, "P‹t", 
TRUE
),

1291 (
pid
 + 1), (pid + 2), 0, 1);

1292 
	`upd©e_p‹ts_°©ic_°©
(
pid
);

1295  
‰ame_h‹z_c⁄f
;

1296 
	}
}

1298 
GtkWidgë
 *

1299 
	$pktgí_show_°©i°ic_d©a
()

1301 
GtkWidgë
 *
‰ame_h‹z_°©s
;

1302 
GtkWidgë
 *
s¸ﬁÀd_wödow
;

1303 
GtkWidgë
 *
èbÀ
;

1304 
GtkWidgë
 *
hbox_°©s
;

1305 
uöt32_t
 
pid
;

1306 
rxtx_t
 
˙t
;

1309 
s¸ﬁÀd_wödow
 = 
	`gtk_s¸ﬁÀd_wödow_√w
(
NULL
, NULL);

1311 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
s¸ﬁÀd_wödow
), 10);

1313 
	`gtk_s¸ﬁÀd_wödow_£t_pﬁicy
(
	`GTK_SCROLLED_WINDOW
(
s¸ﬁÀd_wödow
),

1314 
GTK_POLICY_AUTOMATIC
, 
GTK_POLICY_ALWAYS
);

1316 
‰ame_h‹z_°©s
 = 
	`gtk_‰ame_√w
("Statistics");

1317 
	`gtk_widgë_£t_size_ªque°
(
‰ame_h‹z_°©s
, -1, 400);

1319 
hbox_°©s
 = 
	`gtk_hbox_√w
(
FALSE
, 0);

1320 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
hbox_°©s
), 10);

1322 
	`gtk_box_∑ck_°¨t
(
	`GTK_BOX
(
hbox_°©s
), 
s¸ﬁÀd_wödow
, 
TRUE
, TRUE, 0);

1323 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
‰ame_h‹z_°©s
), 
hbox_°©s
);

1326 
èbÀ
 = 
	`gtk_èbÀ_√w
(1, (
pktgí
.
ídög_p‹t
 + 1), 
FALSE
);

1329 
	`gtk_èbÀ_£t_row_•acögs
(
	`GTK_TABLE
(
èbÀ
), 5);

1330 
	`gtk_èbÀ_£t_cﬁ_•acögs
(
	`GTK_TABLE
(
èbÀ
), 5);

1332 
	`gtk_s¸ﬁÀd_wödow_add_wôh_võwp‹t
(
	`GTK_SCROLLED_WINDOW
(

1333 
s¸ﬁÀd_wödow
), 
èbÀ
);

1334 
	`gtk_widgë_show
(
èbÀ
);

1337 
	`gtk_èbÀ_©èch_deÁu…s
(
	`GTK_TABLE
(

1338 
èbÀ
),

1339 
	`pktgí_°©s_hódî_åì_võw
(

1340 
FALSE
), 0, 1, 0, 1);

1343 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

1344 
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
pktgí
.
l2p
, 
pid
, 
RTE_MAX_LCORE
);

1345 i‡(
˙t
.
rxtx
 == 0)

1348 
	`gtk_èbÀ_©èch_deÁu…s
(
	`GTK_TABLE
(
èbÀ
),

1349 
	`p‹t_åì_võw
(
pid
, "P‹t", 
FALSE
),

1350 (
pid
 + 1), (pid + 2), 0, 1);

1354 
	`gtk_èbÀ_©èch_deÁu…s
(
	`GTK_TABLE
(
èbÀ
),

1355 
	`p‹t_åì_võw
(
pktgí
.
ídög_p‹t
, "TŸÆ R©e", 
FALSE
),

1356 (
pktgí
.
ídög_p‹t
 + 1),

1357 (
pktgí
.
ídög_p‹t
 + 2), 0, 1);

1359  
‰ame_h‹z_°©s
;

1360 
	}
}

1363 
	$pktgí_gui_˛o£
()

1365 
gui_¸óãd
 = 
FALSE
;

1366 
	`gtk_maö_quô
();

1367 
	}
}

1370 
	$pktgí_°¨t_gui
()

1372 
GtkWidgë
 *
võw
;

1373 
GtkWidgë
 *
wödow
;

1374 
GtkWidgë
 *
vbox
;

1375 
GtkWidgë
 *
hbox
;

1376 
GtkWidgë
 *
‰ame
;

1378 
wödow
 = 
	`gtk_wödow_√w
(
GTK_WINDOW_TOPLEVEL
);

1379 
	`g_sig«l_c⁄√˘
(
wödow
, "de°roy", 
	`G_CALLBACK
(
pktgí_gui_˛o£
), 
NULL
);

1381 
võw
 = 
	`chassis_åì_võw
();

1383 
	`gtk_wödow_£t_tôÀ
(
	`GTK_WINDOW
(
wödow
), 
PKTGEN_GUI_APP_NAME
);

1385 
	`gtk_wödow_£t_deÁu…_size
(
	`GTK_WINDOW
(
wödow
), 700, 400);

1386 
	`gtk_wödow_£t_posôi⁄
(
	`GTK_WINDOW
(
wödow
), 
GTK_WIN_POS_CENTER
);

1388 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
wödow
), 10);

1390 
vbox
 = 
	`gtk_vbox_√w
(
FALSE
, 0);

1391 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
wödow
), 
vbox
);

1393 
‰ame
 = 
	`gtk_‰ame_√w
("Configuration");

1394 
	`gtk_box_∑ck_°¨t
(
	`GTK_BOX
(
vbox
), 
‰ame
, 
TRUE
, TRUE, 10);

1396 
hbox
 = 
	`gtk_hbox_√w
(
FALSE
, 0);

1398 
	`gtk_box_∑ck_°¨t
(
	`GTK_BOX
(
hbox
), 
	`¸óã_chassis
(), 
FALSE
, 
TRUE
, 0);

1400 
	`gtk_box_∑ck_°¨t
(
	`GTK_BOX
(
hbox
),

1401 
	`buâ⁄_box
(
võw
, "Traffic",

1402 
GTK_BUTTONBOX_CENTER
),

1403 
FALSE
, FALSE, 5);

1405 
	`gtk_box_∑ck_°¨t
(
	`GTK_BOX
(
hbox
),

1406 
	`pktgí_c⁄sﬁe_box
("C⁄sﬁe"), 
TRUE
, TRUE, 5);

1408 
	`gtk_box_∑ck_°¨t
(
	`GTK_BOX
(
vbox
),

1409 
	`pktgí_show_°©ic_c⁄f
(), 
TRUE
, TRUE, 10);

1411 
	`gtk_box_∑ck_°¨t
(
	`GTK_BOX
(
vbox
),

1412 
	`pktgí_show_°©i°ic_d©a
(), 
TRUE
, TRUE, 10);

1414 
	`gtk_c⁄èöî_£t_b‹dî_width
(
	`GTK_CONTAINER
(
hbox
), 10);

1415 
	`gtk_c⁄èöî_add
(
	`GTK_CONTAINER
(
‰ame
), 
hbox
);

1417 
	`gtk_c⁄èöî_add
 (
	`GTK_CONTAINER
 (
wödow
), 
võw
);

1419 
	`gtk_widgë_show_Æl
 (
wödow
);

1421 
gui_¸óãd
 = 
TRUE
;

1423 
	`g_timeout_add_£c⁄ds
(3, (
GSour˚Func
)
upd©e_p‹ts_°©
, 
wödow
);

1426 
	`gtk_maö
();

1427 
	}
}

1430 
	$pktgí_gui_maö
(
¨gc
, *
¨gv
[])

1432 
rc
;

1433 
±hªad_t
 
öc_x_thªad
;

1436 
	`gtk_öô
(&
¨gc
, &
¨gv
);

1439 
rc
 = 
	`±hªad_¸óã
(&
öc_x_thªad
, 
NULL
,

1440 (*)&
pktgí_°¨t_gui
, 
NULL
);

1441 i‡(
rc
) {

1442 
	`¥ötf
("Error creating GUIÅhread\n");

1445 
	}
}

	@gui/pktgen-gui.h

68 #i‚de‡
_PKTGEN_GUI_H_


69 
	#_PKTGEN_GUI_H_


	)

71 
	~<gtk/gtk.h
>

72 
	~<°dio.h
>

73 
	~<°dlib.h
>

74 
	~<°rög.h
>

75 
	~"pktgí.h
"

76 
	~"pktgí-p‹t-cfg.h
"

77 
	~"pktgí-cmds.h
"

78 
	~"œuxlib.h
"

80 
	#PKTGEN_GUI_MAX_STATS
 22

	)

81 
	#PKTGEN_GUI_MAX_STATIC
 13

	)

84 
GtkTªeSt‹e
 *
	gåì°‹e_°©s
[
RTE_MAX_ETHPORTS
];

85 
GtkTªeSt‹e
 *
	gåì°‹e_°©ic
[
RTE_MAX_ETHPORTS
];

86 
GtkWidgë
 *
	gvõw_°©ic
[
RTE_MAX_ETHPORTS
];

87 
GtkTªeModñ
 *
	gmodñ_°©ic
[
RTE_MAX_ETHPORTS
];

90 
GtkWidgë
 *
	gvõw_°©s
[
RTE_MAX_ETHPORTS
];

91 
GtkTªeModñ
 *
	gmodñ_°©s
[
RTE_MAX_ETHPORTS
];

93 
GtkWidgë
 *
	gåaffic_°¨t_buâ⁄
;

94 
GtkWidgë
 *
	gåaffic_°›_buâ⁄
;

95 
GtkWidgë
 *
	gˇ±uª_°¨t_buâ⁄
;

96 
GtkWidgë
 *
	gˇ±uª_°›_buâ⁄
;

97 
GtkWidgë
 *
	gabout_buâ⁄
;

99 
GtkTextBuf„r
 *
	gbuf„r
;

100 
GtkTextIãr
 
	gbuf„r_ôî
;

102 
	shighlight_°©s_s
 {

103 
uöt64_t
 
	m__64
;

104 
uöt64_t
 
	m__65_127
;

105 
uöt64_t
 
	m__128_255
;

106 
uöt64_t
 
	m__256_511
;

107 
uöt64_t
 
	m__512_1023
;

108 
uöt64_t
 
	m__1024_1518
;

109 
uöt64_t
 
	m__brﬂdˇ°
;

110 
uöt64_t
 
	m__mu…iˇ°
;

111 
uöt64_t
 
	m__õº‹s
;

112 
uöt64_t
 
	m__€º‹s
;

113 } 
	thighlight_°©s_t
;

115 
highlight_°©s_t
 
	g¥ev_°©s_vÆ
[
RTE_MAX_ETHPORTS
];

117 
gboﬁón
 
	ggui_¸óãd
 = 
FALSE
;

118 
pktgí_t
 
pktgí
;

119 
cmdlöe_∑r£_˘x_t
 
maö_˘x
[];

122 
	mCOL_CHASSIS_PORTS
 = 0,

123 
	mNUM_COLS


126 
pktgí_gui_maö
(
¨gc
, *
¨gv
[]);

127 
GtkWidgë
 *
pktgí_°ªams
();

129 c⁄° *
	gpktgí_°©ic_fõlds
[
PKTGEN_GUI_MAX_STATIC
] = {

145 c⁄° *
	gpktgí_°©s_fõlds
[
PKTGEN_GUI_MAX_STATS
] =

169 c⁄° 
	göãl_c›yright
[] = {

204 c⁄° 
gch¨
 *
	gauth‹s
[] = {"Created by:\n"

209 
	#COPYRIGHT_MSG
 \

210 "C›yrighà(cË<2010-2016>, Wöd Rivî Sy°ems, Inc. AŒÑight†ª£rved."

	)

211 
	#POWERED_BY_DPDK
 "GUI Vîsi⁄ 0.1.0\¿Powîed by I¡ñ¬Æ DPDK"

	)

213 
	#PKTGEN_GUI_APP_NAME
 "PktGí GUI (Vîsi⁄ 0.1.0)"

	)

	@lib/archive/lua-5.3.0/src/lapi.c

7 
	#œpi_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

29 
	~"lundump.h
"

30 
	~"lvm.h
"

34 c⁄° 
	glua_idít
[] =

35 "$LuaVîsi⁄: " 
LUA_COPYRIGHT
 " $"

36 "$LuaAuth‹s: " 
LUA_AUTHORS
 " $";

40 
	#NONVALIDVALUE
 
	`ˇ°
(
TVÆue
 *, 
luaO_nûobje˘
)

	)

43 
	#isvÆid
(
o
Ë((oË!
luaO_nûobje˘
)

	)

46 
	#i•£udo
(
i
Ë((iË<
LUA_REGISTRYINDEX
)

	)

49 
	#isupvÆue
(
i
Ë((iË< 
LUA_REGISTRYINDEX
)

	)

52 
	#is°acködex
(
i
, 
o
Ë(
	`isvÆid
(oË&& !
	`i•£udo
(i))

	)

54 
	#≠i_checkvÆidödex
(
o
Ë
	`≠i_check
(
	`isvÆid
(o), "övÆid index")

	)

56 
	#≠i_check°acködex
(
i
, 
o
) \

57 
	`≠i_check
(
	`is°acködex
(
i
, 
o
), "ödexÇŸ i¿thê°ack")

	)

60 
TVÆue
 *
	$ödex2addr
 (
lua_Sèã
 *
L
, 
idx
) {

61 
CÆlInfo
 *
ci
 = 
L
->ci;

62 i‡(
idx
 > 0) {

63 
TVÆue
 *
o
 = 
ci
->
func
 + 
idx
;

64 
	`≠i_check
(
idx
 <
ci
->
t›
 - (ci->
func
 + 1), "unacceptable index");

65 i‡(
o
 >
L
->
t›
Ë 
NONVALIDVALUE
;

66  
o
;

68 i‡(!
	`i•£udo
(
idx
)) {

69 
	`≠i_check
(
idx
 !0 && -idx <
L
->
t›
 - (
ci
->
func
 + 1), "invalid index");

70  
L
->
t›
 + 
idx
;

72 i‡(
idx
 =
LUA_REGISTRYINDEX
)

73  &
	`G
(
L
)->
l_ªgi°ry
;

75 
idx
 = 
LUA_REGISTRYINDEX
 - idx;

76 
	`≠i_check
(
idx
 <
MAXUPVAL
 + 1, "upvalue indexÅooÜarge");

77 i‡(
	`âi¶cf
(
ci
->
func
))

78  
NONVALIDVALUE
;

80 
CClosuª
 *
func
 = 
	`˛CvÆue
(
ci
->func);

81  (
idx
 <
func
->
nupvÆues
Ë? &func->
upvÆue
[idx-1] : 
NONVALIDVALUE
;

84 
	}
}

91 
	$grow°ack
 (
lua_Sèã
 *
L
, *
ud
) {

92 
size
 = *(*)
ud
;

93 
	`luaD_grow°ack
(
L
, 
size
);

94 
	}
}

97 
LUA_API
 
	$lua_check°ack
 (
lua_Sèã
 *
L
, 
n
) {

98 
ªs
;

99 
CÆlInfo
 *
ci
 = 
L
->ci;

100 
	`lua_lock
(
L
);

101 
	`≠i_check
(
n
 >= 0, "negative 'n'");

102 i‡(
L
->
°ack_œ°
 - L->
t›
 > 
n
)

103 
ªs
 = 1;

105 
öu£
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
EXTRA_STACK
;

106 i‡(
öu£
 > 
LUAI_MAXSTACK
 - 
n
)

107 
ªs
 = 0;

109 
ªs
 = (
	`luaD_øwru≈rŸe˘ed
(
L
, &
grow°ack
, &
n
Ë=
LUA_OK
);

111 i‡(
ªs
 && 
ci
->
t›
 < 
L
->t› + 
n
)

112 
ci
->
t›
 = 
L
->t› + 
n
;

113 
	`lua_u∆ock
(
L
);

114  
ªs
;

115 
	}
}

118 
LUA_API
 
	$lua_xmove
 (
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
) {

119 
i
;

120 i‡(
‰om
 =
to
) ;

121 
	`lua_lock
(
to
);

122 
	`≠i_check√Àms
(
‰om
, 
n
);

123 
	`≠i_check
(
	`G
(
‰om
Ë=G(
to
), "movingámong independent states");

124 
	`≠i_check
(
to
->
ci
->
t›
 -Åo->t› >
n
, "notÉnoughÉlementsÅo move");

125 
‰om
->
t›
 -
n
;

126 
i
 = 0; i < 
n
; i++) {

127 
	`£tobj2s
(
to
,Åo->
t›
++, 
‰om
->t› + 
i
);

129 
	`lua_u∆ock
(
to
);

130 
	}
}

133 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_©∑nic
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
) {

134 
lua_CFun˘i⁄
 
ﬁd
;

135 
	`lua_lock
(
L
);

136 
ﬁd
 = 
	`G
(
L
)->
∑nic
;

137 
	`G
(
L
)->
∑nic
 = 
∑nicf
;

138 
	`lua_u∆ock
(
L
);

139  
ﬁd
;

140 
	}
}

143 
LUA_API
 c⁄° 
lua_Numbî
 *
	$lua_vîsi⁄
 (
lua_Sèã
 *
L
) {

144 c⁄° 
lua_Numbî
 
vîsi⁄
 = 
LUA_VERSION_NUM
;

145 i‡(
L
 =
NULL
Ë &
vîsi⁄
;

146  
	`G
(
L
)->
vîsi⁄
;

147 
	}
}

159 
LUA_API
 
	$lua_absödex
 (
lua_Sèã
 *
L
, 
idx
) {

160  (
idx
 > 0 || 
	`i•£udo
(idx))

161 ? 
idx


162 : 
	`ˇ°_öt
(
L
->
t›
 - L->
ci
->
func
 + 
idx
);

163 
	}
}

166 
LUA_API
 
	$lua_gët›
 (
lua_Sèã
 *
L
) {

167  
	`ˇ°_öt
(
L
->
t›
 - (L->
ci
->
func
 + 1));

168 
	}
}

171 
LUA_API
 
	$lua_£â›
 (
lua_Sèã
 *
L
, 
idx
) {

172 
StkId
 
func
 = 
L
->
ci
->func;

173 
	`lua_lock
(
L
);

174 i‡(
idx
 >= 0) {

175 
	`≠i_check
(
idx
 <
L
->
°ack_œ°
 - (
func
 + 1), "newÅopÅooÜarge");

176 
L
->
t›
 < (
func
 + 1Ë+ 
idx
)

177 
	`£äûvÆue
(
L
->
t›
++);

178 
L
->
t›
 = (
func
 + 1Ë+ 
idx
;

181 
	`≠i_check
(-(
idx
+1Ë<(
L
->
t›
 - (
func
 + 1)), "invalidÇewÅop");

182 
L
->
t›
 +
idx
+1;

184 
	`lua_u∆ock
(
L
);

185 
	}
}

192 
	$ªvî£
 (
lua_Sèã
 *
L
, 
StkId
 
‰om
, StkId 
to
) {

193 ; 
‰om
 < 
to
; from++,Åo--) {

194 
TVÆue
 
ãmp
;

195 
	`£tobj
(
L
, &
ãmp
, 
‰om
);

196 
	`£tobjs2s
(
L
, 
‰om
, 
to
);

197 
	`£tobj2s
(
L
, 
to
, &
ãmp
);

199 
	}
}

206 
LUA_API
 
	$lua_rŸ©e
 (
lua_Sèã
 *
L
, 
idx
, 
n
) {

207 
StkId
 
p
, 
t
, 
m
;

208 
	`lua_lock
(
L
);

209 
t
 = 
L
->
t›
 - 1;

210 
p
 = 
	`ödex2addr
(
L
, 
idx
);

211 
	`≠i_check°acködex
(
idx
, 
p
);

212 
	`≠i_check
((
n
 >0 ?Ç : -nË<(
t
 - 
p
 + 1), "invalid 'n'");

213 
m
 = (
n
 >0 ? 
t
 -Ç : 
p
 -Ç - 1);

214 
	`ªvî£
(
L
, 
p
, 
m
);

215 
	`ªvî£
(
L
, 
m
 + 1, 
t
);

216 
	`ªvî£
(
L
, 
p
, 
t
);

217 
	`lua_u∆ock
(
L
);

218 
	}
}

221 
LUA_API
 
	$lua_c›y
 (
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
) {

222 
TVÆue
 *
‰
, *
to
;

223 
	`lua_lock
(
L
);

224 
‰
 = 
	`ödex2addr
(
L
, 
‰omidx
);

225 
to
 = 
	`ödex2addr
(
L
, 
toidx
);

226 
	`≠i_checkvÆidödex
(
to
);

227 
	`£tobj
(
L
, 
to
, 
‰
);

228 i‡(
	`isupvÆue
(
toidx
))

229 
	`luaC_b¨rõr
(
L
, 
	`˛CvÆue
(L->
ci
->
func
), 
‰
);

232 
	`lua_u∆ock
(
L
);

233 
	}
}

236 
LUA_API
 
	$lua_pushvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

237 
	`lua_lock
(
L
);

238 
	`£tobj2s
(
L
, L->
t›
, 
	`ödex2addr
(L, 
idx
));

239 
	`≠i_ö¸_t›
(
L
);

240 
	`lua_u∆ock
(
L
);

241 
	}
}

250 
LUA_API
 
	$lua_ty≥
 (
lua_Sèã
 *
L
, 
idx
) {

251 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

252  (
	`isvÆid
(
o
Ë? 
	`ânov
(oË: 
LUA_TNONE
);

253 
	}
}

256 
LUA_API
 c⁄° *
	$lua_ty≥«me
 (
lua_Sèã
 *
L
, 
t
) {

257 
	`UNUSED
(
L
);

258 
	`≠i_check
(
LUA_TNONE
 <
t
 &&Å < 
LUA_NUMTAGS
, "invalidÅag");

259  
	`ây≥«me
(
t
);

260 
	}
}

263 
LUA_API
 
	$lua_iscfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

264 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

265  (
	`âi¶cf
(
o
Ë|| (
	`âisC˛osuª
(o)));

266 
	}
}

269 
LUA_API
 
	$lua_isöãgî
 (
lua_Sèã
 *
L
, 
idx
) {

270 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

271  
	`âisöãgî
(
o
);

272 
	}
}

275 
LUA_API
 
	$lua_i¢umbî
 (
lua_Sèã
 *
L
, 
idx
) {

276 
lua_Numbî
 
n
;

277 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

278  
	`t⁄umbî
(
o
, &
n
);

279 
	}
}

282 
LUA_API
 
	$lua_is°rög
 (
lua_Sèã
 *
L
, 
idx
) {

283 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

284  (
	`âis°rög
(
o
Ë|| 
	`cvt2°r
(o));

285 
	}
}

288 
LUA_API
 
	$lua_isu£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

289 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

290  (
	`âisfuŒu£rd©a
(
o
Ë|| 
	`âi¶ightu£rd©a
(o));

291 
	}
}

294 
LUA_API
 
	$lua_øwequÆ
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
) {

295 
StkId
 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

296 
StkId
 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

297  (
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)Ë? 
	`luaV_øwequÆobj
(o1, o2) : 0;

298 
	}
}

301 
LUA_API
 
	$lua_¨ôh
 (
lua_Sèã
 *
L
, 
›
) {

302 
	`lua_lock
(
L
);

303 i‡(
›
 !
LUA_OPUNM
 && o∞!
LUA_OPBNOT
)

304 
	`≠i_check√Àms
(
L
, 2);

306 
	`≠i_check√Àms
(
L
, 1);

307 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

308 
L
->
t›
++;

311 
	`luaO_¨ôh
(
L
, 
›
, L->
t›
 - 2, L->top - 1, L->top - 2);

312 
L
->
t›
--;

313 
	`lua_u∆ock
(
L
);

314 
	}
}

317 
LUA_API
 
	$lua_com∑ª
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
, 
›
) {

318 
StkId
 
o1
, 
o2
;

319 
i
 = 0;

320 
	`lua_lock
(
L
);

321 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

322 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

323 i‡(
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)) {

324 
›
) {

325 
LUA_OPEQ
: 
i
 = 
	`luaV_equÆobj
(
L
, 
o1
, 
o2
); ;

326 
LUA_OPLT
: 
i
 = 
	`luaV_Às°h™
(
L
, 
o1
, 
o2
); ;

327 
LUA_OPLE
: 
i
 = 
	`luaV_Às£quÆ
(
L
, 
o1
, 
o2
); ;

328 : 
	`≠i_check
(0, "invalid option");

331 
	`lua_u∆ock
(
L
);

332  
i
;

333 
	}
}

336 
LUA_API
 
size_t
 
	$lua_°rögt⁄umbî
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

337 
size_t
 
sz
 = 
	`luaO_°r2num
(
s
, 
L
->
t›
);

338 i‡(
sz
 != 0)

339 
	`≠i_ö¸_t›
(
L
);

340  
sz
;

341 
	}
}

344 
LUA_API
 
lua_Numbî
 
	$lua_t⁄umbîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

345 
lua_Numbî
 
n
;

346 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

347 
i¢um
 = 
	`t⁄umbî
(
o
, &
n
);

348 i‡(!
i¢um
)

349 
n
 = 0;

350 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

351  
n
;

352 
	}
}

355 
LUA_API
 
lua_I¡egî
 
	$lua_toöãgîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

356 
lua_I¡egî
 
ªs
;

357 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

358 
i¢um
 = 
	`toöãgî
(
o
, &
ªs
);

359 i‡(!
i¢um
)

360 
ªs
 = 0;

361 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

362  
ªs
;

363 
	}
}

366 
LUA_API
 
	$lua_toboﬁón
 (
lua_Sèã
 *
L
, 
idx
) {

367 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

368  !
	`l_isÁl£
(
o
);

369 
	}
}

372 
LUA_API
 c⁄° *
	$lua_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

373 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

374 i‡(!
	`âis°rög
(
o
)) {

375 i‡(!
	`cvt2°r
(
o
)) {

376 i‡(
Àn
 !
NULL
) *len = 0;

377  
NULL
;

379 
	`lua_lock
(
L
);

380 
	`luaC_checkGC
(
L
);

381 
o
 = 
	`ödex2addr
(
L
, 
idx
);

382 
	`luaO_to°rög
(
L
, 
o
);

383 
	`lua_u∆ock
(
L
);

385 i‡(
Àn
 !
NULL
Ë*À¿
	`tsvÆue
(
o
)->len;

386  
	`svÆue
(
o
);

387 
	}
}

390 
LUA_API
 
size_t
 
	$lua_øwÀn
 (
lua_Sèã
 *
L
, 
idx
) {

391 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

392 
	`ânov
(
o
)) {

393 
LUA_TSTRING
:  
	`tsvÆue
(
o
)->
Àn
;

394 
LUA_TUSERDATA
:  
	`uvÆue
(
o
)->
Àn
;

395 
LUA_TTABLE
:  
	`luaH_gën
(
	`hvÆue
(
o
));

398 
	}
}

401 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_tocfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

402 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

403 i‡(
	`âi¶cf
(
o
)Ë 
	`fvÆue
(o);

404 i‡(
	`âisC˛osuª
(
o
))

405  
	`˛CvÆue
(
o
)->
f
;

406  
NULL
;

407 
	}
}

410 
LUA_API
 *
	$lua_tou£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

411 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

412 
	`ânov
(
o
)) {

413 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

414 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

415 :  
NULL
;

417 
	}
}

420 
LUA_API
 
lua_Sèã
 *
	$lua_tŸhªad
 (
lua_Sèã
 *
L
, 
idx
) {

421 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

422  (!
	`âi°hªad
(
o
)Ë? 
NULL
 : 
	`thvÆue
(o);

423 
	}
}

426 
LUA_API
 c⁄° *
	$lua_t›oöãr
 (
lua_Sèã
 *
L
, 
idx
) {

427 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

428 
	`ây≥
(
o
)) {

429 
LUA_TTABLE
:  
	`hvÆue
(
o
);

430 
LUA_TLCL
:  
	`˛LvÆue
(
o
);

431 
LUA_TCCL
:  
	`˛CvÆue
(
o
);

432 
LUA_TLCF
:  
	`ˇ°
(*, ca°(
size_t
, 
	`fvÆue
(
o
)));

433 
LUA_TTHREAD
:  
	`thvÆue
(
o
);

434 
LUA_TUSERDATA
:

435 
LUA_TLIGHTUSERDATA
:

436  
	`lua_tou£rd©a
(
L
, 
idx
);

437 :  
NULL
;

439 
	}
}

448 
LUA_API
 
	$lua_pushnû
 (
lua_Sèã
 *
L
) {

449 
	`lua_lock
(
L
);

450 
	`£äûvÆue
(
L
->
t›
);

451 
	`≠i_ö¸_t›
(
L
);

452 
	`lua_u∆ock
(
L
);

453 
	}
}

456 
LUA_API
 
	$lua_pushnumbî
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
n
) {

457 
	`lua_lock
(
L
);

458 
	`£tÊtvÆue
(
L
->
t›
, 
n
);

459 
	`≠i_ö¸_t›
(
L
);

460 
	`lua_u∆ock
(
L
);

461 
	}
}

464 
LUA_API
 
	$lua_pushöãgî
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
) {

465 
	`lua_lock
(
L
);

466 
	`£tivÆue
(
L
->
t›
, 
n
);

467 
	`≠i_ö¸_t›
(
L
);

468 
	`lua_u∆ock
(
L
);

469 
	}
}

472 
LUA_API
 c⁄° *
	$lua_pushl°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
) {

473 
TSåög
 *
ts
;

474 
	`lua_lock
(
L
);

475 
	`luaC_checkGC
(
L
);

476 
ts
 = 
	`luaS_√wl°r
(
L
, 
s
, 
Àn
);

477 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

478 
	`≠i_ö¸_t›
(
L
);

479 
	`lua_u∆ock
(
L
);

480  
	`gë°r
(
ts
);

481 
	}
}

484 
LUA_API
 c⁄° *
	$lua_push°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

485 i‡(
s
 =
NULL
) {

486 
	`lua_pushnû
(
L
);

487  
NULL
;

490 
TSåög
 *
ts
;

491 
	`lua_lock
(
L
);

492 
	`luaC_checkGC
(
L
);

493 
ts
 = 
	`luaS_√w
(
L
, 
s
);

494 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

495 
	`≠i_ö¸_t›
(
L
);

496 
	`lua_u∆ock
(
L
);

497  
	`gë°r
(
ts
);

499 
	}
}

502 
LUA_API
 c⁄° *
	$lua_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

503 
va_li°
 
¨gp
) {

504 c⁄° *
ªt
;

505 
	`lua_lock
(
L
);

506 
	`luaC_checkGC
(
L
);

507 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

508 
	`lua_u∆ock
(
L
);

509  
ªt
;

510 
	}
}

513 
LUA_API
 c⁄° *
	$lua_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

514 c⁄° *
ªt
;

515 
va_li°
 
¨gp
;

516 
	`lua_lock
(
L
);

517 
	`luaC_checkGC
(
L
);

518 
	`va_°¨t
(
¨gp
, 
fmt
);

519 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

520 
	`va_íd
(
¨gp
);

521 
	`lua_u∆ock
(
L
);

522  
ªt
;

523 
	}
}

526 
LUA_API
 
	$lua_pushc˛osuª
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
) {

527 
	`lua_lock
(
L
);

528 i‡(
n
 == 0) {

529 
	`£tfvÆue
(
L
->
t›
, 
‚
);

532 
CClosuª
 *
˛
;

533 
	`≠i_check√Àms
(
L
, 
n
);

534 
	`≠i_check
(
n
 <
MAXUPVAL
, "upvalue indexÅooÜarge");

535 
	`luaC_checkGC
(
L
);

536 
˛
 = 
	`luaF_√wC˛osuª
(
L
, 
n
);

537 
˛
->
f
 = 
‚
;

538 
L
->
t›
 -
n
;

539 
n
--) {

540 
	`£tobj2n
(
L
, &
˛
->
upvÆue
[
n
], L->
t›
 +Ç);

543 
	`£t˛CvÆue
(
L
, L->
t›
, 
˛
);

545 
	`≠i_ö¸_t›
(
L
);

546 
	`lua_u∆ock
(
L
);

547 
	}
}

550 
LUA_API
 
	$lua_pushboﬁón
 (
lua_Sèã
 *
L
, 
b
) {

551 
	`lua_lock
(
L
);

552 
	`£tbvÆue
(
L
->
t›
, (
b
 != 0));

553 
	`≠i_ö¸_t›
(
L
);

554 
	`lua_u∆ock
(
L
);

555 
	}
}

558 
LUA_API
 
	$lua_pushlightu£rd©a
 (
lua_Sèã
 *
L
, *
p
) {

559 
	`lua_lock
(
L
);

560 
	`£çvÆue
(
L
->
t›
, 
p
);

561 
	`≠i_ö¸_t›
(
L
);

562 
	`lua_u∆ock
(
L
);

563 
	}
}

566 
LUA_API
 
	$lua_pushthªad
 (
lua_Sèã
 *
L
) {

567 
	`lua_lock
(
L
);

568 
	`£âhvÆue
(
L
, L->
t›
, L);

569 
	`≠i_ö¸_t›
(
L
);

570 
	`lua_u∆ock
(
L
);

571  (
	`G
(
L
)->
maöthªad
 == L);

572 
	}
}

581 
LUA_API
 
	$lua_gëglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

582 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

583 c⁄° 
TVÆue
 *
gt
;

584 
	`lua_lock
(
L
);

585 
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

586 
	`£tsvÆue2s
(
L
, L->
t›
++, 
	`luaS_√w
(L, 
«me
));

587 
	`luaV_gëèbÀ
(
L
, 
gt
, L->
t›
 - 1, L->top - 1);

588 
	`lua_u∆ock
(
L
);

589  
	`ânov
(
L
->
t›
 - 1);

590 
	}
}

593 
LUA_API
 
	$lua_gëèbÀ
 (
lua_Sèã
 *
L
, 
idx
) {

594 
StkId
 
t
;

595 
	`lua_lock
(
L
);

596 
t
 = 
	`ödex2addr
(
L
, 
idx
);

597 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

598 
	`lua_u∆ock
(
L
);

599  
	`ânov
(
L
->
t›
 - 1);

600 
	}
}

603 
LUA_API
 
	$lua_gëfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

604 
StkId
 
t
;

605 
	`lua_lock
(
L
);

606 
t
 = 
	`ödex2addr
(
L
, 
idx
);

607 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√w
(L, 
k
));

608 
	`≠i_ö¸_t›
(
L
);

609 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

610 
	`lua_u∆ock
(
L
);

611  
	`ânov
(
L
->
t›
 - 1);

612 
	}
}

615 
LUA_API
 
	$lua_gëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

616 
StkId
 
t
;

617 
	`lua_lock
(
L
);

618 
t
 = 
	`ödex2addr
(
L
, 
idx
);

619 
	`£tivÆue
(
L
->
t›
, 
n
);

620 
	`≠i_ö¸_t›
(
L
);

621 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

622 
	`lua_u∆ock
(
L
);

623  
	`ânov
(
L
->
t›
 - 1);

624 
	}
}

627 
LUA_API
 
	$lua_øwgë
 (
lua_Sèã
 *
L
, 
idx
) {

628 
StkId
 
t
;

629 
	`lua_lock
(
L
);

630 
t
 = 
	`ödex2addr
(
L
, 
idx
);

631 
	`≠i_check
(
	`âi°abÀ
(
t
), "tableÉxpected");

632 
	`£tobj2s
(
L
, L->
t›
 - 1, 
	`luaH_gë
(
	`hvÆue
(
t
), L->top - 1));

633 
	`lua_u∆ock
(
L
);

634  
	`ânov
(
L
->
t›
 - 1);

635 
	}
}

638 
LUA_API
 
	$lua_øwgëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

639 
StkId
 
t
;

640 
	`lua_lock
(
L
);

641 
t
 = 
	`ödex2addr
(
L
, 
idx
);

642 
	`≠i_check
(
	`âi°abÀ
(
t
), "tableÉxpected");

643 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gëöt
(
	`hvÆue
(
t
), 
n
));

644 
	`≠i_ö¸_t›
(
L
);

645 
	`lua_u∆ock
(
L
);

646  
	`ânov
(
L
->
t›
 - 1);

647 
	}
}

650 
LUA_API
 
	$lua_øwgëp
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

651 
StkId
 
t
;

652 
TVÆue
 
k
;

653 
	`lua_lock
(
L
);

654 
t
 = 
	`ödex2addr
(
L
, 
idx
);

655 
	`≠i_check
(
	`âi°abÀ
(
t
), "tableÉxpected");

656 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

657 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gë
(
	`hvÆue
(
t
), &
k
));

658 
	`≠i_ö¸_t›
(
L
);

659 
	`lua_u∆ock
(
L
);

660  
	`ânov
(
L
->
t›
 - 1);

661 
	}
}

664 
LUA_API
 
	$lua_¸óãèbÀ
 (
lua_Sèã
 *
L
, 
«ºay
, 
ƒec
) {

665 
TabÀ
 *
t
;

666 
	`lua_lock
(
L
);

667 
	`luaC_checkGC
(
L
);

668 
t
 = 
	`luaH_√w
(
L
);

669 
	`£thvÆue
(
L
, L->
t›
, 
t
);

670 
	`≠i_ö¸_t›
(
L
);

671 i‡(
«ºay
 > 0 || 
ƒec
 > 0)

672 
	`luaH_ªsize
(
L
, 
t
, 
«ºay
, 
ƒec
);

673 
	`lua_u∆ock
(
L
);

674 
	}
}

677 
LUA_API
 
	$lua_gëmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

678 c⁄° 
TVÆue
 *
obj
;

679 
TabÀ
 *
mt
;

680 
ªs
 = 0;

681 
	`lua_lock
(
L
);

682 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

683 
	`ânov
(
obj
)) {

684 
LUA_TTABLE
:

685 
mt
 = 
	`hvÆue
(
obj
)->
më©abÀ
;

687 
LUA_TUSERDATA
:

688 
mt
 = 
	`uvÆue
(
obj
)->
më©abÀ
;

691 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
obj
)];

694 i‡(
mt
 !
NULL
) {

695 
	`£thvÆue
(
L
, L->
t›
, 
mt
);

696 
	`≠i_ö¸_t›
(
L
);

697 
ªs
 = 1;

699 
	`lua_u∆ock
(
L
);

700  
ªs
;

701 
	}
}

704 
LUA_API
 
	$lua_gëu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

705 
StkId
 
o
;

706 
	`lua_lock
(
L
);

707 
o
 = 
	`ödex2addr
(
L
, 
idx
);

708 
	`≠i_check
(
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

709 
	`gëu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
);

710 
	`≠i_ö¸_t›
(
L
);

711 
	`lua_u∆ock
(
L
);

712  
	`ânov
(
L
->
t›
 - 1);

713 
	}
}

721 
LUA_API
 
	$lua_£tglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

722 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

723 c⁄° 
TVÆue
 *
gt
;

724 
	`lua_lock
(
L
);

725 
	`≠i_check√Àms
(
L
, 1);

726 
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

727 
	`£tsvÆue2s
(
L
, L->
t›
++, 
	`luaS_√w
(L, 
«me
));

728 
	`luaV_£âabÀ
(
L
, 
gt
, L->
t›
 - 1, L->top - 2);

729 
L
->
t›
 -= 2;

730 
	`lua_u∆ock
(
L
);

731 
	}
}

734 
LUA_API
 
	$lua_£âabÀ
 (
lua_Sèã
 *
L
, 
idx
) {

735 
StkId
 
t
;

736 
	`lua_lock
(
L
);

737 
	`≠i_check√Àms
(
L
, 2);

738 
t
 = 
	`ödex2addr
(
L
, 
idx
);

739 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 2, L->top - 1);

740 
L
->
t›
 -= 2;

741 
	`lua_u∆ock
(
L
);

742 
	}
}

745 
LUA_API
 
	$lua_£tfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

746 
StkId
 
t
;

747 
	`lua_lock
(
L
);

748 
	`≠i_check√Àms
(
L
, 1);

749 
t
 = 
	`ödex2addr
(
L
, 
idx
);

750 
	`£tsvÆue2s
(
L
, L->
t›
++, 
	`luaS_√w
(L, 
k
));

751 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 2);

752 
L
->
t›
 -= 2;

753 
	`lua_u∆ock
(
L
);

754 
	}
}

757 
LUA_API
 
	$lua_£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

758 
StkId
 
t
;

759 
	`lua_lock
(
L
);

760 
	`≠i_check√Àms
(
L
, 1);

761 
t
 = 
	`ödex2addr
(
L
, 
idx
);

762 
	`£tivÆue
(
L
->
t›
++, 
n
);

763 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 2);

764 
L
->
t›
 -= 2;

765 
	`lua_u∆ock
(
L
);

766 
	}
}

769 
LUA_API
 
	$lua_øw£t
 (
lua_Sèã
 *
L
, 
idx
) {

770 
StkId
 
o
;

771 
TabÀ
 *
t
;

772 
	`lua_lock
(
L
);

773 
	`≠i_check√Àms
(
L
, 2);

774 
o
 = 
	`ödex2addr
(
L
, 
idx
);

775 
	`≠i_check
(
	`âi°abÀ
(
o
), "tableÉxpected");

776 
t
 = 
	`hvÆue
(
o
);

777 
	`£tobj2t
(
L
, 
	`luaH_£t
(L, 
t
, L->
t›
-2), L->top-1);

778 
	`övÆid©eTMˇche
(
t
);

779 
	`luaC_b¨rõrback
(
L
, 
t
, L->
t›
-1);

780 
L
->
t›
 -= 2;

781 
	`lua_u∆ock
(
L
);

782 
	}
}

785 
LUA_API
 
	$lua_øw£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

786 
StkId
 
o
;

787 
TabÀ
 *
t
;

788 
	`lua_lock
(
L
);

789 
	`≠i_check√Àms
(
L
, 1);

790 
o
 = 
	`ödex2addr
(
L
, 
idx
);

791 
	`≠i_check
(
	`âi°abÀ
(
o
), "tableÉxpected");

792 
t
 = 
	`hvÆue
(
o
);

793 
	`luaH_£töt
(
L
, 
t
, 
n
, L->
t›
 - 1);

794 
	`luaC_b¨rõrback
(
L
, 
t
, L->
t›
-1);

795 
L
->
t›
--;

796 
	`lua_u∆ock
(
L
);

797 
	}
}

800 
LUA_API
 
	$lua_øw£ç
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

801 
StkId
 
o
;

802 
TabÀ
 *
t
;

803 
TVÆue
 
k
;

804 
	`lua_lock
(
L
);

805 
	`≠i_check√Àms
(
L
, 1);

806 
o
 = 
	`ödex2addr
(
L
, 
idx
);

807 
	`≠i_check
(
	`âi°abÀ
(
o
), "tableÉxpected");

808 
t
 = 
	`hvÆue
(
o
);

809 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

810 
	`£tobj2t
(
L
, 
	`luaH_£t
(L, 
t
, &
k
), L->
t›
 - 1);

811 
	`luaC_b¨rõrback
(
L
, 
t
, L->
t›
 - 1);

812 
L
->
t›
--;

813 
	`lua_u∆ock
(
L
);

814 
	}
}

817 
LUA_API
 
	$lua_£tmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

818 
TVÆue
 *
obj
;

819 
TabÀ
 *
mt
;

820 
	`lua_lock
(
L
);

821 
	`≠i_check√Àms
(
L
, 1);

822 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

823 i‡(
	`âi¢û
(
L
->
t›
 - 1))

824 
mt
 = 
NULL
;

826 
	`≠i_check
(
	`âi°abÀ
(
L
->
t›
 - 1), "tableÉxpected");

827 
mt
 = 
	`hvÆue
(
L
->
t›
 - 1);

829 
	`ânov
(
obj
)) {

830 
LUA_TTABLE
: {

831 
	`hvÆue
(
obj
)->
më©abÀ
 = 
mt
;

832 i‡(
mt
) {

833 
	`luaC_objb¨rõr
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

834 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

838 
LUA_TUSERDATA
: {

839 
	`uvÆue
(
obj
)->
më©abÀ
 = 
mt
;

840 i‡(
mt
) {

841 
	`luaC_objb¨rõr
(
L
, 
	`uvÆue
(
obj
), 
mt
);

842 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

847 
	`G
(
L
)->
mt
[
	`ânov
(
obj
)] = mt;

851 
L
->
t›
--;

852 
	`lua_u∆ock
(
L
);

854 
	}
}

857 
LUA_API
 
	$lua_£tu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

858 
StkId
 
o
;

859 
	`lua_lock
(
L
);

860 
	`≠i_check√Àms
(
L
, 1);

861 
o
 = 
	`ödex2addr
(
L
, 
idx
);

862 
	`≠i_check
(
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

863 
	`£tu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
 - 1);

864 
	`luaC_b¨rõr
(
L
, 
	`gcvÆue
(
o
), L->
t›
 - 1);

865 
L
->
t›
--;

866 
	`lua_u∆ock
(
L
);

867 
	}
}

875 
	#checkªsu…s
(
L
,
«
,
ƒ
) \

876 
	`≠i_check
((
ƒ
Ë=
LUA_MULTRET
 || (
L
->
ci
->
t›
 - L->t› >“rË- (
«
)), \

877 "ªsu…†‰om fun˘i⁄ ovîÊow cuºíà°ack size")

	)

880 
LUA_API
 
	$lua_ˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

881 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

882 
StkId
 
func
;

883 
	`lua_lock
(
L
);

884 
	`≠i_check
(
k
 =
NULL
 || !
	`isLua
(
L
->
ci
),

886 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

887 
	`≠i_check
(
L
->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

888 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

889 
func
 = 
L
->
t›
 - (
«rgs
+1);

890 i‡(
k
 !
NULL
 && 
L
->
¬y
 == 0) {

891 
L
->
ci
->
u
.
c
.
k
 = k;

892 
L
->
ci
->
u
.
c
.
˘x
 = ctx;

893 
	`luaD_ˇŒ
(
L
, 
func
, 
ƒesu…s
, 1);

896 
	`luaD_ˇŒ
(
L
, 
func
, 
ƒesu…s
, 0);

897 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

898 
	`lua_u∆ock
(
L
);

899 
	}
}

906 
	sCÆlS
 {

907 
StkId
 
	mfunc
;

908 
	mƒesu…s
;

912 
	$f_ˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

913 
CÆlS
 *
c
 = 
	`ˇ°
(CÆlS *, 
ud
);

914 
	`luaD_ˇŒ
(
L
, 
c
->
func
, c->
ƒesu…s
, 0);

915 
	}
}

919 
LUA_API
 
	$lua_pˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

920 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

921 
CÆlS
 
c
;

922 
°©us
;

923 
±rdiff_t
 
func
;

924 
	`lua_lock
(
L
);

925 
	`≠i_check
(
k
 =
NULL
 || !
	`isLua
(
L
->
ci
),

927 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

928 
	`≠i_check
(
L
->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

929 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

930 i‡(
îrfunc
 == 0)

931 
func
 = 0;

933 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
îrfunc
);

934 
	`≠i_check°acködex
(
îrfunc
, 
o
);

935 
func
 = 
	`ßve°ack
(
L
, 
o
);

937 
c
.
func
 = 
L
->
t›
 - (
«rgs
+1);

938 i‡(
k
 =
NULL
 || 
L
->
¬y
 > 0) {

939 
c
.
ƒesu…s
 =Çresults;

940 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_ˇŒ
, &
c
, 
	`ßve°ack
(L, c.
func
), func);

943 
CÆlInfo
 *
ci
 = 
L
->ci;

944 
ci
->
u
.
c
.
k
 = k;

945 
ci
->
u
.
c
.
˘x
 = ctx;

947 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
c
.
func
);

948 
ci
->
u
.
c
.
ﬁd_îrfunc
 = 
L
->
îrfunc
;

949 
L
->
îrfunc
 = 
func
;

950 
	`£tﬂh
(
ci
->
ˇŒ°©us
, 
L
->
Ælowhook
);

951 
ci
->
ˇŒ°©us
 |
CIST_YPCALL
;

952 
	`luaD_ˇŒ
(
L
, 
c
.
func
, 
ƒesu…s
, 1);

953 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

954 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

955 
°©us
 = 
LUA_OK
;

957 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

958 
	`lua_u∆ock
(
L
);

959  
°©us
;

960 
	}
}

963 
LUA_API
 
	$lua_lﬂd
 (
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
d©a
,

964 c⁄° *
chunk«me
, c⁄° *
mode
) {

965 
ZIO
 
z
;

966 
°©us
;

967 
	`lua_lock
(
L
);

968 i‡(!
chunk«me
) chunkname = "?";

969 
	`luaZ_öô
(
L
, &
z
, 
ªadî
, 
d©a
);

970 
°©us
 = 
	`luaD_¥Ÿe˘ed∑r£r
(
L
, &
z
, 
chunk«me
, 
mode
);

971 i‡(
°©us
 =
LUA_OK
) {

972 
LClosuª
 *
f
 = 
	`˛LvÆue
(
L
->
t›
 - 1);

973 i‡(
f
->
nupvÆues
 >= 1) {

975 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

976 c⁄° 
TVÆue
 *
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

978 
	`£tobj
(
L
, 
f
->
upvÆs
[0]->
v
, 
gt
);

979 
	`luaC_upvÆb¨rõr
(
L
, 
f
->
upvÆs
[0]);

982 
	`lua_u∆ock
(
L
);

983  
°©us
;

984 
	}
}

987 
LUA_API
 
	$lua_dump
 (
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
) {

988 
°©us
;

989 
TVÆue
 *
o
;

990 
	`lua_lock
(
L
);

991 
	`≠i_check√Àms
(
L
, 1);

992 
o
 = 
L
->
t›
 - 1;

993 i‡(
	`isLfun˘i⁄
(
o
))

994 
°©us
 = 
	`luaU_dump
(
L
, 
	`gë¥Ÿo
(
o
), 
wrôî
, 
d©a
, 
°rù
);

996 
°©us
 = 1;

997 
	`lua_u∆ock
(
L
);

998  
°©us
;

999 
	}
}

1002 
LUA_API
 
	$lua_°©us
 (
lua_Sèã
 *
L
) {

1003  
L
->
°©us
;

1004 
	}
}

1011 
LUA_API
 
	$lua_gc
 (
lua_Sèã
 *
L
, 
wh©
, 
d©a
) {

1012 
ªs
 = 0;

1013 
globÆ_Sèã
 *
g
;

1014 
	`lua_lock
(
L
);

1015 
g
 = 
	`G
(
L
);

1016 
wh©
) {

1017 
LUA_GCSTOP
: {

1018 
g
->
g¸u¬ög
 = 0;

1021 
LUA_GCRESTART
: {

1022 
	`luaE_£tdebt
(
g
, 0);

1023 
g
->
g¸u¬ög
 = 1;

1026 
LUA_GCCOLLECT
: {

1027 
	`luaC_fuŒgc
(
L
, 0);

1030 
LUA_GCCOUNT
: {

1032 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) >> 10);

1035 
LUA_GCCOUNTB
: {

1036 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) & 0x3ff);

1039 
LUA_GCSTEP
: {

1040 
l_mem
 
debt
 = 1;

1041 
ﬁdru¬ög
 = 
g
->
g¸u¬ög
;

1042 
g
->
g¸u¬ög
 = 1;

1043 i‡(
d©a
 == 0) {

1044 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
);

1045 
	`luaC_°ï
(
L
);

1048 
debt
 = 
	`ˇ°
(
l_mem
, 
d©a
Ë* 1024 + 
g
->
GCdebt
;

1049 
	`luaE_£tdebt
(
g
, 
debt
);

1050 
	`luaC_checkGC
(
L
);

1052 
g
->
g¸u¬ög
 = 
ﬁdru¬ög
;

1053 i‡(
debt
 > 0 && 
g
->
gc°©e
 =
GCS∑u£
)

1054 
ªs
 = 1;

1057 
LUA_GCSETPAUSE
: {

1058 
ªs
 = 
g
->
g˝au£
;

1059 
g
->
g˝au£
 = 
d©a
;

1062 
LUA_GCSETSTEPMUL
: {

1063 
ªs
 = 
g
->
gc°ïmul
;

1064 i‡(
d©a
 < 40) data = 40;

1065 
g
->
gc°ïmul
 = 
d©a
;

1068 
LUA_GCISRUNNING
: {

1069 
ªs
 = 
g
->
g¸u¬ög
;

1072 : 
ªs
 = -1;

1074 
	`lua_u∆ock
(
L
);

1075  
ªs
;

1076 
	}
}

1085 
LUA_API
 
	$lua_îr‹
 (
lua_Sèã
 *
L
) {

1086 
	`lua_lock
(
L
);

1087 
	`≠i_check√Àms
(
L
, 1);

1088 
	`luaG_îr‹msg
(
L
);

1091 
	}
}

1094 
LUA_API
 
	$lua_√xt
 (
lua_Sèã
 *
L
, 
idx
) {

1095 
StkId
 
t
;

1096 
m‹e
;

1097 
	`lua_lock
(
L
);

1098 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1099 
	`≠i_check
(
	`âi°abÀ
(
t
), "tableÉxpected");

1100 
m‹e
 = 
	`luaH_√xt
(
L
, 
	`hvÆue
(
t
), L->
t›
 - 1);

1101 i‡(
m‹e
) {

1102 
	`≠i_ö¸_t›
(
L
);

1105 
L
->
t›
 -= 1;

1106 
	`lua_u∆ock
(
L
);

1107  
m‹e
;

1108 
	}
}

1111 
LUA_API
 
	$lua_c⁄ˇt
 (
lua_Sèã
 *
L
, 
n
) {

1112 
	`lua_lock
(
L
);

1113 
	`≠i_check√Àms
(
L
, 
n
);

1114 i‡(
n
 >= 2) {

1115 
	`luaC_checkGC
(
L
);

1116 
	`luaV_c⁄ˇt
(
L
, 
n
);

1118 i‡(
n
 == 0) {

1119 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, "", 0));

1120 
	`≠i_ö¸_t›
(
L
);

1123 
	`lua_u∆ock
(
L
);

1124 
	}
}

1127 
LUA_API
 
	$lua_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

1128 
StkId
 
t
;

1129 
	`lua_lock
(
L
);

1130 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1131 
	`luaV_objÀn
(
L
, L->
t›
, 
t
);

1132 
	`≠i_ö¸_t›
(
L
);

1133 
	`lua_u∆ock
(
L
);

1134 
	}
}

1137 
LUA_API
 
lua_AŒoc
 
	$lua_gëÆlocf
 (
lua_Sèã
 *
L
, **
ud
) {

1138 
lua_AŒoc
 
f
;

1139 
	`lua_lock
(
L
);

1140 i‡(
ud
Ë*ud = 
	`G
(
L
)->ud;

1141 
f
 = 
	`G
(
L
)->
‰óŒoc
;

1142 
	`lua_u∆ock
(
L
);

1143  
f
;

1144 
	}
}

1147 
LUA_API
 
	$lua_£èŒocf
 (
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
) {

1148 
	`lua_lock
(
L
);

1149 
	`G
(
L
)->
ud
 = ud;

1150 
	`G
(
L
)->
‰óŒoc
 = 
f
;

1151 
	`lua_u∆ock
(
L
);

1152 
	}
}

1155 
LUA_API
 *
	$lua_√wu£rd©a
 (
lua_Sèã
 *
L
, 
size_t
 
size
) {

1156 
Ud©a
 *
u
;

1157 
	`lua_lock
(
L
);

1158 
	`luaC_checkGC
(
L
);

1159 
u
 = 
	`luaS_√wud©a
(
L
, 
size
);

1160 
	`£tuvÆue
(
L
, L->
t›
, 
u
);

1161 
	`≠i_ö¸_t›
(
L
);

1162 
	`lua_u∆ock
(
L
);

1163  
	`gëud©amem
(
u
);

1164 
	}
}

1168 c⁄° *
	$aux_upvÆue
 (
StkId
 
fi
, 
n
, 
TVÆue
 **
vÆ
,

1169 
CClosuª
 **
ow√r
, 
UpVÆ
 **
uv
) {

1170 
	`ây≥
(
fi
)) {

1171 
LUA_TCCL
: {

1172 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1173 i‡(!(1 <
n
 &&Ç <
f
->
nupvÆues
)Ë 
NULL
;

1174 *
vÆ
 = &
f
->
upvÆue
[
n
-1];

1175 i‡(
ow√r
Ë*ow√∏
f
;

1178 
LUA_TLCL
: {

1179 
LClosuª
 *
f
 = 
	`˛LvÆue
(
fi
);

1180 
TSåög
 *
«me
;

1181 
PrŸo
 *
p
 = 
f
->p;

1182 i‡(!(1 <
n
 &&Ç <
p
->
sizeupvÆues
)Ë 
NULL
;

1183 *
vÆ
 = 
f
->
upvÆs
[
n
-1]->
v
;

1184 i‡(
uv
Ë*uv = 
f
->
upvÆs
[
n
 - 1];

1185 
«me
 = 
p
->
upvÆues
[
n
-1].name;

1186  (
«me
 =
NULL
Ë? "(*nÿ«me)" : 
	`gë°r
(name);

1188 :  
NULL
;

1190 
	}
}

1193 
LUA_API
 c⁄° *
	$lua_gëupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1194 c⁄° *
«me
;

1195 
TVÆue
 *
vÆ
 = 
NULL
;

1196 
	`lua_lock
(
L
);

1197 
«me
 = 
	`aux_upvÆue
(
	`ödex2addr
(
L
, 
funcödex
), 
n
, &
vÆ
, 
NULL
, NULL);

1198 i‡(
«me
) {

1199 
	`£tobj2s
(
L
, L->
t›
, 
vÆ
);

1200 
	`≠i_ö¸_t›
(
L
);

1202 
	`lua_u∆ock
(
L
);

1203  
«me
;

1204 
	}
}

1207 
LUA_API
 c⁄° *
	$lua_£tupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1208 c⁄° *
«me
;

1209 
TVÆue
 *
vÆ
 = 
NULL
;

1210 
CClosuª
 *
ow√r
 = 
NULL
;

1211 
UpVÆ
 *
uv
 = 
NULL
;

1212 
StkId
 
fi
;

1213 
	`lua_lock
(
L
);

1214 
fi
 = 
	`ödex2addr
(
L
, 
funcödex
);

1215 
	`≠i_check√Àms
(
L
, 1);

1216 
«me
 = 
	`aux_upvÆue
(
fi
, 
n
, &
vÆ
, &
ow√r
, &
uv
);

1217 i‡(
«me
) {

1218 
L
->
t›
--;

1219 
	`£tobj
(
L
, 
vÆ
, L->
t›
);

1220 i‡(
ow√r
Ë{ 
	`luaC_b¨rõr
(
L
, ow√r, L->
t›
); }

1221 i‡(
uv
Ë{ 
	`luaC_upvÆb¨rõr
(
L
, uv); }

1223 
	`lua_u∆ock
(
L
);

1224  
«me
;

1225 
	}
}

1228 
UpVÆ
 **
	$gëupvÆªf
 (
lua_Sèã
 *
L
, 
fidx
, 
n
, 
LClosuª
 **
pf
) {

1229 
LClosuª
 *
f
;

1230 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1231 
	`≠i_check
(
	`âisL˛osuª
(
fi
), "Lua functionÉxpected");

1232 
f
 = 
	`˛LvÆue
(
fi
);

1233 
	`≠i_check
((1 <
n
 &&Ç <
f
->
p
->
sizeupvÆues
), "invalid upvalue index");

1234 i‡(
pf
Ë*p‡
f
;

1235  &
f
->
upvÆs
[
n
 - 1];

1236 
	}
}

1239 
LUA_API
 *
	$lua_upvÆueid
 (
lua_Sèã
 *
L
, 
fidx
, 
n
) {

1240 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1241 
	`ây≥
(
fi
)) {

1242 
LUA_TLCL
: {

1243  *
	`gëupvÆªf
(
L
, 
fidx
, 
n
, 
NULL
);

1245 
LUA_TCCL
: {

1246 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1247 
	`≠i_check
(1 <
n
 &&Ç <
f
->
nupvÆues
, "invalid upvalue index");

1248  &
f
->
upvÆue
[
n
 - 1];

1251 
	`≠i_check
(0, "closureÉxpected");

1252  
NULL
;

1255 
	}
}

1258 
LUA_API
 
	$lua_upvÆuejoö
 (
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

1259 
fidx2
, 
n2
) {

1260 
LClosuª
 *
f1
;

1261 
UpVÆ
 **
up1
 = 
	`gëupvÆªf
(
L
, 
fidx1
, 
n1
, &
f1
);

1262 
UpVÆ
 **
up2
 = 
	`gëupvÆªf
(
L
, 
fidx2
, 
n2
, 
NULL
);

1263 
	`luaC_upvdeccou¡
(
L
, *
up1
);

1264 *
up1
 = *
up2
;

1265 (*
up1
)->
ªfcou¡
++;

1266 i‡(
	`upis›í
(*
up1
)Ë(*up1)->
u
.
›í
.
touched
 = 1;

1267 
	`luaC_upvÆb¨rõr
(
L
, *
up1
);

1268 
	}
}

1270 
LUA_API
 
	$lua_£çriv©e
(
lua_Sèã
 * 
L
, * 
vÆ
) {

1271 
L
->
¥iv©e
 = 
vÆ
;

1272 
	}
}

1274 
LUA_API
 * 
	$lua_gë¥iv©e
(
lua_Sèã
 * 
L
) {

1275  
L
->
¥iv©e
;

1276 
	}
}

	@lib/archive/lua-5.3.0/src/lapi.h

7 #i‚de‡
œpi_h


8 
	#œpi_h


	)

11 
	~"Œimôs.h
"

12 
	~"l°©e.h
"

14 
	#≠i_ö¸_t›
(
L
Ë{L->
t›
++; 
	`≠i_check
(L->t› <L->
ci
->top, \

15 "°ack ovîÊow");}

	)

17 
	#adju°ªsu…s
(
L
,
ƒes
) \

18 { i‡((
ƒes
Ë=
LUA_MULTRET
 && 
L
->
ci
->
t›
 < L->t›ËL->ci->t› = L->t›; }

	)

20 
	#≠i_check√Àms
(
L
,
n
Ë
	`≠i_check
(“Ë< (L->
t›
 - L->
ci
->
func
), \

21 "nŸÉnoughÉÀmít†öÅhê°ack")

	)

	@lib/archive/lua-5.3.0/src/lauxlib.c

7 
	#œuxlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<°d¨g.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

24 
	~"lua.h
"

26 
	~"œuxlib.h
"

36 
	#LEVELS1
 12

	)

37 
	#LEVELS2
 10

	)

45 
	$födfõld
 (
lua_Sèã
 *
L
, 
objidx
, 
Àvñ
) {

46 i‡(
Àvñ
 =0 || !
	`lua_i°abÀ
(
L
, -1))

48 
	`lua_pushnû
(
L
);

49 
	`lua_√xt
(
L
, -2)) {

50 i‡(
	`lua_ty≥
(
L
, -2Ë=
LUA_TSTRING
) {

51 i‡(
	`lua_øwequÆ
(
L
, 
objidx
, -1)) {

52 
	`lua_p›
(
L
, 1);

55 i‡(
	`födfõld
(
L
, 
objidx
, 
Àvñ
 - 1)) {

56 
	`lua_ªmove
(
L
, -2);

57 
	`lua_pushlôîÆ
(
L
, ".");

58 
	`lua_ö£π
(
L
, -2);

59 
	`lua_c⁄ˇt
(
L
, 3);

63 
	`lua_p›
(
L
, 1);

66 
	}
}

73 
	$pushglobÆfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

74 
t›
 = 
	`lua_gët›
(
L
);

75 
	`lua_gëöfo
(
L
, "f", 
¨
);

76 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

77 i‡(
	`födfõld
(
L
, 
t›
 + 1, 2)) {

78 c⁄° *
«me
 = 
	`lua_to°rög
(
L
, -1);

79 i‡(
	`°∫cmp
(
«me
, "_G.", 3) == 0) {

80 
	`lua_push°rög
(
L
, 
«me
 + 3);

81 
	`lua_ªmove
(
L
, -2);

83 
	`lua_c›y
(
L
, -1, 
t›
 + 1);

84 
	`lua_p›
(
L
, 2);

88 
	`lua_£â›
(
L
, 
t›
);

91 
	}
}

94 
	$pushfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

95 i‡(
	`pushglobÆfun˙ame
(
L
, 
¨
)) {

96 
	`lua_pushf°rög
(
L
, "fun˘i⁄ '%s'", 
	`lua_to°rög
(L, -1));

97 
	`lua_ªmove
(
L
, -2);

99 i‡(*
¨
->
«mewh©
 != '\0')

100 
	`lua_pushf°rög
(
L
, "%†'%s'", 
¨
->
«mewh©
,ár->
«me
);

101 i‡(*
¨
->
wh©
 == 'm')

102 
	`lua_pushlôîÆ
(
L
, "main chunk");

103 i‡(*
¨
->
wh©
 != 'C')

104 
	`lua_pushf°rög
(
L
, "fun˘i⁄ <%s:%d>", 
¨
->
sh‹t_§c
,ár->
löedeföed
);

106 
	`lua_pushlôîÆ
(
L
, "?");

107 
	}
}

110 
	$cou¡Àvñs
 (
lua_Sèã
 *
L
) {

111 
lua_Debug
 
¨
;

112 
li
 = 1, 
À
 = 1;

114 
	`lua_gë°ack
(
L
, 
À
, &
¨
)Ë{ 
li
 =Üe;Üe *= 2; }

116 
li
 < 
À
) {

117 
m
 = (
li
 + 
À
)/2;

118 i‡(
	`lua_gë°ack
(
L
, 
m
, &
¨
)Ë
li
 = m + 1;

119 
À
 = 
m
;

121  
À
 - 1;

122 
	}
}

125 
LUALIB_API
 
	$luaL_åa˚back
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

126 c⁄° *
msg
, 
Àvñ
) {

127 
lua_Debug
 
¨
;

128 
t›
 = 
	`lua_gët›
(
L
);

129 
numÀvñs
 = 
	`cou¡Àvñs
(
L1
);

130 
m¨k
 = (
numÀvñs
 > 
LEVELS1
 + 
LEVELS2
) ? LEVELS1 : 0;

131 i‡(
msg
Ë
	`lua_pushf°rög
(
L
, "%s\n", msg);

132 
	`lua_pushlôîÆ
(
L
, "stackÅraceback:");

133 
	`lua_gë°ack
(
L1
, 
Àvñ
++, &
¨
)) {

134 i‡(
Àvñ
 =
m¨k
) {

135 
	`lua_pushlôîÆ
(
L
, "\n\t...");

136 
Àvñ
 = 
numÀvñs
 - 
LEVELS2
;

139 
	`lua_gëöfo
(
L1
, "S t", &
¨
);

140 
	`lua_pushf°rög
(
L
, "\n\t%s:", 
¨
.
sh‹t_§c
);

141 i‡(
¨
.
cuºíéöe
 > 0)

142 
	`lua_pushf°rög
(
L
, "%d:", 
¨
.
cuºíéöe
);

143 
	`lua_pushlôîÆ
(
L
, " in ");

144 
	`pushfun˙ame
(
L
, &
¨
);

145 i‡(
¨
.
i°aûˇŒ
)

146 
	`lua_pushlôîÆ
(
L
, "\n\t(...tail calls...)");

147 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

150 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

151 
	}
}

162 
LUALIB_API
 
	$luaL_¨gîr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
) {

163 
lua_Debug
 
¨
;

164 i‡(!
	`lua_gë°ack
(
L
, 0, &
¨
))

165  
	`luaL_îr‹
(
L
, "badárgumíà#%d (%s)", 
¨g
, 
exåamsg
);

166 
	`lua_gëöfo
(
L
, "n", &
¨
);

167 i‡(
	`°rcmp
(
¨
.
«mewh©
, "method") == 0) {

168 
¨g
--;

169 i‡(
¨g
 == 0)

170  
	`luaL_îr‹
(
L
, "calling '%s' on bad self (%s)",

171 
¨
.
«me
, 
exåamsg
);

173 i‡(
¨
.
«me
 =
NULL
)

174 
¨
.
«me
 = (
	`pushglobÆfun˙ame
(
L
, &¨)Ë? 
	`lua_to°rög
(L, -1) : "?";

175  
	`luaL_îr‹
(
L
, "badárgument #%dÅo '%s' (%s)",

176 
¨g
, 
¨
.
«me
, 
exåamsg
);

177 
	}
}

180 
	$ty≥îr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
äame
) {

181 c⁄° *
msg
;

182 c⁄° *
ty≥¨g
;

183 i‡(
	`luaL_gëmëafõld
(
L
, 
¨g
, "__«me"Ë=
LUA_TSTRING
)

184 
ty≥¨g
 = 
	`lua_to°rög
(
L
, -1);

185 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TLIGHTUSERDATA
)

186 
ty≥¨g
 = "light userdata";

188 
ty≥¨g
 = 
	`luaL_ty≥«me
(
L
, 
¨g
);

189 
msg
 = 
	`lua_pushf°rög
(
L
, "%†ex≥˘ed, gŸ %s", 
äame
, 
ty≥¨g
);

190  
	`luaL_¨gîr‹
(
L
, 
¨g
, 
msg
);

191 
	}
}

194 
	$èg_îr‹
 (
lua_Sèã
 *
L
, 
¨g
, 
èg
) {

195 
	`ty≥îr‹
(
L
, 
¨g
, 
	`lua_ty≥«me
(L, 
èg
));

196 
	}
}

199 
LUALIB_API
 
	$luaL_whîe
 (
lua_Sèã
 *
L
, 
Àvñ
) {

200 
lua_Debug
 
¨
;

201 i‡(
	`lua_gë°ack
(
L
, 
Àvñ
, &
¨
)) {

202 
	`lua_gëöfo
(
L
, "Sl", &
¨
);

203 i‡(
¨
.
cuºíéöe
 > 0) {

204 
	`lua_pushf°rög
(
L
, "%s:%d: ", 
¨
.
sh‹t_§c
,ár.
cuºíéöe
);

208 
	`lua_pushlôîÆ
(
L
, "");

209 
	}
}

212 
LUALIB_API
 
	$luaL_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

213 
va_li°
 
¨gp
;

214 
	`va_°¨t
(
¨gp
, 
fmt
);

215 
	`luaL_whîe
(
L
, 1);

216 
	`lua_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

217 
	`va_íd
(
¨gp
);

218 
	`lua_c⁄ˇt
(
L
, 2);

219  
	`lua_îr‹
(
L
);

220 
	}
}

223 
LUALIB_API
 
	$luaL_fûîesu…
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
) {

224 
í
 = 
î∫o
;

225 i‡(
°©
) {

226 
	`lua_pushboﬁón
(
L
, 1);

230 
	`lua_pushnû
(
L
);

231 i‡(
‚ame
)

232 
	`lua_pushf°rög
(
L
, "%s: %s", 
‚ame
, 
	`°ªº‹
(
í
));

234 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
í
));

235 
	`lua_pushöãgî
(
L
, 
í
);

238 
	}
}

241 #i‡!
deföed
(
l_ö•e˘°©
)

243 #i‡
deföed
(
LUA_USE_POSIX
)

245 
	~<sys/waô.h
>

250 
	#l_ö•e˘°©
(
°©
,
wh©
) \

251 i‡(
	`WIFEXITED
(
°©
)Ë{ sèà
	`WEXITSTATUS
(stat); } \

252 i‡(
	`WIFSIGNALED
(
°©
)Ë{ sèà
	`WTERMSIG
(°©); 
wh©
 = "sig«l"; }

	)

256 
	#l_ö•e˘°©
(
°©
,
wh©
Ë

	)

263 
LUALIB_API
 
	$luaL_exe¸esu…
 (
lua_Sèã
 *
L
, 
°©
) {

264 c⁄° *
wh©
 = "exit";

265 i‡(
°©
 == -1)

266  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

268 
	`l_ö•e˘°©
(
°©
, 
wh©
);

269 i‡(*
wh©
 ='e' && 
°©
 == 0)

270 
	`lua_pushboﬁón
(
L
, 1);

272 
	`lua_pushnû
(
L
);

273 
	`lua_push°rög
(
L
, 
wh©
);

274 
	`lua_pushöãgî
(
L
, 
°©
);

277 
	}
}

288 
LUALIB_API
 
	$luaL_√wmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

289 i‡(
	`luaL_gëmë©abÀ
(
L
, 
äame
))

291 
	`lua_p›
(
L
, 1);

292 
	`lua_√wèbÀ
(
L
);

293 
	`lua_push°rög
(
L
, 
äame
);

294 
	`lua_£tfõld
(
L
, -2, "__name");

295 
	`lua_pushvÆue
(
L
, -1);

296 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
äame
);

298 
	}
}

301 
LUALIB_API
 
	$luaL_£tmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

302 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

303 
	`lua_£tmë©abÀ
(
L
, -2);

304 
	}
}

307 
LUALIB_API
 *
	$luaL_ã°ud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

308 *
p
 = 
	`lua_tou£rd©a
(
L
, 
ud
);

309 i‡(
p
 !
NULL
) {

310 i‡(
	`lua_gëmë©abÀ
(
L
, 
ud
)) {

311 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

312 i‡(!
	`lua_øwequÆ
(
L
, -1, -2))

313 
p
 = 
NULL
;

314 
	`lua_p›
(
L
, 2);

315  
p
;

318  
NULL
;

319 
	}
}

322 
LUALIB_API
 *
	$luaL_checkud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

323 *
p
 = 
	`luaL_ã°ud©a
(
L
, 
ud
, 
äame
);

324 i‡(
p
 =
NULL
Ë
	`ty≥îr‹
(
L
, 
ud
, 
äame
);

325  
p
;

326 
	}
}

337 
LUALIB_API
 
	$luaL_check›ti⁄
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

338 c⁄° *c⁄° 
l°
[]) {

339 c⁄° *
«me
 = (
def
Ë? 
	`luaL_›t°rög
(
L
, 
¨g
, def) :

340 
	`luaL_check°rög
(
L
, 
¨g
);

341 
i
;

342 
i
=0; 
l°
[i]; i++)

343 i‡(
	`°rcmp
(
l°
[
i
], 
«me
) == 0)

344  
i
;

345  
	`luaL_¨gîr‹
(
L
, 
¨g
,

346 
	`lua_pushf°rög
(
L
, "övÆid o±i⁄ '%s'", 
«me
));

347 
	}
}

350 
LUALIB_API
 
	$luaL_check°ack
 (
lua_Sèã
 *
L
, 
•a˚
, c⁄° *
msg
) {

352 c⁄° 
exåa
 = 
LUA_MINSTACK
;

353 i‡(!
	`lua_check°ack
(
L
, 
•a˚
 + 
exåa
)) {

354 i‡(
msg
)

355 
	`luaL_îr‹
(
L
, "°ack ovîÊow (%s)", 
msg
);

357 
	`luaL_îr‹
(
L
, "stack overflow");

359 
	}
}

362 
LUALIB_API
 
	$luaL_checkty≥
 (
lua_Sèã
 *
L
, 
¨g
, 
t
) {

363 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
t
)

364 
	`èg_îr‹
(
L
, 
¨g
, 
t
);

365 
	}
}

368 
LUALIB_API
 
	$luaL_check™y
 (
lua_Sèã
 *
L
, 
¨g
) {

369 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNONE
)

370 
	`luaL_¨gîr‹
(
L
, 
¨g
, "valueÉxpected");

371 
	}
}

374 
LUALIB_API
 c⁄° *
	$luaL_checkl°rög
 (
lua_Sèã
 *
L
, 
¨g
, 
size_t
 *
Àn
) {

375 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
¨g
, 
Àn
);

376 i‡(!
s
Ë
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TSTRING
);

377  
s
;

378 
	}
}

381 
LUALIB_API
 c⁄° *
	$luaL_›é°rög
 (
lua_Sèã
 *
L
, 
¨g
,

382 c⁄° *
def
, 
size_t
 *
Àn
) {

383 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
)) {

384 i‡(
Àn
)

385 *
Àn
 = (
def
 ? 
	`°æí
(def) : 0);

386  
def
;

388  
	`luaL_checkl°rög
(
L
, 
¨g
, 
Àn
);

389 
	}
}

392 
LUALIB_API
 
lua_Numbî
 
	$luaL_checknumbî
 (
lua_Sèã
 *
L
, 
¨g
) {

393 
i¢um
;

394 
lua_Numbî
 
d
 = 
	`lua_t⁄umbîx
(
L
, 
¨g
, &
i¢um
);

395 i‡(!
i¢um
)

396 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

397  
d
;

398 
	}
}

401 
LUALIB_API
 
lua_Numbî
 
	$luaL_›äumbî
 (
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
) {

402  
	`luaL_›t
(
L
, 
luaL_checknumbî
, 
¨g
, 
def
);

403 
	}
}

406 
	$öãº‹
 (
lua_Sèã
 *
L
, 
¨g
) {

407 i‡(
	`lua_i¢umbî
(
L
, 
¨g
))

408 
	`luaL_¨gîr‹
(
L
, 
¨g
, "number hasÇo integerÑepresentation");

410 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

411 
	}
}

414 
LUALIB_API
 
lua_I¡egî
 
	$luaL_checköãgî
 (
lua_Sèã
 *
L
, 
¨g
) {

415 
i¢um
;

416 
lua_I¡egî
 
d
 = 
	`lua_toöãgîx
(
L
, 
¨g
, &
i¢um
);

417 i‡(!
i¢um
) {

418 
	`öãº‹
(
L
, 
¨g
);

420  
d
;

421 
	}
}

424 
LUALIB_API
 
lua_I¡egî
 
	$luaL_›töãgî
 (
lua_Sèã
 *
L
, 
¨g
,

425 
lua_I¡egî
 
def
) {

426  
	`luaL_›t
(
L
, 
luaL_checköãgî
, 
¨g
, 
def
);

427 
	}
}

442 
	#buff⁄°ack
(
B
Ë((B)->
b
 !(B)->
öôb
)

	)

448 
LUALIB_API
 *
	$luaL_¥ïbuffsize
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

449 
lua_Sèã
 *
L
 = 
B
->L;

450 i‡(
B
->
size
 - B->
n
 < 
sz
) {

451 *
√wbuff
;

452 
size_t
 
√wsize
 = 
B
->
size
 * 2;

453 i‡(
√wsize
 - 
B
->
n
 < 
sz
)

454 
√wsize
 = 
B
->
n
 + 
sz
;

455 i‡(
√wsize
 < 
B
->
n
 ||Çewsizê- B->¿< 
sz
)

456 
	`luaL_îr‹
(
L
, "bufferÅooÜarge");

458 
√wbuff
 = (*)
	`lua_√wu£rd©a
(
L
, 
√wsize
 * ());

460 
	`mem˝y
(
√wbuff
, 
B
->
b
, B->
n
 * ());

461 i‡(
	`buff⁄°ack
(
B
))

462 
	`lua_ªmove
(
L
, -2);

463 
B
->
b
 = 
√wbuff
;

464 
B
->
size
 = 
√wsize
;

466  &
B
->
b
[B->
n
];

467 
	}
}

470 
LUALIB_API
 
	$luaL_addl°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
) {

471 *
b
 = 
	`luaL_¥ïbuffsize
(
B
, 
l
);

472 
	`mem˝y
(
b
, 
s
, 
l
 * ());

473 
	`luaL_addsize
(
B
, 
l
);

474 
	}
}

477 
LUALIB_API
 
	$luaL_add°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
) {

478 
	`luaL_addl°rög
(
B
, 
s
, 
	`°æí
(s));

479 
	}
}

482 
LUALIB_API
 
	$luaL_pushªsu…
 (
luaL_Buf„r
 *
B
) {

483 
lua_Sèã
 *
L
 = 
B
->L;

484 
	`lua_pushl°rög
(
L
, 
B
->
b
, B->
n
);

485 i‡(
	`buff⁄°ack
(
B
))

486 
	`lua_ªmove
(
L
, -2);

487 
	}
}

490 
LUALIB_API
 
	$luaL_pushªsu…size
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

491 
	`luaL_addsize
(
B
, 
sz
);

492 
	`luaL_pushªsu…
(
B
);

493 
	}
}

496 
LUALIB_API
 
	$luaL_addvÆue
 (
luaL_Buf„r
 *
B
) {

497 
lua_Sèã
 *
L
 = 
B
->L;

498 
size_t
 
l
;

499 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

500 i‡(
	`buff⁄°ack
(
B
))

501 
	`lua_ö£π
(
L
, -2);

502 
	`luaL_addl°rög
(
B
, 
s
, 
l
);

503 
	`lua_ªmove
(
L
, (
	`buff⁄°ack
(
B
)) ? -2 : -1);

504 
	}
}

507 
LUALIB_API
 
	$luaL_bufföô
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
) {

508 
B
->
L
 = L;

509 
B
->
b
 = B->
öôb
;

510 
B
->
n
 = 0;

511 
B
->
size
 = 
LUAL_BUFFERSIZE
;

512 
	}
}

515 
LUALIB_API
 *
	$luaL_bufföôsize
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

516 
	`luaL_bufföô
(
L
, 
B
);

517  
	`luaL_¥ïbuffsize
(
B
, 
sz
);

518 
	}
}

530 
	#‰ìli°
 0

	)

533 
LUALIB_API
 
	$luaL_ªf
 (
lua_Sèã
 *
L
, 
t
) {

534 
ªf
;

535 i‡(
	`lua_i¢û
(
L
, -1)) {

536 
	`lua_p›
(
L
, 1);

537  
LUA_REFNIL
;

539 
t
 = 
	`lua_absödex
(
L
,Å);

540 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

541 
ªf
 = ()
	`lua_toöãgî
(
L
, -1);

542 
	`lua_p›
(
L
, 1);

543 i‡(
ªf
 != 0) {

544 
	`lua_øwgëi
(
L
, 
t
, 
ªf
);

545 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

548 
ªf
 = ()
	`lua_øwÀn
(
L
, 
t
) + 1;

549 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

550  
ªf
;

551 
	}
}

554 
LUALIB_API
 
	$luaL_uƒef
 (
lua_Sèã
 *
L
, 
t
, 
ªf
) {

555 i‡(
ªf
 >= 0) {

556 
t
 = 
	`lua_absödex
(
L
,Å);

557 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

558 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

559 
	`lua_pushöãgî
(
L
, 
ªf
);

560 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

562 
	}
}

573 
	sLﬂdF
 {

574 
	mn
;

575 
FILE
 *
	mf
;

576 
	mbuff
[
BUFSIZ
];

577 } 
	tLﬂdF
;

580 c⁄° *
	$gëF
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

581 
LﬂdF
 *
lf
 = (LﬂdF *)
ud
;

582 ()
L
;

583 i‡(
lf
->
n
 > 0) {

584 *
size
 = 
lf
->
n
;

585 
lf
->
n
 = 0;

591 i‡(
	`„of
(
lf
->
f
)Ë 
NULL
;

592 *
size
 = 
	`‰ód
(
lf
->
buff
, 1, ÷f->buff),Üf->
f
);

594  
lf
->
buff
;

595 
	}
}

598 
	$îrfûe
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
‚ameödex
) {

599 c⁄° *
£º
 = 
	`°ªº‹
(
î∫o
);

600 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 
‚ameödex
) + 1;

601 
	`lua_pushf°rög
(
L
, "ˇ¬Ÿ %†%s: %s", 
wh©
, 
fûíame
, 
£º
);

602 
	`lua_ªmove
(
L
, 
‚ameödex
);

603  
LUA_ERRFILE
;

604 
	}
}

607 
	$skùBOM
 (
LﬂdF
 *
lf
) {

608 c⁄° *
p
 = "\xEF\xBB\xBF";

609 
c
;

610 
lf
->
n
 = 0;

612 
c
 = 
	`gëc
(
lf
->
f
);

613 i‡(
c
 =
EOF
 || c !*(c⁄° *)
p
++)  c;

614 
lf
->
buff
[lf->
n
++] = 
c
;

615 } *
p
 != '\0');

616 
lf
->
n
 = 0;

617  
	`gëc
(
lf
->
f
);

618 
	}
}

628 
	$skùcommít
 (
LﬂdF
 *
lf
, *
˝
) {

629 
c
 = *
˝
 = 
	`skùBOM
(
lf
);

630 i‡(
c
 == '#') {

632 
c
 = 
	`gëc
(
lf
->
f
);

633 } 
c
 !
EOF
 && c != '\n') ;

634 *
˝
 = 
	`gëc
(
lf
->
f
);

638 
	}
}

641 
LUALIB_API
 
	$luaL_lﬂdfûex
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
,

642 c⁄° *
mode
) {

643 
LﬂdF
 
lf
;

644 
°©us
, 
ªad°©us
;

645 
c
;

646 
‚ameödex
 = 
	`lua_gët›
(
L
) + 1;

647 i‡(
fûíame
 =
NULL
) {

648 
	`lua_pushlôîÆ
(
L
, "=stdin");

649 
lf
.
f
 = 
°dö
;

652 
	`lua_pushf°rög
(
L
, "@%s", 
fûíame
);

653 
lf
.
f
 = 
	`f›í
(
fûíame
, "r");

654 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "›í", 
‚ameödex
);

656 i‡(
	`skùcommít
(&
lf
, &
c
))

657 
lf
.
buff
[lf.
n
++] = '\n';

658 i‡(
c
 =
LUA_SIGNATURE
[0] && 
fûíame
) {

659 
lf
.
f
 = 
	`‰e›í
(
fûíame
, "rb",Üf.f);

660 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "ª›í", 
‚ameödex
);

661 
	`skùcommít
(&
lf
, &
c
);

663 i‡(
c
 !
EOF
)

664 
lf
.
buff
[lf.
n
++] = 
c
;

665 
°©us
 = 
	`lua_lﬂd
(
L
, 
gëF
, &
lf
, 
	`lua_to°rög
(L, -1), 
mode
);

666 
ªad°©us
 = 
	`„º‹
(
lf
.
f
);

667 i‡(
fûíame
Ë
	`f˛o£
(
lf
.
f
);

668 i‡(
ªad°©us
) {

669 
	`lua_£â›
(
L
, 
‚ameödex
);

670  
	`îrfûe
(
L
, "ªad", 
‚ameödex
);

672 
	`lua_ªmove
(
L
, 
‚ameödex
);

673  
°©us
;

674 
	}
}

677 
	sLﬂdS
 {

678 c⁄° *
	ms
;

679 
size_t
 
	msize
;

680 } 
	tLﬂdS
;

683 c⁄° *
	$gëS
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

684 
LﬂdS
 *
ls
 = (LﬂdS *)
ud
;

685 ()
L
;

686 i‡(
ls
->
size
 =0Ë 
NULL
;

687 *
size
 = 
ls
->size;

688 
ls
->
size
 = 0;

689  
ls
->
s
;

690 
	}
}

693 
LUALIB_API
 
	$luaL_lﬂdbuf„rx
 (
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
size
,

694 c⁄° *
«me
, c⁄° *
mode
) {

695 
LﬂdS
 
ls
;

696 
ls
.
s
 = 
buff
;

697 
ls
.
size
 = size;

698  
	`lua_lﬂd
(
L
, 
gëS
, &
ls
, 
«me
, 
mode
);

699 
	}
}

702 
LUALIB_API
 
	$luaL_lﬂd°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

703  
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), s);

704 
	}
}

710 
LUALIB_API
 
	$luaL_gëmëafõld
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

711 i‡(!
	`lua_gëmë©abÀ
(
L
, 
obj
))

712  
LUA_TNIL
;

714 
â
;

715 
	`lua_push°rög
(
L
, 
evít
);

716 
â
 = 
	`lua_øwgë
(
L
, -2);

717 i‡(
â
 =
LUA_TNIL
)

718 
	`lua_p›
(
L
, 2);

720 
	`lua_ªmove
(
L
, -2);

721  
â
;

723 
	}
}

726 
LUALIB_API
 
	$luaL_ˇŒmëa
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

727 
obj
 = 
	`lua_absödex
(
L
, obj);

728 i‡(
	`luaL_gëmëafõld
(
L
, 
obj
, 
evít
Ë=
LUA_TNIL
)

730 
	`lua_pushvÆue
(
L
, 
obj
);

731 
	`lua_ˇŒ
(
L
, 1, 1);

733 
	}
}

736 
LUALIB_API
 
lua_I¡egî
 
	$luaL_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

737 
lua_I¡egî
 
l
;

738 
i¢um
;

739 
	`lua_Àn
(
L
, 
idx
);

740 
l
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

741 i‡(!
i¢um
)

742 
	`luaL_îr‹
(
L
, "objectÜength isÇotán integer");

743 
	`lua_p›
(
L
, 1);

744  
l
;

745 
	}
}

748 
LUALIB_API
 c⁄° *
	$luaL_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

749 i‡(!
	`luaL_ˇŒmëa
(
L
, 
idx
, "__tostring")) {

750 
	`lua_ty≥
(
L
, 
idx
)) {

751 
LUA_TNUMBER
: {

752 i‡(
	`lua_isöãgî
(
L
, 
idx
))

753 
	`lua_pushf°rög
(
L
, "%I", 
	`lua_toöãgî
(L, 
idx
));

755 
	`lua_pushf°rög
(
L
, "%f", 
	`lua_t⁄umbî
(L, 
idx
));

758 
LUA_TSTRING
:

759 
	`lua_pushvÆue
(
L
, 
idx
);

761 
LUA_TBOOLEAN
:

762 
	`lua_push°rög
(
L
, (
	`lua_toboﬁón
(L, 
idx
) ? "true" : "false"));

764 
LUA_TNIL
:

765 
	`lua_pushlôîÆ
(
L
, "nil");

768 
	`lua_pushf°rög
(
L
, "%s: %p", 
	`luaL_ty≥«me
(L, 
idx
),

769 
	`lua_t›oöãr
(
L
, 
idx
));

773  
	`lua_tﬁ°rög
(
L
, -1, 
Àn
);

774 
	}
}

782 #i‡
deföed
(
LUA_COMPAT_MODULE
)

784 c⁄° *
	$luaL_födèbÀ
 (
lua_Sèã
 *
L
, 
idx
,

785 c⁄° *
‚ame
, 
szhöt
) {

786 c⁄° *
e
;

787 i‡(
idx
Ë
	`lua_pushvÆue
(
L
, idx);

789 
e
 = 
	`°rchr
(
‚ame
, '.');

790 i‡(
e
 =
NULL
Ëê
‚ame
 + 
	`°æí
(fname);

791 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

792 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TNIL
) {

793 
	`lua_p›
(
L
, 1);

794 
	`lua_¸óãèbÀ
(
L
, 0, (*
e
 ='.' ? 1 : 
szhöt
));

795 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

796 
	`lua_pushvÆue
(
L
, -2);

797 
	`lua_£âabÀ
(
L
, -4);

799 i‡(!
	`lua_i°abÀ
(
L
, -1)) {

800 
	`lua_p›
(
L
, 2);

801  
‚ame
;

803 
	`lua_ªmove
(
L
, -2);

804 
‚ame
 = 
e
 + 1;

805 } *
e
 == '.');

806  
NULL
;

807 
	}
}

813 
	$libsize
 (c⁄° 
luaL_Reg
 *
l
) {

814 
size
 = 0;

815 ; 
l
 &&Ü->
«me
;Ü++Ë
size
++;

816  
size
;

817 
	}
}

826 
LUALIB_API
 
	$luaL_pushmoduÀ
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

827 
sizehöt
) {

828 
	`luaL_födèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED", 1);

829 i‡(
	`lua_gëfõld
(
L
, -1, 
mod«me
Ë!
LUA_TTABLE
) {

830 
	`lua_p›
(
L
, 1);

832 
	`lua_pushglobÆèbÀ
(
L
);

833 i‡(
	`luaL_födèbÀ
(
L
, 0, 
mod«me
, 
sizehöt
Ë!
NULL
)

834 
	`luaL_îr‹
(
L
, "«mêc⁄Êi˘ f‹ moduÀ '%s'", 
mod«me
);

835 
	`lua_pushvÆue
(
L
, -1);

836 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

838 
	`lua_ªmove
(
L
, -2);

839 
	}
}

842 
LUALIB_API
 
	$luaL_›ílib
 (
lua_Sèã
 *
L
, c⁄° *
lib«me
,

843 c⁄° 
luaL_Reg
 *
l
, 
nup
) {

844 
	`luaL_checkvîsi⁄
(
L
);

845 i‡(
lib«me
) {

846 
	`luaL_pushmoduÀ
(
L
, 
lib«me
, 
	`libsize
(
l
));

847 
	`lua_ö£π
(
L
, -(
nup
 + 1));

849 i‡(
l
)

850 
	`luaL_£tfuncs
(
L
, 
l
, 
nup
);

852 
	`lua_p›
(
L
, 
nup
);

853 
	}
}

863 
LUALIB_API
 
	$luaL_£tfuncs
 (
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
) {

864 
	`luaL_check°ack
(
L
, 
nup
, "too many upvalues");

865 ; 
l
->
«me
 !
NULL
;Ü++) {

866 
i
;

867 
i
 = 0; i < 
nup
; i++)

868 
	`lua_pushvÆue
(
L
, -
nup
);

869 
	`lua_pushc˛osuª
(
L
, 
l
->
func
, 
nup
);

870 
	`lua_£tfõld
(
L
, -(
nup
 + 2), 
l
->
«me
);

872 
	`lua_p›
(
L
, 
nup
);

873 
	}
}

880 
LUALIB_API
 
	$luaL_gësubèbÀ
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
) {

881 i‡(
	`lua_gëfõld
(
L
, 
idx
, 
‚ame
Ë=
LUA_TTABLE
)

884 
	`lua_p›
(
L
, 1);

885 
idx
 = 
	`lua_absödex
(
L
, idx);

886 
	`lua_√wèbÀ
(
L
);

887 
	`lua_pushvÆue
(
L
, -1);

888 
	`lua_£tfõld
(
L
, 
idx
, 
‚ame
);

891 
	}
}

900 
LUALIB_API
 
	$luaL_ªquúef
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

901 
lua_CFun˘i⁄
 
›íf
, 
glb
) {

902 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

903 
	`lua_gëfõld
(
L
, -1, 
mod«me
);

904 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

905 
	`lua_p›
(
L
, 1);

906 
	`lua_pushcfun˘i⁄
(
L
, 
›íf
);

907 
	`lua_push°rög
(
L
, 
mod«me
);

908 
	`lua_ˇŒ
(
L
, 1, 1);

909 
	`lua_pushvÆue
(
L
, -1);

910 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

912 
	`lua_ªmove
(
L
, -2);

913 i‡(
glb
) {

914 
	`lua_pushvÆue
(
L
, -1);

915 
	`lua_£tglobÆ
(
L
, 
mod«me
);

917 
	}
}

920 
LUALIB_API
 c⁄° *
	$luaL_gsub
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

921 c⁄° *
r
) {

922 c⁄° *
wûd
;

923 
size_t
 
l
 = 
	`°æí
(
p
);

924 
luaL_Buf„r
 
b
;

925 
	`luaL_bufföô
(
L
, &
b
);

926 (
wûd
 = 
	`°r°r
(
s
, 
p
)Ë!
NULL
) {

927 
	`luaL_addl°rög
(&
b
, 
s
, 
wûd
 - s);

928 
	`luaL_add°rög
(&
b
, 
r
);

929 
s
 = 
wûd
 + 
l
;

931 
	`luaL_add°rög
(&
b
, 
s
);

932 
	`luaL_pushªsu…
(&
b
);

933  
	`lua_to°rög
(
L
, -1);

934 
	}
}

937 *
	$l_Æloc
 (*
ud
, *
±r
, 
size_t
 
osize
, size_à
nsize
) {

938 ()
ud
; ()
osize
;

939 i‡(
nsize
 == 0) {

940 
	`‰ì
(
±r
);

941  
NULL
;

944  
	`ªÆloc
(
±r
, 
nsize
);

945 
	}
}

948 
	$∑nic
 (
lua_Sèã
 *
L
) {

949 
	`lua_wrôe°rögîr‹
(
L
, "PANIC: unprotectedÉrror in callÅo Lua API (%s)\n",

950 
	`lua_to°rög
(
L
, -1));

952 
	}
}

955 
LUALIB_API
 
lua_Sèã
 *
	$luaL_√w°©e
 () {

956 
lua_Sèã
 *
L
 = 
	`lua_√w°©e
(
l_Æloc
, 
NULL
);

957 i‡(
L
Ë
	`lua_©∑nic
(L, &
∑nic
);

958  
L
;

959 
	}
}

962 
LUALIB_API
 
	$luaL_checkvîsi⁄_
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
) {

963 c⁄° 
lua_Numbî
 *
v
 = 
	`lua_vîsi⁄
(
L
);

964 i‡(
sz
 !
LUAL_NUMSIZES
)

965 
	`luaL_îr‹
(
L
, "coreándÜibrary have incompatibleÇumericÅypes");

966 i‡(
v
 !
	`lua_vîsi⁄
(
NULL
))

967 
	`luaL_îr‹
(
L
, "multiple Lua VMs detected");

968 i‡(*
v
 !
vî
)

969 
	`luaL_îr‹
(
L
, "version mismatch:ápp.Çeeds %f, Lua coreÖrovides %f",

970 
vî
, *
v
);

971 
	}
}

973 
LUALIB_API
 *

974 
	$luaL_gë¥iv©e
(
lua_Sèã
 * 
L
)

976  (
L
 =
NULL
Ë? NULL : 
	`lua_gë¥iv©e
(L);

977 
	}
}

979 
LUALIB_API
 

980 
	$luaL_£çriv©e
(
lua_Sèã
 * 
L
, * 
vÆ
)

982 i‡–
L
 =
NULL
 )

984 
	`lua_£çriv©e
(
L
, 
vÆ
);

986 
	}
}

	@lib/archive/lua-5.3.0/src/lauxlib.h

8 #i‚de‡
œuxlib_h


9 
	#œuxlib_h


	)

12 
	~<°ddef.h
>

13 
	~<°dio.h
>

15 
	~"lua.h
"

20 
	#LUA_ERRFILE
 (
LUA_ERRERR
+1)

	)

23 
	sluaL_Reg
 {

24 c⁄° *
	m«me
;

25 
lua_CFun˘i⁄
 
	mfunc
;

26 } 
	tluaL_Reg
;

29 
	#LUAL_NUMSIZES
 ((
lua_I¡egî
)*16 + (
lua_Numbî
))

	)

31 
LUALIB_API
 (
luaL_checkvîsi⁄_
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
);

32 
	#luaL_checkvîsi⁄
(
L
) \

33 
	`luaL_checkvîsi⁄_
(
L
, 
LUA_VERSION_NUM
, 
LUAL_NUMSIZES
)

	)

35 
LUALIB_API
 (
luaL_gëmëafõld
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

36 
LUALIB_API
 (
luaL_ˇŒmëa
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

37 
LUALIB_API
 c⁄° *(
luaL_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

38 
LUALIB_API
 (
luaL_¨gîr‹
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
);

39 
LUALIB_API
 c⁄° *(
luaL_checkl°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

40 
size_t
 *
l
);

41 
LUALIB_API
 c⁄° *(
luaL_›é°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

42 c⁄° *
def
, 
size_t
 *
l
);

43 
LUALIB_API
 
	$lua_Numbî
 (
luaL_checknumbî
Ë(
lua_Sèã
 *
L
, 
¨g
);

44 
LUALIB_API
 
	$lua_Numbî
 (
luaL_›äumbî
Ë(
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
);

46 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_checköãgî
Ë(
lua_Sèã
 *
L
, 
¨g
);

47 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_›töãgî
Ë(
lua_Sèã
 *
L
, 
¨g
,

48 
lua_I¡egî
 
def
);

50 
LUALIB_API
 (
luaL_check°ack
Ë(
lua_Sèã
 *
L
, 
sz
, c⁄° *
msg
);

51 
LUALIB_API
 (
luaL_checkty≥
Ë(
lua_Sèã
 *
L
, 
¨g
, 
t
);

52 
LUALIB_API
 (
luaL_check™y
Ë(
lua_Sèã
 *
L
, 
¨g
);

54 
LUALIB_API
 (
luaL_√wmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

55 
LUALIB_API
 (
luaL_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

56 
LUALIB_API
 *(
luaL_ã°ud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

57 
LUALIB_API
 *(
luaL_checkud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

59 
LUALIB_API
 (
luaL_whîe
Ë(
lua_Sèã
 *
L
, 
lvl
);

60 
LUALIB_API
 (
luaL_îr‹
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

62 
LUALIB_API
 (
luaL_check›ti⁄
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

63 c⁄° *c⁄° 
l°
[]);

65 
LUALIB_API
 (
luaL_fûîesu…
Ë(
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
);

66 
LUALIB_API
 (
luaL_exe¸esu…
Ë(
lua_Sèã
 *
L
, 
°©
);

69 
	#LUA_NOREF
 (-2)

	)

70 
	#LUA_REFNIL
 (-1)

	)

72 
LUALIB_API
 (
luaL_ªf
Ë(
lua_Sèã
 *
L
, 
t
);

73 
LUALIB_API
 (
luaL_uƒef
Ë(
lua_Sèã
 *
L
, 
t
, 
ªf
);

75 
LUALIB_API
 (
luaL_lﬂdfûex
Ë(
lua_Sèã
 *
L
, c⁄° *
fûíame
,

76 c⁄° *
mode
);

78 
	#luaL_lﬂdfûe
(
L
,
f
Ë
	`luaL_lﬂdfûex
(L,f,
NULL
)

	)

80 
LUALIB_API
 (
luaL_lﬂdbuf„rx
Ë(
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
sz
,

81 c⁄° *
«me
, c⁄° *
mode
);

82 
LUALIB_API
 (
luaL_lﬂd°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

84 
LUALIB_API
 
lua_Sèã
 *(
luaL_√w°©e
) ();

86 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

88 
LUALIB_API
 c⁄° *(
luaL_gsub
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

89 c⁄° *
r
);

91 
LUALIB_API
 (
luaL_£tfuncs
Ë(
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
);

93 
LUALIB_API
 (
luaL_gësubèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
);

95 
LUALIB_API
 (
luaL_åa˚back
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

96 c⁄° *
msg
, 
Àvñ
);

98 
LUALIB_API
 (
luaL_ªquúef
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

99 
lua_CFun˘i⁄
 
›íf
, 
glb
);

108 
	#luaL_√wlibèbÀ
(
L
,
l
) \

109 
	`lua_¸óãèbÀ
(
L
, 0, (
l
)/(÷)[0]Ë- 1)

	)

111 
	#luaL_√wlib
(
L
,
l
) \

112 (
	`luaL_checkvîsi⁄
(
L
), 
	`luaL_√wlibèbÀ
(L,
l
), 
	`luaL_£tfuncs
(L,l,0))

	)

114 
	#luaL_¨gcheck
(
L
, 
c⁄d
,
¨g
,
exåamsg
) \

115 (()((
c⁄d
Ë|| 
	`luaL_¨gîr‹
(
L
, (
¨g
), (
exåamsg
))))

	)

116 
	#luaL_check°rög
(
L
,
n
Ë(
	`luaL_checkl°rög
(L, (n), 
NULL
))

	)

117 
	#luaL_›t°rög
(
L
,
n
,
d
Ë(
	`luaL_›é°rög
(L, (n), (d), 
NULL
))

	)

119 
	#luaL_ty≥«me
(
L
,
i
Ë
	`lua_ty≥«me
(L, 
	`lua_ty≥
(L,(i)))

	)

121 
	#luaL_dofûe
(
L
, 
‚
) \

122 (
	`luaL_lﬂdfûe
(
L
, 
‚
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

124 
	#luaL_do°rög
(
L
, 
s
) \

125 (
	`luaL_lﬂd°rög
(
L
, 
s
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

127 
	#luaL_gëmë©abÀ
(
L
,
n
Ë(
	`lua_gëfõld
(L, 
LUA_REGISTRYINDEX
, (n)))

	)

129 
	#luaL_›t
(
L
,
f
,
n
,
d
Ë(
	`lua_i¢⁄e‹nû
(L,“)Ë? (dË: 
	`f
(L,“)))

	)

131 
	#luaL_lﬂdbuf„r
(
L
,
s
,
sz
,
n
Ë
	`luaL_lﬂdbuf„rx
(L,s,sz,n,
NULL
)

	)

140 
	sluaL_Buf„r
 {

141 *
b
;

142 
size_t
 
size
;

143 
size_t
 
n
;

144 
lua_Sèã
 *
L
;

145 
öôb
[
LUAL_BUFFERSIZE
];

146 } 
	tluaL_Buf„r
;

149 
	#luaL_addch¨
(
B
,
c
) \

150 (()((
B
)->
n
 < (B)->
size
 || 
	`luaL_¥ïbuffsize
((B), 1)), \

151 ((
B
)->
b
[(B)->
n
++] = (
c
)))

	)

153 
	#luaL_addsize
(
B
,
s
Ë((B)->
n
 +(s))

	)

155 
LUALIB_API
 (
luaL_bufföô
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
);

156 
LUALIB_API
 *(
luaL_¥ïbuffsize
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

157 
LUALIB_API
 (
luaL_addl°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
);

158 
LUALIB_API
 (
luaL_add°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
);

159 
LUALIB_API
 (
luaL_addvÆue
Ë(
luaL_Buf„r
 *
B
);

160 
LUALIB_API
 (
luaL_pushªsu…
Ë(
luaL_Buf„r
 *
B
);

161 
LUALIB_API
 (
luaL_pushªsu…size
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

162 
LUALIB_API
 *(
luaL_bufföôsize
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

164 
	#luaL_¥ïbuf„r
(
B
Ë
	`luaL_¥ïbuffsize
(B, 
LUAL_BUFFERSIZE
)

	)

182 
	#LUA_FILEHANDLE
 "FILE*"

	)

185 
	sluaL_Såóm
 {

186 
FILE
 *
f
;

187 
lua_CFun˘i⁄
 
˛o£f
;

188 } 
	tluaL_Såóm
;

195 #i‡
	`deföed
(
LUA_COMPAT_MODULE
)

197 
LUALIB_API
 (
luaL_pushmoduÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

198 
sizehöt
);

199 
LUALIB_API
 (
luaL_›ílib
Ë(
lua_Sèã
 *
L
, c⁄° *
lib«me
,

200 c⁄° 
luaL_Reg
 *
l
, 
nup
);

202 
	#luaL_ªgi°î
(
L
,
n
,
l
Ë(
	`luaL_›ílib
(L,“),÷),0))

	)

214 #i‡!
	`deföed
(
lua_wrôe°rög
)

215 
	#lua_wrôe°rög
(
L
,
s
,
l
Ë
	`fwrôe
((s), (), (l), 
°dout
)

	)

219 #i‡!
	`deföed
(
lua_wrôñöe
)

220 
	#lua_wrôñöe
(
L
Ë(
	`lua_wrôe°rög
(L, "\n", 1), 
	`fÊush
(
°dout
))

	)

224 #i‡!
	`deföed
(
lua_wrôe°rögîr‹
)

225 
	#lua_wrôe°rögîr‹
(
L
,
s
,
p
) \

226 (
	`Ârötf
(
°dîr
, (
s
), (
p
)), 
	`fÊush
(°dîr))

	)

237 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

239 
	#luaL_checkunsig√d
(
L
,
a
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,a))

	)

240 
	#luaL_›tunsig√d
(
L
,
a
,
d
) \

241 ((
lua_Unsig√d
)
	`luaL_›töãgî
(
L
,
a
,(
lua_I¡egî
)(
d
)))

	)

243 
	#luaL_checköt
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

244 
	#luaL_›töt
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

246 
	#luaL_checkl⁄g
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

247 
	#luaL_›é⁄g
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

252 
LUALIB_API
 
	`luaL_£çriv©e
(
lua_Sèã
 * 
L
, * 
vÆ
);

253 
LUALIB_API
 * 
	`luaL_gë¥iv©e
(
lua_Sèã
 * 
L
);

	@lib/archive/lua-5.3.0/src/lbaselib.c

7 
	#lba£lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

24 
	$luaB_¥öt
 (
lua_Sèã
 *
L
) {

25 
n
 = 
	`lua_gët›
(
L
);

26 
i
;

27 
	`lua_gëglobÆ
(
L
, "tostring");

28 
i
=1; i<=
n
; i++) {

29 c⁄° *
s
;

30 
size_t
 
l
;

31 
	`lua_pushvÆue
(
L
, -1);

32 
	`lua_pushvÆue
(
L
, 
i
);

33 
	`lua_ˇŒ
(
L
, 1, 1);

34 
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

35 i‡(
s
 =
NULL
)

36  
	`luaL_îr‹
(
L
, "'tostring' mustÑeturná stringÅo 'print'");

37 i‡(
i
>1Ë
	`lua_wrôe°rög
(
L
, "\t", 1);

38 
	`lua_wrôe°rög
(
L
, 
s
, 
l
);

39 
	`lua_p›
(
L
, 1);

41 
	`lua_wrôñöe
(
L
);

43 
	}
}

46 
	#SPACECHARS
 " \f\n\r\t\v"

	)

48 c⁄° *
	$b_°r2öt
 (c⁄° *
s
, 
ba£
, 
lua_I¡egî
 *
≤
) {

49 
lua_Unsig√d
 
n
 = 0;

50 
√g
 = 0;

51 
s
 +
	`°r•n
(s, 
SPACECHARS
);

52 i‡(*
s
 ='-'Ë{ s++; 
√g
 = 1; }

53 i‡(*
s
 == '+') s++;

54 i‡(!
	`iß um
(()*
s
))

55  
NULL
;

57 
digô
 = (
	`isdigô
(()*
s
)) ? *s - '0'

58 : 
	`touµî
(()*
s
) - 'A' + 10;

59 i‡(
digô
 >
ba£
Ë 
NULL
;

60 
n
 =Ç * 
ba£
 + 
digô
;

61 
s
++;

62 } 
	`iß um
(()*
s
));

63 
s
 +
	`°r•n
(s, 
SPACECHARS
);

64 *
≤
 = (
lua_I¡egî
)((
√g
Ë? (0u - 
n
) :Ç);

65  
s
;

66 
	}
}

69 
	$luaB_t⁄umbî
 (
lua_Sèã
 *
L
) {

70 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2)) {

71 
	`luaL_check™y
(
L
, 1);

72 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

73 
	`lua_£â›
(
L
, 1);

77 
size_t
 
l
;

78 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

79 i‡(
s
 !
NULL
 && 
	`lua_°rögt⁄umbî
(
L
, sË=
l
 + 1)

85 
size_t
 
l
;

86 c⁄° *
s
;

87 
lua_I¡egî
 
n
 = 0;

88 
lua_I¡egî
 
ba£
 = 
	`luaL_checköãgî
(
L
, 2);

89 
	`luaL_checkty≥
(
L
, 1, 
LUA_TSTRING
);

90 
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

91 
	`luaL_¨gcheck
(
L
, 2 <
ba£
 && base <= 36, 2, "base out ofÑange");

92 i‡(
	`b_°r2öt
(
s
, ()
ba£
, &
n
Ë=†+ 
l
) {

93 
	`lua_pushöãgî
(
L
, 
n
);

97 
	`lua_pushnû
(
L
);

99 
	}
}

102 
	$luaB_îr‹
 (
lua_Sèã
 *
L
) {

103 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 2, 1);

104 
	`lua_£â›
(
L
, 1);

105 i‡(
	`lua_is°rög
(
L
, 1Ë&& 
Àvñ
 > 0) {

106 
	`luaL_whîe
(
L
, 
Àvñ
);

107 
	`lua_pushvÆue
(
L
, 1);

108 
	`lua_c⁄ˇt
(
L
, 2);

110  
	`lua_îr‹
(
L
);

111 
	}
}

114 
	$luaB_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

115 
	`luaL_check™y
(
L
, 1);

116 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

117 
	`lua_pushnû
(
L
);

120 
	`luaL_gëmëafõld
(
L
, 1, "__metatable");

122 
	}
}

125 
	$luaB_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

126 
t
 = 
	`lua_ty≥
(
L
, 2);

127 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

128 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

130 i‡(
	`luaL_gëmëafõld
(
L
, 1, "__më©abÀ"Ë!
LUA_TNIL
)

131  
	`luaL_îr‹
(
L
, "cannot changeáÖrotected metatable");

132 
	`lua_£â›
(
L
, 2);

133 
	`lua_£tmë©abÀ
(
L
, 1);

135 
	}
}

138 
	$luaB_øwequÆ
 (
lua_Sèã
 *
L
) {

139 
	`luaL_check™y
(
L
, 1);

140 
	`luaL_check™y
(
L
, 2);

141 
	`lua_pushboﬁón
(
L
, 
	`lua_øwequÆ
(L, 1, 2));

143 
	}
}

146 
	$luaB_øwÀn
 (
lua_Sèã
 *
L
) {

147 
t
 = 
	`lua_ty≥
(
L
, 1);

148 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TTABLE
 ||Å =
LUA_TSTRING
, 1,

150 
	`lua_pushöãgî
(
L
, 
	`lua_øwÀn
(L, 1));

152 
	}
}

155 
	$luaB_øwgë
 (
lua_Sèã
 *
L
) {

156 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

157 
	`luaL_check™y
(
L
, 2);

158 
	`lua_£â›
(
L
, 2);

159 
	`lua_øwgë
(
L
, 1);

161 
	}
}

163 
	$luaB_øw£t
 (
lua_Sèã
 *
L
) {

164 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

165 
	`luaL_check™y
(
L
, 2);

166 
	`luaL_check™y
(
L
, 3);

167 
	`lua_£â›
(
L
, 3);

168 
	`lua_øw£t
(
L
, 1);

170 
	}
}

173 
	$luaB_cﬁÀ˘g¨bage
 (
lua_Sèã
 *
L
) {

174 c⁄° *c⁄° 
›ts
[] = {"stop", "restart", "collect",

176 "i§u¬ög", 
NULL
};

177 c⁄° 
›t¢um
[] = {
LUA_GCSTOP
, 
LUA_GCRESTART
, 
LUA_GCCOLLECT
,

178 
LUA_GCCOUNT
, 
LUA_GCSTEP
, 
LUA_GCSETPAUSE
, 
LUA_GCSETSTEPMUL
,

179 
LUA_GCISRUNNING
};

180 
o
 = 
›t¢um
[
	`luaL_check›ti⁄
(
L
, 1, "cﬁÀ˘", 
›ts
)];

181 
ex
 = ()
	`luaL_›töãgî
(
L
, 2, 0);

182 
ªs
 = 
	`lua_gc
(
L
, 
o
, 
ex
);

183 
o
) {

184 
LUA_GCCOUNT
: {

185 
b
 = 
	`lua_gc
(
L
, 
LUA_GCCOUNTB
, 0);

186 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
ªs
 + (÷ua_Numbî)
b
/1024));

189 
LUA_GCSTEP
: 
LUA_GCISRUNNING
: {

190 
	`lua_pushboﬁón
(
L
, 
ªs
);

194 
	`lua_pushöãgî
(
L
, 
ªs
);

198 
	}
}

204 
	$luaB_ty≥
 (
lua_Sèã
 *
L
) {

205 
	`luaL_check™y
(
L
, 1);

206 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(
	`lua_ty≥
(L, 1) + 1));

208 
	}
}

211 
	$∑úsmëa
 (
lua_Sèã
 *
L
, c⁄° *
mëhod
, 
iszîo
,

212 
lua_CFun˘i⁄
 
ôî
) {

213 i‡(
	`luaL_gëmëafõld
(
L
, 1, 
mëhod
Ë=
LUA_TNIL
) {

214 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

215 
	`lua_pushcfun˘i⁄
(
L
, 
ôî
);

216 
	`lua_pushvÆue
(
L
, 1);

217 i‡(
iszîo
Ë
	`lua_pushöãgî
(
L
, 0);

218 
	`lua_pushnû
(
L
);

221 
	`lua_pushvÆue
(
L
, 1);

222 
	`lua_ˇŒ
(
L
, 1, 3);

225 
	}
}

228 
	$luaB_√xt
 (
lua_Sèã
 *
L
) {

229 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

230 
	`lua_£â›
(
L
, 2);

231 i‡(
	`lua_√xt
(
L
, 1))

234 
	`lua_pushnû
(
L
);

237 
	}
}

240 
	$luaB_∑ús
 (
lua_Sèã
 *
L
) {

241  
	`∑úsmëa
(
L
, "__∑ús", 0, 
luaB_√xt
);

242 
	}
}

248 
	$ùaúßux_øw
 (
lua_Sèã
 *
L
) {

249 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2) + 1;

250 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

251 
	`lua_pushöãgî
(
L
, 
i
);

252  (
	`lua_øwgëi
(
L
, 1, 
i
Ë=
LUA_TNIL
) ? 1 : 2;

253 
	}
}

259 
	$ùaúßux
 (
lua_Sèã
 *
L
) {

260 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2) + 1;

261 
	`lua_pushöãgî
(
L
, 
i
);

262  (
	`lua_gëi
(
L
, 1, 
i
Ë=
LUA_TNIL
) ? 1 : 2;

263 
	}
}

271 
	$luaB_ùaús
 (
lua_Sèã
 *
L
) {

272 
lua_CFun˘i⁄
 
ôî
 = (
	`luaL_gëmëafõld
(
L
, 1, "__ödex"Ë!
LUA_TNIL
)

273 ? 
ùaúßux
 : 
ùaúßux_øw
;

274 #i‡
	`deföed
(
LUA_COMPAT_IPAIRS
)

275  
	`∑úsmëa
(
L
, "__ùaús", 1, 
ôî
);

277 
	`luaL_check™y
(
L
, 1);

278 
	`lua_pushcfun˘i⁄
(
L
, 
ôî
);

279 
	`lua_pushvÆue
(
L
, 1);

280 
	`lua_pushöãgî
(
L
, 0);

283 
	}
}

286 
	$lﬂd_aux
 (
lua_Sèã
 *
L
, 
°©us
, 
ívidx
) {

287 i‡(
°©us
 =
LUA_OK
) {

288 i‡(
ívidx
 != 0) {

289 
	`lua_pushvÆue
(
L
, 
ívidx
);

290 i‡(!
	`lua_£tupvÆue
(
L
, -2, 1))

291 
	`lua_p›
(
L
, 1);

296 
	`lua_pushnû
(
L
);

297 
	`lua_ö£π
(
L
, -2);

300 
	}
}

303 
	$luaB_lﬂdfûe
 (
lua_Sèã
 *
L
) {

304 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

305 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, 
NULL
);

306 
ív
 = (!
	`lua_i¢⁄e
(
L
, 3) ? 3 : 0);

307 
°©us
 = 
	`luaL_lﬂdfûex
(
L
, 
‚ame
, 
mode
);

308  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

309 
	}
}

324 
	#RESERVEDSLOT
 5

	)

333 c⁄° *
	$gíîic_ªadî
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

334 ()(
ud
);

335 
	`luaL_check°ack
(
L
, 2, "too manyÇested functions");

336 
	`lua_pushvÆue
(
L
, 1);

337 
	`lua_ˇŒ
(
L
, 0, 1);

338 i‡(
	`lua_i¢û
(
L
, -1)) {

339 
	`lua_p›
(
L
, 1);

340 *
size
 = 0;

341  
NULL
;

343 i‡(!
	`lua_is°rög
(
L
, -1))

344 
	`luaL_îr‹
(
L
, "reader function mustÑeturná string");

345 
	`lua_ª∂a˚
(
L
, 
RESERVEDSLOT
);

346  
	`lua_tﬁ°rög
(
L
, 
RESERVEDSLOT
, 
size
);

347 
	}
}

350 
	$luaB_lﬂd
 (
lua_Sèã
 *
L
) {

351 
°©us
;

352 
size_t
 
l
;

353 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

354 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 3, "bt");

355 
ív
 = (!
	`lua_i¢⁄e
(
L
, 4) ? 4 : 0);

356 i‡(
s
 !
NULL
) {

357 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, 
s
);

358 
°©us
 = 
	`luaL_lﬂdbuf„rx
(
L
, 
s
, 
l
, 
chunk«me
, 
mode
);

361 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, "=(load)");

362 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

363 
	`lua_£â›
(
L
, 
RESERVEDSLOT
);

364 
°©us
 = 
	`lua_lﬂd
(
L
, 
gíîic_ªadî
, 
NULL
, 
chunk«me
, 
mode
);

366  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

367 
	}
}

372 
	$dofûec⁄t
 (
lua_Sèã
 *
L
, 
d1
, 
lua_KC⁄ãxt
 
d2
) {

373 ()
d1
; ()
d2
;

374  
	`lua_gët›
(
L
) - 1;

375 
	}
}

378 
	$luaB_dofûe
 (
lua_Sèã
 *
L
) {

379 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

380 
	`lua_£â›
(
L
, 1);

381 i‡(
	`luaL_lﬂdfûe
(
L
, 
‚ame
Ë!
LUA_OK
)

382  
	`lua_îr‹
(
L
);

383 
	`lua_ˇŒk
(
L
, 0, 
LUA_MULTRET
, 0, 
dofûec⁄t
);

384  
	`dofûec⁄t
(
L
, 0, 0);

385 
	}
}

388 
	$luaB_as£π
 (
lua_Sèã
 *
L
) {

389 i‡(
	`lua_toboﬁón
(
L
, 1))

390  
	`lua_gët›
(
L
);

392 
	`luaL_check™y
(
L
, 1);

393 
	`lua_ªmove
(
L
, 1);

394 
	`lua_pushlôîÆ
(
L
, "assertion failed!");

395 
	`lua_£â›
(
L
, 1);

396  
	`luaB_îr‹
(
L
);

398 
	}
}

401 
	$luaB_£À˘
 (
lua_Sèã
 *
L
) {

402 
n
 = 
	`lua_gët›
(
L
);

403 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && *
	`lua_to°rög
(L, 1) == '#') {

404 
	`lua_pushöãgî
(
L
, 
n
-1);

408 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 1);

409 i‡(
i
 < 0Ëò
n
 + i;

410 i‡(
i
 > 
n
) i =Ç;

411 
	`luaL_¨gcheck
(
L
, 1 <
i
, 1, "index out ofÑange");

412  
n
 - ()
i
;

414 
	}
}

424 
	$föishpˇŒ
 (
lua_Sèã
 *
L
, 
°©us
, 
lua_KC⁄ãxt
 
exåa
) {

425 i‡(
°©us
 !
LUA_OK
 && sètu†!
LUA_YIELD
) {

426 
	`lua_pushboﬁón
(
L
, 0);

427 
	`lua_pushvÆue
(
L
, -2);

431  
	`lua_gët›
(
L
Ë- ()
exåa
;

432 
	}
}

435 
	$luaB_pˇŒ
 (
lua_Sèã
 *
L
) {

436 
°©us
;

437 
	`luaL_check™y
(
L
, 1);

438 
	`lua_pushboﬁón
(
L
, 1);

439 
	`lua_ö£π
(
L
, 1);

440 
°©us
 = 
	`lua_pˇŒk
(
L
, 
	`lua_gët›
(LË- 2, 
LUA_MULTRET
, 0, 0, 
föishpˇŒ
);

441  
	`föishpˇŒ
(
L
, 
°©us
, 0);

442 
	}
}

450 
	$luaB_xpˇŒ
 (
lua_Sèã
 *
L
) {

451 
°©us
;

452 
n
 = 
	`lua_gët›
(
L
);

453 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

454 
	`lua_pushboﬁón
(
L
, 1);

455 
	`lua_pushvÆue
(
L
, 1);

456 
	`lua_rŸ©e
(
L
, 3, 2);

457 
°©us
 = 
	`lua_pˇŒk
(
L
, 
n
 - 2, 
LUA_MULTRET
, 2, 2, 
föishpˇŒ
);

458  
	`föishpˇŒ
(
L
, 
°©us
, 2);

459 
	}
}

462 
	$luaB_to°rög
 (
lua_Sèã
 *
L
) {

463 
	`luaL_check™y
(
L
, 1);

464 
	`luaL_tﬁ°rög
(
L
, 1, 
NULL
);

466 
	}
}

469 c⁄° 
luaL_Reg
 
	gba£_funcs
[] = {

470 {"as£π", 
luaB_as£π
},

471 {"cﬁÀ˘g¨bage", 
luaB_cﬁÀ˘g¨bage
},

472 {"dofûe", 
luaB_dofûe
},

473 {"îr‹", 
luaB_îr‹
},

474 {"gëmë©abÀ", 
luaB_gëmë©abÀ
},

475 {"ùaús", 
luaB_ùaús
},

476 {"lﬂdfûe", 
luaB_lﬂdfûe
},

477 {"lﬂd", 
luaB_lﬂd
},

478 #i‡
deföed
(
LUA_COMPAT_LOADSTRING
)

479 {"lﬂd°rög", 
luaB_lﬂd
},

481 {"√xt", 
luaB_√xt
},

482 {"∑ús", 
luaB_∑ús
},

483 {"pˇŒ", 
luaB_pˇŒ
},

484 {"¥öt", 
luaB_¥öt
},

485 {"øwequÆ", 
luaB_øwequÆ
},

486 {"øwÀn", 
luaB_øwÀn
},

487 {"øwgë", 
luaB_øwgë
},

488 {"øw£t", 
luaB_øw£t
},

489 {"£À˘", 
luaB_£À˘
},

490 {"£tmë©abÀ", 
luaB_£tmë©abÀ
},

491 {"t⁄umbî", 
luaB_t⁄umbî
},

492 {"to°rög", 
luaB_to°rög
},

493 {"xpˇŒ", 
luaB_xpˇŒ
},

495 {"ty≥", 
NULL
},

496 {"_G", 
NULL
},

497 {"_VERSION", 
NULL
},

498 {
NULL
, NULL}

502 
LUAMOD_API
 
	$lua›í_ba£
 (
lua_Sèã
 *
L
) {

503 
i
;

505 
	`lua_pushglobÆèbÀ
(
L
);

506 
	`luaL_£tfuncs
(
L
, 
ba£_funcs
, 0);

508 
	`lua_pushvÆue
(
L
, -1);

509 
	`lua_£tfõld
(
L
, -2, "_G");

511 
	`lua_pushlôîÆ
(
L
, 
LUA_VERSION
);

512 
	`lua_£tfõld
(
L
, -2, "_VERSION");

514 
i
 = 0; i < 
LUA_NUMTAGS
; i++)

515 
	`lua_push°rög
(
L
, 
	`lua_ty≥«me
(L, 
i
));

516 
	`lua_pushc˛osuª
(
L
, 
luaB_ty≥
, 
LUA_NUMTAGS
);

517 
	`lua_£tfõld
(
L
, -2, "type");

519 
	}
}

	@lib/archive/lua-5.3.0/src/lbitlib.c

7 
	#lbôlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~"lua.h
"

15 
	~"œuxlib.h
"

16 
	~"luÆib.h
"

19 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

23 #i‡!
deföed
(
LUA_NBITS
)

24 
	#LUA_NBITS
 32

	)

33 
	#ALLONES
 (~(((~(
lua_Unsig√d
)0Ë<< (
LUA_NBITS
 - 1)Ë<< 1))

	)

37 
	#åim
(
x
Ë((xË& 
ALLONES
)

	)

41 
	#mask
(
n
Ë(~((
ALLONES
 << 1Ë<< (“Ë- 1)))

	)

45 
lua_Unsig√d
 
	$™daux
 (
lua_Sèã
 *
L
) {

46 
i
, 
n
 = 
	`lua_gët›
(
L
);

47 
lua_Unsig√d
 
r
 = ~(lua_Unsigned)0;

48 
i
 = 1; i <
n
; i++)

49 
r
 &
	`luaL_checkunsig√d
(
L
, 
i
);

50  
	`åim
(
r
);

51 
	}
}

54 
	$b_™d
 (
lua_Sèã
 *
L
) {

55 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

56 
	`lua_pushunsig√d
(
L
, 
r
);

58 
	}
}

61 
	$b_ã°
 (
lua_Sèã
 *
L
) {

62 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

63 
	`lua_pushboﬁón
(
L
, 
r
 != 0);

65 
	}
}

68 
	$b_‹
 (
lua_Sèã
 *
L
) {

69 
i
, 
n
 = 
	`lua_gët›
(
L
);

70 
lua_Unsig√d
 
r
 = 0;

71 
i
 = 1; i <
n
; i++)

72 
r
 |
	`luaL_checkunsig√d
(
L
, 
i
);

73 
	`lua_pushunsig√d
(
L
, 
	`åim
(
r
));

75 
	}
}

78 
	$b_x‹
 (
lua_Sèã
 *
L
) {

79 
i
, 
n
 = 
	`lua_gët›
(
L
);

80 
lua_Unsig√d
 
r
 = 0;

81 
i
 = 1; i <
n
; i++)

82 
r
 ^
	`luaL_checkunsig√d
(
L
, 
i
);

83 
	`lua_pushunsig√d
(
L
, 
	`åim
(
r
));

85 
	}
}

88 
	$b_nŸ
 (
lua_Sèã
 *
L
) {

89 
lua_Unsig√d
 
r
 = ~
	`luaL_checkunsig√d
(
L
, 1);

90 
	`lua_pushunsig√d
(
L
, 
	`åim
(
r
));

92 
	}
}

95 
	$b_shi·
 (
lua_Sèã
 *
L
, 
lua_Unsig√d
 
r
, 
lua_I¡egî
 
i
) {

96 i‡(
i
 < 0) {

97 
i
 = -i;

98 
r
 = 
	`åim
(r);

99 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

100 
r
 >>
i
;

103 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

104 
r
 <<
i
;

105 
r
 = 
	`åim
(r);

107 
	`lua_pushunsig√d
(
L
, 
r
);

109 
	}
}

112 
	$b_lshi·
 (
lua_Sèã
 *
L
) {

113  
	`b_shi·
(
L
, 
	`luaL_checkunsig√d
(L, 1), 
	`luaL_checköãgî
(L, 2));

114 
	}
}

117 
	$b_rshi·
 (
lua_Sèã
 *
L
) {

118  
	`b_shi·
(
L
, 
	`luaL_checkunsig√d
(L, 1), -
	`luaL_checköãgî
(L, 2));

119 
	}
}

122 
	$b_¨shi·
 (
lua_Sèã
 *
L
) {

123 
lua_Unsig√d
 
r
 = 
	`luaL_checkunsig√d
(
L
, 1);

124 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2);

125 i‡(
i
 < 0 || !(
r
 & ((
lua_Unsig√d
)1 << (
LUA_NBITS
 - 1))))

126  
	`b_shi·
(
L
, 
r
, -
i
);

128 i‡(
i
 >
LUA_NBITS
Ë
r
 = 
ALLONES
;

130 
r
 = 
	`åim
(‘ >> 
i
Ë| ~—rim(~(
lua_Unsig√d
)0) >> i));

131 
	`lua_pushunsig√d
(
L
, 
r
);

134 
	}
}

137 
	$b_rŸ
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
d
) {

138 
lua_Unsig√d
 
r
 = 
	`luaL_checkunsig√d
(
L
, 1);

139 
i
 = 
d
 & (
LUA_NBITS
 - 1);

140 
r
 = 
	`åim
(r);

141 i‡(
i
 != 0)

142 
r
 = (∏<< 
i
Ë| (∏>> (
LUA_NBITS
 - i));

143 
	`lua_pushunsig√d
(
L
, 
	`åim
(
r
));

145 
	}
}

148 
	$b_ÃŸ
 (
lua_Sèã
 *
L
) {

149  
	`b_rŸ
(
L
, 
	`luaL_checköãgî
(L, 2));

150 
	}
}

153 
	$b_ºŸ
 (
lua_Sèã
 *
L
) {

154  
	`b_rŸ
(
L
, -
	`luaL_checköãgî
(L, 2));

155 
	}
}

164 
	$fõld¨gs
 (
lua_Sèã
 *
L
, 
Árg
, *
width
) {

165 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 
Árg
);

166 
lua_I¡egî
 
w
 = 
	`luaL_›töãgî
(
L
, 
Árg
 + 1, 1);

167 
	`luaL_¨gcheck
(
L
, 0 <
f
, 
Árg
, "field cannot beÇegative");

168 
	`luaL_¨gcheck
(
L
, 0 < 
w
, 
Árg
 + 1, "width must beÖositive");

169 i‡(
f
 + 
w
 > 
LUA_NBITS
)

170 
	`luaL_îr‹
(
L
, "tryingÅoáccessÇon-existent bits");

171 *
width
 = ()
w
;

172  ()
f
;

173 
	}
}

176 
	$b_exåa˘
 (
lua_Sèã
 *
L
) {

177 
w
;

178 
lua_Unsig√d
 
r
 = 
	`åim
(
	`luaL_checkunsig√d
(
L
, 1));

179 
f
 = 
	`fõld¨gs
(
L
, 2, &
w
);

180 
r
 = (∏>> 
f
Ë& 
	`mask
(
w
);

181 
	`lua_pushunsig√d
(
L
, 
r
);

183 
	}
}

186 
	$b_ª∂a˚
 (
lua_Sèã
 *
L
) {

187 
w
;

188 
lua_Unsig√d
 
r
 = 
	`åim
(
	`luaL_checkunsig√d
(
L
, 1));

189 
lua_Unsig√d
 
v
 = 
	`luaL_checkunsig√d
(
L
, 2);

190 
f
 = 
	`fõld¨gs
(
L
, 3, &
w
);

191 
m
 = 
	`mask
(
w
);

192 
v
 &
m
;

193 
r
 = (∏& ~(
m
 << 
f
)Ë| (
v
 << f);

194 
	`lua_pushunsig√d
(
L
, 
r
);

196 
	}
}

199 c⁄° 
luaL_Reg
 
	gbôlib
[] = {

200 {"¨shi·", 
b_¨shi·
},

201 {"b™d", 
b_™d
},

202 {"bnŸ", 
b_nŸ
},

203 {"b‹", 
b_‹
},

204 {"bx‹", 
b_x‹
},

205 {"bã°", 
b_ã°
},

206 {"exåa˘", 
b_exåa˘
},

207 {"ÃŸ©e", 
b_ÃŸ
},

208 {"lshi·", 
b_lshi·
},

209 {"ª∂a˚", 
b_ª∂a˚
},

210 {"ºŸ©e", 
b_ºŸ
},

211 {"rshi·", 
b_rshi·
},

212 {
NULL
, NULL}

217 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

218 
	`luaL_√wlib
(
L
, 
bôlib
);

220 
	}
}

226 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

227  
	`luaL_îr‹
(
L
, "library 'bit32' has been deprecated");

228 
	}
}

	@lib/archive/lua-5.3.0/src/lcode.c

7 
	#lcode_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<m©h.h
>

14 
	~<°dlib.h
>

16 
	~"lua.h
"

18 
	~"lcode.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"Õ¨£r.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"lvm.h
"

33 
	#MAXREGS
 250

	)

36 
	#hasjumps
(
e
Ë(”)->
t
 !”)->
f
)

	)

39 
	$t⁄umîÆ
(
expdesc
 *
e
, 
TVÆue
 *
v
) {

40 i‡(
e
->
t
 !
NO_JUMP
 ||É->
f
 != NO_JUMP)

42 
e
->
k
) {

43 
VKINT
:

44 i‡(
v
Ë
	`£tivÆue
(v, 
e
->
u
.
ivÆ
);

46 
VKFLT
:

47 i‡(
v
Ë
	`£tÊtvÆue
(v, 
e
->
u
.
nvÆ
);

51 
	}
}

54 
	$luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
) {

55 
In°ru˘i⁄
 *
¥evious
;

56 
l
 = 
‰om
 + 
n
 - 1;

57 i‡(
fs
->
pc
 > fs->
œ°èrgë
) {

58 
¥evious
 = &
fs
->
f
->
code
[fs->
pc
-1];

59 i‡(
	`GET_OPCODE
(*
¥evious
Ë=
OP_LOADNIL
) {

60 
p‰om
 = 
	`GETARG_A
(*
¥evious
);

61 
∂
 = 
p‰om
 + 
	`GETARG_B
(*
¥evious
);

62 i‡((
p‰om
 <
‰om
 && from <
∂
 + 1) ||

63 (
‰om
 <
p‰om
 &&Ö‰om <
l
 + 1)) {

64 i‡(
p‰om
 < 
‰om
) from =Öfrom;

65 i‡(
∂
 > 
l
)Ü =Öl;

66 
	`SETARG_A
(*
¥evious
, 
‰om
);

67 
	`SETARG_B
(*
¥evious
, 
l
 - 
‰om
);

72 
	`luaK_codeABC
(
fs
, 
OP_LOADNIL
, 
‰om
, 
n
 - 1, 0);

73 
	}
}

76 
	$luaK_jump
 (
FuncSèã
 *
fs
) {

77 
jpc
 = 
fs
->jpc;

78 
j
;

79 
fs
->
jpc
 = 
NO_JUMP
;

80 
j
 = 
	`luaK_codeAsBx
(
fs
, 
OP_JMP
, 0, 
NO_JUMP
);

81 
	`luaK_c⁄ˇt
(
fs
, &
j
, 
jpc
);

82  
j
;

83 
	}
}

86 
	$luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
) {

87 
	`luaK_codeABC
(
fs
, 
OP_RETURN
, 
fú°
, 
ƒë
+1, 0);

88 
	}
}

91 
	$c⁄djump
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
A
, 
B
, 
C
) {

92 
	`luaK_codeABC
(
fs
, 
›
, 
A
, 
B
, 
C
);

93  
	`luaK_jump
(
fs
);

94 
	}
}

97 
	$fixjump
 (
FuncSèã
 *
fs
, 
pc
, 
de°
) {

98 
In°ru˘i⁄
 *
jmp
 = &
fs
->
f
->
code
[
pc
];

99 
off£t
 = 
de°
-(
pc
+1);

100 
	`lua_as£π
(
de°
 !
NO_JUMP
);

101 i‡(
	`abs
(
off£t
Ë> 
MAXARG_sBx
)

102 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "control structureÅooÜong");

103 
	`SETARG_sBx
(*
jmp
, 
off£t
);

104 
	}
}

111 
	$luaK_gëœbñ
 (
FuncSèã
 *
fs
) {

112 
fs
->
œ°èrgë
 = fs->
pc
;

113  
fs
->
pc
;

114 
	}
}

117 
	$gëjump
 (
FuncSèã
 *
fs
, 
pc
) {

118 
off£t
 = 
	`GETARG_sBx
(
fs
->
f
->
code
[
pc
]);

119 i‡(
off£t
 =
NO_JUMP
)

120  
NO_JUMP
;

122  (
pc
+1)+
off£t
;

123 
	}
}

126 
In°ru˘i⁄
 *
	$gëjumpc⁄åﬁ
 (
FuncSèã
 *
fs
, 
pc
) {

127 
In°ru˘i⁄
 *
pi
 = &
fs
->
f
->
code
[
pc
];

128 i‡(
pc
 >1 && 
	`ã°TMode
(
	`GET_OPCODE
(*(
pi
-1))))

129  
pi
-1;

131  
pi
;

132 
	}
}

139 
	$√ed_vÆue
 (
FuncSèã
 *
fs
, 
li°
) {

140 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

141 
In°ru˘i⁄
 
i
 = *
	`gëjumpc⁄åﬁ
(
fs
, 
li°
);

142 i‡(
	`GET_OPCODE
(
i
Ë!
OP_TESTSET
)  1;

145 
	}
}

148 
	$∑tchã°ªg
 (
FuncSèã
 *
fs
, 
node
, 
ªg
) {

149 
In°ru˘i⁄
 *
i
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
node
);

150 i‡(
	`GET_OPCODE
(*
i
Ë!
OP_TESTSET
)

152 i‡(
ªg
 !
NO_REG
 &&Ñeg !
	`GETARG_B
(*
i
))

153 
	`SETARG_A
(*
i
, 
ªg
);

155 *
i
 = 
	`CREATE_ABC
(
OP_TEST
, 
	`GETARG_B
(*i), 0, 
	`GETARG_C
(*i));

158 
	}
}

161 
	$ªmovevÆues
 (
FuncSèã
 *
fs
, 
li°
) {

162 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist))

163 
	`∑tchã°ªg
(
fs
, 
li°
, 
NO_REG
);

164 
	}
}

167 
	$∑tchli°aux
 (
FuncSèã
 *
fs
, 
li°
, 
vèrgë
, 
ªg
,

168 
dèrgë
) {

169 
li°
 !
NO_JUMP
) {

170 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

171 i‡(
	`∑tchã°ªg
(
fs
, 
li°
, 
ªg
))

172 
	`fixjump
(
fs
, 
li°
, 
vèrgë
);

174 
	`fixjump
(
fs
, 
li°
, 
dèrgë
);

175 
li°
 = 
√xt
;

177 
	}
}

180 
	$disch¨gejpc
 (
FuncSèã
 *
fs
) {

181 
	`∑tchli°aux
(
fs
, fs->
jpc
, fs->
pc
, 
NO_REG
, fs->pc);

182 
fs
->
jpc
 = 
NO_JUMP
;

183 
	}
}

186 
	$luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
) {

187 i‡(
èrgë
 =
fs
->
pc
)

188 
	`luaK_∑tchtohîe
(
fs
, 
li°
);

190 
	`lua_as£π
(
èrgë
 < 
fs
->
pc
);

191 
	`∑tchli°aux
(
fs
, 
li°
, 
èrgë
, 
NO_REG
,Åarget);

193 
	}
}

196 
	$luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
) {

197 
Àvñ
++;

198 
li°
 !
NO_JUMP
) {

199 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

200 
	`lua_as£π
(
	`GET_OPCODE
(
fs
->
f
->
code
[
li°
]Ë=
OP_JMP
 &&

201 (
	`GETARG_A
(
fs
->
f
->
code
[
li°
]) == 0 ||

202 
	`GETARG_A
(
fs
->
f
->
code
[
li°
]Ë>
Àvñ
));

203 
	`SETARG_A
(
fs
->
f
->
code
[
li°
], 
Àvñ
);

204 
li°
 = 
√xt
;

206 
	}
}

209 
	$luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
) {

210 
	`luaK_gëœbñ
(
fs
);

211 
	`luaK_c⁄ˇt
(
fs
, &fs->
jpc
, 
li°
);

212 
	}
}

215 
	$luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
) {

216 i‡(
l2
 =
NO_JUMP
) ;

217 i‡(*
l1
 =
NO_JUMP
)

218 *
l1
 = 
l2
;

220 
li°
 = *
l1
;

221 
√xt
;

222 (
√xt
 = 
	`gëjump
(
fs
, 
li°
)Ë!
NO_JUMP
)

223 
li°
 = 
√xt
;

224 
	`fixjump
(
fs
, 
li°
, 
l2
);

226 
	}
}

229 
	$luaK_code
 (
FuncSèã
 *
fs
, 
In°ru˘i⁄
 
i
) {

230 
PrŸo
 *
f
 = 
fs
->f;

231 
	`disch¨gejpc
(
fs
);

233 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
code
, fs->
pc
, f->
sizecode
, 
In°ru˘i⁄
,

234 
MAX_INT
, "opcodes");

235 
f
->
code
[
fs
->
pc
] = 
i
;

237 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
löeöfo
, fs->
pc
, f->
sizñöeöfo
, ,

238 
MAX_INT
, "opcodes");

239 
f
->
löeöfo
[
fs
->
pc
] = fs->
ls
->
œ°löe
;

240  
fs
->
pc
++;

241 
	}
}

244 
	$luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
b
, 
c
) {

245 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABC
);

246 
	`lua_as£π
(
	`gëBMode
(
o
Ë!
OpArgN
 || 
b
 == 0);

247 
	`lua_as£π
(
	`gëCMode
(
o
Ë!
OpArgN
 || 
c
 == 0);

248 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
b
 <
MAXARG_B
 && 
c
 <
MAXARG_C
);

249  
	`luaK_code
(
fs
, 
	`CREATE_ABC
(
o
, 
a
, 
b
, 
c
));

250 
	}
}

253 
	$luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
bc
) {

254 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABx
 || gëOpMode(oË=
iAsBx
);

255 
	`lua_as£π
(
	`gëCMode
(
o
Ë=
OpArgN
);

256 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
bc
 <
MAXARG_Bx
);

257  
	`luaK_code
(
fs
, 
	`CREATE_ABx
(
o
, 
a
, 
bc
));

258 
	}
}

261 
	$codìxåØrg
 (
FuncSèã
 *
fs
, 
a
) {

262 
	`lua_as£π
(
a
 <
MAXARG_Ax
);

263  
	`luaK_code
(
fs
, 
	`CREATE_Ax
(
OP_EXTRAARG
, 
a
));

264 
	}
}

267 
	$luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
) {

268 i‡(
k
 <
MAXARG_Bx
)

269  
	`luaK_codeABx
(
fs
, 
OP_LOADK
, 
ªg
, 
k
);

271 
p
 = 
	`luaK_codeABx
(
fs
, 
OP_LOADKX
, 
ªg
, 0);

272 
	`codìxåØrg
(
fs
, 
k
);

273  
p
;

275 
	}
}

278 
	$luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
) {

279 
√w°ack
 = 
fs
->
‰ìªg
 + 
n
;

280 i‡(
√w°ack
 > 
fs
->
f
->
max°acksize
) {

281 i‡(
√w°ack
 >
MAXREGS
)

282 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "function orÉxpressionÅoo complex");

283 
fs
->
f
->
max°acksize
 = 
	`ˇ°_byã
(
√w°ack
);

285 
	}
}

288 
	$luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
) {

289 
	`luaK_check°ack
(
fs
, 
n
);

290 
fs
->
‰ìªg
 +
n
;

291 
	}
}

294 
	$‰ìªg
 (
FuncSèã
 *
fs
, 
ªg
) {

295 i‡(!
	`ISK
(
ªg
Ë&&Ñeg >
fs
->
«˘v¨
) {

296 
fs
->
‰ìªg
--;

297 
	`lua_as£π
(
ªg
 =
fs
->
‰ìªg
);

299 
	}
}

302 
	$‰ìexp
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

303 i‡(
e
->
k
 =
VNONRELOC
)

304 
	`‰ìªg
(
fs
, 
e
->
u
.
öfo
);

305 
	}
}

312 
	$addk
 (
FuncSèã
 *
fs
, 
TVÆue
 *
key
, TVÆuê*
v
) {

313 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

314 
PrŸo
 *
f
 = 
fs
->f;

315 
TVÆue
 *
idx
 = 
	`luaH_£t
(
L
, 
fs
->
ls
->
h
, 
key
);

316 
k
, 
ﬁdsize
;

317 i‡(
	`âisöãgî
(
idx
)) {

318 
k
 = 
	`ˇ°_öt
(
	`ivÆue
(
idx
));

320 i‡(
k
 < 
fs
->
nk
 && 
	`ây≥
(&
f
->k[k]Ë=ây≥(
v
) &&

321 
	`luaV_øwequÆobj
(&
f
->
k
[k], 
v
))

322  
k
;

325 
ﬁdsize
 = 
f
->
sizek
;

326 
k
 = 
fs
->
nk
;

329 
	`£tivÆue
(
idx
, 
k
);

330 
	`luaM_growve˘‹
(
L
, 
f
->
k
, k, f->
sizek
, 
TVÆue
, 
MAXARG_Ax
, "constants");

331 
ﬁdsize
 < 
f
->
sizek
Ë
	`£äûvÆue
(&f->
k
[oldsize++]);

332 
	`£tobj
(
L
, &
f
->
k
[k], 
v
);

333 
fs
->
nk
++;

334 
	`luaC_b¨rõr
(
L
, 
f
, 
v
);

335  
k
;

336 
	}
}

339 
	$luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
) {

340 
TVÆue
 
o
;

341 
	`£tsvÆue
(
fs
->
ls
->
L
, &
o
, 
s
);

342  
	`addk
(
fs
, &
o
, &o);

343 
	}
}

351 
	$luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
) {

352 
TVÆue
 
k
, 
o
;

353 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, ca°(
size_t
, 
n
)));

354 
	`£tivÆue
(&
o
, 
n
);

355  
	`addk
(
fs
, &
k
, &
o
);

356 
	}
}

359 
	$luaK_numbîK
 (
FuncSèã
 *
fs
, 
lua_Numbî
 
r
) {

360 
TVÆue
 
o
;

361 
	`£tÊtvÆue
(&
o
, 
r
);

362  
	`addk
(
fs
, &
o
, &o);

363 
	}
}

366 
	$boﬁK
 (
FuncSèã
 *
fs
, 
b
) {

367 
TVÆue
 
o
;

368 
	`£tbvÆue
(&
o
, 
b
);

369  
	`addk
(
fs
, &
o
, &o);

370 
	}
}

373 
	$nûK
 (
FuncSèã
 *
fs
) {

374 
TVÆue
 
k
, 
v
;

375 
	`£äûvÆue
(&
v
);

377 
	`£thvÆue
(
fs
->
ls
->
L
, &
k
, fs->ls->
h
);

378  
	`addk
(
fs
, &
k
, &
v
);

379 
	}
}

382 
	$luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
) {

383 i‡(
e
->
k
 =
VCALL
) {

384 
	`SETARG_C
(
	`gëcode
(
fs
, 
e
), 
ƒesu…s
+1);

386 i‡(
e
->
k
 =
VVARARG
) {

387 
	`SETARG_B
(
	`gëcode
(
fs
, 
e
), 
ƒesu…s
+1);

388 
	`SETARG_A
(
	`gëcode
(
fs
, 
e
), fs->
‰ìªg
);

389 
	`luaK_ª£rvîegs
(
fs
, 1);

391 
	}
}

394 
	$luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

395 i‡(
e
->
k
 =
VCALL
) {

396 
e
->
k
 = 
VNONRELOC
;

397 
e
->
u
.
öfo
 = 
	`GETARG_A
(
	`gëcode
(
fs
,É));

399 i‡(
e
->
k
 =
VVARARG
) {

400 
	`SETARG_B
(
	`gëcode
(
fs
, 
e
), 2);

401 
e
->
k
 = 
VRELOCABLE
;

403 
	}
}

406 
	$luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

407 
e
->
k
) {

408 
VLOCAL
: {

409 
e
->
k
 = 
VNONRELOC
;

412 
VUPVAL
: {

413 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_GETUPVAL
, 0,É->u.info, 0);

414 
e
->
k
 = 
VRELOCABLE
;

417 
VINDEXED
: {

418 
OpCode
 
›
 = 
OP_GETTABUP
;

419 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
idx
);

420 i‡(
e
->
u
.
öd
.
vt
 =
VLOCAL
) {

421 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
t
);

422 
›
 = 
OP_GETTABLE
;

424 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0,É->u.
öd
.
t
,É->u.öd.
idx
);

425 
e
->
k
 = 
VRELOCABLE
;

428 
VVARARG
:

429 
VCALL
: {

430 
	`luaK_£t⁄îë
(
fs
, 
e
);

435 
	}
}

438 
	$code_œbñ
 (
FuncSèã
 *
fs
, 
A
, 
b
, 
jump
) {

439 
	`luaK_gëœbñ
(
fs
);

440  
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
A
, 
b
, 
jump
);

441 
	}
}

444 
	$disch¨ge2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

445 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

446 
e
->
k
) {

447 
VNIL
: {

448 
	`luaK_nû
(
fs
, 
ªg
, 1);

451 
VFALSE
: 
VTRUE
: {

452 
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
ªg
, 
e
->
k
 =
VTRUE
, 0);

455 
VK
: {

456 
	`luaK_codek
(
fs
, 
ªg
, 
e
->
u
.
öfo
);

459 
VKFLT
: {

460 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_numbîK
(fs, 
e
->
u
.
nvÆ
));

463 
VKINT
: {

464 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_ötK
(fs, 
e
->
u
.
ivÆ
));

467 
VRELOCABLE
: {

468 
In°ru˘i⁄
 *
pc
 = &
	`gëcode
(
fs
, 
e
);

469 
	`SETARG_A
(*
pc
, 
ªg
);

472 
VNONRELOC
: {

473 i‡(
ªg
 !
e
->
u
.
öfo
)

474 
	`luaK_codeABC
(
fs
, 
OP_MOVE
, 
ªg
, 
e
->
u
.
öfo
, 0);

478 
	`lua_as£π
(
e
->
k
 =
VVOID
 ||É->k =
VJMP
);

482 
e
->
u
.
öfo
 = 
ªg
;

483 
e
->
k
 = 
VNONRELOC
;

484 
	}
}

487 
	$disch¨ge2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

488 i‡(
e
->
k
 !
VNONRELOC
) {

489 
	`luaK_ª£rvîegs
(
fs
, 1);

490 
	`disch¨ge2ªg
(
fs
, 
e
, fs->
‰ìªg
-1);

492 
	}
}

495 
	$exp2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

496 
	`disch¨ge2ªg
(
fs
, 
e
, 
ªg
);

497 i‡(
e
->
k
 =
VJMP
)

498 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
,É->
u
.
öfo
);

499 i‡(
	`hasjumps
(
e
)) {

500 
föÆ
;

501 
p_f
 = 
NO_JUMP
;

502 
p_t
 = 
NO_JUMP
;

503 i‡(
	`√ed_vÆue
(
fs
, 
e
->
t
Ë||Çìd_vÆue(fs,É->
f
)) {

504 
fj
 = (
e
->
k
 =
VJMP
Ë? 
NO_JUMP
 : 
	`luaK_jump
(
fs
);

505 
p_f
 = 
	`code_œbñ
(
fs
, 
ªg
, 0, 1);

506 
p_t
 = 
	`code_œbñ
(
fs
, 
ªg
, 1, 0);

507 
	`luaK_∑tchtohîe
(
fs
, 
fj
);

509 
föÆ
 = 
	`luaK_gëœbñ
(
fs
);

510 
	`∑tchli°aux
(
fs
, 
e
->
f
, 
föÆ
, 
ªg
, 
p_f
);

511 
	`∑tchli°aux
(
fs
, 
e
->
t
, 
föÆ
, 
ªg
, 
p_t
);

513 
e
->
f
 =É->
t
 = 
NO_JUMP
;

514 
e
->
u
.
öfo
 = 
ªg
;

515 
e
->
k
 = 
VNONRELOC
;

516 
	}
}

519 
	$luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

520 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

521 
	`‰ìexp
(
fs
, 
e
);

522 
	`luaK_ª£rvîegs
(
fs
, 1);

523 
	`exp2ªg
(
fs
, 
e
, fs->
‰ìªg
 - 1);

524 
	}
}

527 
	$luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

528 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

529 i‡(
e
->
k
 =
VNONRELOC
) {

530 i‡(!
	`hasjumps
(
e
)ËÉ->
u
.
öfo
;

531 i‡(
e
->
u
.
öfo
 >
fs
->
«˘v¨
) {

532 
	`exp2ªg
(
fs
, 
e
,É->
u
.
öfo
);

533  
e
->
u
.
öfo
;

536 
	`luaK_exp2√xåeg
(
fs
, 
e
);

537  
e
->
u
.
öfo
;

538 
	}
}

541 
	$luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

542 i‡(
e
->
k
 !
VUPVAL
 || 
	`hasjumps
(e))

543 
	`luaK_exp2™yªg
(
fs
, 
e
);

544 
	}
}

547 
	$luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

548 i‡(
	`hasjumps
(
e
))

549 
	`luaK_exp2™yªg
(
fs
, 
e
);

551 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

552 
	}
}

555 
	$luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

556 
	`luaK_exp2vÆ
(
fs
, 
e
);

557 
e
->
k
) {

558 
VTRUE
:

559 
VFALSE
:

560 
VNIL
: {

561 i‡(
fs
->
nk
 <
MAXINDEXRK
) {

562 
e
->
u
.
öfo
 = (e->
k
 =
VNIL
Ë? 
	`nûK
(
fs
Ë: 
	`boﬁK
(fs, (e->k =
VTRUE
));

563 
e
->
k
 = 
VK
;

564  
	`RKASK
(
e
->
u
.
öfo
);

568 
VKINT
: {

569 
e
->
u
.
öfo
 = 
	`luaK_ötK
(
fs
,É->u.
ivÆ
);

570 
e
->
k
 = 
VK
;

571 
vk
;

573 
VKFLT
: {

574 
e
->
u
.
öfo
 = 
	`luaK_numbîK
(
fs
,É->u.
nvÆ
);

575 
e
->
k
 = 
VK
;

578 
VK
: {

579 
vk
:

580 i‡(
e
->
u
.
öfo
 <
MAXINDEXRK
)

581  
	`RKASK
(
e
->
u
.
öfo
);

587  
	`luaK_exp2™yªg
(
fs
, 
e
);

588 
	}
}

591 
	$luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
ex
) {

592 
v¨
->
k
) {

593 
VLOCAL
: {

594 
	`‰ìexp
(
fs
, 
ex
);

595 
	`exp2ªg
(
fs
, 
ex
, 
v¨
->
u
.
öfo
);

598 
VUPVAL
: {

599 
e
 = 
	`luaK_exp2™yªg
(
fs
, 
ex
);

600 
	`luaK_codeABC
(
fs
, 
OP_SETUPVAL
, 
e
, 
v¨
->
u
.
öfo
, 0);

603 
VINDEXED
: {

604 
OpCode
 
›
 = (
v¨
->
u
.
öd
.
vt
 =
VLOCAL
Ë? 
OP_SETTABLE
 : 
OP_SETTABUP
;

605 
e
 = 
	`luaK_exp2RK
(
fs
, 
ex
);

606 
	`luaK_codeABC
(
fs
, 
›
, 
v¨
->
u
.
öd
.
t
, v¨->u.öd.
idx
, 
e
);

610 
	`lua_as£π
(0);

614 
	`‰ìexp
(
fs
, 
ex
);

615 
	}
}

618 
	$luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
) {

619 
îeg
;

620 
	`luaK_exp2™yªg
(
fs
, 
e
);

621 
îeg
 = 
e
->
u
.
öfo
;

622 
	`‰ìexp
(
fs
, 
e
);

623 
e
->
u
.
öfo
 = 
fs
->
‰ìªg
;

624 
e
->
k
 = 
VNONRELOC
;

625 
	`luaK_ª£rvîegs
(
fs
, 2);

626 
	`luaK_codeABC
(
fs
, 
OP_SELF
, 
e
->
u
.
öfo
, 
îeg
, 
	`luaK_exp2RK
(fs, 
key
));

627 
	`‰ìexp
(
fs
, 
key
);

628 
	}
}

631 
	$övîtjump
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

632 
In°ru˘i⁄
 *
pc
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
e
->
u
.
öfo
);

633 
	`lua_as£π
(
	`ã°TMode
(
	`GET_OPCODE
(*
pc
)Ë&& GET_OPCODE(*pcË!
OP_TESTSET
 &&

634 
	`GET_OPCODE
(*
pc
Ë!
OP_TEST
);

635 
	`SETARG_A
(*
pc
, !(
	`GETARG_A
(*pc)));

636 
	}
}

639 
	$jump⁄c⁄d
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
c⁄d
) {

640 i‡(
e
->
k
 =
VRELOCABLE
) {

641 
In°ru˘i⁄
 
õ
 = 
	`gëcode
(
fs
, 
e
);

642 i‡(
	`GET_OPCODE
(
õ
Ë=
OP_NOT
) {

643 
fs
->
pc
--;

644  
	`c⁄djump
(
fs
, 
OP_TEST
, 
	`GETARG_B
(
õ
), 0, !
c⁄d
);

648 
	`disch¨ge2™yªg
(
fs
, 
e
);

649 
	`‰ìexp
(
fs
, 
e
);

650  
	`c⁄djump
(
fs
, 
OP_TESTSET
, 
NO_REG
, 
e
->
u
.
öfo
, 
c⁄d
);

651 
	}
}

654 
	$luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

655 
pc
;

656 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

657 
e
->
k
) {

658 
VJMP
: {

659 
	`övîtjump
(
fs
, 
e
);

660 
pc
 = 
e
->
u
.
öfo
;

663 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

664 
pc
 = 
NO_JUMP
;

668 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 0);

672 
	`luaK_c⁄ˇt
(
fs
, &
e
->
f
, 
pc
);

673 
	`luaK_∑tchtohîe
(
fs
, 
e
->
t
);

674 
e
->
t
 = 
NO_JUMP
;

675 
	}
}

678 
	$luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

679 
pc
;

680 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

681 
e
->
k
) {

682 
VJMP
: {

683 
pc
 = 
e
->
u
.
öfo
;

686 
VNIL
: 
VFALSE
: {

687 
pc
 = 
NO_JUMP
;

691 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 1);

695 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
, 
pc
);

696 
	`luaK_∑tchtohîe
(
fs
, 
e
->
f
);

697 
e
->
f
 = 
NO_JUMP
;

698 
	}
}

701 
	$codíŸ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

702 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

703 
e
->
k
) {

704 
VNIL
: 
VFALSE
: {

705 
e
->
k
 = 
VTRUE
;

708 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

709 
e
->
k
 = 
VFALSE
;

712 
VJMP
: {

713 
	`övîtjump
(
fs
, 
e
);

716 
VRELOCABLE
:

717 
VNONRELOC
: {

718 
	`disch¨ge2™yªg
(
fs
, 
e
);

719 
	`‰ìexp
(
fs
, 
e
);

720 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_NOT
, 0,É->u.info, 0);

721 
e
->
k
 = 
VRELOCABLE
;

725 
	`lua_as£π
(0);

730 { 
ãmp
 = 
e
->
f
;É->‡e->
t
;É->t =Åemp; }

731 
	`ªmovevÆues
(
fs
, 
e
->
f
);

732 
	`ªmovevÆues
(
fs
, 
e
->
t
);

733 
	}
}

736 
	$luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
) {

737 
	`lua_as£π
(!
	`hasjumps
(
t
));

738 
t
->
u
.
öd
.àt->u.
öfo
;

739 
t
->
u
.
öd
.
idx
 = 
	`luaK_exp2RK
(
fs
, 
k
);

740 
t
->
u
.
öd
.
vt
 = (t->
k
 =
VUPVAL
) ? VUPVAL

741 : 
	`check_exp
(
	`vkisöªg
(
t
->
k
), 
VLOCAL
);

742 
t
->
k
 = 
VINDEXED
;

743 
	}
}

749 
	$vÆid›
 (
›
, 
TVÆue
 *
v1
, TVÆuê*
v2
) {

750 
›
) {

751 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

752 
LUA_OPSHL
: 
LUA_OPSHR
: 
LUA_OPBNOT
: {

753 
lua_I¡egî
 
i
;

754  (
	`toöãgî
(
v1
, &
i
Ë&&Åoöãgî(
v2
, &i));

756 
LUA_OPDIV
: 
LUA_OPIDIV
: 
LUA_OPMOD
:

757  (
	`nvÆue
(
v2
) != 0);

760 
	}
}

766 
	$c⁄°fﬁdög
 (
FuncSèã
 *
fs
, 
›
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

767 
TVÆue
 
v1
, 
v2
, 
ªs
;

768 i‡(!
	`t⁄umîÆ
(
e1
, &
v1
Ë|| !t⁄umîÆ(
e2
, &
v2
Ë|| !
	`vÆid›
(
›
, &v1, &v2))

770 
	`luaO_¨ôh
(
fs
->
ls
->
L
, 
›
, &
v1
, &
v2
, &
ªs
);

771 i‡(
	`âisöãgî
(&
ªs
)) {

772 
e1
->
k
 = 
VKINT
;

773 
e1
->
u
.
ivÆ
 = 
	`ivÆue
(&
ªs
);

776 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(&
ªs
);

777 i‡(
	`luai_numi¢™
(
n
) ||Ç == 0)

779 
e1
->
k
 = 
VKFLT
;

780 
e1
->
u
.
nvÆ
 = 
n
;

783 
	}
}

793 
	$codìxpvÆ
 (
FuncSèã
 *
fs
, 
OpCode
 
›
,

794 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

795 
	`lua_as£π
(
›
 >
OP_ADD
);

796 i‡(
›
 <
OP_BNOT
 && 
	`c⁄°fﬁdög
(
fs
, o∞- 
OP_ADD
 + 
LUA_OPADD
, 
e1
, 
e2
))

799 
o1
, 
o2
;

801 i‡(
›
 =
OP_UNM
 || o∞=
OP_BNOT
 || o∞=
OP_LEN
) {

802 
o2
 = 0;

803 
o1
 = 
	`luaK_exp2™yªg
(
fs
, 
e1
);

806 
o2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

807 
o1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

809 i‡(
o1
 > 
o2
) {

810 
	`‰ìexp
(
fs
, 
e1
);

811 
	`‰ìexp
(
fs
, 
e2
);

814 
	`‰ìexp
(
fs
, 
e2
);

815 
	`‰ìexp
(
fs
, 
e1
);

817 
e1
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
o1
, 
o2
);

818 
e1
->
k
 = 
VRELOCABLE
;

819 
	`luaK_fixlöe
(
fs
, 
löe
);

821 
	}
}

824 
	$codecomp
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
c⁄d
, 
expdesc
 *
e1
,

825 
expdesc
 *
e2
) {

826 
o1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

827 
o2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

828 
	`‰ìexp
(
fs
, 
e2
);

829 
	`‰ìexp
(
fs
, 
e1
);

830 i‡(
c⁄d
 =0 && 
›
 !
OP_EQ
) {

831 
ãmp
;

832 
ãmp
 = 
o1
; o1 = 
o2
; o2 =Åemp;

833 
c⁄d
 = 1;

835 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 
c⁄d
, 
o1
, 
o2
);

836 
e1
->
k
 = 
VJMP
;

837 
	}
}

840 
	$luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
e
, 
löe
) {

841 
expdesc
 
e2
;

842 
e2
.
t
 =É2.
f
 = 
NO_JUMP
;É2.
k
 = 
VKINT
;É2.
u
.
ivÆ
 = 0;

843 
›
) {

844 
OPR_MINUS
: 
OPR_BNOT
: 
OPR_LEN
: {

845 
	`codìxpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, (
›
 - 
OPR_MINUS
Ë+ 
OP_UNM
), 
e
, &
e2
, 
löe
);

848 
OPR_NOT
: 
	`codíŸ
(
fs
, 
e
); ;

849 : 
	`lua_as£π
(0);

851 
	}
}

854 
	$luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
) {

855 
›
) {

856 
OPR_AND
: {

857 
	`luaK_goi·rue
(
fs
, 
v
);

860 
OPR_OR
: {

861 
	`luaK_goifÁl£
(
fs
, 
v
);

864 
OPR_CONCAT
: {

865 
	`luaK_exp2√xåeg
(
fs
, 
v
);

868 
OPR_ADD
: 
OPR_SUB
:

869 
OPR_MUL
: 
OPR_DIV
: 
OPR_IDIV
:

870 
OPR_MOD
: 
OPR_POW
:

871 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

872 
OPR_SHL
: 
OPR_SHR
: {

873 i‡(!
	`t⁄umîÆ
(
v
, 
NULL
)Ë
	`luaK_exp2RK
(
fs
, v);

877 
	`luaK_exp2RK
(
fs
, 
v
);

881 
	}
}

884 
	$luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
,

885 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

886 
›
) {

887 
OPR_AND
: {

888 
	`lua_as£π
(
e1
->
t
 =
NO_JUMP
);

889 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

890 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
f
, 
e1
->f);

891 *
e1
 = *
e2
;

894 
OPR_OR
: {

895 
	`lua_as£π
(
e1
->
f
 =
NO_JUMP
);

896 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

897 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
t
, 
e1
->t);

898 *
e1
 = *
e2
;

901 
OPR_CONCAT
: {

902 
	`luaK_exp2vÆ
(
fs
, 
e2
);

903 i‡(
e2
->
k
 =
VRELOCABLE
 && 
	`GET_OPCODE
(
	`gëcode
(
fs
,É2)Ë=
OP_CONCAT
) {

904 
	`lua_as£π
(
e1
->
u
.
öfo
 =
	`GETARG_B
(
	`gëcode
(
fs
, 
e2
))-1);

905 
	`‰ìexp
(
fs
, 
e1
);

906 
	`SETARG_B
(
	`gëcode
(
fs
, 
e2
), 
e1
->
u
.
öfo
);

907 
e1
->
k
 = 
VRELOCABLE
;É1->
u
.
öfo
 = 
e2
->u.info;

910 
	`luaK_exp2√xåeg
(
fs
, 
e2
);

911 
	`codìxpvÆ
(
fs
, 
OP_CONCAT
, 
e1
, 
e2
, 
löe
);

915 
OPR_ADD
: 
OPR_SUB
: 
OPR_MUL
: 
OPR_DIV
:

916 
OPR_IDIV
: 
OPR_MOD
: 
OPR_POW
:

917 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

918 
OPR_SHL
: 
OPR_SHR
: {

919 
	`codìxpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, (
›
 - 
OPR_ADD
Ë+ 
OP_ADD
), 
e1
, 
e2
, 
löe
);

922 
OPR_EQ
: 
OPR_LT
: 
OPR_LE
: {

923 
	`codecomp
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 - 
OPR_EQ
 + 
OP_EQ
), 1, 
e1
, 
e2
);

926 
OPR_NE
: 
OPR_GT
: 
OPR_GE
: {

927 
	`codecomp
(
fs
, 
	`ˇ°
(
OpCode
, 
›
 - 
OPR_NE
 + 
OP_EQ
), 0, 
e1
, 
e2
);

930 : 
	`lua_as£π
(0);

932 
	}
}

935 
	$luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
) {

936 
fs
->
f
->
löeöfo
[fs->
pc
 - 1] = 
löe
;

937 
	}
}

940 
	$luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
) {

941 
c
 = (
√Àms
 - 1)/
LFIELDS_PER_FLUSH
 + 1;

942 
b
 = (
to°‹e
 =
LUA_MULTRET
) ? 0 :Åostore;

943 
	`lua_as£π
(
to°‹e
 != 0);

944 i‡(
c
 <
MAXARG_C
)

945 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 
c
);

946 i‡(
c
 <
MAXARG_Ax
) {

947 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 0);

948 
	`codìxåØrg
(
fs
, 
c
);

951 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "constructorÅooÜong");

952 
fs
->
‰ìªg
 = 
ba£
 + 1;

953 
	}
}

	@lib/archive/lua-5.3.0/src/lcode.h

7 #i‚de‡
lcode_h


8 
	#lcode_h


	)

10 
	~"Œex.h
"

11 
	~"lobje˘.h
"

12 
	~"l›codes.h
"

13 
	~"Õ¨£r.h
"

20 
	#NO_JUMP
 (-1)

	)

26 
	eBöO¥
 {

27 
	mOPR_ADD
, 
	mOPR_SUB
, 
	mOPR_MUL
, 
	mOPR_MOD
, 
	mOPR_POW
,

28 
	mOPR_DIV
,

29 
	mOPR_IDIV
,

30 
	mOPR_BAND
, 
	mOPR_BOR
, 
	mOPR_BXOR
,

31 
	mOPR_SHL
, 
	mOPR_SHR
,

32 
	mOPR_CONCAT
,

33 
	mOPR_EQ
, 
	mOPR_LT
, 
	mOPR_LE
,

34 
	mOPR_NE
, 
	mOPR_GT
, 
	mOPR_GE
,

35 
	mOPR_AND
, 
	mOPR_OR
,

36 
	mOPR_NOBINOPR


37 } 
	tBöO¥
;

40 
	eUnO¥
 { 
	mOPR_MINUS
, 
	mOPR_BNOT
, 
	mOPR_NOT
, 
	mOPR_LEN
, 
	mOPR_NOUNOPR
 } 
	tUnO¥
;

43 
	#gëcode
(
fs
,
e
Ë((fs)->
f
->
code
[”)->
u
.
öfo
])

	)

45 
	#luaK_codeAsBx
(
fs
,
o
,
A
,
sBx
Ë
	`luaK_codeABx
(fs,o,A,(sBx)+
MAXARG_sBx
)

	)

47 
	#luaK_£tmu…ªt
(
fs
,
e
Ë
	`luaK_£åëu∫s
(fs,É, 
LUA_MULTRET
)

	)

49 
	#luaK_jum±o
(
fs
,
t
Ë
	`luaK_∑tchli°
(fs, 
	`luaK_jump
(fs),Å)

	)

51 
LUAI_FUNC
 
luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
Bx
);

52 
LUAI_FUNC
 
luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
B
, 
C
);

53 
LUAI_FUNC
 
luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
);

54 
LUAI_FUNC
 
luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
);

55 
LUAI_FUNC
 
luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
);

56 
LUAI_FUNC
 
luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
);

57 
LUAI_FUNC
 
luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
);

58 
LUAI_FUNC
 
luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
);

59 
LUAI_FUNC
 
luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
);

60 
LUAI_FUNC
 
luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

61 
LUAI_FUNC
 
luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

62 
LUAI_FUNC
 
luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

63 
LUAI_FUNC
 
luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

64 
LUAI_FUNC
 
luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

65 
LUAI_FUNC
 
luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

66 
LUAI_FUNC
 
luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
);

67 
LUAI_FUNC
 
luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
);

68 
LUAI_FUNC
 
luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

69 
LUAI_FUNC
 
luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

70 
LUAI_FUNC
 
luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
e
);

71 
LUAI_FUNC
 
luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
);

72 
LUAI_FUNC
 
luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

73 
LUAI_FUNC
 
luaK_jump
 (
FuncSèã
 *
fs
);

74 
LUAI_FUNC
 
luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
);

75 
LUAI_FUNC
 
luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
);

76 
LUAI_FUNC
 
luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
);

77 
LUAI_FUNC
 
luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
);

78 
LUAI_FUNC
 
luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
);

79 
LUAI_FUNC
 
luaK_gëœbñ
 (
FuncSèã
 *
fs
);

80 
LUAI_FUNC
 
luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
v
, 
löe
);

81 
LUAI_FUNC
 
luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
);

82 
LUAI_FUNC
 
luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v1
,

83 
expdesc
 *
v2
, 
löe
);

84 
LUAI_FUNC
 
luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
);

	@lib/archive/lua-5.3.0/src/lcorolib.c

7 
	#lc‹ﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

15 
	~"lua.h
"

17 
	~"œuxlib.h
"

18 
	~"luÆib.h
"

21 
lua_Sèã
 *
	$gëco
 (
lua_Sèã
 *
L
) {

22 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 1);

23 
	`luaL_¨gcheck
(
L
, 
co
, 1, "threadÉxpected");

24  
co
;

25 
	}
}

28 
	$auxªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
co
, 
«rg
) {

29 
°©us
;

30 i‡(!
	`lua_check°ack
(
co
, 
«rg
)) {

31 
	`lua_pushlôîÆ
(
L
, "too manyárgumentsÅoÑesume");

34 i‡(
	`lua_°©us
(
co
Ë=
LUA_OK
 && 
	`lua_gët›
(co) == 0) {

35 
	`lua_pushlôîÆ
(
L
, "cannotÑesume dead coroutine");

38 
	`lua_xmove
(
L
, 
co
, 
«rg
);

39 
°©us
 = 
	`lua_ªsume
(
co
, 
L
, 
«rg
);

40 i‡(
°©us
 =
LUA_OK
 || sètu†=
LUA_YIELD
) {

41 
ƒes
 = 
	`lua_gët›
(
co
);

42 i‡(!
	`lua_check°ack
(
L
, 
ƒes
 + 1)) {

43 
	`lua_p›
(
co
, 
ƒes
);

44 
	`lua_pushlôîÆ
(
L
, "too manyÑesultsÅoÑesume");

47 
	`lua_xmove
(
co
, 
L
, 
ƒes
);

48  
ƒes
;

51 
	`lua_xmove
(
co
, 
L
, 1);

54 
	}
}

57 
	$luaB_c‹esume
 (
lua_Sèã
 *
L
) {

58 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

59 
r
;

60 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L) - 1);

61 i‡(
r
 < 0) {

62 
	`lua_pushboﬁón
(
L
, 0);

63 
	`lua_ö£π
(
L
, -2);

67 
	`lua_pushboﬁón
(
L
, 1);

68 
	`lua_ö£π
(
L
, -(
r
 + 1));

69  
r
 + 1;

71 
	}
}

74 
	$luaB_auxwøp
 (
lua_Sèã
 *
L
) {

75 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 
	`lua_upvÆueödex
(1));

76 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L));

77 i‡(
r
 < 0) {

78 i‡(
	`lua_is°rög
(
L
, -1)) {

79 
	`luaL_whîe
(
L
, 1);

80 
	`lua_ö£π
(
L
, -2);

81 
	`lua_c⁄ˇt
(
L
, 2);

83  
	`lua_îr‹
(
L
);

85  
r
;

86 
	}
}

89 
	$luaB_co¸óã
 (
lua_Sèã
 *
L
) {

90 
lua_Sèã
 *
NL
;

91 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

92 
NL
 = 
	`lua_√wthªad
(
L
);

93 
	`lua_pushvÆue
(
L
, 1);

94 
	`lua_xmove
(
L
, 
NL
, 1);

96 
	}
}

99 
	$luaB_cowøp
 (
lua_Sèã
 *
L
) {

100 
	`luaB_co¸óã
(
L
);

101 
	`lua_pushc˛osuª
(
L
, 
luaB_auxwøp
, 1);

103 
	}
}

106 
	$luaB_yõld
 (
lua_Sèã
 *
L
) {

107  
	`lua_yõld
(
L
, 
	`lua_gët›
(L));

108 
	}
}

111 
	$luaB_co°©us
 (
lua_Sèã
 *
L
) {

112 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

113 i‡(
L
 =
co
Ë
	`lua_pushlôîÆ
(L, "running");

115 
	`lua_°©us
(
co
)) {

116 
LUA_YIELD
:

117 
	`lua_pushlôîÆ
(
L
, "suspended");

119 
LUA_OK
: {

120 
lua_Debug
 
¨
;

121 i‡(
	`lua_gë°ack
(
co
, 0, &
¨
) > 0)

122 
	`lua_pushlôîÆ
(
L
, "normal");

123 i‡(
	`lua_gët›
(
co
) == 0)

124 
	`lua_pushlôîÆ
(
L
, "dead");

126 
	`lua_pushlôîÆ
(
L
, "suspended");

130 
	`lua_pushlôîÆ
(
L
, "dead");

135 
	}
}

138 
	$luaB_yõldabÀ
 (
lua_Sèã
 *
L
) {

139 
	`lua_pushboﬁón
(
L
, 
	`lua_isyõldabÀ
(L));

141 
	}
}

144 
	$luaB_c‹u¬ög
 (
lua_Sèã
 *
L
) {

145 
ismaö
 = 
	`lua_pushthªad
(
L
);

146 
	`lua_pushboﬁón
(
L
, 
ismaö
);

148 
	}
}

151 c⁄° 
luaL_Reg
 
	gco_funcs
[] = {

152 {"¸óã", 
luaB_co¸óã
},

153 {"ªsume", 
luaB_c‹esume
},

154 {"ru¬ög", 
luaB_c‹u¬ög
},

155 {"°©us", 
luaB_co°©us
},

156 {"wøp", 
luaB_cowøp
},

157 {"yõld", 
luaB_yõld
},

158 {"isyõldabÀ", 
luaB_yõldabÀ
},

159 {
NULL
, NULL}

164 
LUAMOD_API
 
	$lua›í_c‹outöe
 (
lua_Sèã
 *
L
) {

165 
	`luaL_√wlib
(
L
, 
co_funcs
);

167 
	}
}

	@lib/archive/lua-5.3.0/src/lctype.c

7 
	#l˘y≥_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~"l˘y≥.h
"

15 #i‡!
LUA_USE_CTYPE


17 
	~<limôs.h
>

19 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2] = {

	@lib/archive/lua-5.3.0/src/lctype.h

7 #i‚de‡
l˘y≥_h


8 
	#l˘y≥_h


	)

10 
	~"lua.h
"

19 #i‡!
deföed
(
LUA_USE_CTYPE
)

23 
	#LUA_USE_CTYPE
 0

	)

26 
	#LUA_USE_CTYPE
 1

	)

32 #i‡!
LUA_USE_CTYPE


34 
	~<limôs.h
>

36 
	~"Œimôs.h
"

39 
	#ALPHABIT
 0

	)

40 
	#DIGITBIT
 1

	)

41 
	#PRINTBIT
 2

	)

42 
	#SPACEBIT
 3

	)

43 
	#XDIGITBIT
 4

	)

46 
	#MASK
(
B
Ë(1 << (B))

	)

52 
	#ã°¥›
(
c
,
p
Ë(
luai_˘y≥_
[(c)+1] & (p))

	)

57 
	#li¶Æpha
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
ALPHABIT
))

	)

58 
	#li¶Ænum
(
c
Ë
	`ã°¥›
(c, (
	`MASK
(
ALPHABIT
Ë| MASK(
DIGITBIT
)))

	)

59 
	#lisdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
DIGITBIT
))

	)

60 
	#lis•a˚
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
SPACEBIT
))

	)

61 
	#li•röt
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
PRINTBIT
))

	)

62 
	#lisxdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
XDIGITBIT
))

	)

67 
	#…ﬁowî
(
c
Ë((cË| ('A' ^ 'a'))

	)

71 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2];

80 
	~<˘y≥.h
>

83 
	#li¶Æpha
(
c
Ë(
	`ißÕha
(cË|| (cË='_')

	)

84 
	#li¶Ænum
(
c
Ë(
	`iß um
(cË|| (cË='_')

	)

85 
	#lisdigô
(
c
Ë(
	`isdigô
(c))

	)

86 
	#lis•a˚
(
c
Ë(
	`is•a˚
(c))

	)

87 
	#li•röt
(
c
Ë(
	`i•röt
(c))

	)

88 
	#lisxdigô
(
c
Ë(
	`isxdigô
(c))

	)

90 
	#…ﬁowî
(
c
Ë(
	`tﬁowî
(c))

	)

	@lib/archive/lua-5.3.0/src/ldblib.c

7 
	#ldblib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 c⁄° 
	gHOOKKEY
 = 0;

30 
	$db_gëªgi°ry
 (
lua_Sèã
 *
L
) {

31 
	`lua_pushvÆue
(
L
, 
LUA_REGISTRYINDEX
);

33 
	}
}

36 
	$db_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

37 
	`luaL_check™y
(
L
, 1);

38 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

39 
	`lua_pushnû
(
L
);

42 
	}
}

45 
	$db_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

46 
t
 = 
	`lua_ty≥
(
L
, 2);

47 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

49 
	`lua_£â›
(
L
, 2);

50 
	`lua_£tmë©abÀ
(
L
, 1);

52 
	}
}

55 
	$db_gëu£rvÆue
 (
lua_Sèã
 *
L
) {

56 i‡(
	`lua_ty≥
(
L
, 1Ë!
LUA_TUSERDATA
)

57 
	`lua_pushnû
(
L
);

59 
	`lua_gëu£rvÆue
(
L
, 1);

61 
	}
}

64 
	$db_£tu£rvÆue
 (
lua_Sèã
 *
L
) {

65 
	`luaL_checkty≥
(
L
, 1, 
LUA_TUSERDATA
);

66 
	`luaL_check™y
(
L
, 2);

67 
	`lua_£â›
(
L
, 2);

68 
	`lua_£tu£rvÆue
(
L
, 1);

70 
	}
}

79 
lua_Sèã
 *
	$gëthªad
 (
lua_Sèã
 *
L
, *
¨g
) {

80 i‡(
	`lua_i°hªad
(
L
, 1)) {

81 *
¨g
 = 1;

82  
	`lua_tŸhªad
(
L
, 1);

85 *
¨g
 = 0;

86  
L
;

88 
	}
}

96 
	$£âabss
 (
lua_Sèã
 *
L
, c⁄° *
k
, c⁄° *
v
) {

97 
	`lua_push°rög
(
L
, 
v
);

98 
	`lua_£tfõld
(
L
, -2, 
k
);

99 
	}
}

101 
	$£âabsi
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

102 
	`lua_pushöãgî
(
L
, 
v
);

103 
	`lua_£tfõld
(
L
, -2, 
k
);

104 
	}
}

106 
	$£âabsb
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

107 
	`lua_pushboﬁón
(
L
, 
v
);

108 
	`lua_£tfõld
(
L
, -2, 
k
);

109 
	}
}

119 
	$åót°ack›ti⁄
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, c⁄° *
‚ame
) {

120 i‡(
L
 =
L1
)

121 
	`lua_rŸ©e
(
L
, -2, 1);

123 
	`lua_xmove
(
L1
, 
L
, 1);

124 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

125 
	}
}

131 
	$db_gëöfo
 (
lua_Sèã
 *
L
) {

132 
lua_Debug
 
¨
;

133 
¨g
;

134 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

135 c⁄° *
›ti⁄s
 = 
	`luaL_›t°rög
(
L
, 
¨g
+2, "flnStu");

136 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

137 
›ti⁄s
 = 
	`lua_pushf°rög
(
L
, ">%s", options);

138 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

139 
	`lua_xmove
(
L
, 
L1
, 1);

142 i‡(!
	`lua_gë°ack
(
L1
, ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1), &
¨
)) {

143 
	`lua_pushnû
(
L
);

147 i‡(!
	`lua_gëöfo
(
L1
, 
›ti⁄s
, &
¨
))

148  
	`luaL_¨gîr‹
(
L
, 
¨g
+2, "invalid option");

149 
	`lua_√wèbÀ
(
L
);

150 i‡(
	`°rchr
(
›ti⁄s
, 'S')) {

151 
	`£âabss
(
L
, "sour˚", 
¨
.
sour˚
);

152 
	`£âabss
(
L
, "sh‹t_§c", 
¨
.
sh‹t_§c
);

153 
	`£âabsi
(
L
, "löedeföed", 
¨
.
löedeföed
);

154 
	`£âabsi
(
L
, "œ°löedeföed", 
¨
.
œ°löedeföed
);

155 
	`£âabss
(
L
, "wh©", 
¨
.
wh©
);

157 i‡(
	`°rchr
(
›ti⁄s
, 'l'))

158 
	`£âabsi
(
L
, "cuºíéöe", 
¨
.
cuºíéöe
);

159 i‡(
	`°rchr
(
›ti⁄s
, 'u')) {

160 
	`£âabsi
(
L
, "nups", 
¨
.
nups
);

161 
	`£âabsi
(
L
, "≈¨ams", 
¨
.
≈¨ams
);

162 
	`£âabsb
(
L
, "isv¨¨g", 
¨
.
isv¨¨g
);

164 i‡(
	`°rchr
(
›ti⁄s
, 'n')) {

165 
	`£âabss
(
L
, "«me", 
¨
.
«me
);

166 
	`£âabss
(
L
, "«mewh©", 
¨
.
«mewh©
);

168 i‡(
	`°rchr
(
›ti⁄s
, 't'))

169 
	`£âabsb
(
L
, "i°aûˇŒ", 
¨
.
i°aûˇŒ
);

170 i‡(
	`°rchr
(
›ti⁄s
, 'L'))

171 
	`åót°ack›ti⁄
(
L
, 
L1
, "activelines");

172 i‡(
	`°rchr
(
›ti⁄s
, 'f'))

173 
	`åót°ack›ti⁄
(
L
, 
L1
, "func");

175 
	}
}

178 
	$db_gëloˇl
 (
lua_Sèã
 *
L
) {

179 
¨g
;

180 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

181 
lua_Debug
 
¨
;

182 c⁄° *
«me
;

183 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

184 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

185 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

186 
	`lua_push°rög
(
L
, 
	`lua_gëloˇl
(L, 
NULL
, 
nv¨
));

190 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

191 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

192  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

193 
«me
 = 
	`lua_gëloˇl
(
L1
, &
¨
, 
nv¨
);

194 i‡(
«me
) {

195 
	`lua_xmove
(
L1
, 
L
, 1);

196 
	`lua_push°rög
(
L
, 
«me
);

197 
	`lua_rŸ©e
(
L
, -2, 1);

201 
	`lua_pushnû
(
L
);

205 
	}
}

208 
	$db_£éoˇl
 (
lua_Sèã
 *
L
) {

209 
¨g
;

210 c⁄° *
«me
;

211 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

212 
lua_Debug
 
¨
;

213 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

214 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

215 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

216  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

217 
	`luaL_check™y
(
L
, 
¨g
+3);

218 
	`lua_£â›
(
L
, 
¨g
+3);

219 
	`lua_xmove
(
L
, 
L1
, 1);

220 
«me
 = 
	`lua_£éoˇl
(
L1
, &
¨
, 
nv¨
);

221 i‡(
«me
 =
NULL
)

222 
	`lua_p›
(
L1
, 1);

223 
	`lua_push°rög
(
L
, 
«me
);

225 
	}
}

231 
	$auxupvÆue
 (
lua_Sèã
 *
L
, 
gë
) {

232 c⁄° *
«me
;

233 
n
 = ()
	`luaL_checköãgî
(
L
, 2);

234 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

235 
«me
 = 
gë
 ? 
	`lua_gëupvÆue
(
L
, 1, 
n
Ë: 
	`lua_£tupvÆue
(L, 1,Ç);

236 i‡(
«me
 =
NULL
)  0;

237 
	`lua_push°rög
(
L
, 
«me
);

238 
	`lua_ö£π
(
L
, -(
gë
+1));

239  
gë
 + 1;

240 
	}
}

243 
	$db_gëupvÆue
 (
lua_Sèã
 *
L
) {

244  
	`auxupvÆue
(
L
, 1);

245 
	}
}

248 
	$db_£tupvÆue
 (
lua_Sèã
 *
L
) {

249 
	`luaL_check™y
(
L
, 3);

250  
	`auxupvÆue
(
L
, 0);

251 
	}
}

258 
	$checkupvÆ
 (
lua_Sèã
 *
L
, 
¨gf
, 
¨gnup
) {

259 
nup
 = ()
	`luaL_checköãgî
(
L
, 
¨gnup
);

260 
	`luaL_checkty≥
(
L
, 
¨gf
, 
LUA_TFUNCTION
);

261 
	`luaL_¨gcheck
(
L
, (
	`lua_gëupvÆue
(L, 
¨gf
, 
nup
Ë!
NULL
), 
¨gnup
,

263  
nup
;

264 
	}
}

267 
	$db_upvÆueid
 (
lua_Sèã
 *
L
) {

268 
n
 = 
	`checkupvÆ
(
L
, 1, 2);

269 
	`lua_pushlightu£rd©a
(
L
, 
	`lua_upvÆueid
(L, 1, 
n
));

271 
	}
}

274 
	$db_upvÆuejoö
 (
lua_Sèã
 *
L
) {

275 
n1
 = 
	`checkupvÆ
(
L
, 1, 2);

276 
n2
 = 
	`checkupvÆ
(
L
, 3, 4);

277 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 1), 1, "Lua functionÉxpected");

278 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 3), 3, "Lua functionÉxpected");

279 
	`lua_upvÆuejoö
(
L
, 1, 
n1
, 3, 
n2
);

281 
	}
}

288 
	$hookf
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

289 c⁄° *c⁄° 
hook«mes
[] =

291 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

292 
	`lua_pushthªad
(
L
);

293 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TFUNCTION
) {

294 
	`lua_push°rög
(
L
, 
hook«mes
[()
¨
->
evít
]);

295 i‡(
¨
->
cuºíéöe
 >= 0)

296 
	`lua_pushöãgî
(
L
, 
¨
->
cuºíéöe
);

297 
	`lua_pushnû
(
L
);

298 
	`lua_as£π
(
	`lua_gëöfo
(
L
, "lS", 
¨
));

299 
	`lua_ˇŒ
(
L
, 2, 0);

301 
	}
}

307 
	$makemask
 (c⁄° *
smask
, 
cou¡
) {

308 
mask
 = 0;

309 i‡(
	`°rchr
(
smask
, 'c')Ë
mask
 |
LUA_MASKCALL
;

310 i‡(
	`°rchr
(
smask
, 'r')Ë
mask
 |
LUA_MASKRET
;

311 i‡(
	`°rchr
(
smask
, 'l')Ë
mask
 |
LUA_MASKLINE
;

312 i‡(
cou¡
 > 0Ë
mask
 |
LUA_MASKCOUNT
;

313  
mask
;

314 
	}
}

320 *
	$unmakemask
 (
mask
, *
smask
) {

321 
i
 = 0;

322 i‡(
mask
 & 
LUA_MASKCALL
Ë
smask
[
i
++] = 'c';

323 i‡(
mask
 & 
LUA_MASKRET
Ë
smask
[
i
++] = 'r';

324 i‡(
mask
 & 
LUA_MASKLINE
Ë
smask
[
i
++] = 'l';

325 
smask
[
i
] = '\0';

326  
smask
;

327 
	}
}

330 
	$db_£thook
 (
lua_Sèã
 *
L
) {

331 
¨g
, 
mask
, 
cou¡
;

332 
lua_Hook
 
func
;

333 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

334 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
+1)) {

335 
	`lua_£â›
(
L
, 
¨g
+1);

336 
func
 = 
NULL
; 
mask
 = 0; 
cou¡
 = 0;

339 c⁄° *
smask
 = 
	`luaL_check°rög
(
L
, 
¨g
+2);

340 
	`luaL_checkty≥
(
L
, 
¨g
+1, 
LUA_TFUNCTION
);

341 
cou¡
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 3, 0);

342 
func
 = 
hookf
; 
mask
 = 
	`makemask
(
smask
, 
cou¡
);

344 i‡(
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
Ë=
LUA_TNIL
) {

345 
	`lua_¸óãèbÀ
(
L
, 0, 2);

346 
	`lua_pushvÆue
(
L
, -1);

347 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

348 
	`lua_push°rög
(
L
, "k");

349 
	`lua_£tfõld
(
L
, -2, "__mode");

350 
	`lua_pushvÆue
(
L
, -1);

351 
	`lua_£tmë©abÀ
(
L
, -2);

353 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

354 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

355 
	`lua_øw£t
(
L
, -3);

356 
	`lua_£thook
(
L1
, 
func
, 
mask
, 
cou¡
);

358 
	}
}

361 
	$db_gëhook
 (
lua_Sèã
 *
L
) {

362 
¨g
;

363 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

364 
buff
[5];

365 
mask
 = 
	`lua_gëhookmask
(
L1
);

366 
lua_Hook
 
hook
 = 
	`lua_gëhook
(
L1
);

367 i‡(
hook
 =
NULL
)

368 
	`lua_pushnû
(
L
);

369 i‡(
hook
 !
hookf
)

370 
	`lua_pushlôîÆ
(
L
, "external hook");

372 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

373 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

374 
	`lua_øwgë
(
L
, -2);

375 
	`lua_ªmove
(
L
, -2);

377 
	`lua_push°rög
(
L
, 
	`unmakemask
(
mask
, 
buff
));

378 
	`lua_pushöãgî
(
L
, 
	`lua_gëhookcou¡
(
L1
));

380 
	}
}

383 
	$db_debug
 (
lua_Sèã
 *
L
) {

385 
buf„r
[250];

386 
	`lua_wrôe°rögîr‹
(
L
, "%s", "lua_debug> ");

387 i‡(
	`fgës
(
buf„r
, (buf„r), 
°dö
) == 0 ||

388 
	`°rcmp
(
buf„r
, "cont\n") == 0)

390 i‡(
	`luaL_lﬂdbuf„r
(
L
, 
buf„r
, 
	`°æí
(buffer), "=(debug command)") ||

391 
	`lua_pˇŒ
(
L
, 0, 0, 0))

392 
	`lua_wrôe°rögîr‹
(
L
, "%s\n", 
	`lua_to°rög
(L, -1));

393 
	`lua_£â›
(
L
, 0);

395 
	}
}

398 
	$db_åa˚back
 (
lua_Sèã
 *
L
) {

399 
¨g
;

400 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

401 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 
¨g
 + 1);

402 i‡(
msg
 =
NULL
 && !
	`lua_i¢⁄e‹nû
(
L
, 
¨g
 + 1))

403 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

405 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 2, (L =
L1
) ? 1 : 0);

406 
	`luaL_åa˚back
(
L
, 
L1
, 
msg
, 
Àvñ
);

409 
	}
}

412 c⁄° 
luaL_Reg
 
	gdblib
[] = {

413 {"debug", 
db_debug
},

414 {"gëu£rvÆue", 
db_gëu£rvÆue
},

415 {"gëhook", 
db_gëhook
},

416 {"gëöfo", 
db_gëöfo
},

417 {"gëloˇl", 
db_gëloˇl
},

418 {"gëªgi°ry", 
db_gëªgi°ry
},

419 {"gëmë©abÀ", 
db_gëmë©abÀ
},

420 {"gëupvÆue", 
db_gëupvÆue
},

421 {"upvÆuejoö", 
db_upvÆuejoö
},

422 {"upvÆueid", 
db_upvÆueid
},

423 {"£tu£rvÆue", 
db_£tu£rvÆue
},

424 {"£thook", 
db_£thook
},

425 {"£éoˇl", 
db_£éoˇl
},

426 {"£tmë©abÀ", 
db_£tmë©abÀ
},

427 {"£tupvÆue", 
db_£tupvÆue
},

428 {"åa˚back", 
db_åa˚back
},

429 {
NULL
, NULL}

433 
LUAMOD_API
 
	$lua›í_debug
 (
lua_Sèã
 *
L
) {

434 
	`luaL_√wlib
(
L
, 
dblib
);

436 
	}
}

	@lib/archive/lua-5.3.0/src/ldebug.c

7 
	#ldebug_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"lcode.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"…m.h
"

30 
	~"lvm.h
"

34 
	#noLuaClosuª
(
f
Ë((fË=
NULL
 || (f)->
c
.
â
 =
LUA_TCCL
)

	)

37 c⁄° *
gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
);

40 
	$cuºíçc
 (
CÆlInfo
 *
ci
) {

41 
	`lua_as£π
(
	`isLua
(
ci
));

42  
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
	`ci_func
(ci)->
p
);

43 
	}
}

46 
	$cuºíéöe
 (
CÆlInfo
 *
ci
) {

47  
	`gëfun˛öe
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci));

48 
	}
}

54 
LUA_API
 
	$lua_£thook
 (
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
) {

55 i‡(
func
 =
NULL
 || 
mask
 == 0) {

56 
mask
 = 0;

57 
func
 = 
NULL
;

59 i‡(
	`isLua
(
L
->
ci
))

60 
L
->
ﬁdpc
 = L->
ci
->
u
.
l
.
ßvedpc
;

61 
L
->
hook
 = 
func
;

62 
L
->
ba£hookcou¡
 = 
cou¡
;

63 
	`ª£thookcou¡
(
L
);

64 
L
->
hookmask
 = 
	`ˇ°_byã
(
mask
);

65 
	}
}

68 
LUA_API
 
lua_Hook
 
	$lua_gëhook
 (
lua_Sèã
 *
L
) {

69  
L
->
hook
;

70 
	}
}

73 
LUA_API
 
	$lua_gëhookmask
 (
lua_Sèã
 *
L
) {

74  
L
->
hookmask
;

75 
	}
}

78 
LUA_API
 
	$lua_gëhookcou¡
 (
lua_Sèã
 *
L
) {

79  
L
->
ba£hookcou¡
;

80 
	}
}

83 
LUA_API
 
	$lua_gë°ack
 (
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
) {

84 
°©us
;

85 
CÆlInfo
 *
ci
;

86 i‡(
Àvñ
 < 0)  0;

87 
	`lua_lock
(
L
);

88 
ci
 = 
L
->ci; 
Àvñ
 > 0 && cò!&L->
ba£_ci
; còci->
¥evious
)

89 
Àvñ
--;

90 i‡(
Àvñ
 =0 && 
ci
 !&
L
->
ba£_ci
) {

91 
°©us
 = 1;

92 
¨
->
i_ci
 = 
ci
;

94 
°©us
 = 0;

95 
	`lua_u∆ock
(
L
);

96  
°©us
;

97 
	}
}

100 c⁄° *
	$upvÆ«me
 (
PrŸo
 *
p
, 
uv
) {

101 
TSåög
 *
s
 = 
	`check_exp
(
uv
 < 
p
->
sizeupvÆues
,Ö->
upvÆues
[uv].
«me
);

102 i‡(
s
 =
NULL
)  "?";

103  
	`gë°r
(
s
);

104 
	}
}

107 c⁄° *
	$födv¨¨g
 (
CÆlInfo
 *
ci
, 
n
, 
StkId
 *
pos
) {

108 
≈¨ams
 = 
	`˛LvÆue
(
ci
->
func
)->
p
->
num∑øms
;

109 i‡(
n
 >
ci
->
u
.
l
.
ba£
 - ci->
func
 - 
≈¨ams
)

110  
NULL
;

112 *
pos
 = 
ci
->
func
 + 
≈¨ams
 + 
n
;

115 
	}
}

118 c⁄° *
	$födloˇl
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
n
,

119 
StkId
 *
pos
) {

120 c⁄° *
«me
 = 
NULL
;

121 
StkId
 
ba£
;

122 i‡(
	`isLua
(
ci
)) {

123 i‡(
n
 < 0)

124  
	`födv¨¨g
(
ci
, -
n
, 
pos
);

126 
ba£
 = 
ci
->
u
.
l
.base;

127 
«me
 = 
	`luaF_gëloˇ ame
(
	`ci_func
(
ci
)->
p
, 
n
, 
	`cuºíçc
(ci));

131 
ba£
 = 
ci
->
func
 + 1;

132 i‡(
«me
 =
NULL
) {

133 
StkId
 
limô
 = (
ci
 =
L
->ciË? L->
t›
 : ci->
√xt
->
func
;

134 i‡(
limô
 - 
ba£
 >
n
 &&Ç > 0)

135 
«me
 = "(*temporary)";

137  
NULL
;

139 *
pos
 = 
ba£
 + (
n
 - 1);

140  
«me
;

141 
	}
}

144 
LUA_API
 c⁄° *
	$lua_gëloˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

145 c⁄° *
«me
;

146 
	`lua_lock
(
L
);

147 i‡(
¨
 =
NULL
) {

148 i‡(!
	`isLfun˘i⁄
(
L
->
t›
 - 1))

149 
«me
 = 
NULL
;

151 
«me
 = 
	`luaF_gëloˇ ame
(
	`˛LvÆue
(
L
->
t›
 - 1)->
p
, 
n
, 0);

154 
StkId
 
pos
 = 0;

155 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

156 i‡(
«me
) {

157 
	`£tobj2s
(
L
, L->
t›
, 
pos
);

158 
	`≠i_ö¸_t›
(
L
);

161 
	`lua_u∆ock
(
L
);

162  
«me
;

163 
	}
}

166 
LUA_API
 c⁄° *
	$lua_£éoˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

167 
StkId
 
pos
 = 0;

168 c⁄° *
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

169 
	`lua_lock
(
L
);

170 i‡(
«me
) {

171 
	`£tobjs2s
(
L
, 
pos
, L->
t›
 - 1);

172 
L
->
t›
--;

174 
	`lua_u∆ock
(
L
);

175  
«me
;

176 
	}
}

179 
	$funcöfo
 (
lua_Debug
 *
¨
, 
Closuª
 *
˛
) {

180 i‡(
	`noLuaClosuª
(
˛
)) {

181 
¨
->
sour˚
 = "=[C]";

182 
¨
->
löedeföed
 = -1;

183 
¨
->
œ°löedeföed
 = -1;

184 
¨
->
wh©
 = "C";

187 
PrŸo
 *
p
 = 
˛
->
l
.p;

188 
¨
->
sour˚
 = 
p
->sour˚ ? 
	`gë°r
(p->source) : "=?";

189 
¨
->
löedeföed
 = 
p
->linedefined;

190 
¨
->
œ°löedeföed
 = 
p
->lastlinedefined;

191 
¨
->
wh©
 = (¨->
löedeföed
 == 0) ? "main" : "Lua";

193 
	`luaO_chunkid
(
¨
->
sh‹t_§c
,ár->
sour˚
, 
LUA_IDSIZE
);

194 
	}
}

197 
	$cﬁÀ˘vÆidlöes
 (
lua_Sèã
 *
L
, 
Closuª
 *
f
) {

198 i‡(
	`noLuaClosuª
(
f
)) {

199 
	`£äûvÆue
(
L
->
t›
);

200 
	`≠i_ö¸_t›
(
L
);

203 
i
;

204 
TVÆue
 
v
;

205 *
löeöfo
 = 
f
->
l
.
p
->lineinfo;

206 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

207 
	`£thvÆue
(
L
, L->
t›
, 
t
);

208 
	`≠i_ö¸_t›
(
L
);

209 
	`£tbvÆue
(&
v
, 1);

210 
i
 = 0; i < 
f
->
l
.
p
->
sizñöeöfo
; i++)

211 
	`luaH_£töt
(
L
, 
t
, 
löeöfo
[
i
], &
v
);

213 
	}
}

216 
	$auxgëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
,

217 
Closuª
 *
f
, 
CÆlInfo
 *
ci
) {

218 
°©us
 = 1;

219 ; *
wh©
; what++) {

220 *
wh©
) {

222 
	`funcöfo
(
¨
, 
f
);

226 
¨
->
cuºíéöe
 = (
ci
 && 
	`isLua
(ci)Ë? 
	`cuºíéöe
(ci) : -1;

230 
¨
->
nups
 = (
f
 =
NULL
Ë? 0 : f->
c
.
nupvÆues
;

231 i‡(
	`noLuaClosuª
(
f
)) {

232 
¨
->
isv¨¨g
 = 1;

233 
¨
->
≈¨ams
 = 0;

236 
¨
->
isv¨¨g
 = 
f
->
l
.
p
->
is_v¨¨g
;

237 
¨
->
≈¨ams
 = 
f
->
l
.
p
->
num∑øms
;

242 
¨
->
i°aûˇŒ
 = (
ci
Ë? ci->
ˇŒ°©us
 & 
CIST_TAIL
 : 0;

247 i‡(
ci
 && !(ci->
ˇŒ°©us
 & 
CIST_TAIL
Ë&& 
	`isLua
(ci->
¥evious
))

248 
¨
->
«mewh©
 = 
	`gëfun˙ame
(
L
, 
ci
->
¥evious
, &¨->
«me
);

250 
¨
->
«mewh©
 = 
NULL
;

251 i‡(
¨
->
«mewh©
 =
NULL
) {

252 
¨
->
«mewh©
 = "";

253 
¨
->
«me
 = 
NULL
;

260 : 
°©us
 = 0;

263  
°©us
;

264 
	}
}

267 
LUA_API
 
	$lua_gëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
) {

268 
°©us
;

269 
Closuª
 *
˛
;

270 
CÆlInfo
 *
ci
;

271 
StkId
 
func
;

272 
	`lua_lock
(
L
);

273 i‡(*
wh©
 == '>') {

274 
ci
 = 
NULL
;

275 
func
 = 
L
->
t›
 - 1;

276 
	`≠i_check
(
	`âisfun˘i⁄
(
func
), "functionÉxpected");

277 
wh©
++;

278 
L
->
t›
--;

281 
ci
 = 
¨
->
i_ci
;

282 
func
 = 
ci
->func;

283 
	`lua_as£π
(
	`âisfun˘i⁄
(
ci
->
func
));

285 
˛
 = 
	`âis˛osuª
(
func
Ë? 
	`˛vÆue
(funcË: 
NULL
;

286 
°©us
 = 
	`auxgëöfo
(
L
, 
wh©
, 
¨
, 
˛
, 
ci
);

287 i‡(
	`°rchr
(
wh©
, 'f')) {

288 
	`£tobjs2s
(
L
, L->
t›
, 
func
);

289 
	`≠i_ö¸_t›
(
L
);

291 i‡(
	`°rchr
(
wh©
, 'L'))

292 
	`cﬁÀ˘vÆidlöes
(
L
, 
˛
);

293 
	`lua_u∆ock
(
L
);

294  
°©us
;

295 
	}
}

304 c⁄° *
gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

305 c⁄° **
«me
);

311 
	$k«me
 (
PrŸo
 *
p
, 
pc
, 
c
, c⁄° **
«me
) {

312 i‡(
	`ISK
(
c
)) {

313 
TVÆue
 *
kvÆue
 = &
p
->
k
[
	`INDEXK
(
c
)];

314 i‡(
	`âis°rög
(
kvÆue
)) {

315 *
«me
 = 
	`svÆue
(
kvÆue
);

321 c⁄° *
wh©
 = 
	`gëobj«me
(
p
, 
pc
, 
c
, 
«me
);

322 i‡(
wh©
 && *what == 'c') {

327 *
«me
 = "?";

328 
	}
}

331 
	$fûãΩc
 (
pc
, 
jm±¨gë
) {

332 i‡(
pc
 < 
jm±¨gë
)

334  
pc
;

335 
	}
}

341 
	$föd£åeg
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
) {

342 
pc
;

343 
£åeg
 = -1;

344 
jm±¨gë
 = 0;

345 
pc
 = 0;Ö¯< 
œ°pc
;Öc++) {

346 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

347 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

348 
a
 = 
	`GETARG_A
(
i
);

349 
›
) {

350 
OP_LOADNIL
: {

351 
b
 = 
	`GETARG_B
(
i
);

352 i‡(
a
 <
ªg
 &&Ñeg <®+ 
b
)

353 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

356 
OP_TFORCALL
: {

357 i‡(
ªg
 >
a
 + 2)

358 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

361 
OP_CALL
:

362 
OP_TAILCALL
: {

363 i‡(
ªg
 >
a
)

364 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

367 
OP_JMP
: {

368 
b
 = 
	`GETARG_sBx
(
i
);

369 
de°
 = 
pc
 + 1 + 
b
;

371 i‡(
pc
 < 
de°
 && de° <
œ°pc
) {

372 i‡(
de°
 > 
jm±¨gë
)

373 
jm±¨gë
 = 
de°
;

378 i‡(
	`ã°AMode
(
›
Ë&& 
ªg
 =
a
)

379 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

383  
£åeg
;

384 
	}
}

387 c⁄° *
	$gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

388 c⁄° **
«me
) {

389 
pc
;

390 *
«me
 = 
	`luaF_gëloˇ ame
(
p
, 
ªg
 + 1, 
œ°pc
);

391 i‡(*
«me
)

394 
pc
 = 
	`föd£åeg
(
p
, 
œ°pc
, 
ªg
);

395 i‡(
pc
 != -1) {

396 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

397 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

398 
›
) {

399 
OP_MOVE
: {

400 
b
 = 
	`GETARG_B
(
i
);

401 i‡(
b
 < 
	`GETARG_A
(
i
))

402  
	`gëobj«me
(
p
, 
pc
, 
b
, 
«me
);

405 
OP_GETTABUP
:

406 
OP_GETTABLE
: {

407 
k
 = 
	`GETARG_C
(
i
);

408 
t
 = 
	`GETARG_B
(
i
);

409 c⁄° *
vn
 = (
›
 =
OP_GETTABLE
)

410 ? 
	`luaF_gëloˇ ame
(
p
, 
t
 + 1, 
pc
)

411 : 
	`upvÆ«me
(
p
, 
t
);

412 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

413  (
vn
 && 
	`°rcmp
(vn, 
LUA_ENV
) == 0) ? "global" : "field";

415 
OP_GETUPVAL
: {

416 *
«me
 = 
	`upvÆ«me
(
p
, 
	`GETARG_B
(
i
));

419 
OP_LOADK
:

420 
OP_LOADKX
: {

421 
b
 = (
›
 =
OP_LOADK
Ë? 
	`GETARG_Bx
(
i
)

422 : 
	`GETARG_Ax
(
p
->
code
[
pc
 + 1]);

423 i‡(
	`âis°rög
(&
p
->
k
[
b
])) {

424 *
«me
 = 
	`svÆue
(&
p
->
k
[
b
]);

429 
OP_SELF
: {

430 
k
 = 
	`GETARG_C
(
i
);

431 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

437  
NULL
;

438 
	}
}

441 c⁄° *
	$gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
) {

442 
TMS
 
tm
 = (TMS)0;

443 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

444 
pc
 = 
	`cuºíçc
(
ci
);

445 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

446 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
) {

447 *
«me
 = "?";

450 
	`GET_OPCODE
(
i
)) {

451 
OP_CALL
:

452 
OP_TAILCALL
:

453  
	`gëobj«me
(
p
, 
pc
, 
	`GETARG_A
(
i
), 
«me
);

454 
OP_TFORCALL
: {

455 *
«me
 = "for iterator";

459 
OP_SELF
: 
OP_GETTABUP
: 
OP_GETTABLE
:

460 
tm
 = 
TM_INDEX
;

462 
OP_SETTABUP
: 
OP_SETTABLE
:

463 
tm
 = 
TM_NEWINDEX
;

465 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_MOD
:

466 
OP_POW
: 
OP_DIV
: 
OP_IDIV
: 
OP_BAND
:

467 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
: {

468 
off£t
 = 
	`ˇ°_öt
(
	`GET_OPCODE
(
i
)Ë- ca°_öt(
OP_ADD
);

469 
tm
 = 
	`ˇ°
(
TMS
, 
off£t
 + 
	`ˇ°_öt
(
TM_ADD
));

472 
OP_UNM
: 
tm
 = 
TM_UNM
; ;

473 
OP_BNOT
: 
tm
 = 
TM_BNOT
; ;

474 
OP_LEN
: 
tm
 = 
TM_LEN
; ;

475 
OP_CONCAT
: 
tm
 = 
TM_CONCAT
; ;

476 
OP_EQ
: 
tm
 = 
TM_EQ
; ;

477 
OP_LT
: 
tm
 = 
TM_LT
; ;

478 
OP_LE
: 
tm
 = 
TM_LE
; ;

479 : 
	`lua_as£π
(0);

481 *
«me
 = 
	`gë°r
(
	`G
(
L
)->
tm«me
[
tm
]);

483 
	}
}

494 
	$isö°ack
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
) {

495 
±rdiff_t
 
i
 = 
o
 - 
ci
->
u
.
l
.
ba£
;

496  (0 <
i
 && i < (
ci
->
t›
 - ci->
u
.
l
.
ba£
Ë&& ci->u.l.ba£ + i =
o
);

497 
	}
}

505 c⁄° *
	$gëupvÆ«me
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
,

506 c⁄° **
«me
) {

507 
LClosuª
 *
c
 = 
	`ci_func
(
ci
);

508 
i
;

509 
i
 = 0; i < 
c
->
nupvÆues
; i++) {

510 i‡(
c
->
upvÆs
[
i
]->
v
 =
o
) {

511 *
«me
 = 
	`upvÆ«me
(
c
->
p
, 
i
);

515  
NULL
;

516 
	}
}

519 c⁄° *
	$v¨öfo
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
) {

520 c⁄° *
«me
 = 
NULL
;

521 
CÆlInfo
 *
ci
 = 
L
->ci;

522 c⁄° *
köd
 = 
NULL
;

523 i‡(
	`isLua
(
ci
)) {

524 
köd
 = 
	`gëupvÆ«me
(
ci
, 
o
, &
«me
);

525 i‡(!
köd
 && 
	`isö°ack
(
ci
, 
o
))

526 
köd
 = 
	`gëobj«me
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci),

527 
	`ˇ°_öt
(
o
 - 
ci
->
u
.
l
.
ba£
), &
«me
);

529  (
köd
Ë? 
	`luaO_pushf°rög
(
L
, " (%†'%s')", köd, 
«me
) : "";

530 
	}
}

533 
l_n‹ë
 
	$luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, c⁄° *
›
) {

534 c⁄° *
t
 = 
	`objty≥«me
(
o
);

535 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿ%†®%†vÆue%s", 
›
, 
t
, 
	`v¨öfo
(L, 
o
));

536 
	}
}

539 
l_n‹ë
 
	$luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

540 i‡(
	`âis°rög
(
p1
Ë|| 
	`cvt2°r
’1)Ëp1 = 
p2
;

541 
	`luaG_ty≥îr‹
(
L
, 
p1
, "concatenate");

542 
	}
}

545 
l_n‹ë
 
	$luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

546 c⁄° 
TVÆue
 *
p2
, c⁄° *
msg
) {

547 
lua_Numbî
 
ãmp
;

548 i‡(!
	`t⁄umbî
(
p1
, &
ãmp
))

549 
p2
 = 
p1
;

550 
	`luaG_ty≥îr‹
(
L
, 
p2
, 
msg
);

551 
	}
}

557 
l_n‹ë
 
	$luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

558 
lua_I¡egî
 
ãmp
;

559 i‡(!
	`toöãgî
(
p1
, &
ãmp
))

560 
p2
 = 
p1
;

561 
	`luaG_ru√º‹
(
L
, "numbî%†ha†nÿöãgîÑïª£¡©i⁄", 
	`v¨öfo
(L, 
p2
));

562 
	}
}

565 
l_n‹ë
 
	$luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

566 c⁄° *
t1
 = 
	`objty≥«me
(
p1
);

567 c⁄° *
t2
 = 
	`objty≥«me
(
p2
);

568 i‡(
t1
 =
t2
)

569 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ªÅwÿ%†vÆues", 
t1
);

571 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ª %†wôh %s", 
t1
, 
t2
);

572 
	}
}

575 
	$addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
) {

576 
CÆlInfo
 *
ci
 = 
L
->ci;

577 i‡(
	`isLua
(
ci
)) {

578 
buff
[
LUA_IDSIZE
];

579 
löe
 = 
	`cuºíéöe
(
ci
);

580 
TSåög
 *
§c
 = 
	`ci_func
(
ci
)->
p
->
sour˚
;

581 i‡(
§c
)

582 
	`luaO_chunkid
(
buff
, 
	`gë°r
(
§c
), 
LUA_IDSIZE
);

584 
buff
[0] = '?'; buff[1] = '\0';

586 
	`luaO_pushf°rög
(
L
, "%s:%d: %s", 
buff
, 
löe
, 
msg
);

588 
	}
}

591 
l_n‹ë
 
	$luaG_îr‹msg
 (
lua_Sèã
 *
L
) {

592 i‡(
L
->
îrfunc
 != 0) {

593 
StkId
 
îrfunc
 = 
	`ª°‹e°ack
(
L
, L->errfunc);

594 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

595 
	`£tobjs2s
(
L
, L->
t›
 - 1, 
îrfunc
);

596 
L
->
t›
++;

597 
	`luaD_ˇŒ
(
L
, L->
t›
 - 2, 1, 0);

599 
	`luaD_throw
(
L
, 
LUA_ERRRUN
);

600 
	}
}

603 
l_n‹ë
 
	$luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

604 
va_li°
 
¨gp
;

605 
	`va_°¨t
(
¨gp
, 
fmt
);

606 
	`addöfo
(
L
, 
	`luaO_pushvf°rög
(L, 
fmt
, 
¨gp
));

607 
	`va_íd
(
¨gp
);

608 
	`luaG_îr‹msg
(
L
);

609 
	}
}

612 
	$luaG_åa˚exec
 (
lua_Sèã
 *
L
) {

613 
CÆlInfo
 *
ci
 = 
L
->ci;

614 
lu_byã
 
mask
 = 
L
->
hookmask
;

615 
cou¡hook
 = ((
mask
 & 
LUA_MASKCOUNT
Ë&& 
L
->
hookcou¡
 == 0);

616 i‡(
cou¡hook
)

617 
	`ª£thookcou¡
(
L
);

618 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKYIELD
) {

619 
ci
->
ˇŒ°©us
 &~
CIST_HOOKYIELD
;

622 i‡(
cou¡hook
)

623 
	`luaD_hook
(
L
, 
LUA_HOOKCOUNT
, -1);

624 i‡(
mask
 & 
LUA_MASKLINE
) {

625 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

626 
≈c
 = 
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
p
);

627 
√wlöe
 = 
	`gëfun˛öe
(
p
, 
≈c
);

628 i‡(
≈c
 == 0 ||

629 
ci
->
u
.
l
.
ßvedpc
 <
L
->
ﬁdpc
 ||

630 
√wlöe
 !
	`gëfun˛öe
(
p
, 
	`pcRñ
(
L
->
ﬁdpc
,Ö)))

631 
	`luaD_hook
(
L
, 
LUA_HOOKLINE
, 
√wlöe
);

633 
L
->
ﬁdpc
 = 
ci
->
u
.
l
.
ßvedpc
;

634 i‡(
L
->
°©us
 =
LUA_YIELD
) {

635 i‡(
cou¡hook
)

636 
L
->
hookcou¡
 = 1;

637 
ci
->
u
.
l
.
ßvedpc
--;

638 
ci
->
ˇŒ°©us
 |
CIST_HOOKYIELD
;

639 
ci
->
func
 = 
L
->
t›
 - 1;

640 
	`luaD_throw
(
L
, 
LUA_YIELD
);

642 
	}
}

	@lib/archive/lua-5.3.0/src/ldebug.h

7 #i‚de‡
ldebug_h


8 
	#ldebug_h


	)

11 
	~"l°©e.h
"

14 
	#pcRñ
(
pc
, 
p
Ë(
	`ˇ°
(, (pcË- (p)->
code
Ë- 1)

	)

16 
	#gëfun˛öe
(
f
,
pc
Ë(((f)->
löeöfo
Ë? (f)->löeöfo[pc] : -1)

	)

18 
	#ª£thookcou¡
(
L
Ë(L->
hookcou¡
 = L->
ba£hookcou¡
)

	)

21 
	#ci_func
(
ci
Ë(
	`˛LvÆue
((ci)->
func
))

	)

24 
LUAI_FUNC
 
l_n‹ë
 
luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
,

25 c⁄° *
›«me
);

26 
LUAI_FUNC
 
l_n‹ë
 
luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

27 c⁄° 
TVÆue
 *
p2
);

28 
LUAI_FUNC
 
l_n‹ë
 
luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

29 c⁄° 
TVÆue
 *
p2
,

30 c⁄° *
msg
);

31 
LUAI_FUNC
 
l_n‹ë
 
luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

32 c⁄° 
TVÆue
 *
p2
);

33 
LUAI_FUNC
 
l_n‹ë
 
luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

34 c⁄° 
TVÆue
 *
p2
);

35 
LUAI_FUNC
 
l_n‹ë
 
luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

36 
LUAI_FUNC
 
l_n‹ë
 
luaG_îr‹msg
 (
lua_Sèã
 *
L
);

37 
LUAI_FUNC
 
luaG_åa˚exec
 (
lua_Sèã
 *
L
);

	@lib/archive/lua-5.3.0/src/ldo.c

7 
	#ldo_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<£tjmp.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"ldebug.h
"

21 
	~"ldo.h
"

22 
	~"lfunc.h
"

23 
	~"lgc.h
"

24 
	~"lmem.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"Õ¨£r.h
"

28 
	~"l°©e.h
"

29 
	~"l°rög.h
"

30 
	~"…abÀ.h
"

31 
	~"…m.h
"

32 
	~"lundump.h
"

33 
	~"lvm.h
"

34 
	~"lzio.h
"

38 
	#îr‹°©us
(
s
Ë((sË> 
LUA_YIELD
)

	)

53 #i‡!
deföed
(
LUAI_THROW
)

55 #i‡
deföed
(
__˝lu•lus
Ë&& !deföed(
LUA_USE_LONGJMP
)

58 
	#LUAI_THROW
(
L
,
c
Ë
	`throw
(c)

	)

59 
	#LUAI_TRY
(
L
,
c
,
a
) \

60 
åy
 { 
a
 } 
	`ˇtch
(...Ë{ i‡((
c
)->
°©us
 =0Ë(c)->°©u†-1; }

	)

61 
	#luai_jmpbuf
 

	)

63 #ñi‡
deföed
(
LUA_USE_POSIX
)

66 
	#LUAI_THROW
(
L
,
c
Ë
	`_l⁄gjmp
((c)->
b
, 1)

	)

67 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`_£tjmp
((c)->
b
Ë=0Ë{á }

	)

68 
	#luai_jmpbuf
 
jmp_buf


	)

73 
	#LUAI_THROW
(
L
,
c
Ë
	`l⁄gjmp
((c)->
b
, 1)

	)

74 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`£tjmp
((c)->
b
Ë=0Ë{á }

	)

75 
	#luai_jmpbuf
 
jmp_buf


	)

84 
	slua_l⁄gjmp
 {

85 
lua_l⁄gjmp
 *
	m¥evious
;

86 
luai_jmpbuf
 
	mb
;

87 vﬁ©ûê
	m°©us
;

91 
	$£ãº‹obj
 (
lua_Sèã
 *
L
, 
îrcode
, 
StkId
 
ﬁdt›
) {

92 
îrcode
) {

93 
LUA_ERRMEM
: {

94 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`G
(L)->
memîrmsg
);

97 
LUA_ERRERR
: {

98 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`luaS_√wlôîÆ
(L, "error inÉrror handling"));

102 
	`£tobjs2s
(
L
, 
ﬁdt›
, L->
t›
 - 1);

106 
L
->
t›
 = 
ﬁdt›
 + 1;

107 
	}
}

110 
l_n‹ë
 
	$luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
) {

111 i‡(
L
->
îr‹Jmp
) {

112 
L
->
îr‹Jmp
->
°©us
 = 
îrcode
;

113 
	`LUAI_THROW
(
L
, L->
îr‹Jmp
);

116 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

117 
L
->
°©us
 = 
	`ˇ°_byã
(
îrcode
);

118 i‡(
g
->
maöthªad
->
îr‹Jmp
) {

119 
	`£tobjs2s
(
L
, 
g
->
maöthªad
->
t›
++, L->top - 1);

120 
	`luaD_throw
(
g
->
maöthªad
, 
îrcode
);

123 i‡(
g
->
∑nic
) {

124 
	`£ãº‹obj
(
L
, 
îrcode
, L->
t›
);

125 i‡(
L
->
ci
->
t›
 < L->top)

126 
L
->
ci
->
t›
 = L->top;

127 
	`lua_u∆ock
(
L
);

128 
g
->
	`∑nic
(
L
);

130 
	`ab‹t
();

133 
	}
}

136 
	$luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
) {

137 
ﬁdnCˇŒs
 = 
L
->
nCˇŒs
;

138 
lua_l⁄gjmp
 
lj
;

139 
lj
.
°©us
 = 
LUA_OK
;

140 
lj
.
¥evious
 = 
L
->
îr‹Jmp
;

141 
L
->
îr‹Jmp
 = &
lj
;

142 
	`LUAI_TRY
(
L
, &
lj
,

143 (*
f
)(
L
, 
ud
);

145 
L
->
îr‹Jmp
 = 
lj
.
¥evious
;

146 
L
->
nCˇŒs
 = 
ﬁdnCˇŒs
;

147  
lj
.
°©us
;

148 
	}
}

153 
	$c‹ª˘°ack
 (
lua_Sèã
 *
L
, 
TVÆue
 *
ﬁd°ack
) {

154 
CÆlInfo
 *
ci
;

155 
UpVÆ
 *
up
;

156 
L
->
t›
 = (L->t› - 
ﬁd°ack
Ë+ L->
°ack
;

157 
up
 = 
L
->
›íupvÆ
; u∞!
NULL
; u∞up->
u
.
›í
.
√xt
)

158 
up
->
v
 = (up->v - 
ﬁd°ack
Ë+ 
L
->
°ack
;

159 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

160 
ci
->
t›
 = (ci->t› - 
ﬁd°ack
Ë+ 
L
->
°ack
;

161 
ci
->
func
 = (ci->fun¯- 
ﬁd°ack
Ë+ 
L
->
°ack
;

162 i‡(
	`isLua
(
ci
))

163 
ci
->
u
.
l
.
ba£
 = (ci->u.l.ba£ - 
ﬁd°ack
Ë+ 
L
->
°ack
;

165 
	}
}

169 
	#ERRORSTACKSIZE
 (
LUAI_MAXSTACK
 + 200)

	)

172 
	$luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
) {

173 
TVÆue
 *
ﬁd°ack
 = 
L
->
°ack
;

174 
lim
 = 
L
->
°acksize
;

175 
	`lua_as£π
(
√wsize
 <
LUAI_MAXSTACK
 ||Çewsizê=
ERRORSTACKSIZE
);

176 
	`lua_as£π
(
L
->
°ack_œ°
 - L->
°ack
 =L->
°acksize
 - 
EXTRA_STACK
);

177 
	`luaM_ªÆlocve˘‹
(
L
, L->
°ack
, L->
°acksize
, 
√wsize
, 
TVÆue
);

178 ; 
lim
 < 
√wsize
;Üim++)

179 
	`£äûvÆue
(
L
->
°ack
 + 
lim
);

180 
L
->
°acksize
 = 
√wsize
;

181 
L
->
°ack_œ°
 = L->
°ack
 + 
√wsize
 - 
EXTRA_STACK
;

182 
	`c‹ª˘°ack
(
L
, 
ﬁd°ack
);

183 
	}
}

186 
	$luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
) {

187 
size
 = 
L
->
°acksize
;

188 i‡(
size
 > 
LUAI_MAXSTACK
)

189 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

191 
√eded
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
n
 + 
EXTRA_STACK
;

192 
√wsize
 = 2 * 
size
;

193 i‡(
√wsize
 > 
LUAI_MAXSTACK
)Çewsize = LUAI_MAXSTACK;

194 i‡(
√wsize
 < 
√eded
)Çewsize =Çeeded;

195 i‡(
√wsize
 > 
LUAI_MAXSTACK
) {

196 
	`luaD_ªÆloc°ack
(
L
, 
ERRORSTACKSIZE
);

197 
	`luaG_ru√º‹
(
L
, "stack overflow");

200 
	`luaD_ªÆloc°ack
(
L
, 
√wsize
);

202 
	}
}

205 
	$°acköu£
 (
lua_Sèã
 *
L
) {

206 
CÆlInfo
 *
ci
;

207 
StkId
 
lim
 = 
L
->
t›
;

208 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

209 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

210 i‡(
lim
 < 
ci
->
t›
)Üim = ci->top;

212  
	`ˇ°_öt
(
lim
 - 
L
->
°ack
) + 1;

213 
	}
}

216 
	$luaD_shrök°ack
 (
lua_Sèã
 *
L
) {

217 
öu£
 = 
	`°acköu£
(
L
);

218 
goodsize
 = 
öu£
 + (öu£ / 8Ë+ 2*
EXTRA_STACK
;

219 i‡(
goodsize
 > 
LUAI_MAXSTACK
) goodsize = LUAI_MAXSTACK;

220 i‡(
L
->
°acksize
 > 
LUAI_MAXSTACK
)

221 
	`luaE_‰ìCI
(
L
);

223 
	`luaE_shrökCI
(
L
);

224 i‡(
öu£
 > 
LUAI_MAXSTACK
 ||

225 
goodsize
 >
L
->
°acksize
)

226 
	`c⁄dmove°ack
(
L
);

228 
	`luaD_ªÆloc°ack
(
L
, 
goodsize
);

229 
	}
}

232 
	$luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
) {

233 
lua_Hook
 
hook
 = 
L
->hook;

234 i‡(
hook
 && 
L
->
Ælowhook
) {

235 
CÆlInfo
 *
ci
 = 
L
->ci;

236 
±rdiff_t
 
t›
 = 
	`ßve°ack
(
L
, L->top);

237 
±rdiff_t
 
ci_t›
 = 
	`ßve°ack
(
L
, 
ci
->
t›
);

238 
lua_Debug
 
¨
;

239 
¨
.
evít
 =Évent;

240 
¨
.
cuºíéöe
 = 
löe
;

241 
¨
.
i_ci
 = 
ci
;

242 
	`luaD_check°ack
(
L
, 
LUA_MINSTACK
);

243 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

244 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

245 
L
->
Ælowhook
 = 0;

246 
ci
->
ˇŒ°©us
 |
CIST_HOOKED
;

247 
	`lua_u∆ock
(
L
);

248 (*
hook
)(
L
, &
¨
);

249 
	`lua_lock
(
L
);

250 
	`lua_as£π
(!
L
->
Ælowhook
);

251 
L
->
Ælowhook
 = 1;

252 
ci
->
t›
 = 
	`ª°‹e°ack
(
L
, 
ci_t›
);

253 
L
->
t›
 = 
	`ª°‹e°ack
(L,Åop);

254 
ci
->
ˇŒ°©us
 &~
CIST_HOOKED
;

256 
	}
}

259 
	$ˇŒhook
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
) {

260 
hook
 = 
LUA_HOOKCALL
;

261 
ci
->
u
.
l
.
ßvedpc
++;

262 i‡(
	`isLua
(
ci
->
¥evious
) &&

263 
	`GET_OPCODE
(*(
ci
->
¥evious
->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_TAILCALL
) {

264 
ci
->
ˇŒ°©us
 |
CIST_TAIL
;

265 
hook
 = 
LUA_HOOKTAILCALL
;

267 
	`luaD_hook
(
L
, 
hook
, -1);

268 
ci
->
u
.
l
.
ßvedpc
--;

269 
	}
}

272 
StkId
 
	$adju°_v¨¨gs
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
a˘uÆ
) {

273 
i
;

274 
nfix¨gs
 = 
p
->
num∑øms
;

275 
StkId
 
ba£
, 
fixed
;

276 
	`lua_as£π
(
a˘uÆ
 >
nfix¨gs
);

278 
	`luaD_check°ack
(
L
, 
p
->
max°acksize
);

279 
fixed
 = 
L
->
t›
 - 
a˘uÆ
;

280 
ba£
 = 
L
->
t›
;

281 
i
=0; i<
nfix¨gs
; i++) {

282 
	`£tobjs2s
(
L
, L->
t›
++, 
fixed
 + 
i
);

283 
	`£äûvÆue
(
fixed
 + 
i
);

285  
ba£
;

286 
	}
}

294 
	$åyfuncTM
 (
lua_Sèã
 *
L
, 
StkId
 
func
) {

295 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
func
, 
TM_CALL
);

296 
StkId
 
p
;

297 i‡(!
	`âisfun˘i⁄
(
tm
))

298 
	`luaG_ty≥îr‹
(
L
, 
func
, "call");

300 
p
 = 
L
->
t›
;Ö > 
func
;Ö--)

301 
	`£tobjs2s
(
L
, 
p
,Ö-1);

302 
L
->
t›
++;

303 
	`£tobj2s
(
L
, 
func
, 
tm
);

304 
	}
}

308 
	#√xt_ci
(
L
Ë(L->
ci
 = (L->ci->
√xt
 ? L->ci->√xà: 
	`luaE_exãndCI
(L)))

	)

314 
	$luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
) {

315 
lua_CFun˘i⁄
 
f
;

316 
CÆlInfo
 *
ci
;

317 
n
;

318 
±rdiff_t
 
fun¸
 = 
	`ßve°ack
(
L
, 
func
);

319 
	`ây≥
(
func
)) {

320 
LUA_TLCF
:

321 
f
 = 
	`fvÆue
(
func
);

322 
Cfunc
;

323 
LUA_TCCL
: {

324 
f
 = 
	`˛CvÆue
(
func
)->f;

325 
Cfunc
:

326 
	`luaD_check°ack
(
L
, 
LUA_MINSTACK
);

327 
ci
 = 
	`√xt_ci
(
L
);

328 
ci
->
ƒesu…s
 =Çresults;

329 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, 
fun¸
);

330 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

331 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

332 
ci
->
ˇŒ°©us
 = 0;

333 
	`luaC_checkGC
(
L
);

334 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

335 
	`luaD_hook
(
L
, 
LUA_HOOKCALL
, -1);

336 
	`lua_u∆ock
(
L
);

337 
n
 = (*
f
)(
L
);

338 
	`lua_lock
(
L
);

339 
	`≠i_check√Àms
(
L
, 
n
);

340 
	`luaD_posˇŒ
(
L
, L->
t›
 - 
n
);

343 
LUA_TLCL
: {

344 
StkId
 
ba£
;

345 
PrŸo
 *
p
 = 
	`˛LvÆue
(
func
)->p;

346 
n
 = 
	`ˇ°_öt
(
L
->
t›
 - 
func
) - 1;

347 
	`luaD_check°ack
(
L
, 
p
->
max°acksize
);

348 ; 
n
 < 
p
->
num∑øms
;Ç++)

349 
	`£äûvÆue
(
L
->
t›
++);

350 i‡(!
p
->
is_v¨¨g
) {

351 
func
 = 
	`ª°‹e°ack
(
L
, 
fun¸
);

352 
ba£
 = 
func
 + 1;

355 
ba£
 = 
	`adju°_v¨¨gs
(
L
, 
p
, 
n
);

356 
func
 = 
	`ª°‹e°ack
(
L
, 
fun¸
);

358 
ci
 = 
	`√xt_ci
(
L
);

359 
ci
->
ƒesu…s
 =Çresults;

360 
ci
->
func
 = func;

361 
ci
->
u
.
l
.
ba£
 = base;

362 
ci
->
t›
 = 
ba£
 + 
p
->
max°acksize
;

363 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

364 
ci
->
u
.
l
.
ßvedpc
 = 
p
->
code
;

365 
ci
->
ˇŒ°©us
 = 
CIST_LUA
;

366 
L
->
t›
 = 
ci
->top;

367 
	`luaC_checkGC
(
L
);

368 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

369 
	`ˇŒhook
(
L
, 
ci
);

373 
	`luaD_check°ack
(
L
, 1);

374 
func
 = 
	`ª°‹e°ack
(
L
, 
fun¸
);

375 
	`åyfuncTM
(
L
, 
func
);

376  
	`luaD_¥eˇŒ
(
L
, 
func
, 
ƒesu…s
);

379 
	}
}

382 
	$luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
fú°Resu…
) {

383 
StkId
 
ªs
;

384 
w™ãd
, 
i
;

385 
CÆlInfo
 *
ci
 = 
L
->ci;

386 i‡(
L
->
hookmask
 & (
LUA_MASKRET
 | 
LUA_MASKLINE
)) {

387 i‡(
L
->
hookmask
 & 
LUA_MASKRET
) {

388 
±rdiff_t
 
‰
 = 
	`ßve°ack
(
L
, 
fú°Resu…
);

389 
	`luaD_hook
(
L
, 
LUA_HOOKRET
, -1);

390 
fú°Resu…
 = 
	`ª°‹e°ack
(
L
, 
‰
);

392 
L
->
ﬁdpc
 = 
ci
->
¥evious
->
u
.
l
.
ßvedpc
;

394 
ªs
 = 
ci
->
func
;

395 
w™ãd
 = 
ci
->
ƒesu…s
;

396 
L
->
ci
 = còci->
¥evious
;

398 
i
 = 
w™ãd
; i !0 && 
fú°Resu…
 < 
L
->
t›
; i--)

399 
	`£tobjs2s
(
L
, 
ªs
++, 
fú°Resu…
++);

400 
i
-- > 0)

401 
	`£äûvÆue
(
ªs
++);

402 
L
->
t›
 = 
ªs
;

403  (
w™ãd
 - 
LUA_MULTRET
);

404 
	}
}

413 
	$luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
, 
Ælowyõld
) {

414 i‡(++
L
->
nCˇŒs
 >
LUAI_MAXCCALLS
) {

415 i‡(
L
->
nCˇŒs
 =
LUAI_MAXCCALLS
)

416 
	`luaG_ru√º‹
(
L
, "C stack overflow");

417 i‡(
L
->
nCˇŒs
 >(
LUAI_MAXCCALLS
 + (LUAI_MAXCCALLS>>3)))

418 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

420 i‡(!
Ælowyõld
Ë
L
->
¬y
++;

421 i‡(!
	`luaD_¥eˇŒ
(
L
, 
func
, 
nResu…s
))

422 
	`luaV_execuã
(
L
);

423 i‡(!
Ælowyõld
Ë
L
->
¬y
--;

424 
L
->
nCˇŒs
--;

425 
	}
}

432 
	$föishCˇŒ
 (
lua_Sèã
 *
L
, 
°©us
) {

433 
CÆlInfo
 *
ci
 = 
L
->ci;

434 
n
;

436 
	`lua_as£π
(
ci
->
u
.
c
.
k
 !
NULL
 && 
L
->
¬y
 == 0);

438 
	`lua_as£π
((
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
Ë|| 
°©us
 =
LUA_YIELD
);

439 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
) {

440 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

441 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

445 
	`adju°ªsu…s
(
L
, 
ci
->
ƒesu…s
);

447 
	`lua_u∆ock
(
L
);

448 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
°©us
, ci->u.c.
˘x
);

449 
	`lua_lock
(
L
);

450 
	`≠i_check√Àms
(
L
, 
n
);

452 
	`luaD_posˇŒ
(
L
, L->
t›
 - 
n
);

453 
	}
}

464 
	$uƒﬁl
 (
lua_Sèã
 *
L
, *
ud
) {

465 i‡(
ud
 !
NULL
)

466 
	`föishCˇŒ
(
L
, *(*)
ud
);

467 
L
->
ci
 !&L->
ba£_ci
) {

468 i‡(!
	`isLua
(
L
->
ci
))

469 
	`föishCˇŒ
(
L
, 
LUA_YIELD
);

471 
	`luaV_föishOp
(
L
);

472 
	`luaV_execuã
(
L
);

475 
	}
}

482 
CÆlInfo
 *
	$födpˇŒ
 (
lua_Sèã
 *
L
) {

483 
CÆlInfo
 *
ci
;

484 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

485 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
)

486  
ci
;

488  
NULL
;

489 
	}
}

497 
	$ªcovî
 (
lua_Sèã
 *
L
, 
°©us
) {

498 
StkId
 
ﬁdt›
;

499 
CÆlInfo
 *
ci
 = 
	`födpˇŒ
(
L
);

500 i‡(
ci
 =
NULL
)  0;

502 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ci
->
exåa
);

503 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

504 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

505 
L
->
ci
 = ci;

506 
L
->
Ælowhook
 = 
	`gëﬂh
(
ci
->
ˇŒ°©us
);

507 
L
->
¬y
 = 0;

508 
	`luaD_shrök°ack
(
L
);

509 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

511 
	}
}

519 
l_n‹ë
 
	$ªsume_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
StkId
 
fú°Arg
) {

520 
L
->
t›
 = 
fú°Arg
;

521 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√w
(L, 
msg
));

522 
	`≠i_ö¸_t›
(
L
);

523 
	`luaD_throw
(
L
, -1);

524 
	}
}

534 
	$ªsume
 (
lua_Sèã
 *
L
, *
ud
) {

535 
nCˇŒs
 = 
L
->nCcalls;

536 
StkId
 
fú°Arg
 = 
	`ˇ°
(StkId, 
ud
);

537 
CÆlInfo
 *
ci
 = 
L
->ci;

538 i‡(
nCˇŒs
 >
LUAI_MAXCCALLS
)

539 
	`ªsume_îr‹
(
L
, "C sèck ovîÊow", 
fú°Arg
);

540 i‡(
L
->
°©us
 =
LUA_OK
) {

541 i‡(
ci
 !&
L
->
ba£_ci
)

542 
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumên⁄-su•íded c‹outöe", 
fú°Arg
);

544 i‡(!
	`luaD_¥eˇŒ
(
L
, 
fú°Arg
 - 1, 
LUA_MULTRET
))

545 
	`luaV_execuã
(
L
);

547 i‡(
L
->
°©us
 !
LUA_YIELD
)

548 
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumêdód c‹outöe", 
fú°Arg
);

550 
L
->
°©us
 = 
LUA_OK
;

551 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

552 i‡(
	`isLua
(
ci
))

553 
	`luaV_execuã
(
L
);

555 i‡(
ci
->
u
.
c
.
k
 !
NULL
) {

556 
n
;

557 
	`lua_u∆ock
(
L
);

558 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
LUA_YIELD
, ci->u.c.
˘x
);

559 
	`lua_lock
(
L
);

560 
	`≠i_check√Àms
(
L
, 
n
);

561 
fú°Arg
 = 
L
->
t›
 - 
n
;

563 
	`luaD_posˇŒ
(
L
, 
fú°Arg
);

565 
	`uƒﬁl
(
L
, 
NULL
);

567 
	`lua_as£π
(
nCˇŒs
 =
L
->nCcalls);

568 
	}
}

571 
LUA_API
 
	$lua_ªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rgs
) {

572 
°©us
;

573 
ﬁd¬y
 = 
L
->
¬y
;

574 
	`lua_lock
(
L
);

575 
	`luai_u£r°©îesume
(
L
, 
«rgs
);

576 
L
->
nCˇŒs
 = (
‰om
) ? from->nCcalls + 1 : 1;

577 
L
->
¬y
 = 0;

578 
	`≠i_check√Àms
(
L
, (L->
°©us
 =
LUA_OK
Ë? 
«rgs
 + 1 :Çargs);

579 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
ªsume
, L->
t›
 - 
«rgs
);

580 i‡(
°©us
 == -1)

581 
°©us
 = 
LUA_ERRRUN
;

583 
	`îr‹°©us
(
°©us
Ë&& 
	`ªcovî
(
L
, status)) {

585 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
uƒﬁl
, &status);

587 i‡(
	`îr‹°©us
(
°©us
)) {

588 
L
->
°©us
 = 
	`ˇ°_byã
(status);

589 
	`£ãº‹obj
(
L
, 
°©us
, L->
t›
);

590 
L
->
ci
->
t›
 = L->top;

592 
	`lua_as£π
(
°©us
 =
L
->status);

594 
L
->
¬y
 = 
ﬁd¬y
;

595 
L
->
nCˇŒs
--;

596 
	`lua_as£π
(
L
->
nCˇŒs
 =((
‰om
) ? from->nCcalls : 0));

597 
	`lua_u∆ock
(
L
);

598  
°©us
;

599 
	}
}

602 
LUA_API
 
	$lua_isyõldabÀ
 (
lua_Sèã
 *
L
) {

603  (
L
->
¬y
 == 0);

604 
	}
}

607 
LUA_API
 
	$lua_yõldk
 (
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

608 
lua_KFun˘i⁄
 
k
) {

609 
CÆlInfo
 *
ci
 = 
L
->ci;

610 
	`luai_u£r°©eyõld
(
L
, 
ƒesu…s
);

611 
	`lua_lock
(
L
);

612 
	`≠i_check√Àms
(
L
, 
ƒesu…s
);

613 i‡(
L
->
¬y
 > 0) {

614 i‡(
L
 !
	`G
(L)->
maöthªad
)

615 
	`luaG_ru√º‹
(
L
, "attemptÅo yieldácrossá C-call boundary");

617 
	`luaG_ru√º‹
(
L
, "attemptÅo yield from outsideá coroutine");

619 
L
->
°©us
 = 
LUA_YIELD
;

620 
ci
->
exåa
 = 
	`ßve°ack
(
L
, ci->
func
);

621 i‡(
	`isLua
(
ci
)) {

622 
	`≠i_check
(
k
 =
NULL
, "hooks cannot continueáfter yielding");

625 i‡((
ci
->
u
.
c
.
k
 = kË!
NULL
)

626 
ci
->
u
.
c
.
˘x
 = ctx;

627 
ci
->
func
 = 
L
->
t›
 - 
ƒesu…s
 - 1;

628 
	`luaD_throw
(
L
, 
LUA_YIELD
);

630 
	`lua_as£π
(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
);

631 
	`lua_u∆ock
(
L
);

633 
	}
}

636 
	$luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

637 
±rdiff_t
 
ﬁd_t›
,Öådiff_à
ef
) {

638 
°©us
;

639 
CÆlInfo
 *
ﬁd_ci
 = 
L
->
ci
;

640 
lu_byã
 
ﬁd_Ælowhooks
 = 
L
->
Ælowhook
;

641 
ﬁd_¬y
 = 
L
->
¬y
;

642 
±rdiff_t
 
ﬁd_îrfunc
 = 
L
->
îrfunc
;

643 
L
->
îrfunc
 = 
ef
;

644 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
func
, 
u
);

645 i‡(
°©us
 !
LUA_OK
) {

646 
StkId
 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ﬁd_t›
);

647 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

648 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

649 
L
->
ci
 = 
ﬁd_ci
;

650 
L
->
Ælowhook
 = 
ﬁd_Ælowhooks
;

651 
L
->
¬y
 = 
ﬁd_¬y
;

652 
	`luaD_shrök°ack
(
L
);

654 
L
->
îrfunc
 = 
ﬁd_îrfunc
;

655  
°©us
;

656 
	}
}

663 
	sSP¨£r
 {

664 
ZIO
 *
	mz
;

665 
Mbuf„r
 
	mbuff
;

666 
Dynd©a
 
	mdyd
;

667 c⁄° *
	mmode
;

668 c⁄° *
	m«me
;

672 
	$checkmode
 (
lua_Sèã
 *
L
, c⁄° *
mode
, c⁄° *
x
) {

673 i‡(
mode
 && 
	`°rchr
(mode, 
x
[0]Ë=
NULL
) {

674 
	`luaO_pushf°rög
(
L
,

675 "©ãm±Åÿlﬂdá %†chunk (modêi†'%s')", 
x
, 
mode
);

676 
	`luaD_throw
(
L
, 
LUA_ERRSYNTAX
);

678 
	}
}

681 
	$f_∑r£r
 (
lua_Sèã
 *
L
, *
ud
) {

682 
LClosuª
 *
˛
;

683 
SP¨£r
 *
p
 = 
	`ˇ°
(SP¨£∏*, 
ud
);

684 
c
 = 
	`zgëc
(
p
->
z
);

685 i‡(
c
 =
LUA_SIGNATURE
[0]) {

686 
	`checkmode
(
L
, 
p
->
mode
, "binary");

687 
˛
 = 
	`luaU_undump
(
L
, 
p
->
z
, &p->
buff
,Ö->
«me
);

690 
	`checkmode
(
L
, 
p
->
mode
, "text");

691 
˛
 = 
	`luaY_∑r£r
(
L
, 
p
->
z
, &p->
buff
, &p->
dyd
,Ö->
«me
, 
c
);

693 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

694 
	`luaF_öôupvÆs
(
L
, 
˛
);

695 
	}
}

698 
	$luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

699 c⁄° *
mode
) {

700 
SP¨£r
 
p
;

701 
°©us
;

702 
L
->
¬y
++;

703 
p
.
z
 = z;Ö.
«me
 =Çame;Ö.
mode
 = mode;

704 
p
.
dyd
.
a˘v¨
.
¨r
 = 
NULL
;Ö.dyd.a˘v¨.
size
 = 0;

705 
p
.
dyd
.
gt
.
¨r
 = 
NULL
;Ö.dyd.gt.
size
 = 0;

706 
p
.
dyd
.
œbñ
.
¨r
 = 
NULL
;Ö.dyd.œbñ.
size
 = 0;

707 
	`luaZ_öôbuf„r
(
L
, &
p
.
buff
);

708 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_∑r£r
, &
p
, 
	`ßve°ack
(L, L->
t›
), L->
îrfunc
);

709 
	`luaZ_‰ìbuf„r
(
L
, &
p
.
buff
);

710 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
a˘v¨
.
¨r
,Ö.dyd.a˘v¨.
size
);

711 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
gt
.
¨r
,Ö.dyd.gt.
size
);

712 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
œbñ
.
¨r
,Ö.dyd.œbñ.
size
);

713 
L
->
¬y
--;

714  
°©us
;

715 
	}
}

	@lib/archive/lua-5.3.0/src/ldo.h

7 #i‚de‡
ldo_h


8 
	#ldo_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

13 
	~"lzio.h
"

16 
	#luaD_check°ack
(
L
,
n
Ëi‡(L->
°ack_œ°
 - L->
t›
 <= (n)) \

17 
	`luaD_grow°ack
(
L
, 
n
); 
	`c⁄dmove°ack
(L);

	)

20 
	#ö¸_t›
(
L
Ë{L->
t›
++; 
	`luaD_check°ack
(L,0);}

	)

22 
	#ßve°ack
(
L
,
p
Ë((*)’Ë- (*)L->
°ack
)

	)

23 
	#ª°‹e°ack
(
L
,
n
Ë((
TVÆue
 *)((*)L->
°ack
 + (n)))

	)

27 (*
	tPfunc
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
);

29 
LUAI_FUNC
 
	`luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

30 c⁄° *
mode
);

31 
LUAI_FUNC
 
	`luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
);

32 
LUAI_FUNC
 
	`luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
);

33 
LUAI_FUNC
 
	`luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
,

34 
Ælowyõld
);

35 
LUAI_FUNC
 
	`luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

36 
±rdiff_t
 
ﬁdt›
,Öådiff_à
ef
);

37 
LUAI_FUNC
 
	`luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
fú°Resu…
);

38 
LUAI_FUNC
 
	`luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
);

39 
LUAI_FUNC
 
	`luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
);

40 
LUAI_FUNC
 
	`luaD_shrök°ack
 (
lua_Sèã
 *
L
);

42 
LUAI_FUNC
 
l_n‹ë
 
	`luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
);

43 
LUAI_FUNC
 
	`luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
);

	@lib/archive/lua-5.3.0/src/ldump.c

7 
	#ldump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lobje˘.h
"

18 
	~"l°©e.h
"

19 
	~"lundump.h
"

23 
lua_Sèã
 *
	mL
;

24 
lua_Wrôî
 
	mwrôî
;

25 *
	md©a
;

26 
	m°rù
;

27 
	m°©us
;

28 } 
	tDumpSèã
;

35 
	#DumpVe˘‹
(
v
,
n
,
D
Ë
	`DumpBlock
(v,“)*((v)[0]),D)

	)

37 
	#DumpLôîÆ
(
s
,
D
Ë
	`DumpBlock
(s, (sË- (), D)

	)

40 
	$DumpBlock
 (c⁄° *
b
, 
size_t
 
size
, 
DumpSèã
 *
D
) {

41 i‡(
D
->
°©us
 == 0) {

42 
	`lua_u∆ock
(
D
->
L
);

43 
D
->
°©us
 = (*D->
wrôî
)(D->
L
, 
b
, 
size
, D->
d©a
);

44 
	`lua_lock
(
D
->
L
);

46 
	}
}

49 
	#DumpV¨
(
x
,
D
Ë
	`DumpVe˘‹
(&x,1,D)

	)

52 
	$DumpByã
 (
y
, 
DumpSèã
 *
D
) {

53 
lu_byã
 
x
 = (lu_byã)
y
;

54 
	`DumpV¨
(
x
, 
D
);

55 
	}
}

58 
	$DumpI¡
 (
x
, 
DumpSèã
 *
D
) {

59 
	`DumpV¨
(
x
, 
D
);

60 
	}
}

63 
	$DumpNumbî
 (
lua_Numbî
 
x
, 
DumpSèã
 *
D
) {

64 
	`DumpV¨
(
x
, 
D
);

65 
	}
}

68 
	$DumpI¡egî
 (
lua_I¡egî
 
x
, 
DumpSèã
 *
D
) {

69 
	`DumpV¨
(
x
, 
D
);

70 
	}
}

73 
	$DumpSåög
 (c⁄° 
TSåög
 *
s
, 
DumpSèã
 *
D
) {

74 i‡(
s
 =
NULL
)

75 
	`DumpByã
(0, 
D
);

77 
size_t
 
size
 = 
s
->
Àn
 + 1;

78 i‡(
size
 < 0xFF)

79 
	`DumpByã
(
	`ˇ°_öt
(
size
), 
D
);

81 
	`DumpByã
(0xFF, 
D
);

82 
	`DumpV¨
(
size
, 
D
);

84 
	`DumpVe˘‹
(
	`gë°r
(
s
), 
size
 - 1, 
D
);

86 
	}
}

89 
	$DumpCode
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

90 
	`DumpI¡
(
f
->
sizecode
, 
D
);

91 
	`DumpVe˘‹
(
f
->
code
, f->
sizecode
, 
D
);

92 
	}
}

95 
DumpFun˘i⁄
(c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
);

97 
	$DumpC⁄°™ts
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

98 
i
;

99 
n
 = 
f
->
sizek
;

100 
	`DumpI¡
(
n
, 
D
);

101 
i
 = 0; i < 
n
; i++) {

102 c⁄° 
TVÆue
 *
o
 = &
f
->
k
[
i
];

103 
	`DumpByã
(
	`ây≥
(
o
), 
D
);

104 
	`ây≥
(
o
)) {

105 
LUA_TNIL
:

107 
LUA_TBOOLEAN
:

108 
	`DumpByã
(
	`bvÆue
(
o
), 
D
);

110 
LUA_TNUMFLT
:

111 
	`DumpNumbî
(
	`ÊtvÆue
(
o
), 
D
);

113 
LUA_TNUMINT
:

114 
	`DumpI¡egî
(
	`ivÆue
(
o
), 
D
);

116 
LUA_TSHRSTR
:

117 
LUA_TLNGSTR
:

118 
	`DumpSåög
(
	`tsvÆue
(
o
), 
D
);

121 
	`lua_as£π
(0);

124 
	}
}

127 
	$DumpPrŸos
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

128 
i
;

129 
n
 = 
f
->
sizï
;

130 
	`DumpI¡
(
n
, 
D
);

131 
i
 = 0; i < 
n
; i++)

132 
	`DumpFun˘i⁄
(
f
->
p
[
i
], f->
sour˚
, 
D
);

133 
	}
}

136 
	$DumpUpvÆues
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

137 
i
, 
n
 = 
f
->
sizeupvÆues
;

138 
	`DumpI¡
(
n
, 
D
);

139 
i
 = 0; i < 
n
; i++) {

140 
	`DumpByã
(
f
->
upvÆues
[
i
].
ö°ack
, 
D
);

141 
	`DumpByã
(
f
->
upvÆues
[
i
].
idx
, 
D
);

143 
	}
}

146 
	$DumpDebug
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

147 
i
, 
n
;

148 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñöeöfo
;

149 
	`DumpI¡
(
n
, 
D
);

150 
	`DumpVe˘‹
(
f
->
löeöfo
, 
n
, 
D
);

151 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñocv¨s
;

152 
	`DumpI¡
(
n
, 
D
);

153 
i
 = 0; i < 
n
; i++) {

154 
	`DumpSåög
(
f
->
locv¨s
[
i
].
v¨«me
, 
D
);

155 
	`DumpI¡
(
f
->
locv¨s
[
i
].
°¨çc
, 
D
);

156 
	`DumpI¡
(
f
->
locv¨s
[
i
].
ídpc
, 
D
);

158 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizeupvÆues
;

159 
	`DumpI¡
(
n
, 
D
);

160 
i
 = 0; i < 
n
; i++)

161 
	`DumpSåög
(
f
->
upvÆues
[
i
].
«me
, 
D
);

162 
	}
}

165 
	$DumpFun˘i⁄
 (c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
) {

166 i‡(
D
->
°rù
 || 
f
->
sour˚
 =
psour˚
)

167 
	`DumpSåög
(
NULL
, 
D
);

169 
	`DumpSåög
(
f
->
sour˚
, 
D
);

170 
	`DumpI¡
(
f
->
löedeföed
, 
D
);

171 
	`DumpI¡
(
f
->
œ°löedeföed
, 
D
);

172 
	`DumpByã
(
f
->
num∑øms
, 
D
);

173 
	`DumpByã
(
f
->
is_v¨¨g
, 
D
);

174 
	`DumpByã
(
f
->
max°acksize
, 
D
);

175 
	`DumpCode
(
f
, 
D
);

176 
	`DumpC⁄°™ts
(
f
, 
D
);

177 
	`DumpUpvÆues
(
f
, 
D
);

178 
	`DumpPrŸos
(
f
, 
D
);

179 
	`DumpDebug
(
f
, 
D
);

180 
	}
}

183 
	$DumpHódî
 (
DumpSèã
 *
D
) {

184 
	`DumpLôîÆ
(
LUA_SIGNATURE
, 
D
);

185 
	`DumpByã
(
LUAC_VERSION
, 
D
);

186 
	`DumpByã
(
LUAC_FORMAT
, 
D
);

187 
	`DumpLôîÆ
(
LUAC_DATA
, 
D
);

188 
	`DumpByã
((), 
D
);

189 
	`DumpByã
((
size_t
), 
D
);

190 
	`DumpByã
((
In°ru˘i⁄
), 
D
);

191 
	`DumpByã
((
lua_I¡egî
), 
D
);

192 
	`DumpByã
((
lua_Numbî
), 
D
);

193 
	`DumpI¡egî
(
LUAC_INT
, 
D
);

194 
	`DumpNumbî
(
LUAC_NUM
, 
D
);

195 
	}
}

201 
	$luaU_dump
(
lua_Sèã
 *
L
, c⁄° 
PrŸo
 *
f
, 
lua_Wrôî
 
w
, *
d©a
,

202 
°rù
) {

203 
DumpSèã
 
D
;

204 
D
.
L
 = L;

205 
D
.
wrôî
 = 
w
;

206 
D
.
d©a
 = data;

207 
D
.
°rù
 = strip;

208 
D
.
°©us
 = 0;

209 
	`DumpHódî
(&
D
);

210 
	`DumpByã
(
f
->
sizeupvÆues
, &
D
);

211 
	`DumpFun˘i⁄
(
f
, 
NULL
, &
D
);

212  
D
.
°©us
;

213 
	}
}

	@lib/archive/lua-5.3.0/src/lfunc.c

7 
	#lfunc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lfunc.h
"

18 
	~"lgc.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

25 
CClosuª
 *
	$luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

26 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TCCL
, 
	`sizeC˛osuª
(
n
));

27 
CClosuª
 *
c
 = 
	`gco2c˛
(
o
);

28 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

29  
c
;

30 
	}
}

33 
LClosuª
 *
	$luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

34 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TLCL
, 
	`sizeL˛osuª
(
n
));

35 
LClosuª
 *
c
 = 
	`gco2l˛
(
o
);

36 
c
->
p
 = 
NULL
;

37 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

38 
n
--Ë
c
->
upvÆs
[n] = 
NULL
;

39  
c
;

40 
	}
}

45 
	$luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

46 
i
;

47 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

48 
UpVÆ
 *
uv
 = 
	`luaM_√w
(
L
, UpVal);

49 
uv
->
ªfcou¡
 = 1;

50 
uv
->
v
 = &uv->
u
.
vÆue
;

51 
	`£äûvÆue
(
uv
->
v
);

52 
˛
->
upvÆs
[
i
] = 
uv
;

54 
	}
}

57 
UpVÆ
 *
	$luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

58 
UpVÆ
 **
µ
 = &
L
->
›íupvÆ
;

59 
UpVÆ
 *
p
;

60 
UpVÆ
 *
uv
;

61 
	`lua_as£π
(
	`isötwups
(
L
Ë|| L->
›íupvÆ
 =
NULL
);

62 *
µ
 !
NULL
 && (
p
 = *µ)->
v
 >
Àvñ
) {

63 
	`lua_as£π
(
	`upis›í
(
p
));

64 i‡(
p
->
v
 =
Àvñ
)

65  
p
;

66 
µ
 = &
p
->
u
.
›í
.
√xt
;

69 
uv
 = 
	`luaM_√w
(
L
, 
UpVÆ
);

70 
uv
->
ªfcou¡
 = 0;

71 
uv
->
u
.
›í
.
√xt
 = *
µ
;

72 
uv
->
u
.
›í
.
touched
 = 1;

73 *
µ
 = 
uv
;

74 
uv
->
v
 = 
Àvñ
;

75 i‡(!
	`isötwups
(
L
)) {

76 
L
->
twups
 = 
	`G
(L)->twups;

77 
	`G
(
L
)->
twups
 = L;

79  
uv
;

80 
	}
}

83 
	$luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

84 
UpVÆ
 *
uv
;

85 
L
->
›íupvÆ
 !
NULL
 && (
uv
 = L->›íupvÆ)->
v
 >
Àvñ
) {

86 
	`lua_as£π
(
	`upis›í
(
uv
));

87 
L
->
›íupvÆ
 = 
uv
->
u
.
›í
.
√xt
;

88 i‡(
uv
->
ªfcou¡
 == 0)

89 
	`luaM_‰ì
(
L
, 
uv
);

91 
	`£tobj
(
L
, &
uv
->
u
.
vÆue
, uv->
v
);

92 
uv
->
v
 = &uv->
u
.
vÆue
;

93 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

96 
	}
}

99 
PrŸo
 *
	$luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
) {

100 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TPROTO
, (
PrŸo
));

101 
PrŸo
 *
f
 = 
	`gco2p
(
o
);

102 
f
->
k
 = 
NULL
;

103 
f
->
sizek
 = 0;

104 
f
->
p
 = 
NULL
;

105 
f
->
sizï
 = 0;

106 
f
->
code
 = 
NULL
;

107 
f
->
ˇche
 = 
NULL
;

108 
f
->
sizecode
 = 0;

109 
f
->
löeöfo
 = 
NULL
;

110 
f
->
sizñöeöfo
 = 0;

111 
f
->
upvÆues
 = 
NULL
;

112 
f
->
sizeupvÆues
 = 0;

113 
f
->
num∑øms
 = 0;

114 
f
->
is_v¨¨g
 = 0;

115 
f
->
max°acksize
 = 0;

116 
f
->
locv¨s
 = 
NULL
;

117 
f
->
sizñocv¨s
 = 0;

118 
f
->
löedeföed
 = 0;

119 
f
->
œ°löedeföed
 = 0;

120 
f
->
sour˚
 = 
NULL
;

121  
f
;

122 
	}
}

125 
	$luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
) {

126 
	`luaM_‰ì¨øy
(
L
, 
f
->
code
, f->
sizecode
);

127 
	`luaM_‰ì¨øy
(
L
, 
f
->
p
, f->
sizï
);

128 
	`luaM_‰ì¨øy
(
L
, 
f
->
k
, f->
sizek
);

129 
	`luaM_‰ì¨øy
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
);

130 
	`luaM_‰ì¨øy
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
);

131 
	`luaM_‰ì¨øy
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
);

132 
	`luaM_‰ì
(
L
, 
f
);

133 
	}
}

140 c⁄° *
	$luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
f
, 
loˇl_numbî
, 
pc
) {

141 
i
;

142 
i
 = 0; i<
f
->
sizñocv¨s
 && f->
locv¨s
[i].
°¨çc
 <
pc
; i++) {

143 i‡(
pc
 < 
f
->
locv¨s
[
i
].
ídpc
) {

144 
loˇl_numbî
--;

145 i‡(
loˇl_numbî
 == 0)

146  
	`gë°r
(
f
->
locv¨s
[
i
].
v¨«me
);

149  
NULL
;

150 
	}
}

	@lib/archive/lua-5.3.0/src/lfunc.h

7 #i‚de‡
lfunc_h


8 
	#lfunc_h


	)

11 
	~"lobje˘.h
"

14 
	#sizeC˛osuª
(
n
Ë(
	`ˇ°
(, (
CClosuª
)) + \

15 
	`ˇ°
(, (
TVÆue
)*((
n
)-1)))

	)

17 
	#sizeL˛osuª
(
n
Ë(
	`ˇ°
(, (
LClosuª
)) + \

18 
	`ˇ°
(, (
TVÆue
 *)*((
n
)-1)))

	)

22 
	#isötwups
(
L
Ë(L->
twups
 !L)

	)

28 
	sUpVÆ
 {

29 
TVÆue
 *
	mv
;

30 
lu_mem
 
	mªfcou¡
;

33 
UpVÆ
 *
	m√xt
;

34 
	mtouched
;

35 } 
	m›í
;

36 
TVÆue
 
	mvÆue
;

37 } 
	mu
;

40 
	#upis›í
(
up
Ë((up)->
v
 !&(up)->
u
.
vÆue
)

	)

43 
LUAI_FUNC
 
PrŸo
 *
luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
);

44 
LUAI_FUNC
 
CClosuª
 *
luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

45 
LUAI_FUNC
 
LClosuª
 *
luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

46 
LUAI_FUNC
 
luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
);

47 
LUAI_FUNC
 
UpVÆ
 *
luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

48 
LUAI_FUNC
 
luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

49 
LUAI_FUNC
 
luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
);

50 
LUAI_FUNC
 c⁄° *
luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
func
, 
loˇl_numbî
,

51 
pc
);

	@lib/archive/lua-5.3.0/src/lgc.c

7 
	#lgc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lgc.h
"

21 
	~"lmem.h
"

22 
	~"lobje˘.h
"

23 
	~"l°©e.h
"

24 
	~"l°rög.h
"

25 
	~"…abÀ.h
"

26 
	~"…m.h
"

33 
	#GCSösidótomic
 (
GCS∑u£
 + 1)

	)

39 
	#GCSWEEPCOST
 (((
TSåög
Ë+ 4Ë/ 4)

	)

42 
	#GCSWEEPMAX
 (
	`ˇ°_öt
((
GCSTEPSIZE
 / 
GCSWEEPCOST
Ë/ 4))

	)

45 
	#GCFINALIZECOST
 
GCSWEEPCOST


	)

52 
	#STEPMULADJ
 200

	)

59 
	#PAUSEADJ
 100

	)

66 
	#maskcﬁ‹s
 (~(
	`bômask
(
BLACKBIT
Ë| 
WHITEBITS
))

	)

67 
	#makewhôe
(
g
,
x
) \

68 (
x
->
m¨ked
 = 
	`ˇ°_byã
((x->m¨ked & 
maskcﬁ‹s
Ë| 
	`luaC_whôe
(
g
)))

	)

70 
	#whôe2gøy
(
x
Ë
	`ª£tbôs
(x->
m¨ked
, 
WHITEBITS
)

	)

71 
	#bœck2gøy
(
x
Ë
	`ª£tbô
(x->
m¨ked
, 
BLACKBIT
)

	)

74 
	#vÆiswhôe
(
x
Ë(
	`iscﬁÀ˘abÀ
(xË&& 
	`iswhôe
(
	`gcvÆue
(x)))

	)

76 
	#checkdódkey
(
n
Ë
	`lua_as£π
(!
	`âisdódkey
(
	`gkey
“)Ë|| 
	`âi¢û
(
	`gvÆ
“)))

	)

79 
	#checkc⁄si°ícy
(
obj
) \

80 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
Ë|| 
	`righât
(obj))

	)

83 
	#m¨kvÆue
(
g
,
o
Ë{ 
	`checkc⁄si°ícy
(o); \

84 i‡(
	`vÆiswhôe
(
o
)Ë
	`ªÆlym¨kobje˘
(
g
,
	`gcvÆue
(o)); }

	)

86 
	#m¨kobje˘
(
g
,
t
) \

87 { i‡((
t
Ë&& 
	`iswhôe
—)Ë
	`ªÆlym¨kobje˘
(
g
, 
	`obj2gco
—)); }

	)

89 
ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
);

102 
	#gnodña°
(
h
Ë
	`gnode
(h, 
	`ˇ°
(
size_t
, 
	`sizíode
(h)))

	)

108 
	#lökg˛i°
(
o
,
p
Ë((o)->
g˛i°
 = (p), (pË
	`obj2gco
(o))

	)

115 
	$ªmovì¡ry
 (
Node
 *
n
) {

116 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
n
)));

117 i‡(
	`vÆiswhôe
(
	`gkey
(
n
)))

118 
	`£tdódvÆue
(
	`wgkey
(
n
));

119 
	}
}

129 
	$is˛óªd
 (
globÆ_Sèã
 *
g
, c⁄° 
TVÆue
 *
o
) {

130 i‡(!
	`iscﬁÀ˘abÀ
(
o
))  0;

131 i‡(
	`âis°rög
(
o
)) {

132 
	`m¨kobje˘
(
g
, 
	`tsvÆue
(
o
));

135  
	`iswhôe
(
	`gcvÆue
(
o
));

136 
	}
}

145 
	$luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
) {

146 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

147 
	`lua_as£π
(
	`isbœck
(
o
Ë&& 
	`iswhôe
(
v
Ë&& !
	`isdód
(
g
, v) && !isdead(g, o));

148 i‡(
	`kìpöv¨ü¡
(
g
))

149 
	`ªÆlym¨kobje˘
(
g
, 
v
);

151 
	`lua_as£π
(
	`isswìµha£
(
g
));

152 
	`makewhôe
(
g
, 
o
);

154 
	}
}

161 
	$luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

162 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

163 
	`lua_as£π
(
	`isbœck
(
t
Ë&& !
	`isdód
(
g
,Å));

164 
	`bœck2gøy
(
t
);

165 
	`lökg˛i°
(
t
, 
g
->
gøyagaö
);

166 
	}
}

175 
	$luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

176 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

177 
GCObje˘
 *
o
 = 
	`gcvÆue
(
uv
->
v
);

178 
	`lua_as£π
(!
	`upis›í
(
uv
));

179 i‡(
	`kìpöv¨ü¡
(
g
))

180 
	`m¨kobje˘
(
g
, 
o
);

181 
	}
}

184 
	$luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

185 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

186 
	`lua_as£π
(
g
->
Ælgc
 =
o
);

187 
	`whôe2gøy
(
o
);

188 
g
->
Ælgc
 = 
o
->
√xt
;

189 
o
->
√xt
 = 
g
->
fixedgc
;

190 
g
->
fixedgc
 = 
o
;

191 
	}
}

198 
GCObje˘
 *
	$luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
) {

199 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

200 
GCObje˘
 *
o
 = 
	`ˇ°
(GCObje˘ *, 
	`luaM_√wobje˘
(
L
, 
	`nov¨ü¡
(
â
), 
sz
));

201 
o
->
m¨ked
 = 
	`luaC_whôe
(
g
);

202 
o
->
â
 =Åt;

203 
o
->
√xt
 = 
g
->
Ælgc
;

204 
g
->
Ælgc
 = 
o
;

205  
o
;

206 
	}
}

225 
	$ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
) {

226 
ªíåy
:

227 
	`whôe2gøy
(
o
);

228 
o
->
â
) {

229 
LUA_TSHRSTR
:

230 
LUA_TLNGSTR
: {

231 
	`gøy2bœck
(
o
);

232 
g
->
GCmemåav
 +
	`size°rög
(
	`gco2ts
(
o
));

235 
LUA_TUSERDATA
: {

236 
TVÆue
 
uvÆue
;

237 
	`m¨kobje˘
(
g
, 
	`gco2u
(
o
)->
më©abÀ
);

238 
	`gøy2bœck
(
o
);

239 
g
->
GCmemåav
 +
	`sizeud©a
(
	`gco2u
(
o
));

240 
	`gëu£rvÆue
(
g
->
maöthªad
, 
	`gco2u
(
o
), &
uvÆue
);

241 i‡(
	`vÆiswhôe
(&
uvÆue
)) {

242 
o
 = 
	`gcvÆue
(&
uvÆue
);

243 
ªíåy
;

247 
LUA_TLCL
: {

248 
	`lökg˛i°
(
	`gco2l˛
(
o
), 
g
->
gøy
);

251 
LUA_TCCL
: {

252 
	`lökg˛i°
(
	`gco2c˛
(
o
), 
g
->
gøy
);

255 
LUA_TTABLE
: {

256 
	`lökg˛i°
(
	`gco2t
(
o
), 
g
->
gøy
);

259 
LUA_TTHREAD
: {

260 
	`lökg˛i°
(
	`gco2th
(
o
), 
g
->
gøy
);

263 
LUA_TPROTO
: {

264 
	`lökg˛i°
(
	`gco2p
(
o
), 
g
->
gøy
);

267 : 
	`lua_as£π
(0); ;

269 
	}
}

275 
	$m¨kmt
 (
globÆ_Sèã
 *
g
) {

276 
i
;

277 
i
=0; i < 
LUA_NUMTAGS
; i++)

278 
	`m¨kobje˘
(
g
, g->
mt
[
i
]);

279 
	}
}

285 
	$m¨kbeög‚z
 (
globÆ_Sèã
 *
g
) {

286 
GCObje˘
 *
o
;

287 
o
 = 
g
->
tobe‚z
; o !
NULL
; o = o->
√xt
)

288 
	`m¨kobje˘
(
g
, 
o
);

289 
	}
}

298 
	$ªm¨kupvÆs
 (
globÆ_Sèã
 *
g
) {

299 
lua_Sèã
 *
thªad
;

300 
lua_Sèã
 **
p
 = &
g
->
twups
;

301 (
thªad
 = *
p
Ë!
NULL
) {

302 
	`lua_as£π
(!
	`isbœck
(
thªad
));

303 i‡(
	`isgøy
(
thªad
Ë&&Åhªad->
›íupvÆ
 !
NULL
)

304 
p
 = &
thªad
->
twups
;

306 
UpVÆ
 *
uv
;

307 *
p
 = 
thªad
->
twups
;

308 
thªad
->
twups
 =Åhread;

309 
uv
 = 
thªad
->
›íupvÆ
; uv !
NULL
; uv = uv->
u
.
›í
.
√xt
) {

310 i‡(
uv
->
u
.
›í
.
touched
) {

311 
	`m¨kvÆue
(
g
, 
uv
->
v
);

312 
uv
->
u
.
›í
.
touched
 = 0;

317 
	}
}

323 
	$ª°¨tcﬁÀ˘i⁄
 (
globÆ_Sèã
 *
g
) {

324 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

325 
g
->
wók
 = g->
Ælwók
 = g->
ïhemî⁄
 = 
NULL
;

326 
	`m¨kobje˘
(
g
, g->
maöthªad
);

327 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

328 
	`m¨kmt
(
g
);

329 
	`m¨kbeög‚z
(
g
);

330 
	}
}

347 
	$åavî£wókvÆue
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

348 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

351 
has˛órs
 = (
h
->
sizóºay
 > 0);

352 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

353 
	`checkdódkey
(
n
);

354 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

355 
	`ªmovì¡ry
(
n
);

357 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

358 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

359 i‡(!
has˛órs
 && 
	`is˛óªd
(
g
, 
	`gvÆ
(
n
)))

360 
has˛órs
 = 1;

363 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

364 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

365 i‡(
has˛órs
)

366 
	`lökg˛i°
(
h
, 
g
->
wók
);

367 
	}
}

380 
	$åavî£ïhemî⁄
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

381 
m¨ked
 = 0;

382 
has˛órs
 = 0;

383 
hasww
 = 0;

384 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

385 
i
;

387 
i
 = 0; i < 
h
->
sizóºay
; i++) {

388 i‡(
	`vÆiswhôe
(&
h
->
¨øy
[
i
])) {

389 
m¨ked
 = 1;

390 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(&
h
->
¨øy
[
i
]));

394 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

395 
	`checkdódkey
(
n
);

396 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

397 
	`ªmovì¡ry
(
n
);

398 i‡(
	`is˛óªd
(
g
, 
	`gkey
(
n
))) {

399 
has˛órs
 = 1;

400 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
)))

401 
hasww
 = 1;

403 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
))) {

404 
m¨ked
 = 1;

405 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(
	`gvÆ
(
n
)));

409 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

410 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

411 i‡(
hasww
)

412 
	`lökg˛i°
(
h
, 
g
->
ïhemî⁄
);

413 i‡(
has˛órs
)

414 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

415  
m¨ked
;

416 
	}
}

419 
	$åavî£°r⁄gèbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

420 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

421 
i
;

422 
i
 = 0; i < 
h
->
sizóºay
; i++)

423 
	`m¨kvÆue
(
g
, &
h
->
¨øy
[
i
]);

424 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

425 
	`checkdódkey
(
n
);

426 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

427 
	`ªmovì¡ry
(
n
);

429 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

430 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

431 
	`m¨kvÆue
(
g
, 
	`gvÆ
(
n
));

434 
	}
}

437 
lu_mem
 
	$åavî£èbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

438 c⁄° *
wókkey
, *
wókvÆue
;

439 c⁄° 
TVÆue
 *
mode
 = 
	`gÁ°tm
(
g
, 
h
->
më©abÀ
, 
TM_MODE
);

440 
	`m¨kobje˘
(
g
, 
h
->
më©abÀ
);

441 i‡(
mode
 && 
	`âis°rög
(mode) &&

442 ((
wókkey
 = 
	`°rchr
(
	`svÆue
(
mode
), 'k')),

443 (
wókvÆue
 = 
	`°rchr
(
	`svÆue
(
mode
), 'v')),

444 (
wókkey
 || 
wókvÆue
))) {

445 
	`bœck2gøy
(
h
);

446 i‡(!
wókkey
)

447 
	`åavî£wókvÆue
(
g
, 
h
);

448 i‡(!
wókvÆue
)

449 
	`åavî£ïhemî⁄
(
g
, 
h
);

451 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

454 
	`åavî£°r⁄gèbÀ
(
g
, 
h
);

455  (
TabÀ
Ë+ (
TVÆue
Ë* 
h
->
sizóºay
 +

456 (
Node
Ë* 
	`ˇ°
(
size_t
, 
	`sizíode
(
h
));

457 
	}
}

460 
	$åavî£¥Ÿo
 (
globÆ_Sèã
 *
g
, 
PrŸo
 *
f
) {

461 
i
;

462 i‡(
f
->
ˇche
 && 
	`iswhôe
(f->cache))

463 
f
->
ˇche
 = 
NULL
;

464 
	`m¨kobje˘
(
g
, 
f
->
sour˚
);

465 
i
 = 0; i < 
f
->
sizek
; i++)

466 
	`m¨kvÆue
(
g
, &
f
->
k
[
i
]);

467 
i
 = 0; i < 
f
->
sizeupvÆues
; i++)

468 
	`m¨kobje˘
(
g
, 
f
->
upvÆues
[
i
].
«me
);

469 
i
 = 0; i < 
f
->
sizï
; i++)

470 
	`m¨kobje˘
(
g
, 
f
->
p
[
i
]);

471 
i
 = 0; i < 
f
->
sizñocv¨s
; i++)

472 
	`m¨kobje˘
(
g
, 
f
->
locv¨s
[
i
].
v¨«me
);

473  (
PrŸo
Ë+ (
In°ru˘i⁄
Ë* 
f
->
sizecode
 +

474 (
PrŸo
 *Ë* 
f
->
sizï
 +

475 (
TVÆue
Ë* 
f
->
sizek
 +

476 (Ë* 
f
->
sizñöeöfo
 +

477 (
LocV¨
Ë* 
f
->
sizñocv¨s
 +

478 (
UpvÆdesc
Ë* 
f
->
sizeupvÆues
;

479 
	}
}

482 
lu_mem
 
	$åavî£C˛osuª
 (
globÆ_Sèã
 *
g
, 
CClosuª
 *
˛
) {

483 
i
;

484 
i
 = 0; i < 
˛
->
nupvÆues
; i++)

485 
	`m¨kvÆue
(
g
, &
˛
->
upvÆue
[
i
]);

486  
	`sizeC˛osuª
(
˛
->
nupvÆues
);

487 
	}
}

495 
lu_mem
 
	$åavî£L˛osuª
 (
globÆ_Sèã
 *
g
, 
LClosuª
 *
˛
) {

496 
i
;

497 
	`m¨kobje˘
(
g
, 
˛
->
p
);

498 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

499 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

500 i‡(
uv
 !
NULL
) {

501 i‡(
	`upis›í
(
uv
Ë&& 
g
->
gc°©e
 !
GCSösidótomic
)

502 
uv
->
u
.
›í
.
touched
 = 1;

504 
	`m¨kvÆue
(
g
, 
uv
->
v
);

507  
	`sizeL˛osuª
(
˛
->
nupvÆues
);

508 
	}
}

511 
lu_mem
 
	$åavî£thªad
 (
globÆ_Sèã
 *
g
, 
lua_Sèã
 *
th
) {

512 
StkId
 
o
 = 
th
->
°ack
;

513 i‡(
o
 =
NULL
)

515 
	`lua_as£π
(
g
->
gc°©e
 =
GCSösidótomic
 ||

516 
th
->
›íupvÆ
 =
NULL
 || 
	`isötwups
(th));

517 ; 
o
 < 
th
->
t›
; o++)

518 
	`m¨kvÆue
(
g
, 
o
);

519 i‡(
g
->
gc°©e
 =
GCSösidótomic
) {

520 
StkId
 
lim
 = 
th
->
°ack
 +Åh->
°acksize
;

521 ; 
o
 < 
lim
; o++)

522 
	`£äûvÆue
(
o
);

524 i‡(!
	`isötwups
(
th
Ë&&Åh->
›íupvÆ
 !
NULL
) {

525 
th
->
twups
 = 
g
->twups;

526 
g
->
twups
 = 
th
;

529 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
)

530 
	`luaD_shrök°ack
(
th
);

531  ((
lua_Sèã
Ë+ (
TVÆue
Ë* 
th
->
°acksize
);

532 
	}
}

539 
	$¥›ag©em¨k
 (
globÆ_Sèã
 *
g
) {

540 
lu_mem
 
size
;

541 
GCObje˘
 *
o
 = 
g
->
gøy
;

542 
	`lua_as£π
(
	`isgøy
(
o
));

543 
	`gøy2bœck
(
o
);

544 
o
->
â
) {

545 
LUA_TTABLE
: {

546 
TabÀ
 *
h
 = 
	`gco2t
(
o
);

547 
g
->
gøy
 = 
h
->
g˛i°
;

548 
size
 = 
	`åavî£èbÀ
(
g
, 
h
);

551 
LUA_TLCL
: {

552 
LClosuª
 *
˛
 = 
	`gco2l˛
(
o
);

553 
g
->
gøy
 = 
˛
->
g˛i°
;

554 
size
 = 
	`åavî£L˛osuª
(
g
, 
˛
);

557 
LUA_TCCL
: {

558 
CClosuª
 *
˛
 = 
	`gco2c˛
(
o
);

559 
g
->
gøy
 = 
˛
->
g˛i°
;

560 
size
 = 
	`åavî£C˛osuª
(
g
, 
˛
);

563 
LUA_TTHREAD
: {

564 
lua_Sèã
 *
th
 = 
	`gco2th
(
o
);

565 
g
->
gøy
 = 
th
->
g˛i°
;

566 
	`lökg˛i°
(
th
, 
g
->
gøyagaö
);

567 
	`bœck2gøy
(
o
);

568 
size
 = 
	`åavî£thªad
(
g
, 
th
);

571 
LUA_TPROTO
: {

572 
PrŸo
 *
p
 = 
	`gco2p
(
o
);

573 
g
->
gøy
 = 
p
->
g˛i°
;

574 
size
 = 
	`åavî£¥Ÿo
(
g
, 
p
);

577 : 
	`lua_as£π
(0); ;

579 
g
->
GCmemåav
 +
size
;

580 
	}
}

583 
	$¥›ag©óŒ
 (
globÆ_Sèã
 *
g
) {

584 
g
->
gøy
Ë
	`¥›ag©em¨k
(g);

585 
	}
}

588 
	$c⁄vîgìphemî⁄s
 (
globÆ_Sèã
 *
g
) {

589 
ch™ged
;

591 
GCObje˘
 *
w
;

592 
GCObje˘
 *
√xt
 = 
g
->
ïhemî⁄
;

593 
g
->
ïhemî⁄
 = 
NULL
;

594 
ch™ged
 = 0;

595 (
w
 = 
√xt
Ë!
NULL
) {

596 
√xt
 = 
	`gco2t
(
w
)->
g˛i°
;

597 i‡(
	`åavî£ïhemî⁄
(
g
, 
	`gco2t
(
w
))) {

598 
	`¥›ag©óŒ
(
g
);

599 
ch™ged
 = 1;

602 } 
ch™ged
);

603 
	}
}

619 
	$˛órkeys
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

620 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

621 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

622 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

623 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

624 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& (
	`is˛óªd
(
g
, 
	`gkey
(n)))) {

625 
	`£äûvÆue
(
	`gvÆ
(
n
));

626 
	`ªmovì¡ry
(
n
);

630 
	}
}

637 
	$˛órvÆues
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

638 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

639 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

640 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

641 
i
;

642 
i
 = 0; i < 
h
->
sizóºay
; i++) {

643 
TVÆue
 *
o
 = &
h
->
¨øy
[
i
];

644 i‡(
	`is˛óªd
(
g
, 
o
))

645 
	`£äûvÆue
(
o
);

647 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

648 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& 
	`is˛óªd
(
g
, gval(n))) {

649 
	`£äûvÆue
(
	`gvÆ
(
n
));

650 
	`ªmovì¡ry
(
n
);

654 
	}
}

657 
	$luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

658 
	`lua_as£π
(
uv
->
ªfcou¡
 > 0);

659 
uv
->
ªfcou¡
--;

660 i‡(
uv
->
ªfcou¡
 =0 && !
	`upis›í
(uv))

661 
	`luaM_‰ì
(
L
, 
uv
);

662 
	}
}

665 
	$‰ìL˛osuª
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

666 
i
;

667 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

668 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

669 i‡(
uv
)

670 
	`luaC_upvdeccou¡
(
L
, 
uv
);

672 
	`luaM_‰ìmem
(
L
, 
˛
, 
	`sizeL˛osuª
(˛->
nupvÆues
));

673 
	}
}

676 
	$‰ìobj
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

677 
o
->
â
) {

678 
LUA_TPROTO
: 
	`luaF_‰ì¥Ÿo
(
L
, 
	`gco2p
(
o
)); ;

679 
LUA_TLCL
: {

680 
	`‰ìL˛osuª
(
L
, 
	`gco2l˛
(
o
));

683 
LUA_TCCL
: {

684 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeC˛osuª
(
	`gco2c˛
(o)->
nupvÆues
));

687 
LUA_TTABLE
: 
	`luaH_‰ì
(
L
, 
	`gco2t
(
o
)); ;

688 
LUA_TTHREAD
: 
	`luaE_‰ìthªad
(
L
, 
	`gco2th
(
o
)); ;

689 
LUA_TUSERDATA
: 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeud©a
(
	`gco2u
(o))); ;

690 
LUA_TSHRSTR
:

691 
	`luaS_ªmove
(
L
, 
	`gco2ts
(
o
));

693 
LUA_TLNGSTR
: {

694 
	`luaM_‰ìmem
(
L
, 
o
, 
	`size°rög
(
	`gco2ts
(o)));

697 : 
	`lua_as£π
(0);

699 
	}
}

702 
	#swìpwhﬁñi°
(
L
,
p
Ë
	`swì∂i°
(L,p,
MAX_LUMEM
)

	)

703 
GCObje˘
 **
swì∂i°
 (
lua_Sèã
 *
L
, GCObje˘ **
p
, 
lu_mem
 
cou¡
);

713 
GCObje˘
 **
	$swì∂i°
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, 
lu_mem
 
cou¡
) {

714 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

715 
ow
 = 
	`Ÿhîwhôe
(
g
);

716 
whôe
 = 
	`luaC_whôe
(
g
);

717 *
p
 !
NULL
 && 
cou¡
-- > 0) {

718 
GCObje˘
 *
cuº
 = *
p
;

719 
m¨ked
 = 
cuº
->marked;

720 i‡(
	`isdódm
(
ow
, 
m¨ked
)) {

721 *
p
 = 
cuº
->
√xt
;

722 
	`‰ìobj
(
L
, 
cuº
);

725 
cuº
->
m¨ked
 = 
	`ˇ°_byã
((m¨ked & 
maskcﬁ‹s
Ë| 
whôe
);

726 
p
 = &
cuº
->
√xt
;

729  (*
p
 =
NULL
) ? NULL :Ö;

730 
	}
}

736 
GCObje˘
 **
	$swì±ﬁive
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, *
n
) {

737 
GCObje˘
 **
ﬁd
 = 
p
;

738 
i
 = 0;

740 
i
++;

741 
p
 = 
	`swì∂i°
(
L
,Ö, 1);

742 } 
p
 =
ﬁd
);

743 i‡(
n
Ë*¿+
i
;

744  
p
;

745 
	}
}

759 
	$checkSizes
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

760 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
) {

761 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

762 
	`luaZ_‰ìbuf„r
(
L
, &
g
->
buff
);

763 i‡(
g
->
°π
.
nu£
 < g->°π.
size
 / 4)

764 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 / 2);

765 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

767 
	}
}

770 
GCObje˘
 *
	$ud©a2föÆize
 (
globÆ_Sèã
 *
g
) {

771 
GCObje˘
 *
o
 = 
g
->
tobe‚z
;

772 
	`lua_as£π
(
	`toföÆize
(
o
));

773 
g
->
tobe‚z
 = 
o
->
√xt
;

774 
o
->
√xt
 = 
g
->
Ælgc
;

775 
g
->
Ælgc
 = 
o
;

776 
	`ª£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

777 i‡(
	`isswìµha£
(
g
))

778 
	`makewhôe
(
g
, 
o
);

779  
o
;

780 
	}
}

783 
	$dŸheˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

784 
	`UNUSED
(
ud
);

785 
	`luaD_ˇŒ
(
L
, L->
t›
 - 2, 0, 0);

786 
	}
}

789 
	$GCTM
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

790 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

791 c⁄° 
TVÆue
 *
tm
;

792 
TVÆue
 
v
;

793 
	`£tgcovÆue
(
L
, &
v
, 
	`ud©a2föÆize
(
g
));

794 
tm
 = 
	`luaT_gëtmbyobj
(
L
, &
v
, 
TM_GC
);

795 i‡(
tm
 !
NULL
 && 
	`âisfun˘i⁄
(tm)) {

796 
°©us
;

797 
lu_byã
 
ﬁdah
 = 
L
->
Ælowhook
;

798 
ru¬ög
 = 
g
->
g¸u¬ög
;

799 
L
->
Ælowhook
 = 0;

800 
g
->
g¸u¬ög
 = 0;

801 
	`£tobj2s
(
L
, L->
t›
, 
tm
);

802 
	`£tobj2s
(
L
, L->
t›
 + 1, &
v
);

803 
L
->
t›
 += 2;

804 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
dŸheˇŒ
, 
NULL
, 
	`ßve°ack
(L, L->
t›
 - 2), 0);

805 
L
->
Ælowhook
 = 
ﬁdah
;

806 
g
->
g¸u¬ög
 = 
ru¬ög
;

807 i‡(
°©us
 !
LUA_OK
 && 
¥›ag©ìº‹s
) {

808 i‡(
°©us
 =
LUA_ERRRUN
) {

809 c⁄° *
msg
 = (
	`âis°rög
(
L
->
t›
 - 1))

810 ? 
	`svÆue
(
L
->
t›
 - 1)

812 
	`luaO_pushf°rög
(
L
, "îr‹ i¿__g¯mëamëhod (%s)", 
msg
);

813 
°©us
 = 
LUA_ERRGCMM
;

815 
	`luaD_throw
(
L
, 
°©us
);

818 
	}
}

824 
	$ru«„wföÆizîs
 (
lua_Sèã
 *
L
) {

825 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

826 
i
;

827 
	`lua_as£π
(!
g
->
tobe‚z
 || g->
gcfönum
 > 0);

828 
i
 = 0; 
g
->
tobe‚z
 && i < g->
gcfönum
; i++)

829 
	`GCTM
(
L
, 1);

830 
g
->
gcfönum
 = (!g->
tobe‚z
) ? 0

831 : 
g
->
gcfönum
 * 2;

832  
i
;

833 
	}
}

839 
	$ˇŒÆÕídögföÆizîs
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

840 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

841 
g
->
tobe‚z
)

842 
	`GCTM
(
L
, 
¥›ag©ìº‹s
);

843 
	}
}

849 
GCObje˘
 **
	$födœ°
 (
GCObje˘
 **
p
) {

850 *
p
 !
NULL
)

851 
p
 = &(*p)->
√xt
;

852  
p
;

853 
	}
}

860 
	$£∑øãtobe‚z
 (
globÆ_Sèã
 *
g
, 
Æl
) {

861 
GCObje˘
 *
cuº
;

862 
GCObje˘
 **
p
 = &
g
->
föobj
;

863 
GCObje˘
 **
œ°√xt
 = 
	`födœ°
(&
g
->
tobe‚z
);

864 (
cuº
 = *
p
Ë!
NULL
) {

865 
	`lua_as£π
(
	`toföÆize
(
cuº
));

866 i‡(!(
	`iswhôe
(
cuº
Ë|| 
Æl
))

867 
p
 = &
cuº
->
√xt
;

869 *
p
 = 
cuº
->
√xt
;

870 
cuº
->
√xt
 = *
œ°√xt
;

871 *
œ°√xt
 = 
cuº
;

872 
œ°√xt
 = &
cuº
->
√xt
;

875 
	}
}

882 
	$luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
) {

883 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

884 i‡(
	`toföÆize
(
o
) ||

885 
	`gÁ°tm
(
g
, 
mt
, 
TM_GC
Ë=
NULL
)

888 
GCObje˘
 **
p
;

889 i‡(
	`isswìµha£
(
g
)) {

890 
	`makewhôe
(
g
, 
o
);

891 i‡(
g
->
swìpgc
 =&
o
->
√xt
)

892 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, g->swìpgc, 
NULL
);

895 
p
 = &
g
->
Ælgc
; *∞!
o
;Ö = &(*p)->
√xt
) { }

896 *
p
 = 
o
->
√xt
;

897 
o
->
√xt
 = 
g
->
föobj
;

898 
g
->
föobj
 = 
o
;

899 
	`l_£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

901 
	}
}

920 
	$£çau£
 (
globÆ_Sèã
 *
g
) {

921 
l_mem
 
thªshﬁd
, 
debt
;

922 
l_mem
 
e°im©e
 = 
g
->
GCe°im©e
 / 
PAUSEADJ
;

923 
	`lua_as£π
(
e°im©e
 > 0);

924 
thªshﬁd
 = (
g
->
g˝au£
 < 
MAX_LMEM
 / 
e°im©e
)

925 ? 
e°im©e
 * 
g
->
g˝au£


926 : 
MAX_LMEM
;

927 
debt
 = 
	`gëtŸÆbyãs
(
g
Ë- 
thªshﬁd
;

928 
	`luaE_£tdebt
(
g
, 
debt
);

929 
	}
}

940 
	$íãrswìp
 (
lua_Sèã
 *
L
) {

941 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

942 
n
 = 0;

943 
g
->
gc°©e
 = 
GCSsw∑Œgc
;

944 
	`lua_as£π
(
g
->
swìpgc
 =
NULL
);

945 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, &g->
Ælgc
, &
n
);

946  
n
;

947 
	}
}

950 
	$luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
) {

951 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

952 
	`£∑øãtobe‚z
(
g
, 1);

953 
	`lua_as£π
(
g
->
föobj
 =
NULL
);

954 
	`ˇŒÆÕídögföÆizîs
(
L
, 0);

955 
	`lua_as£π
(
g
->
tobe‚z
 =
NULL
);

956 
g
->
cuºítwhôe
 = 
WHITEBITS
;

957 
g
->
gcköd
 = 
KGC_NORMAL
;

958 
	`swìpwhﬁñi°
(
L
, &
g
->
föobj
);

959 
	`swìpwhﬁñi°
(
L
, &
g
->
Ælgc
);

960 
	`swìpwhﬁñi°
(
L
, &
g
->
fixedgc
);

961 
	`lua_as£π
(
g
->
°π
.
nu£
 == 0);

962 
	}
}

965 
l_mem
 
	$©omic
 (
lua_Sèã
 *
L
) {

966 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

967 
l_mem
 
w‹k
;

968 
GCObje˘
 *
‹igwók
, *
‹igÆl
;

969 
GCObje˘
 *
gøyagaö
 = 
g
->grayagain;

970 
	`lua_as£π
(
g
->
ïhemî⁄
 =
NULL
 && g->
wók
 == NULL);

971 
	`lua_as£π
(!
	`iswhôe
(
g
->
maöthªad
));

972 
g
->
gc°©e
 = 
GCSösidótomic
;

973 
g
->
GCmemåav
 = 0;

974 
	`m¨kobje˘
(
g
, 
L
);

976 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

977 
	`m¨kmt
(
g
);

979 
	`ªm¨kupvÆs
(
g
);

980 
	`¥›ag©óŒ
(
g
);

981 
w‹k
 = 
g
->
GCmemåav
;

982 
g
->
gøy
 = 
gøyagaö
;

983 
	`¥›ag©óŒ
(
g
);

984 
g
->
GCmemåav
 = 0;

985 
	`c⁄vîgìphemî⁄s
(
g
);

988 
	`˛órvÆues
(
g
, g->
wók
, 
NULL
);

989 
	`˛órvÆues
(
g
, g->
Ælwók
, 
NULL
);

990 
‹igwók
 = 
g
->
wók
; 
‹igÆl
 = g->
Ælwók
;

991 
w‹k
 +
g
->
GCmemåav
;

992 
	`£∑øãtobe‚z
(
g
, 0);

993 
g
->
gcfönum
 = 1;

994 
	`m¨kbeög‚z
(
g
);

995 
	`¥›ag©óŒ
(
g
);

996 
g
->
GCmemåav
 = 0;

997 
	`c⁄vîgìphemî⁄s
(
g
);

1000 
	`˛órkeys
(
g
, g->
ïhemî⁄
, 
NULL
);

1001 
	`˛órkeys
(
g
, g->
Ælwók
, 
NULL
);

1003 
	`˛órvÆues
(
g
, g->
wók
, 
‹igwók
);

1004 
	`˛órvÆues
(
g
, g->
Ælwók
, 
‹igÆl
);

1005 
g
->
cuºítwhôe
 = 
	`ˇ°_byã
(
	`Ÿhîwhôe
(g));

1006 
w‹k
 +
g
->
GCmemåav
;

1007  
w‹k
;

1008 
	}
}

1011 
lu_mem
 
	$swìp°ï
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
,

1012 
√xt°©e
, 
GCObje˘
 **
√xéi°
) {

1013 i‡(
g
->
swìpgc
) {

1014 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

1015 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, g->swìpgc, 
GCSWEEPMAX
);

1016 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

1017 i‡(
g
->
swìpgc
)

1018  (
GCSWEEPMAX
 * 
GCSWEEPCOST
);

1021 
g
->
gc°©e
 = 
√xt°©e
;

1022 
g
->
swìpgc
 = 
√xéi°
;

1024 
	}
}

1027 
lu_mem
 
	$sögÀ°ï
 (
lua_Sèã
 *
L
) {

1028 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1029 
g
->
gc°©e
) {

1030 
GCS∑u£
: {

1031 
g
->
GCmemåav
 = g->
°π
.
size
 * (
GCObje˘
*);

1032 
	`ª°¨tcﬁÀ˘i⁄
(
g
);

1033 
g
->
gc°©e
 = 
GCS¥›ag©e
;

1034  
g
->
GCmemåav
;

1036 
GCS¥›ag©e
: {

1037 
g
->
GCmemåav
 = 0;

1038 
	`lua_as£π
(
g
->
gøy
);

1039 
	`¥›ag©em¨k
(
g
);

1040 i‡(
g
->
gøy
 =
NULL
)

1041 
g
->
gc°©e
 = 
GCS©omic
;

1042  
g
->
GCmemåav
;

1044 
GCS©omic
: {

1045 
lu_mem
 
w‹k
;

1046 
sw
;

1047 
	`¥›ag©óŒ
(
g
);

1048 
w‹k
 = 
	`©omic
(
L
);

1049 
sw
 = 
	`íãrswìp
(
L
);

1050 
g
->
GCe°im©e
 = 
	`gëtŸÆbyãs
(g); ;

1051  
w‹k
 + 
sw
 * 
GCSWEEPCOST
;

1053 
GCSsw∑Œgc
: {

1054  
	`swìp°ï
(
L
, 
g
, 
GCSswpföobj
, &g->
föobj
);

1056 
GCSswpföobj
: {

1057  
	`swìp°ï
(
L
, 
g
, 
GCSsw±obe‚z
, &g->
tobe‚z
);

1059 
GCSsw±obe‚z
: {

1060  
	`swìp°ï
(
L
, 
g
, 
GCSsw≥nd
, 
NULL
);

1062 
GCSsw≥nd
: {

1063 
	`makewhôe
(
g
, g->
maöthªad
);

1064 
	`checkSizes
(
L
, 
g
);

1065 
g
->
gc°©e
 = 
GCSˇŒfö
;

1068 
GCSˇŒfö
: {

1069 i‡(
g
->
tobe‚z
 && g->
gcköd
 !
KGC_EMERGENCY
) {

1070 
n
 = 
	`ru«„wföÆizîs
(
L
);

1071  (
n
 * 
GCFINALIZECOST
);

1074 
g
->
gc°©e
 = 
GCS∑u£
;

1078 : 
	`lua_as£π
(0);  0;

1080 
	}
}

1087 
	$luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
) {

1088 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1089 !
	`ã°bô
(
°©esmask
, 
g
->
gc°©e
))

1090 
	`sögÀ°ï
(
L
);

1091 
	}
}

1098 
l_mem
 
	$gëdebt
 (
globÆ_Sèã
 *
g
) {

1099 
l_mem
 
debt
 = 
g
->
GCdebt
;

1100 
°ïmul
 = 
g
->
gc°ïmul
;

1101 
debt
 = (debà/ 
STEPMULADJ
) + 1;

1102 
debt
 = (debà< 
MAX_LMEM
 / 
°ïmul
) ? debt * stepmul : MAX_LMEM;

1103  
debt
;

1104 
	}
}

1109 
	$luaC_°ï
 (
lua_Sèã
 *
L
) {

1110 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1111 
l_mem
 
debt
 = 
	`gëdebt
(
g
);

1112 i‡(!
g
->
g¸u¬ög
) {

1113 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
 * 10);

1117 
lu_mem
 
w‹k
 = 
	`sögÀ°ï
(
L
);

1118 
debt
 -
w‹k
;

1119 } 
debt
 > -
GCSTEPSIZE
 && 
g
->
gc°©e
 !
GCS∑u£
);

1120 i‡(
g
->
gc°©e
 =
GCS∑u£
)

1121 
	`£çau£
(
g
);

1123 
debt
 = (debà/ 
g
->
gc°ïmul
Ë* 
STEPMULADJ
;

1124 
	`luaE_£tdebt
(
g
, 
debt
);

1125 
	`ru«„wföÆizîs
(
L
);

1127 
	}
}

1139 
	$luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
) {

1140 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1141 
	`lua_as£π
(
g
->
gcköd
 =
KGC_NORMAL
);

1142 i‡(
i£mîgícy
Ë
g
->
gcköd
 = 
KGC_EMERGENCY
;

1143 i‡(
	`kìpöv¨ü¡
(
g
)) {

1144 
	`íãrswìp
(
L
);

1147 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1148 
	`luaC_ru¡û°©e
(
L
, ~
	`bômask
(
GCS∑u£
));

1149 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCSˇŒfö
));

1151 
	`lua_as£π
(
g
->
GCe°im©e
 =
	`gëtŸÆbyãs
(g));

1152 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1153 
g
->
gcköd
 = 
KGC_NORMAL
;

1154 
	`£çau£
(
g
);

1155 
	}
}

	@lib/archive/lua-5.3.0/src/lgc.h

7 #i‚de‡
lgc_h


8 
	#lgc_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

30 #i‡!
deföed
(
GCSTEPSIZE
)

32 
	#GCSTEPSIZE
 (
	`ˇ°_öt
(100 * (
TSåög
)))

	)

39 
	#GCS¥›ag©e
 0

	)

40 
	#GCS©omic
 1

	)

41 
	#GCSsw∑Œgc
 2

	)

42 
	#GCSswpföobj
 3

	)

43 
	#GCSsw±obe‚z
 4

	)

44 
	#GCSsw≥nd
 5

	)

45 
	#GCSˇŒfö
 6

	)

46 
	#GCS∑u£
 7

	)

49 
	#isswìµha£
(
g
) \

50 (
GCSsw∑Œgc
 <(
g
)->
gc°©e
 && (g)->gc°©ê<
GCSsw≥nd
)

	)

61 
	#kìpöv¨ü¡
(
g
Ë((g)->
gc°©e
 <
GCS©omic
)

	)

67 
	#ª£tbôs
(
x
,
m
Ë((xË&
	`ˇ°
(
lu_byã
, ~(m)))

	)

68 
	#£tbôs
(
x
,
m
Ë((xË|(m))

	)

69 
	#ã°bôs
(
x
,
m
Ë((xË& (m))

	)

70 
	#bômask
(
b
Ë(1<<(b))

	)

71 
	#bô2mask
(
b1
,
b2
Ë(
	`bômask
(b1Ë| bômask(b2))

	)

72 
	#l_£tbô
(
x
,
b
Ë
	`£tbôs
(x, 
	`bômask
(b))

	)

73 
	#ª£tbô
(
x
,
b
Ë
	`ª£tbôs
(x, 
	`bômask
(b))

	)

74 
	#ã°bô
(
x
,
b
Ë
	`ã°bôs
(x, 
	`bômask
(b))

	)

78 
	#WHITE0BIT
 0

	)

79 
	#WHITE1BIT
 1

	)

80 
	#BLACKBIT
 2

	)

81 
	#FINALIZEDBIT
 3

	)

84 
	#WHITEBITS
 
	`bô2mask
(
WHITE0BIT
, 
WHITE1BIT
)

	)

87 
	#iswhôe
(
x
Ë
	`ã°bôs
((x)->
m¨ked
, 
WHITEBITS
)

	)

88 
	#isbœck
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
BLACKBIT
)

	)

89 
	#isgøy
(
x
) \

90 (!
	`ã°bôs
((
x
)->
m¨ked
, 
WHITEBITS
 | 
	`bômask
(
BLACKBIT
)))

	)

92 
	#toföÆize
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
FINALIZEDBIT
)

	)

94 
	#Ÿhîwhôe
(
g
Ë((g)->
cuºítwhôe
 ^ 
WHITEBITS
)

	)

95 
	#isdódm
(
ow
,
m
Ë(!(((mË^ 
WHITEBITS
Ë& (ow)))

	)

96 
	#isdód
(
g
,
v
Ë
	`isdódm
(
	`Ÿhîwhôe
(g), (v)->
m¨ked
)

	)

98 
	#ch™gewhôe
(
x
Ë((x)->
m¨ked
 ^
WHITEBITS
)

	)

99 
	#gøy2bœck
(
x
Ë
	`l_£tbô
((x)->
m¨ked
, 
BLACKBIT
)

	)

101 
	#luaC_whôe
(
g
Ë
	`ˇ°
(
lu_byã
, (g)->
cuºítwhôe
 & 
WHITEBITS
)

	)

104 
	#luaC_c⁄dGC
(
L
,
c
) \

105 {i‡(
	`G
(
L
)->
GCdebt
 > 0Ë{
c
;}; 
	`c⁄dch™gemem
(L);}

	)

106 
	#luaC_checkGC
(
L
Ë
	`luaC_c⁄dGC
(L, 
	`luaC_°ï
(L);)

	)

109 
	#luaC_b¨rõr
(
L
,
p
,
v
) { \

110 i‡(
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) \

111 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),
	`gcvÆue
(
v
)); }

	)

113 
	#luaC_b¨rõrback
(
L
,
p
,
v
) { \

114 i‡(
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) \

115 
	`luaC_b¨rõrback_
(
L
,
p
); }

	)

117 
	#luaC_objb¨rõr
(
L
,
p
,
o
) { \

118 i‡(
	`isbœck
(
p
Ë&& 
	`iswhôe
(
o
)) \

119 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),obj2gco(
o
)); }

	)

121 
	#luaC_upvÆb¨rõr
(
L
,
uv
) \

122 { i‡(
	`iscﬁÀ˘abÀ
((
uv
)->
v
Ë&& !
	`upis›í
(uv)) \

123 
	`luaC_upvÆb¨rõr_
(
L
,
uv
); }

	)

125 
LUAI_FUNC
 
luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
);

126 
LUAI_FUNC
 
luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
);

127 
LUAI_FUNC
 
luaC_°ï
 (
lua_Sèã
 *
L
);

128 
LUAI_FUNC
 
luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
);

129 
LUAI_FUNC
 
luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
);

130 
LUAI_FUNC
 
GCObje˘
 *
luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
);

131 
LUAI_FUNC
 
luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
);

132 
LUAI_FUNC
 
luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
o
);

133 
LUAI_FUNC
 
luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

134 
LUAI_FUNC
 
luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
);

135 
LUAI_FUNC
 
luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

	@lib/archive/lua-5.3.0/src/linit.c

8 
	#löô_c


	)

9 
	#LUA_LIB


	)

27 
	~"Õªfix.h
"

30 
	~<°ddef.h
>

32 
	~"lua.h
"

34 
	~"luÆib.h
"

35 
	~"œuxlib.h
"

42 c⁄° 
luaL_Reg
 
	glﬂdedlibs
[] = {

43 {"_G", 
lua›í_ba£
},

44 {
LUA_LOADLIBNAME
, 
lua›í_∑ckage
},

45 {
LUA_COLIBNAME
, 
lua›í_c‹outöe
},

46 {
LUA_TABLIBNAME
, 
lua›í_èbÀ
},

47 {
LUA_IOLIBNAME
, 
lua›í_io
},

48 {
LUA_OSLIBNAME
, 
lua›í_os
},

49 {
LUA_STRLIBNAME
, 
lua›í_°rög
},

50 {
LUA_MATHLIBNAME
, 
lua›í_m©h
},

51 {
LUA_UTF8LIBNAME
, 
lua›í_utf8
},

52 {
LUA_DBLIBNAME
, 
lua›í_debug
},

53 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

54 {
LUA_BITLIBNAME
, 
lua›í_bô32
},

56 {
NULL
, NULL}

60 
LUALIB_API
 
	$luaL_›ílibs
 (
lua_Sèã
 *
L
) {

61 c⁄° 
luaL_Reg
 *
lib
;

63 
lib
 = 
lﬂdedlibs
;Üib->
func
;Üib++) {

64 
	`luaL_ªquúef
(
L
, 
lib
->
«me
,Üib->
func
, 1);

65 
	`lua_p›
(
L
, 1);

67 
	}
}

	@lib/archive/lua-5.3.0/src/liolib.c

7 
	#liﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<loˇÀ.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"œuxlib.h
"

23 
	~"luÆib.h
"

26 #i‡!
deföed
(
l_checkmode
)

33 
	#l_checkmode
(
mode
) \

34 (*
mode
 !'\0' && 
	`°rchr
("rwa", *(mode++)Ë!
NULL
 && \

35 (*
mode
 != '+' || ++mode) && \

36 (*
mode
 != 'b' || ++mode) && \

37 (*
mode
 ='\0'))

	)

48 #i‡!
deföed
(
l_p›í
)

50 #i‡
deföed
(
LUA_USE_POSIX
)

52 
	#l_p›í
(
L
,
c
,
m
Ë(
	`fÊush
(
NULL
), 
	`p›í
(c,m))

	)

53 
	#l_p˛o£
(
L
,
fûe
Ë(
	`p˛o£
(fûe))

	)

55 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

57 
	#l_p›í
(
L
,
c
,
m
Ë(
	`_p›í
(c,m))

	)

58 
	#l_p˛o£
(
L
,
fûe
Ë(
	`_p˛o£
(fûe))

	)

63 
	#l_p›í
(
L
,
c
,
m
) \

64 (()(()
c
, 
m
), \

65 
	`luaL_îr‹
(
L
, "'popen'Çot supported"), \

66 (
FILE
*)0)

	)

67 
	#l_p˛o£
(
L
,
fûe
Ë(()L, ()fûe, -1)

	)

76 #i‡!
deföed
(
l_gëc
)

78 #i‡
deföed
(
LUA_USE_POSIX
)

79 
	#l_gëc
(
f
Ë
	`gëc_u∆ocked
(f)

	)

80 
	#l_lockfûe
(
f
Ë
	`Êockfûe
(f)

	)

81 
	#l_u∆ockfûe
(
f
Ë
	`fu∆ockfûe
(f)

	)

83 
	#l_gëc
(
f
Ë
	`gëc
(f)

	)

84 
	#l_lockfûe
(
f
Ë(()0)

	)

85 
	#l_u∆ockfûe
(
f
Ë(()0)

	)

97 #i‡!
deföed
(
l_f£ek
)

99 #i‡
deföed
(
LUA_USE_POSIX
)

101 
	~<sys/ty≥s.h
>

103 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£eko
(f,o,w)

	)

104 
	#l_·ñl
(
f
Ë
	`·ñlo
(f)

	)

105 
	#l_£eknum
 
off_t


	)

107 #ñi‡
deföed
(
LUA_USE_WINDOWS
Ë&& !deföed(
_CRTIMP_TYPEINFO
) \

108 && 
deföed
(
_MSC_VER
Ë&& (
	g_MSC_VER
 >= 1400)

111 
	#l_f£ek
(
f
,
o
,
w
Ë
	`_f£eki64
(f,o,w)

	)

112 
	#l_·ñl
(
f
Ë
	`_·ñli64
(f)

	)

113 
	#l_£eknum
 
__öt64


	)

118 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£ek
(f,o,w)

	)

119 
	#l_·ñl
(
f
Ë
	`·ñl
(f)

	)

120 
	#l_£eknum
 

	)

129 
	#IO_PREFIX
 "_IO_"

	)

130 
	#IOPREF_LEN
 ((
IO_PREFIX
)/(Ë- 1)

	)

131 
	#IO_INPUT
 (
IO_PREFIX
 "öput")

	)

132 
	#IO_OUTPUT
 (
IO_PREFIX
 "ouçut")

	)

135 
luaL_Såóm
 
	tLSåóm
;

138 
	#tﬁ°ªam
(
L
Ë((
LSåóm
 *)
	`luaL_checkud©a
(L, 1, 
LUA_FILEHANDLE
))

	)

140 
	#is˛o£d
(
p
Ë(’)->
˛o£f
 =
NULL
)

	)

143 
	$io_ty≥
 (
lua_Sèã
 *
L
) {

144 
LSåóm
 *
p
;

145 
	`luaL_check™y
(
L
, 1);

146 
p
 = (
LSåóm
 *)
	`luaL_ã°ud©a
(
L
, 1, 
LUA_FILEHANDLE
);

147 i‡(
p
 =
NULL
)

148 
	`lua_pushnû
(
L
);

149 i‡(
	`is˛o£d
(
p
))

150 
	`lua_pushlôîÆ
(
L
, "closed file");

152 
	`lua_pushlôîÆ
(
L
, "file");

154 
	}
}

157 
	$f_to°rög
 (
lua_Sèã
 *
L
) {

158 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

159 i‡(
	`is˛o£d
(
p
))

160 
	`lua_pushlôîÆ
(
L
, "file (closed)");

162 
	`lua_pushf°rög
(
L
, "fûê(%p)", 
p
->
f
);

164 
	}
}

167 
FILE
 *
	$tofûe
 (
lua_Sèã
 *
L
) {

168 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

169 i‡(
	`is˛o£d
(
p
))

170 
	`luaL_îr‹
(
L
, "attemptÅo useá closed file");

171 
	`lua_as£π
(
p
->
f
);

172  
p
->
f
;

173 
	}
}

181 
LSåóm
 *
	$√w¥efûe
 (
lua_Sèã
 *
L
) {

182 
LSåóm
 *
p
 = (LSåóm *)
	`lua_√wu£rd©a
(
L
, (LStream));

183 
p
->
˛o£f
 = 
NULL
;

184 
	`luaL_£tmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

185  
p
;

186 
	}
}

194 
	$aux_˛o£
 (
lua_Sèã
 *
L
) {

195 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

196 vﬁ©ûê
lua_CFun˘i⁄
 
cf
 = 
p
->
˛o£f
;

197 
p
->
˛o£f
 = 
NULL
;

198  (*
cf
)(
L
);

199 
	}
}

202 
	$io_˛o£
 (
lua_Sèã
 *
L
) {

203 i‡(
	`lua_i¢⁄e
(
L
, 1))

204 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_OUTPUT
);

205 
	`tofûe
(
L
);

206  
	`aux_˛o£
(
L
);

207 
	}
}

210 
	$f_gc
 (
lua_Sèã
 *
L
) {

211 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

212 i‡(!
	`is˛o£d
(
p
Ë&&Ö->
f
 !
NULL
)

213 
	`aux_˛o£
(
L
);

215 
	}
}

221 
	$io_f˛o£
 (
lua_Sèã
 *
L
) {

222 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

223 
ªs
 = 
	`f˛o£
(
p
->
f
);

224  
	`luaL_fûîesu…
(
L
, (
ªs
 =0), 
NULL
);

225 
	}
}

228 
LSåóm
 *
	$√wfûe
 (
lua_Sèã
 *
L
) {

229 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

230 
p
->
f
 = 
NULL
;

231 
p
->
˛o£f
 = &
io_f˛o£
;

232  
p
;

233 
	}
}

236 
	$›ícheck
 (
lua_Sèã
 *
L
, c⁄° *
‚ame
, c⁄° *
mode
) {

237 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

238 
p
->
f
 = 
	`f›í
(
‚ame
, 
mode
);

239 i‡(
p
->
f
 =
NULL
)

240 
	`luaL_îr‹
(
L
, "ˇ¬Ÿ o≥¿fûê'%s' (%s)", 
‚ame
, 
	`°ªº‹
(
î∫o
));

241 
	}
}

244 
	$io_›í
 (
lua_Sèã
 *
L
) {

245 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

246 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

247 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

248 c⁄° *
md
 = 
mode
;

249 
	`luaL_¨gcheck
(
L
, 
	`l_checkmode
(
md
), 2, "invalid mode");

250 
p
->
f
 = 
	`f›í
(
fûíame
, 
mode
);

251  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

252 
	}
}

258 
	$io_p˛o£
 (
lua_Sèã
 *
L
) {

259 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

260  
	`luaL_exe¸esu…
(
L
, 
	`l_p˛o£
(L, 
p
->
f
));

261 
	}
}

264 
	$io_p›í
 (
lua_Sèã
 *
L
) {

265 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

266 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

267 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

268 
p
->
f
 = 
	`l_p›í
(
L
, 
fûíame
, 
mode
);

269 
p
->
˛o£f
 = &
io_p˛o£
;

270  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

271 
	}
}

274 
	$io_tmpfûe
 (
lua_Sèã
 *
L
) {

275 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

276 
p
->
f
 = 
	`tmpfûe
();

277  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, NULL) : 1;

278 
	}
}

281 
FILE
 *
	$gëiofûe
 (
lua_Sèã
 *
L
, c⁄° *
födex
) {

282 
LSåóm
 *
p
;

283 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
födex
);

284 
p
 = (
LSåóm
 *)
	`lua_tou£rd©a
(
L
, -1);

285 i‡(
	`is˛o£d
(
p
))

286 
	`luaL_îr‹
(
L
, "°™d¨d %†fûêi†˛o£d", 
födex
 + 
IOPREF_LEN
);

287  
p
->
f
;

288 
	}
}

291 
	$g_iofûe
 (
lua_Sèã
 *
L
, c⁄° *
f
, c⁄° *
mode
) {

292 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

293 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 1);

294 i‡(
fûíame
)

295 
	`›ícheck
(
L
, 
fûíame
, 
mode
);

297 
	`tofûe
(
L
);

298 
	`lua_pushvÆue
(
L
, 1);

300 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

303 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

305 
	}
}

308 
	$io_öput
 (
lua_Sèã
 *
L
) {

309  
	`g_iofûe
(
L
, 
IO_INPUT
, "r");

310 
	}
}

313 
	$io_ouçut
 (
lua_Sèã
 *
L
) {

314  
	`g_iofûe
(
L
, 
IO_OUTPUT
, "w");

315 
	}
}

318 
io_ªadlöe
 (
lua_Sèã
 *
L
);

321 
	$aux_löes
 (
lua_Sèã
 *
L
, 
to˛o£
) {

322 
n
 = 
	`lua_gët›
(
L
) - 1;

323 
	`lua_pushöãgî
(
L
, 
n
);

324 
	`lua_pushboﬁón
(
L
, 
to˛o£
);

325 
	`lua_rŸ©e
(
L
, 2, 2);

326 
	`lua_pushc˛osuª
(
L
, 
io_ªadlöe
, 3 + 
n
);

327 
	}
}

330 
	$f_löes
 (
lua_Sèã
 *
L
) {

331 
	`tofûe
(
L
);

332 
	`aux_löes
(
L
, 0);

334 
	}
}

337 
	$io_löes
 (
lua_Sèã
 *
L
) {

338 
to˛o£
;

339 i‡(
	`lua_i¢⁄e
(
L
, 1)Ë
	`lua_pushnû
(L);

340 i‡(
	`lua_i¢û
(
L
, 1)) {

341 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_INPUT
);

342 
	`lua_ª∂a˚
(
L
, 1);

343 
	`tofûe
(
L
);

344 
to˛o£
 = 0;

347 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

348 
	`›ícheck
(
L
, 
fûíame
, "r");

349 
	`lua_ª∂a˚
(
L
, 1);

350 
to˛o£
 = 1;

352 
	`aux_löes
(
L
, 
to˛o£
);

354 
	}
}

365 
	#MAXRN
 200

	)

369 
FILE
 *
	mf
;

370 
	mc
;

371 
	mn
;

372 
	mbuff
[
MAXRN
 + 1];

373 } 
	tRN
;

379 
	$√xtc
 (
RN
 *
∫
) {

380 i‡(
∫
->
n
 >
MAXRN
) {

381 
∫
->
buff
[0] = '\0';

385 
∫
->
buff
[∫->
n
++] =Ñn->
c
;

386 
∫
->
c
 = 
	`l_gëc
‘n->
f
);

389 
	}
}

395 
	$ã°2
 (
RN
 *
∫
, c⁄° *
£t
) {

396 i‡(
∫
->
c
 =
£t
[0] || (rn->c == set[1] &&Ñn->c != '\0'))

397  
	`√xtc
(
∫
);

399 
	}
}

405 
	$ªaddigôs
 (
RN
 *
∫
, 
hex
) {

406 
cou¡
 = 0;

407 (
hex
 ? 
	`isxdigô
(
∫
->
c
Ë: 
	`isdigô
‘n->c)Ë&& 
	`√xtc
(rn))

408 
cou¡
++;

409  
cou¡
;

410 
	}
}

414 #i‡!
deföed
(
l_gëloˇÀde˝oöt
)

415 
	#l_gëloˇÀde˝oöt
(Ë(
	`loˇÀc⁄v
()->
decimÆ_poöt
[0])

	)

424 
	$ªad_numbî
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

425 
RN
 
∫
;

426 
cou¡
 = 0;

427 
hex
 = 0;

428 
de˝
[2] = ".";

429 
∫
.
f
 = f;Ñn.
n
 = 0;

430 
de˝
[0] = 
	`l_gëloˇÀde˝oöt
();

431 
	`l_lockfûe
(
∫
.
f
);

432 dÿ{ 
∫
.
c
 = 
	`l_gëc
‘n.
f
); } 
	`is•a˚
(rn.c));

433 
	`ã°2
(&
∫
, "-+");

434 i‡(
	`ã°2
(&
∫
, "0")) {

435 i‡(
	`ã°2
(&
∫
, "xX")Ë
hex
 = 1;

436 
cou¡
 = 1;

438 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

439 i‡(
	`ã°2
(&
∫
, 
de˝
))

440 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

441 i‡(
cou¡
 > 0 && 
	`ã°2
(&
∫
, (
hex
 ? "pP" : "eE"))) {

442 
	`ã°2
(&
∫
, "-+");

443 
	`ªaddigôs
(&
∫
, 0);

445 
	`ungëc
(
∫
.
c
,Ñn.
f
);

446 
	`l_u∆ockfûe
(
∫
.
f
);

447 
∫
.
buff
[∫.
n
] = '\0';

448 i‡(
	`lua_°rögt⁄umbî
(
L
, 
∫
.
buff
))

451 
	`lua_pushnû
(
L
);

454 
	}
}

457 
	$ã°_eof
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

458 
c
 = 
	`gëc
(
f
);

459 
	`ungëc
(
c
, 
f
);

460 
	`lua_pushl°rög
(
L
, 
NULL
, 0);

461  (
c
 !
EOF
);

462 
	}
}

465 
	$ªad_löe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
ch›
) {

466 
luaL_Buf„r
 
b
;

467 
c
 = '\0';

468 
	`luaL_bufföô
(
L
, &
b
);

469 
c
 !
EOF
 && c != '\n') {

470 *
buff
 = 
	`luaL_¥ïbuf„r
(&
b
);

471 
i
 = 0;

472 
	`l_lockfûe
(
f
);

473 
i
 < 
LUAL_BUFFERSIZE
 && (
c
 = 
	`l_gëc
(
f
)Ë!
EOF
 && c != '\n')

474 
buff
[
i
++] = 
c
;

475 
	`l_u∆ockfûe
(
f
);

476 
	`luaL_addsize
(&
b
, 
i
);

478 i‡(!
ch›
 && 
c
 == '\n')

479 
	`luaL_addch¨
(&
b
, 
c
);

480 
	`luaL_pushªsu…
(&
b
);

482  (
c
 ='\n' || 
	`lua_øwÀn
(
L
, -1) > 0);

483 
	}
}

486 
	$ªad_Æl
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

487 
size_t
 
ƒ
;

488 
luaL_Buf„r
 
b
;

489 
	`luaL_bufföô
(
L
, &
b
);

491 *
p
 = 
	`luaL_¥ïbuffsize
(&
b
, 
LUAL_BUFFERSIZE
);

492 
ƒ
 = 
	`‰ód
(
p
, (), 
LUAL_BUFFERSIZE
, 
f
);

493 
	`luaL_addsize
(&
b
, 
ƒ
);

494 } 
ƒ
 =
LUAL_BUFFERSIZE
);

495 
	`luaL_pushªsu…
(&
b
);

496 
	}
}

499 
	$ªad_ch¨s
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
size_t
 
n
) {

500 
size_t
 
ƒ
;

501 *
p
;

502 
luaL_Buf„r
 
b
;

503 
	`luaL_bufföô
(
L
, &
b
);

504 
p
 = 
	`luaL_¥ïbuffsize
(&
b
, 
n
);

505 
ƒ
 = 
	`‰ód
(
p
, (), 
n
, 
f
);

506 
	`luaL_addsize
(&
b
, 
ƒ
);

507 
	`luaL_pushªsu…
(&
b
);

508  (
ƒ
 > 0);

509 
	}
}

512 
	$g_ªad
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
fú°
) {

513 
«rgs
 = 
	`lua_gët›
(
L
) - 1;

514 
suc˚ss
;

515 
n
;

516 
	`˛óªº
(
f
);

517 i‡(
«rgs
 == 0) {

518 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

519 
n
 = 
fú°
+1;

522 
	`luaL_check°ack
(
L
, 
«rgs
+
LUA_MINSTACK
, "too manyárguments");

523 
suc˚ss
 = 1;

524 
n
 = 
fú°
; 
«rgs
-- && 
suc˚ss
;Ç++) {

525 i‡(
	`lua_ty≥
(
L
, 
n
Ë=
LUA_TNUMBER
) {

526 
size_t
 
l
 = (size_t)
	`luaL_checköãgî
(
L
, 
n
);

527 
suc˚ss
 = (
l
 =0Ë? 
	`ã°_eof
(
L
, 
f
Ë: 
	`ªad_ch¨s
(L, f,Ü);

530 c⁄° *
p
 = 
	`luaL_check°rög
(
L
, 
n
);

531 i‡(*
p
 == '*')Ö++;

532 *
p
) {

534 
suc˚ss
 = 
	`ªad_numbî
(
L
, 
f
);

537 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

540 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 0);

543 
	`ªad_Æl
(
L
, 
f
);

544 
suc˚ss
 = 1;

547  
	`luaL_¨gîr‹
(
L
, 
n
, "invalid format");

552 i‡(
	`„º‹
(
f
))

553  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

554 i‡(!
suc˚ss
) {

555 
	`lua_p›
(
L
, 1);

556 
	`lua_pushnû
(
L
);

558  
n
 - 
fú°
;

559 
	}
}

562 
	$io_ªad
 (
lua_Sèã
 *
L
) {

563  
	`g_ªad
(
L
, 
	`gëiofûe
(L, 
IO_INPUT
), 1);

564 
	}
}

567 
	$f_ªad
 (
lua_Sèã
 *
L
) {

568  
	`g_ªad
(
L
, 
	`tofûe
(L), 2);

569 
	}
}

572 
	$io_ªadlöe
 (
lua_Sèã
 *
L
) {

573 
LSåóm
 *
p
 = (LSåóm *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(1));

574 
i
;

575 
n
 = ()
	`lua_toöãgî
(
L
, 
	`lua_upvÆueödex
(2));

576 i‡(
	`is˛o£d
(
p
))

577  
	`luaL_îr‹
(
L
, "file isálready closed");

578 
	`lua_£â›
(
L
 , 1);

579 
	`luaL_check°ack
(
L
, 
n
, "too manyárguments");

580 
i
 = 1; i <
n
; i++)

581 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(3 + 
i
));

582 
n
 = 
	`g_ªad
(
L
, 
p
->
f
, 2);

583 
	`lua_as£π
(
n
 > 0);

584 i‡(
	`lua_toboﬁón
(
L
, -
n
))

585  
n
;

587 i‡(
n
 > 1) {

589  
	`luaL_îr‹
(
L
, "%s", 
	`lua_to°rög
(L, -
n
 + 1));

591 i‡(
	`lua_toboﬁón
(
L
, 
	`lua_upvÆueödex
(3))) {

592 
	`lua_£â›
(
L
, 0);

593 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(1));

594 
	`aux_˛o£
(
L
);

598 
	}
}

603 
	$g_wrôe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
¨g
) {

604 
«rgs
 = 
	`lua_gët›
(
L
Ë- 
¨g
;

605 
°©us
 = 1;

606 ; 
«rgs
--; 
¨g
++) {

607 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNUMBER
) {

609 
Àn
 = 
	`lua_isöãgî
(
L
, 
¨g
)

610 ? 
	`Ârötf
(
f
, 
LUA_INTEGER_FMT
, 
	`lua_toöãgî
(
L
, 
¨g
))

611 : 
	`Ârötf
(
f
, 
LUA_NUMBER_FMT
, 
	`lua_t⁄umbî
(
L
, 
¨g
));

612 
°©us
 = sètu†&& (
Àn
 > 0);

615 
size_t
 
l
;

616 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

617 
°©us
 = sètu†&& (
	`fwrôe
(
s
, (), 
l
, 
f
) ==Ü);

620 i‡(
°©us
)  1;

621  
	`luaL_fûîesu…
(
L
, 
°©us
, 
NULL
);

622 
	}
}

625 
	$io_wrôe
 (
lua_Sèã
 *
L
) {

626  
	`g_wrôe
(
L
, 
	`gëiofûe
(L, 
IO_OUTPUT
), 1);

627 
	}
}

630 
	$f_wrôe
 (
lua_Sèã
 *
L
) {

631 
FILE
 *
f
 = 
	`tofûe
(
L
);

632 
	`lua_pushvÆue
(
L
, 1);

633  
	`g_wrôe
(
L
, 
f
, 2);

634 
	}
}

637 
	$f_£ek
 (
lua_Sèã
 *
L
) {

638 c⁄° 
mode
[] = {
SEEK_SET
, 
SEEK_CUR
, 
SEEK_END
};

639 c⁄° *c⁄° 
modíames
[] = {"£t", "cur", "íd", 
NULL
};

640 
FILE
 *
f
 = 
	`tofûe
(
L
);

641 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "cur", 
modíames
);

642 
lua_I¡egî
 
p3
 = 
	`luaL_›töãgî
(
L
, 3, 0);

643 
l_£eknum
 
off£t
 = (l_£eknum)
p3
;

644 
	`luaL_¨gcheck
(
L
, (
lua_I¡egî
)
off£t
 =
p3
, 3,

646 
›
 = 
	`l_f£ek
(
f
, 
off£t
, 
mode
[op]);

647 i‡(
›
)

648  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

650 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
	`l_·ñl
(
f
));

653 
	}
}

656 
	$f_£tvbuf
 (
lua_Sèã
 *
L
) {

657 c⁄° 
mode
[] = {
_IONBF
, 
_IOFBF
, 
_IOLBF
};

658 c⁄° *c⁄° 
modíames
[] = {"no", "fuŒ", "löe", 
NULL
};

659 
FILE
 *
f
 = 
	`tofûe
(
L
);

660 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, 
NULL
, 
modíames
);

661 
lua_I¡egî
 
sz
 = 
	`luaL_›töãgî
(
L
, 3, 
LUAL_BUFFERSIZE
);

662 
ªs
 = 
	`£tvbuf
(
f
, 
NULL
, 
mode
[
›
], (
size_t
)
sz
);

663  
	`luaL_fûîesu…
(
L
, 
ªs
 =0, 
NULL
);

664 
	}
}

668 
	$io_Êush
 (
lua_Sèã
 *
L
) {

669  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`gëiofûe
(L, 
IO_OUTPUT
)Ë=0, 
NULL
);

670 
	}
}

673 
	$f_Êush
 (
lua_Sèã
 *
L
) {

674  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`tofûe
(L)Ë=0, 
NULL
);

675 
	}
}

681 c⁄° 
luaL_Reg
 
	giﬁib
[] = {

682 {"˛o£", 
io_˛o£
},

683 {"Êush", 
io_Êush
},

684 {"öput", 
io_öput
},

685 {"löes", 
io_löes
},

686 {"›í", 
io_›í
},

687 {"ouçut", 
io_ouçut
},

688 {"p›í", 
io_p›í
},

689 {"ªad", 
io_ªad
},

690 {"tmpfûe", 
io_tmpfûe
},

691 {"ty≥", 
io_ty≥
},

692 {"wrôe", 
io_wrôe
},

693 {
NULL
, NULL}

700 c⁄° 
luaL_Reg
 
	gÊib
[] = {

701 {"˛o£", 
io_˛o£
},

702 {"Êush", 
f_Êush
},

703 {"löes", 
f_löes
},

704 {"ªad", 
f_ªad
},

705 {"£ek", 
f_£ek
},

706 {"£tvbuf", 
f_£tvbuf
},

707 {"wrôe", 
f_wrôe
},

708 {"__gc", 
f_gc
},

709 {"__to°rög", 
f_to°rög
},

710 {
NULL
, NULL}

714 
	$¸óãmëa
 (
lua_Sèã
 *
L
) {

715 
	`luaL_√wmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

716 
	`lua_pushvÆue
(
L
, -1);

717 
	`lua_£tfõld
(
L
, -2, "__index");

718 
	`luaL_£tfuncs
(
L
, 
Êib
, 0);

719 
	`lua_p›
(
L
, 1);

720 
	}
}

726 
	$io_no˛o£
 (
lua_Sèã
 *
L
) {

727 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

728 
p
->
˛o£f
 = &
io_no˛o£
;

729 
	`lua_pushnû
(
L
);

730 
	`lua_pushlôîÆ
(
L
, "cannot close standard file");

732 
	}
}

735 
	$¸óã°dfûe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, c⁄° *
k
,

736 c⁄° *
‚ame
) {

737 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

738 
p
->
f
 = f;

739 
p
->
˛o£f
 = &
io_no˛o£
;

740 i‡(
k
 !
NULL
) {

741 
	`lua_pushvÆue
(
L
, -1);

742 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
k
);

744 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

745 
	}
}

748 
	$lua_£t_°dfûes
(
lua_Sèã
 * 
L
, * 
ö
, * 
out
, * 
îr
)

750 
	`luaL_gëmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

751 i‡(
	`lua_i¢û
(
L
, -1)) {

752 
	`¥ötf
("luaL_getmetatable()Ñeturned NIL\n");

757 
	`¸óã°dfûe
(
L
, 
ö
, 
IO_INPUT
, "stdin");

758 
	`¸óã°dfûe
(
L
, 
out
, 
IO_OUTPUT
, "stdout");

759 
	`¸óã°dfûe
(
L
, 
îr
, 
NULL
, "stderr");

760 
	}
}

763 
	$lua_ª£t_°dfûes
(
lua_Sèã
 * 
L
)

765 
	`luaL_gëmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

766 i‡(
	`lua_i¢û
(
L
, -1))

770 
	`¸óã°dfûe
(
L
, 
°dö
, 
IO_INPUT
, "stdin");

771 
	`¸óã°dfûe
(
L
, 
°dout
, 
IO_OUTPUT
, "stdout");

772 
	`¸óã°dfûe
(
L
, 
°dîr
, 
NULL
, "stderr");

773 
	}
}

775 
LUAMOD_API
 
	$lua›í_io
 (
lua_Sèã
 *
L
) {

776 
	`luaL_√wlib
(
L
, 
iﬁib
);

777 
	`¸óãmëa
(
L
);

779 
	`¸óã°dfûe
(
L
, 
°dö
, 
IO_INPUT
, "stdin");

780 
	`¸óã°dfûe
(
L
, 
°dout
, 
IO_OUTPUT
, "stdout");

781 
	`¸óã°dfûe
(
L
, 
°dîr
, 
NULL
, "stderr");

783 
	}
}

	@lib/archive/lua-5.3.0/src/llex.c

7 
	#Œex_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"l˘y≥.h
"

19 
	~"ldo.h
"

20 
	~"lgc.h
"

21 
	~"Œex.h
"

22 
	~"lobje˘.h
"

23 
	~"Õ¨£r.h
"

24 
	~"l°©e.h
"

25 
	~"l°rög.h
"

26 
	~"…abÀ.h
"

27 
	~"lzio.h
"

31 
	#√xt
(
ls
Ë÷s->
cuºít
 = 
	`zgëc
÷s->
z
))

	)

35 
	#cuºIsNewlöe
(
ls
Ë÷s->
cuºít
 ='\n' ||Üs->cuºíà='\r')

	)

39 c⁄° *c⁄° 
	gluaX_tokís
 [] = {

50 
	#ßve_™d_√xt
(
ls
Ë(
	`ßve
÷s,Üs->
cuºít
), 
	`√xt
÷s))

	)

53 
l_n‹ë
 
Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
);

56 
	$ßve
 (
LexSèã
 *
ls
, 
c
) {

57 
Mbuf„r
 *
b
 = 
ls
->
buff
;

58 i‡(
	`luaZ_bufÊí
(
b
Ë+ 1 > 
	`luaZ_sizebuf„r
(b)) {

59 
size_t
 
√wsize
;

60 i‡(
	`luaZ_sizebuf„r
(
b
Ë>
MAX_SIZE
/2)

61 
	`Àxîr‹
(
ls
, "lexicalÉlementÅooÜong", 0);

62 
√wsize
 = 
	`luaZ_sizebuf„r
(
b
) * 2;

63 
	`luaZ_ªsizebuf„r
(
ls
->
L
, 
b
, 
√wsize
);

65 
b
->
buf„r
[
	`luaZ_bufÊí
(b)++] = 
	`ˇ°
(, 
c
);

66 
	}
}

69 
	$luaX_öô
 (
lua_Sèã
 *
L
) {

70 
i
;

71 
TSåög
 *
e
 = 
	`luaS_√w
(
L
, 
LUA_ENV
);

72 
	`luaC_fix
(
L
, 
	`obj2gco
(
e
));

73 
i
=0; i<
NUM_RESERVED
; i++) {

74 
TSåög
 *
ts
 = 
	`luaS_√w
(
L
, 
luaX_tokís
[
i
]);

75 
	`luaC_fix
(
L
, 
	`obj2gco
(
ts
));

76 
ts
->
exåa
 = 
	`ˇ°_byã
(
i
+1);

78 
	}
}

81 c⁄° *
	$luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
) {

82 i‡(
tokí
 < 
FIRST_RESERVED
) {

83 
	`lua_as£π
(
tokí
 =
	`ˇ°_uch¨
(token));

84  
	`luaO_pushf°rög
(
ls
->
L
, "'%c'", 
tokí
);

87 c⁄° *
s
 = 
luaX_tokís
[
tokí
 - 
FIRST_RESERVED
];

88 i‡(
tokí
 < 
TK_EOS
)

89  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
s
);

91  
s
;

93 
	}
}

96 c⁄° *
	$txtTokí
 (
LexSèã
 *
ls
, 
tokí
) {

97 
tokí
) {

98 
TK_NAME
: 
TK_STRING
:

99 
TK_FLT
: 
TK_INT
:

100 
	`ßve
(
ls
, '\0');

101  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
	`luaZ_buf„r
÷s->
buff
));

103  
	`luaX_tokí2°r
(
ls
, 
tokí
);

105 
	}
}

108 
l_n‹ë
 
	$Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
) {

109 
buff
[
LUA_IDSIZE
];

110 
	`luaO_chunkid
(
buff
, 
	`gë°r
(
ls
->
sour˚
), 
LUA_IDSIZE
);

111 
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
, "%s:%d: %s", 
buff
,Üs->
löíumbî
, msg);

112 i‡(
tokí
)

113 
	`luaO_pushf°rög
(
ls
->
L
, "%†√¨ %s", 
msg
, 
	`txtTokí
÷s, 
tokí
));

114 
	`luaD_throw
(
ls
->
L
, 
LUA_ERRSYNTAX
);

115 
	}
}

118 
l_n‹ë
 
	$luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

119 
	`Àxîr‹
(
ls
, 
msg
,Üs->
t
.
tokí
);

120 
	}
}

128 
TSåög
 *
	$luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
) {

129 
lua_Sèã
 *
L
 = 
ls
->L;

130 
TVÆue
 *
o
;

131 
TSåög
 *
ts
 = 
	`luaS_√wl°r
(
L
, 
°r
, 
l
);

132 
	`£tsvÆue2s
(
L
, L->
t›
++, 
ts
);

133 
o
 = 
	`luaH_£t
(
L
, 
ls
->
h
, L->
t›
 - 1);

134 i‡(
	`âi¢û
(
o
)) {

137 
	`£tbvÆue
(
o
, 1);

138 
	`luaC_checkGC
(
L
);

141 
ts
 = 
	`tsvÆue
(
	`key‰omvÆ
(
o
));

143 
L
->
t›
--;

144  
ts
;

145 
	}
}

152 
	$ö˛öíumbî
 (
LexSèã
 *
ls
) {

153 
ﬁd
 = 
ls
->
cuºít
;

154 
	`lua_as£π
(
	`cuºIsNewlöe
(
ls
));

155 
	`√xt
(
ls
);

156 i‡(
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
ﬁd
)

157 
	`√xt
(
ls
);

158 i‡(++
ls
->
löíumbî
 >
MAX_INT
)

159 
	`Àxîr‹
(
ls
, "chunk hasÅoo manyÜines", 0);

160 
	}
}

163 
	$luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
, 
TSåög
 *
sour˚
,

164 
fú°ch¨
) {

165 
ls
->
t
.
tokí
 = 0;

166 
ls
->
de˝oöt
 = '.';

167 
ls
->
L
 = L;

168 
ls
->
cuºít
 = 
fú°ch¨
;

169 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

170 
ls
->
z
 = z;

171 
ls
->
fs
 = 
NULL
;

172 
ls
->
löíumbî
 = 1;

173 
ls
->
œ°löe
 = 1;

174 
ls
->
sour˚
 = source;

175 
ls
->
ívn
 = 
	`luaS_√w
(
L
, 
LUA_ENV
);

176 
	`luaZ_ªsizebuf„r
(
ls
->
L
,Üs->
buff
, 
LUA_MINBUFFER
);

177 
	}
}

188 
	$check_√xt1
 (
LexSèã
 *
ls
, 
c
) {

189 i‡(
ls
->
cuºít
 =
c
) {

190 
	`√xt
(
ls
);

194 
	}
}

201 
	$check_√xt2
 (
LexSèã
 *
ls
, c⁄° *
£t
) {

202 
	`lua_as£π
(
£t
[2] == '\0');

203 i‡(
ls
->
cuºít
 =
£t
[0] ||Üs->current == set[1]) {

204 
	`ßve_™d_√xt
(
ls
);

208 
	}
}

214 
	$buf‰ïœ˚
 (
LexSèã
 *
ls
, 
‰om
, 
to
) {

215 i‡(
‰om
 !
to
) {

216 
size_t
 
n
 = 
	`luaZ_bufÊí
(
ls
->
buff
);

217 *
p
 = 
	`luaZ_buf„r
(
ls
->
buff
);

218 
n
--)

219 i‡(
p
[
n
] =
‰om
Ëp[n] = 
to
;

221 
	}
}

224 #i‡!
deföed
(
l_gëloˇÀde˝oöt
)

225 
	#l_gëloˇÀde˝oöt
(Ë(
	`loˇÀc⁄v
()->
decimÆ_poöt
[0])

	)

229 
	#buff2num
(
b
,
o
Ë(
	`luaO_°r2num
(
	`luaZ_buf„r
(b), oË!0)

	)

235 
	$åyde˝oöt
 (
LexSèã
 *
ls
, 
TVÆue
 *
o
) {

236 
ﬁd
 = 
ls
->
de˝oöt
;

237 
ls
->
de˝oöt
 = 
	`l_gëloˇÀde˝oöt
();

238 
	`buf‰ïœ˚
(
ls
, 
ﬁd
,Üs->
de˝oöt
);

239 i‡(!
	`buff2num
(
ls
->
buff
, 
o
)) {

241 
	`buf‰ïœ˚
(
ls
,Üs->
de˝oöt
, '.');

242 
	`Àxîr‹
(
ls
, "mÆf‹medÇumbî", 
TK_FLT
);

244 
	}
}

252 
	$ªad_numîÆ
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

253 
TVÆue
 
obj
;

254 c⁄° *
expo
 = "Ee";

255 
fú°
 = 
ls
->
cuºít
;

256 
	`lua_as£π
(
	`lisdigô
(
ls
->
cuºít
));

257 
	`ßve_™d_√xt
(
ls
);

258 i‡(
fú°
 ='0' && 
	`check_√xt2
(
ls
, "xX"))

259 
expo
 = "Pp";

261 i‡(
	`check_√xt2
(
ls
, 
expo
))

262 
	`check_√xt2
(
ls
, "-+");

263 i‡(
	`lisxdigô
(
ls
->
cuºít
))

264 
	`ßve_™d_√xt
(
ls
);

265 i‡(
ls
->
cuºít
 == '.')

266 
	`ßve_™d_√xt
(
ls
);

269 
	`ßve
(
ls
, '\0');

270 
	`buf‰ïœ˚
(
ls
, '.',Üs->
de˝oöt
);

271 i‡(!
	`buff2num
(
ls
->
buff
, &
obj
))

272 
	`åyde˝oöt
(
ls
, &
obj
);

273 i‡(
	`âisöãgî
(&
obj
)) {

274 
£möfo
->
i
 = 
	`ivÆue
(&
obj
);

275  
TK_INT
;

278 
	`lua_as£π
(
	`âisÊﬂt
(&
obj
));

279 
£möfo
->
r
 = 
	`ÊtvÆue
(&
obj
);

280  
TK_FLT
;

282 
	}
}

289 
	$skù_£p
 (
LexSèã
 *
ls
) {

290 
cou¡
 = 0;

291 
s
 = 
ls
->
cuºít
;

292 
	`lua_as£π
(
s
 == '[' || s == ']');

293 
	`ßve_™d_√xt
(
ls
);

294 
ls
->
cuºít
 == '=') {

295 
	`ßve_™d_√xt
(
ls
);

296 
cou¡
++;

298  (
ls
->
cuºít
 =
s
Ë? 
cou¡
 : (-count) - 1;

299 
	}
}

302 
	$ªad_l⁄g_°rög
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
, 
£p
) {

303 
löe
 = 
ls
->
löíumbî
;

304 
	`ßve_™d_√xt
(
ls
);

305 i‡(
	`cuºIsNewlöe
(
ls
))

306 
	`ö˛öíumbî
(
ls
);

308 
ls
->
cuºít
) {

309 
EOZ
: {

310 c⁄° *
wh©
 = (
£möfo
 ? "string" : "comment");

311 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

312 "unföishedÜ⁄g %†(°¨tögáàlöê%d)", 
wh©
, 
löe
);

313 
	`Àxîr‹
(
ls
, 
msg
, 
TK_EOS
);

317 i‡(
	`skù_£p
(
ls
Ë=
£p
) {

318 
	`ßve_™d_√xt
(
ls
);

319 
ídlo›
;

324 
	`ßve
(
ls
, '\n');

325 
	`ö˛öíumbî
(
ls
);

326 i‡(!
£möfo
Ë
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

330 i‡(
£möfo
Ë
	`ßve_™d_√xt
(
ls
);

331 
	`√xt
(
ls
);

334 } 
ídlo›
:

335 i‡(
£möfo
)

336 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
Ë+ (2 + 
£p
),

337 
	`luaZ_bufÊí
(
ls
->
buff
Ë- 2*(2 + 
£p
));

338 
	}
}

341 
	$esccheck
 (
LexSèã
 *
ls
, 
c
, c⁄° *
msg
) {

342 i‡(!
c
) {

343 i‡(
ls
->
cuºít
 !
EOZ
)

344 
	`ßve_™d_√xt
(
ls
);

345 
	`Àxîr‹
(
ls
, 
msg
, 
TK_STRING
);

347 
	}
}

350 
	$gëhexa
 (
LexSèã
 *
ls
) {

351 
	`ßve_™d_√xt
(
ls
);

352 
	`esccheck
 (
ls
, 
	`lisxdigô
÷s->
cuºít
), "hexadecimal digitÉxpected");

353  
	`luaO_hexavÆue
(
ls
->
cuºít
);

354 
	}
}

357 
	$ªadhex´sc
 (
LexSèã
 *
ls
) {

358 
r
 = 
	`gëhexa
(
ls
);

359 
r
 = (∏<< 4Ë+ 
	`gëhexa
(
ls
);

360 
	`luaZ_buf‰emove
(
ls
->
buff
, 2);

361  
r
;

362 
	}
}

365 
	$ªadutf8esc
 (
LexSèã
 *
ls
) {

366 
r
;

367 
i
 = 4;

368 
	`ßve_™d_√xt
(
ls
);

369 
	`esccheck
(
ls
,Üs->
cuºít
 == '{', "missing '{'");

370 
r
 = 
	`gëhexa
(
ls
);

371 (
	`ßve_™d_√xt
(
ls
), 
	`lisxdigô
÷s->
cuºít
))) {

372 
i
++;

373 
r
 = (∏<< 4Ë+ 
	`luaO_hexavÆue
(
ls
->
cuºít
);

374 
	`esccheck
(
ls
, 
r
 <= 0x10FFFF, "UTF-8 valueÅooÜarge");

376 
	`esccheck
(
ls
,Üs->
cuºít
 == '}', "missing '}'");

377 
	`√xt
(
ls
);

378 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

379  
r
;

380 
	}
}

383 
	$utf8esc
 (
LexSèã
 *
ls
) {

384 
buff
[
UTF8BUFFSZ
];

385 
n
 = 
	`luaO_utf8esc
(
buff
, 
	`ªadutf8esc
(
ls
));

386 ; 
n
 > 0;Ç--)

387 
	`ßve
(
ls
, 
buff
[
UTF8BUFFSZ
 - 
n
]);

388 
	}
}

391 
	$ªadde˚sc
 (
LexSèã
 *
ls
) {

392 
i
;

393 
r
 = 0;

394 
i
 = 0; i < 3 && 
	`lisdigô
(
ls
->
cuºít
); i++) {

395 
r
 = 10*∏+ 
ls
->
cuºít
 - '0';

396 
	`ßve_™d_√xt
(
ls
);

398 
	`esccheck
(
ls
, 
r
 <
UCHAR_MAX
, "decimalÉscapeÅooÜarge");

399 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

400  
r
;

401 
	}
}

404 
	$ªad_°rög
 (
LexSèã
 *
ls
, 
dñ
, 
SemInfo
 *
£möfo
) {

405 
	`ßve_™d_√xt
(
ls
);

406 
ls
->
cuºít
 !
dñ
) {

407 
ls
->
cuºít
) {

408 
EOZ
:

409 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_EOS
);

413 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_STRING
);

416 
c
;

417 
	`ßve_™d_√xt
(
ls
);

418 
ls
->
cuºít
) {

419 'a': 
c
 = '\a'; 
ªad_ßve
;

420 'b': 
c
 = '\b'; 
ªad_ßve
;

421 'f': 
c
 = '\f'; 
ªad_ßve
;

422 'n': 
c
 = '\n'; 
ªad_ßve
;

423 'r': 
c
 = '\r'; 
ªad_ßve
;

424 't': 
c
 = '\t'; 
ªad_ßve
;

425 'v': 
c
 = '\v'; 
ªad_ßve
;

426 'x': 
c
 = 
	`ªadhex´sc
(
ls
); 
ªad_ßve
;

427 'u': 
	`utf8esc
(
ls
); 
no_ßve
;

429 
	`ö˛öíumbî
(
ls
); 
c
 = '\n'; 
⁄ly_ßve
;

431 
c
 = 
ls
->
cuºít
; 
ªad_ßve
;

432 
EOZ
: 
no_ßve
;

434 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

435 
	`√xt
(
ls
);

436 
	`lis•a˚
(
ls
->
cuºít
)) {

437 i‡(
	`cuºIsNewlöe
(
ls
)Ë
	`ö˛öíumbî
(ls);

438 
	`√xt
(
ls
);

440 
no_ßve
;

443 
	`esccheck
(
ls
, 
	`lisdigô
÷s->
cuºít
), "invalidÉscape sequence");

444 
c
 = 
	`ªadde˚sc
(
ls
);

445 
⁄ly_ßve
;

448 
ªad_ßve
:

449 
	`√xt
(
ls
);

451 
⁄ly_ßve
:

452 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

453 
	`ßve
(
ls
, 
c
);

455 
no_ßve
: ;

458 
	`ßve_™d_√xt
(
ls
);

461 
	`ßve_™d_√xt
(
ls
);

462 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
) + 1,

463 
	`luaZ_bufÊí
(
ls
->
buff
) - 2);

464 
	}
}

467 
	$Œex
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

468 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

470 
ls
->
cuºít
) {

472 
	`ö˛öíumbî
(
ls
);

476 
	`√xt
(
ls
);

480 
	`√xt
(
ls
);

481 i‡(
ls
->
cuºít
 != '-')  '-';

483 
	`√xt
(
ls
);

484 i‡(
ls
->
cuºít
 == '[') {

485 
£p
 = 
	`skù_£p
(
ls
);

486 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

487 i‡(
£p
 >= 0) {

488 
	`ªad_l⁄g_°rög
(
ls
, 
NULL
, 
£p
);

489 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

494 !
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
EOZ
)

495 
	`√xt
(
ls
);

499 
£p
 = 
	`skù_£p
(
ls
);

500 i‡(
£p
 >= 0) {

501 
	`ªad_l⁄g_°rög
(
ls
, 
£möfo
, 
£p
);

502  
TK_STRING
;

504 i‡(
£p
 == -1)  '[';

505 
	`Àxîr‹
(
ls
, "övÆidÜ⁄g såög dñimôî", 
TK_STRING
);

508 
	`√xt
(
ls
);

509 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_EQ
;

513 
	`√xt
(
ls
);

514 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_LE
;

515 i‡(
	`check_√xt1
(
ls
, '<')Ë 
TK_SHL
;

519 
	`√xt
(
ls
);

520 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_GE
;

521 i‡(
	`check_√xt1
(
ls
, '>')Ë 
TK_SHR
;

525 
	`√xt
(
ls
);

526 i‡(
	`check_√xt1
(
ls
, '/')Ë 
TK_IDIV
;

530 
	`√xt
(
ls
);

531 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_NE
;

535 
	`√xt
(
ls
);

536 i‡(
	`check_√xt1
(
ls
, ':')Ë 
TK_DBCOLON
;

540 
	`ªad_°rög
(
ls
,Üs->
cuºít
, 
£möfo
);

541  
TK_STRING
;

544 
	`ßve_™d_√xt
(
ls
);

545 i‡(
	`check_√xt1
(
ls
, '.')) {

546 i‡(
	`check_√xt1
(
ls
, '.'))

547  
TK_DOTS
;

548  
TK_CONCAT
;

550 i‡(!
	`lisdigô
(
ls
->
cuºít
))  '.';

551  
	`ªad_numîÆ
(
ls
, 
£möfo
);

555  
	`ªad_numîÆ
(
ls
, 
£möfo
);

557 
EOZ
: {

558  
TK_EOS
;

561 i‡(
	`li¶Æpha
(
ls
->
cuºít
)) {

562 
TSåög
 *
ts
;

564 
	`ßve_™d_√xt
(
ls
);

565 } 
	`li¶Ænum
(
ls
->
cuºít
));

566 
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
),

567 
	`luaZ_bufÊí
(
ls
->
buff
));

568 
£möfo
->
ts
 =Ås;

569 i‡(
	`i§e£rved
(
ts
))

570  
ts
->
exåa
 - 1 + 
FIRST_RESERVED
;

572  
TK_NAME
;

576 
c
 = 
ls
->
cuºít
;

577 
	`√xt
(
ls
);

578  
c
;

583 
	}
}

586 
	$luaX_√xt
 (
LexSèã
 *
ls
) {

587 
ls
->
œ°löe
 =Üs->
löíumbî
;

588 i‡(
ls
->
lookahód
.
tokí
 !
TK_EOS
) {

589 
ls
->
t
 =Üs->
lookahód
;

590 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

593 
ls
->
t
.
tokí
 = 
	`Œex
÷s, &ls->t.
£möfo
);

594 
	}
}

597 
	$luaX_lookahód
 (
LexSèã
 *
ls
) {

598 
	`lua_as£π
(
ls
->
lookahód
.
tokí
 =
TK_EOS
);

599 
ls
->
lookahód
.
tokí
 = 
	`Œex
÷s, &ls->lookahód.
£möfo
);

600  
ls
->
lookahód
.
tokí
;

601 
	}
}

	@lib/archive/lua-5.3.0/src/llex.h

7 #i‚de‡
Œex_h


8 
	#Œex_h


	)

10 
	~"lobje˘.h
"

11 
	~"lzio.h
"

14 
	#FIRST_RESERVED
 257

	)

17 #i‡!
deföed
(
LUA_ENV
)

18 
	#LUA_ENV
 "_ENV"

	)

26 
	eRESERVED
 {

28 
	mTK_AND
 = 
FIRST_RESERVED
, 
	mTK_BREAK
,

29 
	mTK_DO
, 
	mTK_ELSE
, 
	mTK_ELSEIF
, 
	mTK_END
, 
	mTK_FALSE
, 
	mTK_FOR
, 
	mTK_FUNCTION
,

30 
	mTK_GOTO
, 
	mTK_IF
, 
	mTK_IN
, 
	mTK_LOCAL
, 
	mTK_NIL
, 
	mTK_NOT
, 
	mTK_OR
, 
	mTK_REPEAT
,

31 
	mTK_RETURN
, 
	mTK_THEN
, 
	mTK_TRUE
, 
	mTK_UNTIL
, 
	mTK_WHILE
,

33 
	mTK_IDIV
, 
	mTK_CONCAT
, 
	mTK_DOTS
, 
	mTK_EQ
, 
	mTK_GE
, 
	mTK_LE
, 
	mTK_NE
,

34 
	mTK_SHL
, 
	mTK_SHR
,

35 
	mTK_DBCOLON
, 
	mTK_EOS
,

36 
	mTK_FLT
, 
	mTK_INT
, 
	mTK_NAME
, 
	mTK_STRING


40 
	#NUM_RESERVED
 (
	`ˇ°
(, 
TK_WHILE
-
FIRST_RESERVED
+1))

	)

44 
lua_Numbî
 
	mr
;

45 
lua_I¡egî
 
	mi
;

46 
TSåög
 *
	mts
;

47 } 
	tSemInfo
;

50 
	sTokí
 {

51 
	mtokí
;

52 
SemInfo
 
	m£möfo
;

53 } 
	tTokí
;

58 
	sLexSèã
 {

59 
	mcuºít
;

60 
	mlöíumbî
;

61 
	mœ°löe
;

62 
Tokí
 
	mt
;

63 
Tokí
 
	mlookahód
;

64 
FuncSèã
 *
	mfs
;

65 
lua_Sèã
 *
	mL
;

66 
ZIO
 *
	mz
;

67 
Mbuf„r
 *
	mbuff
;

68 
TabÀ
 *
	mh
;

69 
Dynd©a
 *
	mdyd
;

70 
TSåög
 *
	msour˚
;

71 
TSåög
 *
	mívn
;

72 
	mde˝oöt
;

73 } 
	tLexSèã
;

76 
LUAI_FUNC
 
luaX_öô
 (
lua_Sèã
 *
L
);

77 
LUAI_FUNC
 
luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
,

78 
TSåög
 *
sour˚
, 
fú°ch¨
);

79 
LUAI_FUNC
 
TSåög
 *
luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
);

80 
LUAI_FUNC
 
luaX_√xt
 (
LexSèã
 *
ls
);

81 
LUAI_FUNC
 
luaX_lookahód
 (
LexSèã
 *
ls
);

82 
LUAI_FUNC
 
l_n‹ë
 
luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
s
);

83 
LUAI_FUNC
 c⁄° *
luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
);

	@lib/archive/lua-5.3.0/src/llimits.h

7 #i‚de‡
Œimôs_h


8 
	#Œimôs_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

15 
	~"lua.h
"

22 #i‡
deföed
(
LUAI_MEM
)

23 
LUAI_UMEM
 
	tlu_mem
;

24 
LUAI_MEM
 
	tl_mem
;

25 #ñi‡
LUAI_BITSINT
 >= 32

26 
size_t
 
	tlu_mem
;

27 
±rdiff_t
 
	tl_mem
;

29 
	tlu_mem
;

30 
	tl_mem
;

35 
	tlu_byã
;

39 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

42 
	#MAX_SIZE
 ((
size_t
Ë< (
lua_I¡egî
Ë? 
MAX_SIZET
 \

43 : (
size_t
)(
LUA_MAXINTEGER
))

	)

46 
	#MAX_LUMEM
 ((
lu_mem
)(~÷u_mem)0))

	)

48 
	#MAX_LMEM
 ((
l_mem
)(
MAX_LUMEM
 >> 1))

	)

51 
	#MAX_INT
 
INT_MAX


	)

59 
	#poöt2öt
(
p
Ë(()((
size_t
)’Ë& 
UINT_MAX
))

	)

64 #i‡
deföed
(
LUAI_USER_ALIGNMENT_T
)

65 
LUAI_USER_ALIGNMENT_T
 
	tL_UmaxÆign
;

67 uni⁄ { 
	mu
; *
	ms
; 
lua_I¡egî
 
	mi
; 
	ml
; } 
	tL_UmaxÆign
;

73 
LUAI_UACNUMBER
 
	tl_uacNumbî
;

74 
LUAI_UACINT
 
	tl_uacI¡
;

78 #i‡
deföed
(
lua_as£π
)

79 
	#check_exp
(
c
,
e
Ë(
	`lua_as£π
(c), (e))

	)

81 
	#lua_l⁄gas£π
(
c
Ë{ i‡(!(c)Ë
	`lua_as£π
(0); }

	)

83 
	#lua_as£π
(
c
Ë(()0)

	)

84 
	#check_exp
(
c
,
e
Ë”)

	)

85 
	#lua_l⁄gas£π
(
c
Ë(()0)

	)

91 #i‡
deföed
(
LUA_USE_APICHECK
)

92 
	~<as£π.h
>

93 
	#luai_≠icheck
(
e
Ë
	`as£π
”)

	)

95 
	#luai_≠icheck
(
e
Ë
	`lua_as£π
”)

	)

99 
	#≠i_check
(
e
,
msg
Ë
	`luai_≠icheck
(”Ë&& msg)

	)

102 #i‡!
deföed
(
UNUSED
)

103 
	#UNUSED
(
x
Ë(()(x)Ë

	)

107 
	#ˇ°
(
t
, 
exp
Ë(—)”xp))

	)

109 
	#ˇ°_void
(
i
Ë
	`ˇ°
(, (i))

	)

110 
	#ˇ°_byã
(
i
Ë
	`ˇ°
(
lu_byã
, (i))

	)

111 
	#ˇ°_num
(
i
Ë
	`ˇ°
(
lua_Numbî
, (i))

	)

112 
	#ˇ°_öt
(
i
Ë
	`ˇ°
(, (i))

	)

113 
	#ˇ°_uch¨
(
i
Ë
	`ˇ°
(, (i))

	)

117 #i‡!
deföed
(
l_ˇ°S2U
)

118 
	#l_ˇ°S2U
(
i
Ë((
lua_Unsig√d
)(i))

	)

126 #i‡!
deföed
(
l_ˇ°U2S
)

127 
	#l_ˇ°U2S
(
i
Ë((
lua_I¡egî
)(i))

	)

134 #i‡
deföed
(
__GNUC__
)

135 
	#l_n‹ë
 
	`__©åibuã__
((
n‹ëu∫
))

	)

136 #ñi‡
deföed
(
_MSC_VER
) && _MSC_VER >= 1200

137 
	#l_n‹ë
 
	`__de˛•ec
(
n‹ëu∫
)

	)

139 
	#l_n‹ë
 

	)

148 #i‡!
deföed
(
LUAI_MAXCCALLS
)

149 
	#LUAI_MAXCCALLS
 200

	)

156 
	#MAXUPVAL
 
UCHAR_MAX


	)

163 #i‡
LUAI_BITSINT
 >= 32

164 
	tIn°ru˘i⁄
;

166 
	tIn°ru˘i⁄
;

173 #i‡!
deföed
(
MINSTRTABSIZE
)

174 
	#MINSTRTABSIZE
 64

	)

179 #i‡!
deföed
(
LUA_MINBUFFER
)

180 
	#LUA_MINBUFFER
 32

	)

184 #i‡!
deföed
(
lua_lock
)

185 
	#lua_lock
(
L
Ë((Ë0)

	)

186 
	#lua_u∆ock
(
L
Ë((Ë0)

	)

189 #i‡!
deföed
(
luai_thªadyõld
)

190 
	#luai_thªadyõld
(
L
Ë{
	`lua_u∆ock
(L); 
	`lua_lock
(L);}

	)

199 #i‡!
deföed
(
luai_u£r°©e›í
)

200 
	#luai_u£r°©e›í
(
L
Ë(()L)

	)

203 #i‡!
deföed
(
luai_u£r°©e˛o£
)

204 
	#luai_u£r°©e˛o£
(
L
Ë(()L)

	)

207 #i‡!
deföed
(
luai_u£r°©ëhªad
)

208 
	#luai_u£r°©ëhªad
(
L
,
L1
Ë(()L)

	)

211 #i‡!
deföed
(
luai_u£r°©e‰ì
)

212 
	#luai_u£r°©e‰ì
(
L
,
L1
Ë(()L)

	)

215 #i‡!
deföed
(
luai_u£r°©îesume
)

216 
	#luai_u£r°©îesume
(
L
,
n
Ë(()L)

	)

219 #i‡!
deföed
(
luai_u£r°©eyõld
)

220 
	#luai_u£r°©eyõld
(
L
,
n
Ë(()L)

	)

228 #i‡!
deföed
(
HARDSTACKTESTS
)

229 
	#c⁄dmove°ack
(
L
Ë(()0)

	)

232 
	#c⁄dmove°ack
(
L
Ë
	`luaD_ªÆloc°ack
((L), (L)->
°acksize
)

	)

235 #i‡!
deföed
(
HARDMEMTESTS
)

236 
	#c⁄dch™gemem
(
L
Ë
	`c⁄dmove°ack
(L)

	)

238 
	#c⁄dch™gemem
(
L
) \

239 (()(!(
	`G
(
L
)->
g¸u¬ög
Ë|| (
	`luaC_fuŒgc
(L, 0), 1)))

	)

	@lib/archive/lua-5.3.0/src/lmathlib.c

7 
	#lm©hlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

14 
	~<m©h.h
>

16 
	~"lua.h
"

18 
	~"œuxlib.h
"

19 
	~"luÆib.h
"

22 #unde‡
PI


23 
	#PI
 (
	`l_m©h›
(3.141592653589793238462643383279502884))

	)

26 #i‡!
deföed
(
l_ønd
)

27 #i‡
deföed
(
LUA_USE_POSIX
)

28 
	#l_ønd
(Ë
	`øndom
()

	)

29 
	#l_§™d
(
x
Ë
	`§™dom
(x)

	)

30 
	#L_RANDMAX
 2147483647

	)

32 
	#l_ønd
(Ë
	`ønd
()

	)

33 
	#l_§™d
(
x
Ë
	`§™d
(x)

	)

34 
	#L_RANDMAX
 
RAND_MAX


	)

39 
	$m©h_abs
 (
lua_Sèã
 *
L
) {

40 i‡(
	`lua_isöãgî
(
L
, 1)) {

41 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 1);

42 i‡(
n
 < 0Ë¿(
lua_I¡egî
)(0u -Ç);

43 
	`lua_pushöãgî
(
L
, 
n
);

46 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Ábs
)(
	`luaL_checknumbî
(L, 1)));

48 
	}
}

50 
	$m©h_sö
 (
lua_Sèã
 *
L
) {

51 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sö
)(
	`luaL_checknumbî
(L, 1)));

53 
	}
}

55 
	$m©h_cos
 (
lua_Sèã
 *
L
) {

56 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cos
)(
	`luaL_checknumbî
(L, 1)));

58 
	}
}

60 
	$m©h_èn
 (
lua_Sèã
 *
L
) {

61 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
èn
)(
	`luaL_checknumbî
(L, 1)));

63 
	}
}

65 
	$m©h_asö
 (
lua_Sèã
 *
L
) {

66 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
asö
)(
	`luaL_checknumbî
(L, 1)));

68 
	}
}

70 
	$m©h_acos
 (
lua_Sèã
 *
L
) {

71 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
acos
)(
	`luaL_checknumbî
(L, 1)));

73 
	}
}

75 
	$m©h_©™
 (
lua_Sèã
 *
L
) {

76 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 1);

77 
lua_Numbî
 
x
 = 
	`luaL_›äumbî
(
L
, 2, 1);

78 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
©™2
)(
y
, 
x
));

80 
	}
}

83 
	$m©h_toöt
 (
lua_Sèã
 *
L
) {

84 
vÆid
;

85 
lua_I¡egî
 
n
 = 
	`lua_toöãgîx
(
L
, 1, &
vÆid
);

86 i‡(
vÆid
)

87 
	`lua_pushöãgî
(
L
, 
n
);

89 
	`luaL_check™y
(
L
, 1);

90 
	`lua_pushnû
(
L
);

93 
	}
}

96 
	$pushnumöt
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
d
) {

97 
lua_I¡egî
 
n
;

98 i‡(
	`lua_numbîtoöãgî
(
d
, &
n
))

99 
	`lua_pushöãgî
(
L
, 
n
);

101 
	`lua_pushnumbî
(
L
, 
d
);

102 
	}
}

105 
	$m©h_Êo‹
 (
lua_Sèã
 *
L
) {

106 i‡(
	`lua_isöãgî
(
L
, 1))

107 
	`lua_£â›
(
L
, 1);

109 
lua_Numbî
 
d
 = 
	`l_m©h›
(
Êo‹
)(
	`luaL_checknumbî
(
L
, 1));

110 
	`pushnumöt
(
L
, 
d
);

113 
	}
}

116 
	$m©h_˚û
 (
lua_Sèã
 *
L
) {

117 i‡(
	`lua_isöãgî
(
L
, 1))

118 
	`lua_£â›
(
L
, 1);

120 
lua_Numbî
 
d
 = 
	`l_m©h›
(
˚û
)(
	`luaL_checknumbî
(
L
, 1));

121 
	`pushnumöt
(
L
, 
d
);

124 
	}
}

127 
	$m©h_fmod
 (
lua_Sèã
 *
L
) {

128 i‡(
	`lua_isöãgî
(
L
, 1) &&Üua_isinteger(L, 2)) {

129 
lua_I¡egî
 
d
 = 
	`lua_toöãgî
(
L
, 2);

130 i‡((
lua_Unsig√d
)
d
 + 1u <= 1u) {

131 
	`luaL_¨gcheck
(
L
, 
d
 != 0, 2, "zero");

132 
	`lua_pushöãgî
(
L
, 0);

135 
	`lua_pushöãgî
(
L
, 
	`lua_toöãgî
(L, 1Ë% 
d
);

138 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
fmod
)(
	`luaL_checknumbî
(L, 1),

139 
	`luaL_checknumbî
(
L
, 2)));

141 
	}
}

149 
	$m©h_modf
 (
lua_Sèã
 *
L
) {

150 i‡(
	`lua_isöãgî
(
L
 ,1)) {

151 
	`lua_£â›
(
L
, 1);

152 
	`lua_pushnumbî
(
L
, 0);

155 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 1);

157 
lua_Numbî
 
ù
 = (
n
 < 0Ë? 
	`l_m©h›
(
˚û
)“Ë:Ü_m©h›(
Êo‹
)(n);

158 
	`pushnumöt
(
L
, 
ù
);

160 
	`lua_pushnumbî
(
L
, (
n
 =
ù
Ë? 
	`l_m©h›
(0.0) : (n - ip));

163 
	}
}

166 
	$m©h_sqπ
 (
lua_Sèã
 *
L
) {

167 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sqπ
)(
	`luaL_checknumbî
(L, 1)));

169 
	}
}

172 
	$m©h_u…
 (
lua_Sèã
 *
L
) {

173 
lua_I¡egî
 
a
 = 
	`luaL_checköãgî
(
L
, 1);

174 
lua_I¡egî
 
b
 = 
	`luaL_checköãgî
(
L
, 2);

175 
	`lua_pushboﬁón
(
L
, (
lua_Unsig√d
)
a
 < (lua_Unsig√d)
b
);

177 
	}
}

179 
	$m©h_log
 (
lua_Sèã
 *
L
) {

180 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

181 
lua_Numbî
 
ªs
;

182 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2))

183 
ªs
 = 
	`l_m©h›
(
log
)(
x
);

185 
lua_Numbî
 
ba£
 = 
	`luaL_checknumbî
(
L
, 2);

186 i‡(
ba£
 =10.0Ë
ªs
 = 
	`l_m©h›
(
log10
)(
x
);

187 
ªs
 = 
	`l_m©h›
(
log
)(
x
)/l_m©h›÷og)(
ba£
);

189 
	`lua_pushnumbî
(
L
, 
ªs
);

191 
	}
}

193 
	$m©h_exp
 (
lua_Sèã
 *
L
) {

194 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
exp
)(
	`luaL_checknumbî
(L, 1)));

196 
	}
}

198 
	$m©h_deg
 (
lua_Sèã
 *
L
) {

199 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
	`l_m©h›
(180.0Ë/ 
PI
));

201 
	}
}

203 
	$m©h_ød
 (
lua_Sèã
 *
L
) {

204 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
PI
 / 
	`l_m©h›
(180.0)));

206 
	}
}

209 
	$m©h_mö
 (
lua_Sèã
 *
L
) {

210 
n
 = 
	`lua_gët›
(
L
);

211 
imö
 = 1;

212 
i
;

213 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

214 
i
 = 2; i <
n
; i++) {

215 i‡(
	`lua_com∑ª
(
L
, 
i
, 
imö
, 
LUA_OPLT
))

216 
imö
 = 
i
;

218 
	`lua_pushvÆue
(
L
, 
imö
);

220 
	}
}

223 
	$m©h_max
 (
lua_Sèã
 *
L
) {

224 
n
 = 
	`lua_gët›
(
L
);

225 
imax
 = 1;

226 
i
;

227 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

228 
i
 = 2; i <
n
; i++) {

229 i‡(
	`lua_com∑ª
(
L
, 
imax
, 
i
, 
LUA_OPLT
))

230 
imax
 = 
i
;

232 
	`lua_pushvÆue
(
L
, 
imax
);

234 
	}
}

241 
	$m©h_øndom
 (
lua_Sèã
 *
L
) {

242 
lua_I¡egî
 
low
, 
up
;

243 
r
 = ()
	`l_ønd
(Ë* (1.0 / (()
L_RANDMAX
 + 1.0));

244 
	`lua_gët›
(
L
)) {

246 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
r
);

250 
low
 = 1;

251 
up
 = 
	`luaL_checköãgî
(
L
, 1);

255 
low
 = 
	`luaL_checköãgî
(
L
, 1);

256 
up
 = 
	`luaL_checköãgî
(
L
, 2);

259 :  
	`luaL_îr‹
(
L
, "wrongÇumber ofárguments");

262 
	`luaL_¨gcheck
(
L
, 
low
 <
up
, 1, "interval isÉmpty");

263 
	`luaL_¨gcheck
(
L
, 
low
 >0 || 
up
 <
LUA_MAXINTEGER
 +Üow, 1,

265 
r
 *()(
up
 - 
low
) + 1.0;

266 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
r
 + 
low
);

268 
	}
}

271 
	$m©h_øndom£ed
 (
lua_Sèã
 *
L
) {

272 
	`l_§™d
(()(
lua_I¡egî
)
	`luaL_checknumbî
(
L
, 1));

273 ()
	`ønd
();

275 
	}
}

278 
	$m©h_ty≥
 (
lua_Sèã
 *
L
) {

279 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

280 i‡(
	`lua_isöãgî
(
L
, 1))

281 
	`lua_pushlôîÆ
(
L
, "integer");

283 
	`lua_pushlôîÆ
(
L
, "float");

286 
	`luaL_check™y
(
L
, 1);

287 
	`lua_pushnû
(
L
);

290 
	}
}

298 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

300 
	$m©h_cosh
 (
lua_Sèã
 *
L
) {

301 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cosh
)(
	`luaL_checknumbî
(L, 1)));

303 
	}
}

305 
	$m©h_söh
 (
lua_Sèã
 *
L
) {

306 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
söh
)(
	`luaL_checknumbî
(L, 1)));

308 
	}
}

310 
	$m©h_ènh
 (
lua_Sèã
 *
L
) {

311 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ènh
)(
	`luaL_checknumbî
(L, 1)));

313 
	}
}

315 
	$m©h_pow
 (
lua_Sèã
 *
L
) {

316 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

317 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 2);

318 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
pow
)(
x
, 
y
));

320 
	}
}

322 
	$m©h_‰exp
 (
lua_Sèã
 *
L
) {

323 
e
;

324 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
‰exp
)(
	`luaL_checknumbî
(L, 1), &
e
));

325 
	`lua_pushöãgî
(
L
, 
e
);

327 
	}
}

329 
	$m©h_ldexp
 (
lua_Sèã
 *
L
) {

330 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

331 
ï
 = ()
	`luaL_checköãgî
(
L
, 2);

332 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ldexp
)(
x
, 
ï
));

334 
	}
}

336 
	$m©h_log10
 (
lua_Sèã
 *
L
) {

337 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
log10
)(
	`luaL_checknumbî
(L, 1)));

339 
	}
}

346 c⁄° 
luaL_Reg
 
	gm©hlib
[] = {

347 {"abs", 
m©h_abs
},

348 {"acos", 
m©h_acos
},

349 {"asö", 
m©h_asö
},

350 {"©™", 
m©h_©™
},

351 {"˚û", 
m©h_˚û
},

352 {"cos", 
m©h_cos
},

353 {"deg", 
m©h_deg
},

354 {"exp", 
m©h_exp
},

355 {"toöãgî", 
m©h_toöt
},

356 {"Êo‹", 
m©h_Êo‹
},

357 {"fmod", 
m©h_fmod
},

358 {"u…", 
m©h_u…
},

359 {"log", 
m©h_log
},

360 {"max", 
m©h_max
},

361 {"mö", 
m©h_mö
},

362 {"modf", 
m©h_modf
},

363 {"ød", 
m©h_ød
},

364 {"øndom", 
m©h_øndom
},

365 {"øndom£ed", 
m©h_øndom£ed
},

366 {"sö", 
m©h_sö
},

367 {"sqπ", 
m©h_sqπ
},

368 {"èn", 
m©h_èn
},

369 {"ty≥", 
m©h_ty≥
},

370 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

371 {"©™2", 
m©h_©™
},

372 {"cosh", 
m©h_cosh
},

373 {"söh", 
m©h_söh
},

374 {"ènh", 
m©h_ènh
},

375 {"pow", 
m©h_pow
},

376 {"‰exp", 
m©h_‰exp
},

377 {"ldexp", 
m©h_ldexp
},

378 {"log10", 
m©h_log10
},

381 {"pi", 
NULL
},

382 {"huge", 
NULL
},

383 {"maxöãgî", 
NULL
},

384 {"mööãgî", 
NULL
},

385 {
NULL
, NULL}

392 
LUAMOD_API
 
	$lua›í_m©h
 (
lua_Sèã
 *
L
) {

393 
	`luaL_√wlib
(
L
, 
m©hlib
);

394 
	`lua_pushnumbî
(
L
, 
PI
);

395 
	`lua_£tfõld
(
L
, -2, "pi");

396 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
HUGE_VAL
);

397 
	`lua_£tfõld
(
L
, -2, "huge");

398 
	`lua_pushöãgî
(
L
, 
LUA_MAXINTEGER
);

399 
	`lua_£tfõld
(
L
, -2, "maxinteger");

400 
	`lua_pushöãgî
(
L
, 
LUA_MININTEGER
);

401 
	`lua_£tfõld
(
L
, -2, "mininteger");

403 
	}
}

	@lib/archive/lua-5.3.0/src/lmem.c

7 
	#lmem_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lgc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

45 
	#MINSIZEARRAY
 4

	)

48 *
	$luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
, 
size_t
 
size_ñems
,

49 
limô
, c⁄° *
wh©
) {

50 *
√wblock
;

51 
√wsize
;

52 i‡(*
size
 >
limô
/2) {

53 i‡(*
size
 >
limô
)

54 
	`luaG_ru√º‹
(
L
, "toÿm™y %†÷imô i†%d)", 
wh©
, 
limô
);

55 
√wsize
 = 
limô
;

58 
√wsize
 = (*
size
)*2;

59 i‡(
√wsize
 < 
MINSIZEARRAY
)

60 
√wsize
 = 
MINSIZEARRAY
;

62 
√wblock
 = 
	`luaM_ªÆlocv
(
L
, 
block
, *
size
, 
√wsize
, 
size_ñems
);

63 *
size
 = 
√wsize
;

64  
√wblock
;

65 
	}
}

68 
l_n‹ë
 
	$luaM_toobig
 (
lua_Sèã
 *
L
) {

69 
	`luaG_ru√º‹
(
L
, "memoryállocationÉrror: blockÅoo big");

70 
	}
}

77 *
	$luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
osize
, size_à
nsize
) {

78 *
√wblock
;

79 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

80 
size_t
 
ªÆosize
 = (
block
Ë? 
osize
 : 0;

81 
	`lua_as£π
((
ªÆosize
 =0Ë=(
block
 =
NULL
));

82 #i‡
	`deföed
(
HARDMEMTESTS
)

83 i‡(
nsize
 > 
ªÆosize
 && 
g
->
g¸u¬ög
)

84 
	`luaC_fuŒgc
(
L
, 1);

86 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

87 i‡(
√wblock
 =
NULL
 && 
nsize
 > 0) {

88 
	`≠i_check
–
nsize
 > 
ªÆosize
,

90 
	`luaC_fuŒgc
(
L
, 1);

91 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

92 i‡(
√wblock
 =
NULL
)

93 
	`luaD_throw
(
L
, 
LUA_ERRMEM
);

95 
	`lua_as£π
((
nsize
 =0Ë=(
√wblock
 =
NULL
));

96 
g
->
GCdebt
 = (g->GCdebà+ 
nsize
Ë- 
ªÆosize
;

97  
√wblock
;

98 
	}
}

	@lib/archive/lua-5.3.0/src/lmem.h

7 #i‚de‡
lmem_h


8 
	#lmem_h


	)

11 
	~<°ddef.h
>

13 
	~"Œimôs.h
"

14 
	~"lua.h
"

30 
	#luaM_ªÆlocv
(
L
,
b
,
⁄
,
n
,
e
) \

31 ((((
n
Ë>(
size_t
Ë&& 
	`ˇ°
(size_t, (n)Ë+ 1 > 
MAX_SIZET
/(
e
)) \

32 ? 
	`luaM_toobig
(
L
Ë: 
	`ˇ°_void
(0)) , \

33 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(
e
), (
n
)*”)))

	)

38 
	#luaM_ªÆlocvch¨
(
L
,
b
,
⁄
,
n
) \

39 
	`ˇ°
(*, 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(), (
n
)*()))

	)

41 
	#luaM_‰ìmem
(
L
, 
b
, 
s
Ë
	`luaM_ªÆloc_
(L, (b), (s), 0)

	)

42 
	#luaM_‰ì
(
L
, 
b
Ë
	`luaM_ªÆloc_
(L, (b), (*(b)), 0)

	)

43 
	#luaM_‰ì¨øy
(
L
, 
b
, 
n
Ë
	`luaM_ªÆloc_
(L, (b), (n)*(*(b)), 0)

	)

45 
	#luaM_mÆloc
(
L
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
, 0, (s))

	)

46 
	#luaM_√w
(
L
,
t
Ë
	`ˇ°
— *, 
	`luaM_mÆloc
(L, —)))

	)

47 
	#luaM_√wve˘‹
(
L
,
n
,
t
) \

48 
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, 
NULL
, 0, 
n
, —)))

	)

50 
	#luaM_√wobje˘
(
L
,
èg
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
,Åag, (s))

	)

52 
	#luaM_growve˘‹
(
L
,
v
,
√Àms
,
size
,
t
,
limô
,
e
) \

53 i‡((
√Àms
)+1 > (
size
)) \

54 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_growaux_
(
L
,v,&(
size
),—),
limô
,
e
)))

	)

56 
	#luaM_ªÆlocve˘‹
(
L
, 
v
,
ﬁdn
,
n
,
t
) \

57 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, v, 
ﬁdn
, 
n
, —))))

	)

59 
LUAI_FUNC
 
l_n‹ë
 
luaM_toobig
 (
lua_Sèã
 *
L
);

62 
LUAI_FUNC
 *
luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
ﬁdsize
,

63 
size_t
 
size
);

64 
LUAI_FUNC
 *
luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
,

65 
size_t
 
size_ñem
, 
limô
,

66 c⁄° *
wh©
);

	@lib/archive/lua-5.3.0/src/loadlib.c

11 
	#lﬂdlib_c


	)

12 
	#LUA_LIB


	)

14 
	~"Õªfix.h
"

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"œuxlib.h
"

23 
	~"luÆib.h
"

30 #i‡!
deföed
(
LUA_PATH_VAR
)

31 
	#LUA_PATH_VAR
 "LUA_PATH"

	)

34 #i‡!
deföed
(
LUA_CPATH_VAR
)

35 
	#LUA_CPATH_VAR
 "LUA_CPATH"

	)

38 
	#LUA_PATHSUFFIX
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

40 
	#LUA_PATHVARVERSION
 
LUA_PATH_VAR
 
LUA_PATHSUFFIX


	)

41 
	#LUA_CPATHVARVERSION
 
LUA_CPATH_VAR
 
LUA_PATHSUFFIX


	)

52 #i‡!
deföed
 (
LUA_PATH_SEP
)

53 
	#LUA_PATH_SEP
 ";"

	)

55 #i‡!
deföed
 (
LUA_PATH_MARK
)

56 
	#LUA_PATH_MARK
 "?"

	)

58 #i‡!
deföed
 (
LUA_EXEC_DIR
)

59 
	#LUA_EXEC_DIR
 "!"

	)

61 #i‡!
deföed
 (
LUA_IGMARK
)

62 
	#LUA_IGMARK
 "-"

	)

72 #i‡!
deföed
(
LUA_CSUBSEP
)

73 
	#LUA_CSUBSEP
 
LUA_DIRSEP


	)

76 #i‡!
deföed
(
LUA_LSUBSEP
)

77 
	#LUA_LSUBSEP
 
LUA_DIRSEP


	)

82 
	#LUA_POF
 "lua›í_"

	)

85 
	#LUA_OFSEP
 "_"

	)

92 c⁄° 
	gCLIBS
 = 0;

94 
	#LIB_FAIL
 "›í"

	)

96 
	#£çrogdú
(
L
Ë(()0)

	)

106 
lsys_u∆ﬂdlib
 (*
lib
);

114 *
lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
);

121 
lua_CFun˘i⁄
 
lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
);

126 #i‡
deföed
(
LUA_USE_DLOPEN
)

136 
	~<dlf˙.h
>

143 #i‡
deföed
(
__GNUC__
)

144 
	#ˇ°_func
(
p
Ë(
	`__exãnsi⁄__
 (
lua_CFun˘i⁄
)’))

	)

146 
	#ˇ°_func
(
p
Ë((
lua_CFun˘i⁄
)’))

	)

150 
	$lsys_u∆ﬂdlib
 (*
lib
) {

151 
	`dl˛o£
(
lib
);

152 
	}
}

155 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

156 *
lib
 = 
	`dl›í
(
∑th
, 
RTLD_NOW
 | (
£eglb
 ? 
RTLD_GLOBAL
 : 
RTLD_LOCAL
));

157 i‡(
lib
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

158  
lib
;

159 
	}
}

162 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

163 
lua_CFun˘i⁄
 
f
 = 
	`ˇ°_func
(
	`dlsym
(
lib
, 
sym
));

164 i‡(
f
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

165  
f
;

166 
	}
}

172 #ñi‡
deföed
(
LUA_DL_DLL
)

179 
	~<wödows.h
>

181 #unde‡
£çrogdú


186 #i‡!
deföed
(
LUA_LLE_FLAGS
)

187 
	#LUA_LLE_FLAGS
 0

	)

191 
	$£çrogdú
 (
lua_Sèã
 *
L
) {

192 
buff
[
MAX_PATH
 + 1];

193 *
lb
;

194 
DWORD
 
nsize
 = (
buff
)/();

195 
DWORD
 
n
 = 
	`GëModuÀFûeNameA
(
NULL
, 
buff
, 
nsize
);

196 i‡(
n
 =0 ||Ç =
nsize
 || (
lb
 = 
	`°ºchr
(
buff
, '\\')Ë=
NULL
)

197 
	`luaL_îr‹
(
L
, "unableÅo get ModuleFileName");

199 *
lb
 = '\0';

200 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1), 
LUA_EXEC_DIR
, 
buff
);

201 
	`lua_ªmove
(
L
, -2);

203 
	}
}

206 
	$pushîr‹
 (
lua_Sèã
 *
L
) {

207 
îr‹
 = 
	`GëLa°Eº‹
();

208 
buf„r
[128];

209 i‡(
	`F‹m©MesßgeA
(
FORMAT_MESSAGE_IGNORE_INSERTS
 | 
FORMAT_MESSAGE_FROM_SYSTEM
,

210 
NULL
, 
îr‹
, 0, 
buf„r
, (buffer)/(), NULL))

211 
	`lua_push°rög
(
L
, 
buf„r
);

213 
	`lua_pushf°rög
(
L
, "sy°emÉº‹ %d\n", 
îr‹
);

214 
	}
}

216 
	$lsys_u∆ﬂdlib
 (*
lib
) {

217 
	`FªeLibøry
((
HMODULE
)
lib
);

218 
	}
}

221 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

222 
HMODULE
 
lib
 = 
	`LﬂdLibøryExA
(
∑th
, 
NULL
, 
LUA_LLE_FLAGS
);

223 ()(
£eglb
);

224 i‡(
lib
 =
NULL
Ë
	`pushîr‹
(
L
);

225  
lib
;

226 
	}
}

229 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

230 
lua_CFun˘i⁄
 
f
 = (lua_CFun˘i⁄)
	`GëProcAddªss
((
HMODULE
)
lib
, 
sym
);

231 i‡(
f
 =
NULL
Ë
	`pushîr‹
(
L
);

232  
f
;

233 
	}
}

245 #unde‡
LIB_FAIL


246 
	#LIB_FAIL
 "ab£¡"

	)

249 
	#DLMSG
 "dy«mi¯libørõ†nŸÉ«bÀd; check you∏Lu®ö°Æœti⁄"

	)

252 
	$lsys_u∆ﬂdlib
 (*
lib
) {

253 ()(
lib
);

254 
	}
}

257 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

258 ()(
∑th
); ()(
£eglb
);

259 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

260  
NULL
;

261 
	}
}

264 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

265 ()(
lib
); ()(
sym
);

266 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

267  
NULL
;

268 
	}
}

277 *
	$check˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

278 *
∂ib
;

279 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

280 
	`lua_gëfõld
(
L
, -1, 
∑th
);

281 
∂ib
 = 
	`lua_tou£rd©a
(
L
, -1);

282 
	`lua_p›
(
L
, 2);

283  
∂ib
;

284 
	}
}

291 
	$addto˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, *
∂ib
) {

292 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

293 
	`lua_pushlightu£rd©a
(
L
, 
∂ib
);

294 
	`lua_pushvÆue
(
L
, -1);

295 
	`lua_£tfõld
(
L
, -3, 
∑th
);

296 
	`lua_øw£ti
(
L
, -2, 
	`luaL_Àn
(L, -2) + 1);

297 
	`lua_p›
(
L
, 1);

298 
	}
}

305 
	$g˘m
 (
lua_Sèã
 *
L
) {

306 
lua_I¡egî
 
n
 = 
	`luaL_Àn
(
L
, 1);

307 ; 
n
 >= 1;Ç--) {

308 
	`lua_øwgëi
(
L
, 1, 
n
);

309 
	`lsys_u∆ﬂdlib
(
	`lua_tou£rd©a
(
L
, -1));

310 
	`lua_p›
(
L
, 1);

313 
	}
}

318 
	#ERRLIB
 1

	)

319 
	#ERRFUNC
 2

	)

332 
	$lookf‹func
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, c⁄° *
sym
) {

333 *
ªg
 = 
	`check˛ib
(
L
, 
∑th
);

334 i‡(
ªg
 =
NULL
) {

335 
ªg
 = 
	`lsys_lﬂd
(
L
, 
∑th
, *
sym
 == '*');

336 i‡(
ªg
 =
NULL
Ë 
ERRLIB
;

337 
	`addto˛ib
(
L
, 
∑th
, 
ªg
);

339 i‡(*
sym
 == '*') {

340 
	`lua_pushboﬁón
(
L
, 1);

344 
lua_CFun˘i⁄
 
f
 = 
	`lsys_sym
(
L
, 
ªg
, 
sym
);

345 i‡(
f
 =
NULL
)

346  
ERRFUNC
;

347 
	`lua_pushcfun˘i⁄
(
L
, 
f
);

350 
	}
}

353 
	$Œ_lﬂdlib
 (
lua_Sèã
 *
L
) {

354 c⁄° *
∑th
 = 
	`luaL_check°rög
(
L
, 1);

355 c⁄° *
öô
 = 
	`luaL_check°rög
(
L
, 2);

356 
°©
 = 
	`lookf‹func
(
L
, 
∑th
, 
öô
);

357 i‡(
°©
 == 0)

360 
	`lua_pushnû
(
L
);

361 
	`lua_ö£π
(
L
, -2);

362 
	`lua_push°rög
(
L
, (
°©
 =
ERRLIB
Ë? 
LIB_FAIL
 : "init");

365 
	}
}

376 
	$ªadabÀ
 (c⁄° *
fûíame
) {

377 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "r");

378 i‡(
f
 =
NULL
)  0;

379 
	`f˛o£
(
f
);

381 
	}
}

384 c⁄° *
	$push√xâem∂©e
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

385 c⁄° *
l
;

386 *
∑th
 =*
LUA_PATH_SEP
)Öath++;

387 i‡(*
∑th
 ='\0'Ë 
NULL
;

388 
l
 = 
	`°rchr
(
∑th
, *
LUA_PATH_SEP
);

389 i‡(
l
 =
NULL
Ë»
∑th
 + 
	`°æí
(path);

390 
	`lua_pushl°rög
(
L
, 
∑th
, 
l
 -Öath);

391  
l
;

392 
	}
}

395 c⁄° *
	$£¨ch∑th
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

396 c⁄° *
∑th
,

397 c⁄° *
£p
,

398 c⁄° *
dú£p
) {

399 
luaL_Buf„r
 
msg
;

400 
	`luaL_bufföô
(
L
, &
msg
);

401 i‡(*
£p
 != '\0')

402 
«me
 = 
	`luaL_gsub
(
L
,Çame, 
£p
, 
dú£p
);

403 (
∑th
 = 
	`push√xâem∂©e
(
L
,Ö©h)Ë!
NULL
) {

404 c⁄° *
fûíame
 = 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1),

405 
LUA_PATH_MARK
, 
«me
);

406 
	`lua_ªmove
(
L
, -2);

407 i‡(
	`ªadabÀ
(
fûíame
))

408  
fûíame
;

409 
	`lua_pushf°rög
(
L
, "\n\äÿfûê'%s'", 
fûíame
);

410 
	`lua_ªmove
(
L
, -2);

411 
	`luaL_addvÆue
(&
msg
);

413 
	`luaL_pushªsu…
(&
msg
);

414  
NULL
;

415 
	}
}

418 
	$Œ_£¨ch∑th
 (
lua_Sèã
 *
L
) {

419 c⁄° *
f
 = 
	`£¨ch∑th
(
L
, 
	`luaL_check°rög
(L, 1),

420 
	`luaL_check°rög
(
L
, 2),

421 
	`luaL_›t°rög
(
L
, 3, "."),

422 
	`luaL_›t°rög
(
L
, 4, 
LUA_DIRSEP
));

423 i‡(
f
 !
NULL
)  1;

425 
	`lua_pushnû
(
L
);

426 
	`lua_ö£π
(
L
, -2);

429 
	}
}

432 c⁄° *
	$födfûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

433 c⁄° *
≤ame
,

434 c⁄° *
dú£p
) {

435 c⁄° *
∑th
;

436 
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), 
≤ame
);

437 
∑th
 = 
	`lua_to°rög
(
L
, -1);

438 i‡(
∑th
 =
NULL
)

439 
	`luaL_îr‹
(
L
, "'∑ckage.%s' mu° bê®°rög", 
≤ame
);

440  
	`£¨ch∑th
(
L
, 
«me
, 
∑th
, ".", 
dú£p
);

441 
	}
}

444 
	$checklﬂd
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
fûíame
) {

445 i‡(
°©
) {

446 
	`lua_push°rög
(
L
, 
fûíame
);

450  
	`luaL_îr‹
(
L
, "errorÜoading module '%s' from file '%s':\n\t%s",

451 
	`lua_to°rög
(
L
, 1), 
fûíame
,Üua_tostring(L, -1));

452 
	}
}

455 
	$£¨chî_Lua
 (
lua_Sèã
 *
L
) {

456 c⁄° *
fûíame
;

457 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

458 
fûíame
 = 
	`födfûe
(
L
, 
«me
, "∑th", 
LUA_LSUBSEP
);

459 i‡(
fûíame
 =
NULL
)  1;

460  
	`checklﬂd
(
L
, (
	`luaL_lﬂdfûe
(L, 
fûíame
Ë=
LUA_OK
), filename);

461 
	}
}

472 
	$lﬂdfunc
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
, c⁄° *
mod«me
) {

473 c⁄° *
›ífunc
;

474 c⁄° *
m¨k
;

475 
mod«me
 = 
	`luaL_gsub
(
L
, mod«me, ".", 
LUA_OFSEP
);

476 
m¨k
 = 
	`°rchr
(
mod«me
, *
LUA_IGMARK
);

477 i‡(
m¨k
) {

478 
°©
;

479 
›ífunc
 = 
	`lua_pushl°rög
(
L
, 
mod«me
, 
m¨k
 - modname);

480 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", openfunc);

481 
°©
 = 
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

482 i‡(
°©
 !
ERRFUNC
)  stat;

483 
mod«me
 = 
m¨k
 + 1;

485 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", 
mod«me
);

486  
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

487 
	}
}

490 
	$£¨chî_C
 (
lua_Sèã
 *
L
) {

491 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

492 c⁄° *
fûíame
 = 
	`födfûe
(
L
, 
«me
, "˝©h", 
LUA_CSUBSEP
);

493 i‡(
fûíame
 =
NULL
)  1;

494  
	`checklﬂd
(
L
, (
	`lﬂdfunc
(L, 
fûíame
, 
«me
) == 0), filename);

495 
	}
}

498 
	$£¨chî_CroŸ
 (
lua_Sèã
 *
L
) {

499 c⁄° *
fûíame
;

500 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

501 c⁄° *
p
 = 
	`°rchr
(
«me
, '.');

502 
°©
;

503 i‡(
p
 =
NULL
)  0;

504 
	`lua_pushl°rög
(
L
, 
«me
, 
p
 -Çame);

505 
fûíame
 = 
	`födfûe
(
L
, 
	`lua_to°rög
(L, -1), "˝©h", 
LUA_CSUBSEP
);

506 i‡(
fûíame
 =
NULL
)  1;

507 i‡((
°©
 = 
	`lﬂdfunc
(
L
, 
fûíame
, 
«me
)) != 0) {

508 i‡(
°©
 !
ERRFUNC
)

509  
	`checklﬂd
(
L
, 0, 
fûíame
);

511 
	`lua_pushf°rög
(
L
, "\n\äÿmoduÀ '%s' i¿fûê'%s'", 
«me
, 
fûíame
);

515 
	`lua_push°rög
(
L
, 
fûíame
);

517 
	}
}

520 
	$£¨chî_¥ñﬂd
 (
lua_Sèã
 *
L
) {

521 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

522 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

523 i‡(
	`lua_gëfõld
(
L
, -1, 
«me
Ë=
LUA_TNIL
)

524 
	`lua_pushf°rög
(
L
, "\n\äÿfõldÖackage.¥ñﬂd['%s']", 
«me
);

526 
	}
}

529 
	$födlﬂdî
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

530 
i
;

531 
luaL_Buf„r
 
msg
;

532 
	`luaL_bufföô
(
L
, &
msg
);

534 i‡(
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), "£¨chîs"Ë!
LUA_TTABLE
)

535 
	`luaL_îr‹
(
L
, "'package.searchers' must beáÅable");

537 
i
 = 1; ; i++) {

538 i‡(
	`lua_øwgëi
(
L
, 3, 
i
Ë=
LUA_TNIL
) {

539 
	`lua_p›
(
L
, 1);

540 
	`luaL_pushªsu…
(&
msg
);

541 
	`luaL_îr‹
(
L
, "moduÀ '%s'ÇŸ found:%s", 
«me
, 
	`lua_to°rög
(L, -1));

543 
	`lua_push°rög
(
L
, 
«me
);

544 
	`lua_ˇŒ
(
L
, 1, 2);

545 i‡(
	`lua_isfun˘i⁄
(
L
, -2))

547 i‡(
	`lua_is°rög
(
L
, -2)) {

548 
	`lua_p›
(
L
, 1);

549 
	`luaL_addvÆue
(&
msg
);

552 
	`lua_p›
(
L
, 2);

554 
	}
}

557 
	$Œ_ªquúe
 (
lua_Sèã
 *
L
) {

558 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

559 
	`lua_£â›
(
L
, 1);

560 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

561 
	`lua_gëfõld
(
L
, 2, 
«me
);

562 i‡(
	`lua_toboﬁón
(
L
, -1))

565 
	`lua_p›
(
L
, 1);

566 
	`födlﬂdî
(
L
, 
«me
);

567 
	`lua_push°rög
(
L
, 
«me
);

568 
	`lua_ö£π
(
L
, -2);

569 
	`lua_ˇŒ
(
L
, 2, 1);

570 i‡(!
	`lua_i¢û
(
L
, -1))

571 
	`lua_£tfõld
(
L
, 2, 
«me
);

572 i‡(
	`lua_gëfõld
(
L
, 2, 
«me
Ë=
LUA_TNIL
) {

573 
	`lua_pushboﬁón
(
L
, 1);

574 
	`lua_pushvÆue
(
L
, -1);

575 
	`lua_£tfõld
(
L
, 2, 
«me
);

578 
	}
}

589 #i‡
deföed
(
LUA_COMPAT_MODULE
)

594 
	$£t_ív
 (
lua_Sèã
 *
L
) {

595 
lua_Debug
 
¨
;

596 i‡(
	`lua_gë°ack
(
L
, 1, &
¨
) == 0 ||

597 
	`lua_gëöfo
(
L
, "f", &
¨
) == 0 ||

598 
	`lua_iscfun˘i⁄
(
L
, -1))

599 
	`luaL_îr‹
(
L
, "'module'Çot called fromá Lua function");

600 
	`lua_pushvÆue
(
L
, -2);

601 
	`lua_£tupvÆue
(
L
, -2, 1);

602 
	`lua_p›
(
L
, 1);

603 
	}
}

606 
	$do›ti⁄s
 (
lua_Sèã
 *
L
, 
n
) {

607 
i
;

608 
i
 = 2; i <
n
; i++) {

609 i‡(
	`lua_isfun˘i⁄
(
L
, 
i
)) {

610 
	`lua_pushvÆue
(
L
, 
i
);

611 
	`lua_pushvÆue
(
L
, -2);

612 
	`lua_ˇŒ
(
L
, 1, 0);

615 
	}
}

618 
	$modöô
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
) {

619 c⁄° *
dŸ
;

620 
	`lua_pushvÆue
(
L
, -1);

621 
	`lua_£tfõld
(
L
, -2, "_M");

622 
	`lua_push°rög
(
L
, 
mod«me
);

623 
	`lua_£tfõld
(
L
, -2, "_NAME");

624 
dŸ
 = 
	`°ºchr
(
mod«me
, '.');

625 i‡(
dŸ
 =
NULL
ËdŸ = 
mod«me
;

626 
dŸ
++;

628 
	`lua_pushl°rög
(
L
, 
mod«me
, 
dŸ
 - modname);

629 
	`lua_£tfõld
(
L
, -2, "_PACKAGE");

630 
	}
}

633 
	$Œ_moduÀ
 (
lua_Sèã
 *
L
) {

634 c⁄° *
mod«me
 = 
	`luaL_check°rög
(
L
, 1);

635 
œ°¨g
 = 
	`lua_gët›
(
L
);

636 
	`luaL_pushmoduÀ
(
L
, 
mod«me
, 1);

638 i‡(
	`lua_gëfõld
(
L
, -1, "_NAME"Ë!
LUA_TNIL
)

639 
	`lua_p›
(
L
, 1);

641 
	`lua_p›
(
L
, 1);

642 
	`modöô
(
L
, 
mod«me
);

644 
	`lua_pushvÆue
(
L
, -1);

645 
	`£t_ív
(
L
);

646 
	`do›ti⁄s
(
L
, 
œ°¨g
);

648 
	}
}

651 
	$Œ_£óŒ
 (
lua_Sèã
 *
L
) {

652 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

653 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

654 
	`lua_¸óãèbÀ
(
L
, 0, 1);

655 
	`lua_pushvÆue
(
L
, -1);

656 
	`lua_£tmë©abÀ
(
L
, 1);

658 
	`lua_pushglobÆèbÀ
(
L
);

659 
	`lua_£tfõld
(
L
, -2, "__index");

661 
	}
}

669 
	#AUXMARK
 "\1"

	)

675 
	$n€nv
 (
lua_Sèã
 *
L
) {

676 
b
;

677 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

678 
b
 = 
	`lua_toboﬁón
(
L
, -1);

679 
	`lua_p›
(
L
, 1);

680  
b
;

681 
	}
}

684 
	$£ç©h
 (
lua_Sèã
 *
L
, c⁄° *
fõld«me
, c⁄° *
ív«me1
,

685 c⁄° *
ív«me2
, c⁄° *
def
) {

686 c⁄° *
∑th
 = 
	`gëív
(
ív«me1
);

687 i‡(
∑th
 =
NULL
)

688 
∑th
 = 
	`gëív
(
ív«me2
);

689 i‡(
∑th
 =
NULL
 || 
	`n€nv
(
L
))

690 
	`lua_push°rög
(
L
, 
def
);

693 
∑th
 = 
	`luaL_gsub
(
L
,Ö©h, 
LUA_PATH_SEP
 LUA_PATH_SEP,

694 
LUA_PATH_SEP
 
AUXMARK
 LUA_PATH_SEP);

695 
	`luaL_gsub
(
L
, 
∑th
, 
AUXMARK
, 
def
);

696 
	`lua_ªmove
(
L
, -2);

698 
	`£çrogdú
(
L
);

699 
	`lua_£tfõld
(
L
, -2, 
fõld«me
);

700 
	}
}

703 c⁄° 
luaL_Reg
 
	gpk_funcs
[] = {

704 {"lﬂdlib", 
Œ_lﬂdlib
},

705 {"£¨ch∑th", 
Œ_£¨ch∑th
},

706 #i‡
deföed
(
LUA_COMPAT_MODULE
)

707 {"£óŒ", 
Œ_£óŒ
},

710 {"¥ñﬂd", 
NULL
},

711 {"˝©h", 
NULL
},

712 {"∑th", 
NULL
},

713 {"£¨chîs", 
NULL
},

714 {"lﬂded", 
NULL
},

715 {
NULL
, NULL}

719 c⁄° 
luaL_Reg
 
	gŒ_funcs
[] = {

720 #i‡
deföed
(
LUA_COMPAT_MODULE
)

721 {"moduÀ", 
Œ_moduÀ
},

723 {"ªquúe", 
Œ_ªquúe
},

724 {
NULL
, NULL}

728 
	$¸óã£¨chî°abÀ
 (
lua_Sèã
 *
L
) {

729 c⁄° 
lua_CFun˘i⁄
 
£¨chîs
[] =

730 {
£¨chî_¥ñﬂd
, 
£¨chî_Lua
, 
£¨chî_C
, 
£¨chî_CroŸ
, 
NULL
};

731 
i
;

733 
	`lua_¸óãèbÀ
(
L
, (
£¨chîs
)/(searchers[0]) - 1, 0);

735 
i
=0; 
£¨chîs
[i] !
NULL
; i++) {

736 
	`lua_pushvÆue
(
L
, -2);

737 
	`lua_pushc˛osuª
(
L
, 
£¨chîs
[
i
], 1);

738 
	`lua_øw£ti
(
L
, -2, 
i
+1);

740 #i‡
	`deföed
(
LUA_COMPAT_LOADERS
)

741 
	`lua_pushvÆue
(
L
, -1);

742 
	`lua_£tfõld
(
L
, -3, "loaders");

744 
	`lua_£tfõld
(
L
, -2, "searchers");

745 
	}
}

752 
	$¸óã˛ib°abÀ
 (
lua_Sèã
 *
L
) {

753 
	`lua_√wèbÀ
(
L
);

754 
	`lua_¸óãèbÀ
(
L
, 0, 1);

755 
	`lua_pushcfun˘i⁄
(
L
, 
g˘m
);

756 
	`lua_£tfõld
(
L
, -2, "__gc");

757 
	`lua_£tmë©abÀ
(
L
, -2);

758 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

759 
	}
}

762 
LUAMOD_API
 
	$lua›í_∑ckage
 (
lua_Sèã
 *
L
) {

763 
	`¸óã˛ib°abÀ
(
L
);

764 
	`luaL_√wlib
(
L
, 
pk_funcs
);

765 
	`¸óã£¨chî°abÀ
(
L
);

767 
	`£ç©h
(
L
, "∑th", 
LUA_PATHVARVERSION
, 
LUA_PATH_VAR
, 
LUA_PATH_DEFAULT
);

769 
	`£ç©h
(
L
, "˝©h", 
LUA_CPATHVARVERSION
, 
LUA_CPATH_VAR
, 
LUA_CPATH_DEFAULT
);

771 
	`lua_pushlôîÆ
(
L
, 
LUA_DIRSEP
 "\n" 
LUA_PATH_SEP
 "\n" 
LUA_PATH_MARK
 "\n"

772 
LUA_EXEC_DIR
 "\n" 
LUA_IGMARK
 "\n");

773 
	`lua_£tfõld
(
L
, -2, "config");

775 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

776 
	`lua_£tfõld
(
L
, -2, "loaded");

778 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

779 
	`lua_£tfõld
(
L
, -2, "preload");

780 
	`lua_pushglobÆèbÀ
(
L
);

781 
	`lua_pushvÆue
(
L
, -2);

782 
	`luaL_£tfuncs
(
L
, 
Œ_funcs
, 1);

783 
	`lua_p›
(
L
, 1);

785 
	}
}

	@lib/archive/lua-5.3.0/src/lobject.c

7 
	#lobje˘_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"l˘y≥.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"lvm.h
"

31 
LUAI_DDEF
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
 = {
NILCONSTANT
};

39 
	$luaO_öt2fb
 (
x
) {

40 
e
 = 0;

41 i‡(
x
 < 8)  x;

42 
x
 >= 0x10) {

43 
x
 = (x+1) >> 1;

44 
e
++;

46  ((
e
+1Ë<< 3Ë| (
	`ˇ°_öt
(
x
) - 8);

47 
	}
}

51 
	$luaO_fb2öt
 (
x
) {

52 
e
 = (
x
 >> 3) & 0x1f;

53 i‡(
e
 =0Ë 
x
;

54  ((
x
 & 7Ë+ 8Ë<< (
e
 - 1);

55 
	}
}

58 
	$luaO_˚ûlog2
 (
x
) {

59 c⁄° 
lu_byã
 
log_2
[256] = {

69 
l
 = 0;

70 
x
--;

71 
x
 >256Ë{ 
l
 += 8; x >>= 8; }

72  
l
 + 
log_2
[
x
];

73 
	}
}

76 
lua_I¡egî
 
	$öèrôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_I¡egî
 
v1
,

77 
lua_I¡egî
 
v2
) {

78 
›
) {

79 
LUA_OPADD
:  
	`öt›
(+, 
v1
, 
v2
);

80 
LUA_OPSUB
: 
	`öt›
(-, 
v1
, 
v2
);

81 
LUA_OPMUL
: 
	`öt›
(*, 
v1
, 
v2
);

82 
LUA_OPMOD
:  
	`luaV_mod
(
L
, 
v1
, 
v2
);

83 
LUA_OPIDIV
:  
	`luaV_div
(
L
, 
v1
, 
v2
);

84 
LUA_OPBAND
:  
	`öt›
(&, 
v1
, 
v2
);

85 
LUA_OPBOR
:  
	`öt›
(|, 
v1
, 
v2
);

86 
LUA_OPBXOR
:  
	`öt›
(^, 
v1
, 
v2
);

87 
LUA_OPSHL
:  
	`luaV_shi·l
(
v1
, 
v2
);

88 
LUA_OPSHR
:  
	`luaV_shi·l
(
v1
, -
v2
);

89 
LUA_OPUNM
:  
	`öt›
(-, 0, 
v1
);

90 
LUA_OPBNOT
:  
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
v1
);

91 : 
	`lua_as£π
(0);  0;

93 
	}
}

96 
lua_Numbî
 
	$num¨ôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_Numbî
 
v1
,

97 
lua_Numbî
 
v2
) {

98 
›
) {

99 
LUA_OPADD
:  
	`luai_numadd
(
L
, 
v1
, 
v2
);

100 
LUA_OPSUB
:  
	`luai_numsub
(
L
, 
v1
, 
v2
);

101 
LUA_OPMUL
:  
	`luai_nummul
(
L
, 
v1
, 
v2
);

102 
LUA_OPDIV
:  
	`luai_numdiv
(
L
, 
v1
, 
v2
);

103 
LUA_OPPOW
:  
	`luai_numpow
(
L
, 
v1
, 
v2
);

104 
LUA_OPIDIV
:  
	`luai_numidiv
(
L
, 
v1
, 
v2
);

105 
LUA_OPUNM
:  
	`luai_numunm
(
L
, 
v1
);

106 
LUA_OPMOD
: {

107 
lua_Numbî
 
m
;

108 
	`luai_nummod
(
L
, 
v1
, 
v2
, 
m
);

109  
m
;

111 : 
	`lua_as£π
(0);  0;

113 
	}
}

116 
	$luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

117 
TVÆue
 *
ªs
) {

118 
›
) {

119 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

120 
LUA_OPSHL
: 
LUA_OPSHR
:

121 
LUA_OPBNOT
: {

122 
lua_I¡egî
 
i1
;Üua_I¡egî 
i2
;

123 i‡(
	`toöãgî
(
p1
, &
i1
Ë&&Åoöãgî(
p2
, &
i2
)) {

124 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
i1
, 
i2
));

129 
LUA_OPDIV
: 
LUA_OPPOW
: {

130 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

131 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

132 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

138 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

139 i‡(
	`âisöãgî
(
p1
Ë&&Åtisöãgî(
p2
)) {

140 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
	`ivÆue
(
p1
), ivÆue(
p2
)));

143 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

144 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

151 
	`lua_as£π
(
L
 !
NULL
);

152 
	`luaT_åyböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
	`ˇ°
(
TMS
, 
›
 - 
LUA_OPADD
 + 
TM_ADD
));

153 
	}
}

156 
	$luaO_hexavÆue
 (
c
) {

157 i‡(
	`lisdigô
(
c
))  c - '0';

158  
	`…ﬁowî
(
c
) - 'a' + 10;

159 
	}
}

162 
	$i¢eg
 (c⁄° **
s
) {

163 i‡(**
s
 == '-') { (*s)++;  1; }

164 i‡(**
s
 == '+') (*s)++;

166 
	}
}

175 #i‡!
deföed
(
lua_°rx2numbî
)

177 
	~<m©h.h
>

181 
	#MAXSIGDIG
 30

	)

187 
lua_Numbî
 
	$lua_°rx2numbî
 (c⁄° *
s
, **
íd±r
) {

188 
lua_Numbî
 
r
 = 0.0;

189 
sigdig
 = 0;

190 
nosigdig
 = 0;

191 
e
 = 0;

192 
√g
;

193 
dŸ
 = 0;

194 *
íd±r
 = 
	`ˇ°
(*, 
s
);

195 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

196 
√g
 = 
	`i¢eg
(&
s
);

197 i‡(!(*
s
 == '0' && (*(s + 1) == 'x' || *(s + 1) == 'X')))

199 
s
 += 2; ; s++) {

200 i‡(*
s
 == '.') {

201 i‡(
dŸ
) ;

202 
dŸ
 = 1;

204 i‡(
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
))) {

205 i‡(
sigdig
 =0 && *
s
 == '0')

206 
nosigdig
++;

207 i‡(++
sigdig
 <
MAXSIGDIG
)

208 
r
 = (∏* 
	`ˇ°_num
(16.0)Ë+ 
	`luaO_hexavÆue
(*
s
);

209 
e
++;

210 i‡(
dŸ
Ë
e
--;

214 i‡(
nosigdig
 + 
sigdig
 == 0)

216 *
íd±r
 = 
	`ˇ°
(*, 
s
);

217 
e
 *= 4;

218 i‡(*
s
 == 'p' || *s == 'P') {

219 
exp1
 = 0;

220 
√g1
;

221 
s
++;

222 
√g1
 = 
	`i¢eg
(&
s
);

223 i‡(!
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

225 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

226 
exp1
 =Éxp1 * 10 + *(
s
++) - '0';

227 i‡(
√g1
Ë
exp1
 = -exp1;

228 
e
 +
exp1
;

229 *
íd±r
 = 
	`ˇ°
(*, 
s
);

231 i‡(
√g
Ë
r
 = -r;

232  
	`l_m©h›
(
ldexp
)(
r
, 
e
);

233 
	}
}

239 c⁄° *
	$l_°r2d
 (c⁄° *
s
, 
lua_Numbî
 *
ªsu…
) {

240 *
íd±r
;

241 i‡(
	`°Ωbrk
(
s
, "nN"))

242  
NULL
;

243 i‡(
	`°Ωbrk
(
s
, "xX"))

244 *
ªsu…
 = 
	`lua_°rx2numbî
(
s
, &
íd±r
);

246 *
ªsu…
 = 
	`lua_°r2numbî
(
s
, &
íd±r
);

247 i‡(
íd±r
 =
s
)  0;

248 
	`lis•a˚
(
	`ˇ°_uch¨
(*
íd±r
)))Éndptr++;

249  (*
íd±r
 ='\0' ?Énd±∏: 
NULL
);

250 
	}
}

253 c⁄° *
	$l_°r2öt
 (c⁄° *
s
, 
lua_I¡egî
 *
ªsu…
) {

254 
lua_Unsig√d
 
a
 = 0;

255 
em±y
 = 1;

256 
√g
;

257 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

258 
√g
 = 
	`i¢eg
(&
s
);

259 i‡(
s
[0] == '0' &&

260 (
s
[1] == 'x' || s[1] == 'X')) {

261 
s
 += 2;

262 ; 
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

263 
a
 =á * 16 + 
	`luaO_hexavÆue
(*
s
);

264 
em±y
 = 0;

268 ; 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

269 
a
 =á * 10 + *
s
 - '0';

270 
em±y
 = 0;

273 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

274 i‡(
em±y
 || *
s
 !'\0'Ë 
NULL
;

276 *
ªsu…
 = 
	`l_ˇ°U2S
((
√g
Ë? 0u - 
a
 :á);

277  
s
;

279 
	}
}

282 
size_t
 
	$luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
) {

283 
lua_I¡egî
 
i
; 
lua_Numbî
 
n
;

284 c⁄° *
e
;

285 i‡((
e
 = 
	`l_°r2öt
(
s
, &
i
)Ë!
NULL
) {

286 
	`£tivÆue
(
o
, 
i
);

288 i‡((
e
 = 
	`l_°r2d
(
s
, &
n
)Ë!
NULL
) {

289 
	`£tÊtvÆue
(
o
, 
n
);

293  (
e
 - 
s
 + 1);

294 
	}
}

297 
	$luaO_utf8esc
 (*
buff
, 
x
) {

298 
n
 = 1;

299 
	`lua_as£π
(
x
 <= 0x10FFFF);

300 i‡(
x
 < 0x80)

301 
buff
[
UTF8BUFFSZ
 - 1] = 
	`ˇ°
(, 
x
);

303 
mfb
 = 0x3f;

305 
buff
[
UTF8BUFFSZ
 - (
n
++)] = 
	`ˇ°
(, 0x80 | (
x
 & 0x3f));

306 
x
 >>= 6;

307 
mfb
 >>= 1;

308 } 
x
 > 
mfb
);

309 
buff
[
UTF8BUFFSZ
 - 
n
] = 
	`ˇ°
(, (~
mfb
 << 1Ë| 
x
);

311  
n
;

312 
	}
}

316 
	#MAXNUMBER2STR
 50

	)

322 
	$luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
) {

323 
buff
[
MAXNUMBER2STR
];

324 
size_t
 
Àn
;

325 
	`lua_as£π
(
	`âi¢umbî
(
obj
));

326 i‡(
	`âisöãgî
(
obj
))

327 
Àn
 = 
	`lua_öãgî2°r
(
buff
, 
	`ivÆue
(
obj
));

329 
Àn
 = 
	`lua_numbî2°r
(
buff
, 
	`ÊtvÆue
(
obj
));

330 #i‡!
	`deföed
(
LUA_COMPAT_FLOATSTRING
)

331 i‡(
buff
[
	`°r•n
(buff, "-0123456789")] == '\0') {

332 
buff
[
Àn
++] = '.';

333 
buff
[
Àn
++] = '0';

337 
	`£tsvÆue2s
(
L
, 
obj
, 
	`luaS_√wl°r
(L, 
buff
, 
Àn
));

338 
	}
}

341 
	$push°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

342 
	`£tsvÆue2s
(
L
, L->
t›
++, 
	`luaS_√wl°r
(L, 
°r
, 
l
));

343 
	}
}

348 c⁄° *
	$luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, 
va_li°
 
¨gp
) {

349 
n
 = 0;

351 c⁄° *
e
 = 
	`°rchr
(
fmt
, '%');

352 i‡(
e
 =
NULL
) ;

353 
	`luaD_check°ack
(
L
, 2);

354 
	`push°r
(
L
, 
fmt
, 
e
 - fmt);

355 *(
e
+1)) {

357 c⁄° *
s
 = 
	`va_¨g
(
¨gp
, *);

358 i‡(
s
 =
NULL
) s = "(null)";

359 
	`push°r
(
L
, 
s
, 
	`°æí
(s));

363 
buff
 = 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, ));

364 i‡(
	`li•röt
(
	`ˇ°_uch¨
(
buff
)))

365 
	`push°r
(
L
, &
buff
, 1);

367 
	`luaO_pushf°rög
(
L
, "<\\%d>", 
	`ˇ°_uch¨
(
buff
));

371 
	`£tivÆue
(
L
->
t›
++, 
	`va_¨g
(
¨gp
, ));

372 
	`luaO_to°rög
(
L
, L->
t›
 - 1);

376 
	`£tivÆue
(
L
->
t›
++, 
	`ˇ°
(
lua_I¡egî
, 
	`va_¨g
(
¨gp
, 
l_uacI¡
)));

377 
	`luaO_to°rög
(
L
, L->
t›
 - 1);

381 
	`£tÊtvÆue
(
L
->
t›
++, 
	`ˇ°_num
(
	`va_¨g
(
¨gp
, 
l_uacNumbî
)));

382 
	`luaO_to°rög
(
L
, L->
t›
 - 1);

386 
buff
[4*(*) + 8];

387 
l
 = 
	`•rötf
(
buff
, "%p", 
	`va_¨g
(
¨gp
, *));

388 
	`push°r
(
L
, 
buff
, 
l
);

392 
buff
[
UTF8BUFFSZ
];

393 
l
 = 
	`luaO_utf8esc
(
buff
, 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, )));

394 
	`push°r
(
L
, 
buff
 + 
UTF8BUFFSZ
 - 
l
,Ü);

398 
	`push°r
(
L
, "%", 1);

402 
	`luaG_ru√º‹
(
L
, "invalid option '%%%c'Åo 'lua_pushfstring'",

403 *(
e
 + 1));

406 
n
 += 2;

407 
fmt
 = 
e
+2;

409 
	`luaD_check°ack
(
L
, 1);

410 
	`push°r
(
L
, 
fmt
, 
	`°æí
(fmt));

411 i‡(
n
 > 0Ë
	`luaV_c⁄ˇt
(
L
,Ç + 1);

412  
	`svÆue
(
L
->
t›
 - 1);

413 
	}
}

416 c⁄° *
	$luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

417 c⁄° *
msg
;

418 
va_li°
 
¨gp
;

419 
	`va_°¨t
(
¨gp
, 
fmt
);

420 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

421 
	`va_íd
(
¨gp
);

422  
msg
;

423 
	}
}

427 
	#LL
(
x
Ë((x)/(Ë- 1)

	)

429 
	#RETS
 "..."

	)

430 
	#PRE
 "[°rög \""

	)

431 
	#POS
 "\"]"

	)

433 
	#add°r
(
a
,
b
,
l
Ë–
	`mem˝y
◊,b,÷Ë* ()),á +÷Ë)

	)

435 
	$luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
bufÊí
) {

436 
size_t
 
l
 = 
	`°æí
(
sour˚
);

437 i‡(*
sour˚
 == '=') {

438 i‡(
l
 <
bufÊí
)

439 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

441 
	`add°r
(
out
, 
sour˚
 + 1, 
bufÊí
 - 1);

442 *
out
 = '\0';

445 i‡(*
sour˚
 == '@') {

446 i‡(
l
 <
bufÊí
)

447 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

449 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

450 
bufÊí
 -
	`LL
(
RETS
);

451 
	`mem˝y
(
out
, 
sour˚
 + 1 + 
l
 - 
bufÊí
, bufflen * ());

455 c⁄° *
∆
 = 
	`°rchr
(
sour˚
, '\n');

456 
	`add°r
(
out
, 
PRE
, 
	`LL
(PRE));

457 
bufÊí
 -
	`LL
(
PRE
 
RETS
 
POS
) + 1;

458 i‡(
l
 < 
bufÊí
 && 
∆
 =
NULL
) {

459 
	`add°r
(
out
, 
sour˚
, 
l
);

462 i‡(
∆
 !
NULL
Ë
l
 =Ç»- 
sour˚
;

463 i‡(
l
 > 
bufÊí
)Ü = bufflen;

464 
	`add°r
(
out
, 
sour˚
, 
l
);

465 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

467 
	`mem˝y
(
out
, 
POS
, (
	`LL
(POS) + 1) * ());

469 
	}
}

	@lib/archive/lua-5.3.0/src/lobject.h

8 #i‚de‡
lobje˘_h


9 
	#lobje˘_h


	)

12 
	~<°d¨g.h
>

15 
	~"Œimôs.h
"

16 
	~"lua.h
"

22 
	#LUA_TPROTO
 
LUA_NUMTAGS


	)

23 
	#LUA_TDEADKEY
 (
LUA_NUMTAGS
+1)

	)

28 
	#LUA_TOTALTAGS
 (
LUA_TPROTO
 + 2)

	)

38 
	#VARBITS
 (3 << 4)

	)

49 
	#LUA_TLCL
 (
LUA_TFUNCTION
 | (0 << 4)Ë

	)

50 
	#LUA_TLCF
 (
LUA_TFUNCTION
 | (1 << 4)Ë

	)

51 
	#LUA_TCCL
 (
LUA_TFUNCTION
 | (2 << 4)Ë

	)

55 
	#LUA_TSHRSTR
 (
LUA_TSTRING
 | (0 << 4)Ë

	)

56 
	#LUA_TLNGSTR
 (
LUA_TSTRING
 | (1 << 4)Ë

	)

60 
	#LUA_TNUMFLT
 (
LUA_TNUMBER
 | (0 << 4)Ë

	)

61 
	#LUA_TNUMINT
 (
LUA_TNUMBER
 | (1 << 4)Ë

	)

65 
	#BIT_ISCOLLECTABLE
 (1 << 6)

	)

68 
	#˘b
(
t
Ë(—Ë| 
BIT_ISCOLLECTABLE
)

	)

74 
GCObje˘
 
	tGCObje˘
;

81 
	#Comm⁄Hódî
 
GCObje˘
 *
√xt
; 
lu_byã
 
â
;Üu_byã 
m¨ked


	)

87 
	sGCObje˘
 {

88 
	mComm⁄Hódî
;

96 
VÆue
 
	tVÆue
;

106 
	#TVÆuefõlds
 
VÆue
 
vÆue_
; 
â_


	)

108 
lua_TVÆue
 
	tTVÆue
;

112 
	#NILCONSTANT
 {
NULL
}, 
LUA_TNIL


	)

115 
	#vÆ_
(
o
Ë((o)->
vÆue_
)

	)

119 
	#πty≥
(
o
Ë((o)->
â_
)

	)

122 
	#nov¨ü¡
(
x
Ë((xË& 0x0F)

	)

125 
	#ây≥
(
o
Ë(
	`πty≥
(oË& 0x3F)

	)

128 
	#ânov
(
o
Ë(
	`nov¨ü¡
(
	`πty≥
(o)))

	)

132 
	#checkèg
(
o
,
t
Ë(
	`πty≥
(oË=—))

	)

133 
	#checkty≥
(
o
,
t
Ë(
	`ânov
(oË=—))

	)

134 
	#âi¢umbî
(
o
Ë
	`checkty≥
((o), 
LUA_TNUMBER
)

	)

135 
	#âisÊﬂt
(
o
Ë
	`checkèg
((o), 
LUA_TNUMFLT
)

	)

136 
	#âisöãgî
(
o
Ë
	`checkèg
((o), 
LUA_TNUMINT
)

	)

137 
	#âi¢û
(
o
Ë
	`checkèg
((o), 
LUA_TNIL
)

	)

138 
	#âisboﬁón
(
o
Ë
	`checkèg
((o), 
LUA_TBOOLEAN
)

	)

139 
	#âi¶ightu£rd©a
(
o
Ë
	`checkèg
((o), 
LUA_TLIGHTUSERDATA
)

	)

140 
	#âis°rög
(
o
Ë
	`checkty≥
((o), 
LUA_TSTRING
)

	)

141 
	#âisshr°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TSHRSTR
))

	)

142 
	#âi¶ng°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLNGSTR
))

	)

143 
	#âi°abÀ
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTABLE
))

	)

144 
	#âisfun˘i⁄
(
o
Ë
	`checkty≥
(o, 
LUA_TFUNCTION
)

	)

145 
	#âis˛osuª
(
o
Ë((
	`πty≥
(oË& 0x1FË=
LUA_TFUNCTION
)

	)

146 
	#âisC˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TCCL
))

	)

147 
	#âisL˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLCL
))

	)

148 
	#âi¶cf
(
o
Ë
	`checkèg
((o), 
LUA_TLCF
)

	)

149 
	#âisfuŒu£rd©a
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TUSERDATA
))

	)

150 
	#âi°hªad
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTHREAD
))

	)

151 
	#âisdódkey
(
o
Ë
	`checkèg
((o), 
LUA_TDEADKEY
)

	)

155 
	#ivÆue
(
o
Ë
	`check_exp
(
	`âisöãgî
(o), 
	`vÆ_
(o).
i
)

	)

156 
	#ÊtvÆue
(
o
Ë
	`check_exp
(
	`âisÊﬂt
(o), 
	`vÆ_
(o).
n
)

	)

157 
	#nvÆue
(
o
Ë
	`check_exp
(
	`âi¢umbî
(o), \

158 (
	`âisöãgî
(
o
Ë? 
	`ˇ°_num
(
	`ivÆue
(o)Ë: 
	`ÊtvÆue
(o)))

	)

159 
	#gcvÆue
(
o
Ë
	`check_exp
(
	`iscﬁÀ˘abÀ
(o), 
	`vÆ_
(o).
gc
)

	)

160 
	#pvÆue
(
o
Ë
	`check_exp
(
	`âi¶ightu£rd©a
(o), 
	`vÆ_
(o).
p
)

	)

161 
	#tsvÆue
(
o
Ë
	`check_exp
(
	`âis°rög
(o), 
	`gco2ts
(
	`vÆ_
(o).
gc
))

	)

162 
	#uvÆue
(
o
Ë
	`check_exp
(
	`âisfuŒu£rd©a
(o), 
	`gco2u
(
	`vÆ_
(o).
gc
))

	)

163 
	#˛vÆue
(
o
Ë
	`check_exp
(
	`âis˛osuª
(o), 
	`gco2˛
(
	`vÆ_
(o).
gc
))

	)

164 
	#˛LvÆue
(
o
Ë
	`check_exp
(
	`âisL˛osuª
(o), 
	`gco2l˛
(
	`vÆ_
(o).
gc
))

	)

165 
	#˛CvÆue
(
o
Ë
	`check_exp
(
	`âisC˛osuª
(o), 
	`gco2c˛
(
	`vÆ_
(o).
gc
))

	)

166 
	#fvÆue
(
o
Ë
	`check_exp
(
	`âi¶cf
(o), 
	`vÆ_
(o).
f
)

	)

167 
	#hvÆue
(
o
Ë
	`check_exp
(
	`âi°abÀ
(o), 
	`gco2t
(
	`vÆ_
(o).
gc
))

	)

168 
	#bvÆue
(
o
Ë
	`check_exp
(
	`âisboﬁón
(o), 
	`vÆ_
(o).
b
)

	)

169 
	#thvÆue
(
o
Ë
	`check_exp
(
	`âi°hªad
(o), 
	`gco2th
(
	`vÆ_
(o).
gc
))

	)

171 
	#dódvÆue
(
o
Ë
	`check_exp
(
	`âisdódkey
(o), 
	`ˇ°
(*, 
	`vÆ_
(o).
gc
))

	)

173 
	#l_isÁl£
(
o
Ë(
	`âi¢û
(oË|| (
	`âisboﬁón
(oË&& 
	`bvÆue
(oË=0))

	)

176 
	#iscﬁÀ˘abÀ
(
o
Ë(
	`πty≥
(oË& 
BIT_ISCOLLECTABLE
)

	)

180 
	#righât
(
obj
Ë(
	`ây≥
(objË=
	`gcvÆue
(obj)->
â
)

	)

182 
	#checklivíess
(
g
,
obj
) \

183 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
) || \

184 (
	`righât
(
obj
Ë&& !
	`isdód
(
g
,
	`gcvÆue
(obj))))

	)

188 
	#£ât_
(
o
,
t
Ë((o)->
â_
=—))

	)

190 
	#£tÊtvÆue
(
obj
,
x
) \

191 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
n
=(
x
); 
	`£ât_
(io, 
LUA_TNUMFLT
); }

	)

193 
	#£tivÆue
(
obj
,
x
) \

194 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
i
=(
x
); 
	`£ât_
(io, 
LUA_TNUMINT
); }

	)

196 
	#£äûvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TNIL
)

	)

198 
	#£tfvÆue
(
obj
,
x
) \

199 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
f
=(
x
); 
	`£ât_
(io, 
LUA_TLCF
); }

	)

201 
	#£çvÆue
(
obj
,
x
) \

202 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
p
=(
x
); 
	`£ât_
(io, 
LUA_TLIGHTUSERDATA
); }

	)

204 
	#£tbvÆue
(
obj
,
x
) \

205 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
b
=(
x
); 
	`£ât_
(io, 
LUA_TBOOLEAN
); }

	)

207 
	#£tgcovÆue
(
L
,
obj
,
x
) \

208 { 
TVÆue
 *
io
 = (
obj
); 
GCObje˘
 *
i_g
=(
x
); \

209 
	`vÆ_
(
io
).
gc
 = 
i_g
; 
	`£ât_
(io, 
	`˘b
(i_g->
â
)); }

	)

211 
	#£tsvÆue
(
L
,
obj
,
x
) \

212 { 
TVÆue
 *
io
 = (
obj
); 
TSåög
 *
x_
 = (
x
); \

213 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(x_->
â
)); \

214 
	`checklivíess
(
	`G
(
L
),
io
); }

	)

216 
	#£tuvÆue
(
L
,
obj
,
x
) \

217 { 
TVÆue
 *
io
 = (
obj
); 
Ud©a
 *
x_
 = (
x
); \

218 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TUSERDATA
)); \

219 
	`checklivíess
(
	`G
(
L
),
io
); }

	)

221 
	#£âhvÆue
(
L
,
obj
,
x
) \

222 { 
TVÆue
 *
io
 = (
obj
); 
lua_Sèã
 *
x_
 = (
x
); \

223 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTHREAD
)); \

224 
	`checklivíess
(
	`G
(
L
),
io
); }

	)

226 
	#£t˛LvÆue
(
L
,
obj
,
x
) \

227 { 
TVÆue
 *
io
 = (
obj
); 
LClosuª
 *
x_
 = (
x
); \

228 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TLCL
)); \

229 
	`checklivíess
(
	`G
(
L
),
io
); }

	)

231 
	#£t˛CvÆue
(
L
,
obj
,
x
) \

232 { 
TVÆue
 *
io
 = (
obj
); 
CClosuª
 *
x_
 = (
x
); \

233 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TCCL
)); \

234 
	`checklivíess
(
	`G
(
L
),
io
); }

	)

236 
	#£thvÆue
(
L
,
obj
,
x
) \

237 { 
TVÆue
 *
io
 = (
obj
); 
TabÀ
 *
x_
 = (
x
); \

238 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTABLE
)); \

239 
	`checklivíess
(
	`G
(
L
),
io
); }

	)

241 
	#£tdódvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TDEADKEY
)

	)

245 
	#£tobj
(
L
,
obj1
,
obj2
) \

246 { 
TVÆue
 *
io1
=(
obj1
); *io1 = *(
obj2
); \

247 ()
L
; 
	`checklivíess
(
	`G
(L),
io1
); }

	)

255 
	#£tobjs2s
 
£tobj


	)

257 
	#£tobj2s
 
£tobj


	)

258 
	#£tsvÆue2s
 
£tsvÆue


	)

259 
	#£thvÆue2s
 
£thvÆue


	)

260 
	#£çtvÆue2s
 
£çtvÆue


	)

262 
	#£tobjt2t
 
£tobj


	)

264 
	#£tobj2t
 
£tobj


	)

266 
	#£tobj2n
 
£tobj


	)

267 
	#£tsvÆue2n
 
£tsvÆue


	)

279 
	uVÆue
 {

280 
GCObje˘
 *
	mgc
;

281 *
	mp
;

282 
	mb
;

283 
lua_CFun˘i⁄
 
	mf
;

284 
lua_I¡egî
 
	mi
;

285 
lua_Numbî
 
	mn
;

289 
	slua_TVÆue
 {

290 
	mTVÆuefõlds
;

294 
TVÆue
 *
	tStkId
;

303 
	sTSåög
 {

304 
	mComm⁄Hódî
;

305 
lu_byã
 
	mexåa
;

306 
	mhash
;

307 
size_t
 
	mÀn
;

308 
TSåög
 *
	mh√xt
;

309 } 
	tTSåög
;

315 
	uUTSåög
 {

316 
L_UmaxÆign
 
	mdummy
;

317 
TSåög
 
	mtsv
;

318 } 
	tUTSåög
;

325 
	#gëaddr°r
(
ts
Ë(
	`ˇ°
(*, (ts)Ë+ (
UTSåög
))

	)

326 
	#gë°r
(
ts
) \

327 
	`check_exp
(((
ts
)->
exåa
), 
	`ˇ°
(c⁄° *, 
	`gëaddr°r
—s)))

	)

330 
	#svÆue
(
o
Ë
	`gë°r
(
	`tsvÆue
(o))

	)

337 
	sUd©a
 {

338 
	mComm⁄Hódî
;

339 
lu_byã
 
	mâuv_
;

340 
TabÀ
 *
	mmë©abÀ
;

341 
size_t
 
	mÀn
;

342 
VÆue
 
	mu£r_
;

343 } 
	tUd©a
;

349 
	uUUd©a
 {

350 
L_UmaxÆign
 
	mdummy
;

351 
Ud©a
 
	muv
;

352 } 
	tUUd©a
;

359 
	#gëud©amem
(
u
) \

360 
	`check_exp
(((
u
)->
âuv_
), (
	`ˇ°
(*, (u)Ë+ (
UUd©a
)))

	)

362 
	#£tu£rvÆue
(
L
,
u
,
o
) \

363 { c⁄° 
TVÆue
 *
io
=(
o
); 
Ud©a
 *
iu
 = (
u
); \

364 
iu
->
u£r_
 = 
io
->
vÆue_
; iu->
âuv_
 = io->
â_
; \

365 
	`checklivíess
(
	`G
(
L
),
io
); }

	)

368 
	#gëu£rvÆue
(
L
,
u
,
o
) \

369 { 
TVÆue
 *
io
=(
o
); c⁄° 
Ud©a
 *
iu
 = (
u
); \

370 
io
->
vÆue_
 = 
iu
->
u£r_
; io->
â_
 = iu->
âuv_
; \

371 
	`checklivíess
(
	`G
(
L
),
io
); }

	)

377 
	sUpvÆdesc
 {

378 
TSåög
 *
	m«me
;

379 
lu_byã
 
	mö°ack
;

380 
lu_byã
 
	midx
;

381 } 
	tUpvÆdesc
;

388 
	sLocV¨
 {

389 
TSåög
 *
	mv¨«me
;

390 
	m°¨çc
;

391 
	mídpc
;

392 } 
	tLocV¨
;

398 
	sPrŸo
 {

399 
	mComm⁄Hódî
;

400 
lu_byã
 
	mnum∑øms
;

401 
lu_byã
 
	mis_v¨¨g
;

402 
lu_byã
 
	mmax°acksize
;

403 
	msizeupvÆues
;

404 
	msizek
;

405 
	msizecode
;

406 
	msizñöeöfo
;

407 
	msizï
;

408 
	msizñocv¨s
;

409 
	mlöedeföed
;

410 
	mœ°löedeföed
;

411 
TVÆue
 *
	mk
;

412 
In°ru˘i⁄
 *
	mcode
;

413 
PrŸo
 **
	mp
;

414 *
	mlöeöfo
;

415 
LocV¨
 *
	mlocv¨s
;

416 
UpvÆdesc
 *
	mupvÆues
;

417 
LClosuª
 *
	mˇche
;

418 
TSåög
 *
	msour˚
;

419 
GCObje˘
 *
	mg˛i°
;

420 } 
	tPrŸo
;

427 
UpVÆ
 
	tUpVÆ
;

434 
	#ClosuªHódî
 \

435 
Comm⁄Hódî
; 
lu_byã
 
nupvÆues
; 
GCObje˘
 *
g˛i°


	)

437 
	sCClosuª
 {

438 
	mClosuªHódî
;

439 
lua_CFun˘i⁄
 
	mf
;

440 
TVÆue
 
	mupvÆue
[1];

441 } 
	tCClosuª
;

444 
	sLClosuª
 {

445 
	mClosuªHódî
;

446 
PrŸo
 *
	mp
;

447 
UpVÆ
 *
	mupvÆs
[1];

448 } 
	tLClosuª
;

451 
	uClosuª
 {

452 
CClosuª
 
	mc
;

453 
LClosuª
 
	ml
;

454 } 
	tClosuª
;

457 
	#isLfun˘i⁄
(
o
Ë
	`âisL˛osuª
(o)

	)

459 
	#gë¥Ÿo
(
o
Ë(
	`˛LvÆue
(o)->
p
)

	)

466 
	uTKey
 {

468 
	mTVÆuefõlds
;

469 
	m√xt
;

470 } 
	mnk
;

471 
TVÆue
 
	mtvk
;

472 } 
	tTKey
;

476 
	#£äodekey
(
L
,
key
,
obj
) \

477 { 
TKey
 *
k_
=(
key
); c⁄° 
TVÆue
 *
io_
=(
obj
); \

478 
k_
->
nk
.
vÆue_
 = 
io_
->vÆue_; k_->nk.
â_
 = io_->tt_; \

479 ()
L
; 
	`checklivíess
(
	`G
(L),
io_
); }

	)

482 
	sNode
 {

483 
TVÆue
 
	mi_vÆ
;

484 
TKey
 
	mi_key
;

485 } 
	tNode
;

488 
	sTabÀ
 {

489 
	mComm⁄Hódî
;

490 
lu_byã
 
	mÊags
;

491 
lu_byã
 
	mlsizíode
;

492 
	msizóºay
;

493 
TVÆue
 *
	m¨øy
;

494 
Node
 *
	mnode
;

495 
Node
 *
	mœ°‰ì
;

496 
TabÀ
 *
	mmë©abÀ
;

497 
GCObje˘
 *
	mg˛i°
;

498 } 
	tTabÀ
;

505 
	#lmod
(
s
,
size
) \

506 (
	`check_exp
((
size
&(size-1))==0, (
	`ˇ°
(, (
s
Ë& ((size)-1)))))

	)

509 
	#twŸo
(
x
Ë(1<<(x))

	)

510 
	#sizíode
(
t
Ë(
	`twŸo
(—)->
lsizíode
))

	)

516 
	#luaO_nûobje˘
 (&
luaO_nûobje˘_
)

	)

519 
LUAI_DDEC
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
;

522 
	#UTF8BUFFSZ
 8

	)

524 
LUAI_FUNC
 
luaO_öt2fb
 (
x
);

525 
LUAI_FUNC
 
luaO_fb2öt
 (
x
);

526 
LUAI_FUNC
 
luaO_utf8esc
 (*
buff
, 
x
);

527 
LUAI_FUNC
 
luaO_˚ûlog2
 (
x
);

528 
LUAI_FUNC
 
luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
,

529 c⁄° 
TVÆue
 *
p2
, TVÆuê*
ªs
);

530 
LUAI_FUNC
 
size_t
 
luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
);

531 
LUAI_FUNC
 
luaO_hexavÆue
 (
c
);

532 
LUAI_FUNC
 
luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
);

533 
LUAI_FUNC
 c⁄° *
luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

534 
va_li°
 
¨gp
);

535 
LUAI_FUNC
 c⁄° *
luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

536 
LUAI_FUNC
 
luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
Àn
);

	@lib/archive/lua-5.3.0/src/lopcodes.c

7 
	#l›codes_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"l›codes.h
"

20 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1] = {

68 
NULL


72 
	#›mode
(
t
,
a
,
b
,
c
,
m
Ë((—)<<7Ë| (◊)<<6Ë| ((b)<<4Ë| ((c)<<2Ë| (m))

	)

74 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
] = {

76 
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

77 ,
›mode
(0, 1, 
OpArgK
, 
OpArgN
, 
iABx
)

78 ,
›mode
(0, 1, 
OpArgN
, OpArgN, 
iABx
)

79 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

80 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

81 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

82 ,
›mode
(0, 1, 
OpArgU
, 
OpArgK
, 
iABC
)

83 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

84 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

85 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

86 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

87 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

88 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

89 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

90 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

91 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

92 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

93 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

94 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

95 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

96 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

97 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

98 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

99 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

100 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

101 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

102 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

103 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

104 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

105 ,
›mode
(0, 1, 
OpArgR
, OpArgR, 
iABC
)

106 ,
›mode
(0, 0, 
OpArgR
, 
OpArgN
, 
iAsBx
)

107 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

108 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

109 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

110 ,
›mode
(1, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

111 ,
›mode
(1, 1, 
OpArgR
, 
OpArgU
, 
iABC
)

112 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

113 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

114 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

115 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

116 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

117 ,
›mode
(0, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

118 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

119 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iABC
)

120 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABx
)

121 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

122 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iAx
)

	@lib/archive/lua-5.3.0/src/lopcodes.h

7 #i‚de‡
l›codes_h


8 
	#l›codes_h


	)

10 
	~"Œimôs.h
"

32 
	eOpMode
 {
	miABC
, 
	miABx
, 
	miAsBx
, 
	miAx
};

38 
	#SIZE_C
 9

	)

39 
	#SIZE_B
 9

	)

40 
	#SIZE_Bx
 (
SIZE_C
 + 
SIZE_B
)

	)

41 
	#SIZE_A
 8

	)

42 
	#SIZE_Ax
 (
SIZE_C
 + 
SIZE_B
 + 
SIZE_A
)

	)

44 
	#SIZE_OP
 6

	)

46 
	#POS_OP
 0

	)

47 
	#POS_A
 (
POS_OP
 + 
SIZE_OP
)

	)

48 
	#POS_C
 (
POS_A
 + 
SIZE_A
)

	)

49 
	#POS_B
 (
POS_C
 + 
SIZE_C
)

	)

50 
	#POS_Bx
 
POS_C


	)

51 
	#POS_Ax
 
POS_A


	)

59 #i‡
SIZE_Bx
 < 
LUAI_BITSINT
-1

60 
	#MAXARG_Bx
 ((1<<
SIZE_Bx
)-1)

	)

61 
	#MAXARG_sBx
 (
MAXARG_Bx
>>1Ë

	)

63 
	#MAXARG_Bx
 
MAX_INT


	)

64 
	#MAXARG_sBx
 
MAX_INT


	)

67 #i‡
SIZE_Ax
 < 
LUAI_BITSINT
-1

68 
	#MAXARG_Ax
 ((1<<
SIZE_Ax
)-1)

	)

70 
	#MAXARG_Ax
 
MAX_INT


	)

74 
	#MAXARG_A
 ((1<<
SIZE_A
)-1)

	)

75 
	#MAXARG_B
 ((1<<
SIZE_B
)-1)

	)

76 
	#MAXARG_C
 ((1<<
SIZE_C
)-1)

	)

80 
	#MASK1
(
n
,
p
Ë((~((~(
In°ru˘i⁄
)0)<<“)))<<’))

	)

83 
	#MASK0
(
n
,
p
Ë(~
	`MASK1
“,p))

	)

89 
	#GET_OPCODE
(
i
Ë(
	`ˇ°
(
OpCode
, ((i)>>
POS_OP
Ë& 
	`MASK1
(
SIZE_OP
,0)))

	)

90 
	#SET_OPCODE
(
i
,
o
Ë((iË(((i)&
	`MASK0
(
SIZE_OP
,
POS_OP
)) | \

91 ((
	`ˇ°
(
In°ru˘i⁄
, 
o
)<<
POS_OP
)&
	`MASK1
(
SIZE_OP
,POS_OP))))

	)

93 
	#gë¨g
(
i
,
pos
,
size
Ë(
	`ˇ°
(, ((i)>>posË& 
	`MASK1
(size,0)))

	)

94 
	#£èrg
(
i
,
v
,
pos
,
size
Ë((iË(((i)&
	`MASK0
(size,pos)) | \

95 ((
	`ˇ°
(
In°ru˘i⁄
, 
v
)<<
pos
)&
	`MASK1
(
size
,pos))))

	)

97 
	#GETARG_A
(
i
Ë
	`gë¨g
(i, 
POS_A
, 
SIZE_A
)

	)

98 
	#SETARG_A
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_A
, 
SIZE_A
)

	)

100 
	#GETARG_B
(
i
Ë
	`gë¨g
(i, 
POS_B
, 
SIZE_B
)

	)

101 
	#SETARG_B
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_B
, 
SIZE_B
)

	)

103 
	#GETARG_C
(
i
Ë
	`gë¨g
(i, 
POS_C
, 
SIZE_C
)

	)

104 
	#SETARG_C
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_C
, 
SIZE_C
)

	)

106 
	#GETARG_Bx
(
i
Ë
	`gë¨g
(i, 
POS_Bx
, 
SIZE_Bx
)

	)

107 
	#SETARG_Bx
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Bx
, 
SIZE_Bx
)

	)

109 
	#GETARG_Ax
(
i
Ë
	`gë¨g
(i, 
POS_Ax
, 
SIZE_Ax
)

	)

110 
	#SETARG_Ax
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Ax
, 
SIZE_Ax
)

	)

112 
	#GETARG_sBx
(
i
Ë(
	`GETARG_Bx
(i)-
MAXARG_sBx
)

	)

113 
	#SETARG_sBx
(
i
,
b
Ë
	`SETARG_Bx
((i),
	`ˇ°
(, (b)+
MAXARG_sBx
))

	)

116 
	#CREATE_ABC
(
o
,
a
,
b
,
c
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

117 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

118 | (
	`ˇ°
(
In°ru˘i⁄
, 
b
)<<
POS_B
) \

119 | (
	`ˇ°
(
In°ru˘i⁄
, 
c
)<<
POS_C
))

	)

121 
	#CREATE_ABx
(
o
,
a
,
bc
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

122 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

123 | (
	`ˇ°
(
In°ru˘i⁄
, 
bc
)<<
POS_Bx
))

	)

125 
	#CREATE_Ax
(
o
,
a
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

126 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_Ax
))

	)

134 
	#BITRK
 (1 << (
SIZE_B
 - 1))

	)

137 
	#ISK
(
x
Ë((xË& 
BITRK
)

	)

140 
	#INDEXK
(
r
Ë(()‘Ë& ~
BITRK
)

	)

142 
	#MAXINDEXRK
 (
BITRK
 - 1)

	)

145 
	#RKASK
(
x
Ë((xË| 
BITRK
)

	)

151 
	#NO_REG
 
MAXARG_A


	)

169 
	mOP_MOVE
,

170 
	mOP_LOADK
,

171 
	mOP_LOADKX
,

172 
	mOP_LOADBOOL
,

173 
	mOP_LOADNIL
,

174 
	mOP_GETUPVAL
,

176 
	mOP_GETTABUP
,

177 
	mOP_GETTABLE
,

179 
	mOP_SETTABUP
,

180 
	mOP_SETUPVAL
,

181 
	mOP_SETTABLE
,

183 
	mOP_NEWTABLE
,

185 
	mOP_SELF
,

187 
	mOP_ADD
,

188 
	mOP_SUB
,

189 
	mOP_MUL
,

190 
	mOP_MOD
,

191 
	mOP_POW
,

192 
	mOP_DIV
,

193 
	mOP_IDIV
,

194 
	mOP_BAND
,

195 
	mOP_BOR
,

196 
	mOP_BXOR
,

197 
	mOP_SHL
,

198 
	mOP_SHR
,

199 
	mOP_UNM
,

200 
	mOP_BNOT
,

201 
	mOP_NOT
,

202 
	mOP_LEN
,

204 
	mOP_CONCAT
,

206 
	mOP_JMP
,

207 
	mOP_EQ
,

208 
	mOP_LT
,

209 
	mOP_LE
,

211 
	mOP_TEST
,

212 
	mOP_TESTSET
,

214 
	mOP_CALL
,

215 
	mOP_TAILCALL
,

216 
	mOP_RETURN
,

218 
	mOP_FORLOOP
,

220 
	mOP_FORPREP
,

222 
	mOP_TFORCALL
,

223 
	mOP_TFORLOOP
,

225 
	mOP_SETLIST
,

227 
	mOP_CLOSURE
,

229 
	mOP_VARARG
,

231 
	mOP_EXTRAARG


232 } 
	tOpCode
;

235 
	#NUM_OPCODES
 (
	`ˇ°
(, 
OP_EXTRAARG
Ë+ 1)

	)

272 
	eOpArgMask
 {

273 
	mOpArgN
,

274 
	mOpArgU
,

275 
	mOpArgR
,

276 
	mOpArgK


279 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
];

281 
	#gëOpMode
(
m
Ë(
	`ˇ°
(
OpMode
, 
luaP_›modes
[m] & 3))

	)

282 
	#gëBMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 4Ë& 3))

	)

283 
	#gëCMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 2Ë& 3))

	)

284 
	#ã°AMode
(
m
Ë(
luaP_›modes
[m] & (1 << 6))

	)

285 
	#ã°TMode
(
m
Ë(
luaP_›modes
[m] & (1 << 7))

	)

288 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1];

292 
	#LFIELDS_PER_FLUSH
 50

	)

	@lib/archive/lua-5.3.0/src/loslib.c

7 
	#lo¶ib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<loˇÀ.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<time.h
>

19 
	~"lua.h
"

21 
	~"œuxlib.h
"

22 
	~"luÆib.h
"

25 #i‡!
deföed
(
LUA_STRFTIMEOPTIONS
)

30 #i‡
deföed
(
LUA_USE_C89
)

31 
	#LUA_STRFTIMEOPTIONS
 { "aAbBcdHIjmMpSUwWxXyYz%", "" }

	)

33 
	#LUA_STRFTIMEOPTIONS
 \

36 "O", "deHImMSuUVwWy" }

	)

43 #i‡!
deföed
(
l_time_t
)

47 
	#l_timë
 
lua_I¡egî


	)

48 
	#l_pushtime
(
L
,
t
Ë
	`lua_pushöãgî
(L,(
lua_I¡egî
)—))

	)

49 
	#l_checktime
(
L
,
a
Ë((
time_t
)
	`luaL_checköãgî
(L,a))

	)

55 #i‡!
deföed
(
lua_tm≤am
)

61 #i‡
deföed
(
LUA_USE_POSIX
)

63 
	~<uni°d.h
>

65 
	#LUA_TMPNAMBUFSIZE
 32

	)

67 #i‡!
deföed
(
LUA_TMPNAMTEMPLATE
)

68 
	#LUA_TMPNAMTEMPLATE
 "/tmp/lua_XXXXXX"

	)

71 
	#lua_tm≤am
(
b
,
e
) { \

72 
	`°r˝y
(
b
, 
LUA_TMPNAMTEMPLATE
); \

73 
e
 = 
	`mk°emp
(
b
); \

74 i‡(
e
 !-1Ë
	`˛o£
(e); \

75 
e
 = (ê=-1); }

	)

80 
	#LUA_TMPNAMBUFSIZE
 
L_tm≤am


	)

81 
	#lua_tm≤am
(
b
,
e
Ë{É = (
	`tm≤am
(bË=
NULL
); }

	)

89 #i‡!
deföed
(
l_gmtime
)

95 #i‡
deföed
(
LUA_USE_POSIX
)

97 
	#l_gmtime
(
t
,
r
Ë
	`gmtime_r
—,r)

	)

98 
	#l_loˇ…ime
(
t
,
r
Ë
	`loˇ…ime_r
—,r)

	)

103 
	#l_gmtime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`gmtime
—))

	)

104 
	#l_loˇ…ime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`loˇ…ime
—))

	)

112 
	$os_execuã
 (
lua_Sèã
 *
L
) {

113 c⁄° *
cmd
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

114 
°©
 = 
	`sy°em
(
cmd
);

115 i‡(
cmd
 !
NULL
)

116  
	`luaL_exe¸esu…
(
L
, 
°©
);

118 
	`lua_pushboﬁón
(
L
, 
°©
);

121 
	}
}

124 
	$os_ªmove
 (
lua_Sèã
 *
L
) {

125 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

126  
	`luaL_fûîesu…
(
L
, 
	`ªmove
(
fûíame
) == 0, filename);

127 
	}
}

130 
	$os_ª«me
 (
lua_Sèã
 *
L
) {

131 c⁄° *
‰om«me
 = 
	`luaL_check°rög
(
L
, 1);

132 c⁄° *
t⁄ame
 = 
	`luaL_check°rög
(
L
, 2);

133  
	`luaL_fûîesu…
(
L
, 
	`ª«me
(
‰om«me
, 
t⁄ame
Ë=0, 
NULL
);

134 
	}
}

137 
	$os_tm≤ame
 (
lua_Sèã
 *
L
) {

138 
buff
[
LUA_TMPNAMBUFSIZE
];

139 
îr
;

140 
	`lua_tm≤am
(
buff
, 
îr
);

141 i‡(
îr
)

142  
	`luaL_îr‹
(
L
, "unableÅo generateá unique filename");

143 
	`lua_push°rög
(
L
, 
buff
);

145 
	}
}

148 
	$os_gëív
 (
lua_Sèã
 *
L
) {

149 
	`lua_push°rög
(
L
, 
	`gëív
(
	`luaL_check°rög
(L, 1)));

151 
	}
}

154 
	$os_˛ock
 (
lua_Sèã
 *
L
) {

155 
	`lua_pushnumbî
(
L
, ((
lua_Numbî
)
	`˛ock
())/÷ua_Numbî)
CLOCKS_PER_SEC
);

157 
	}
}

168 
	$£tfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

169 
	`lua_pushöãgî
(
L
, 
vÆue
);

170 
	`lua_£tfõld
(
L
, -2, 
key
);

171 
	}
}

173 
	$£tboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

174 i‡(
vÆue
 < 0)

176 
	`lua_pushboﬁón
(
L
, 
vÆue
);

177 
	`lua_£tfõld
(
L
, -2, 
key
);

178 
	}
}

180 
	$gëboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
) {

181 
ªs
;

182 
ªs
 = (
	`lua_gëfõld
(
L
, -1, 
key
Ë=
LUA_TNIL
Ë? -1 : 
	`lua_toboﬁón
(L, -1);

183 
	`lua_p›
(
L
, 1);

184  
ªs
;

185 
	}
}

188 
	$gëfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
d
) {

189 
ªs
, 
i¢um
;

190 
	`lua_gëfõld
(
L
, -1, 
key
);

191 
ªs
 = ()
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

192 i‡(!
i¢um
) {

193 i‡(
d
 < 0)

194  
	`luaL_îr‹
(
L
, "fõld '%s' missög i¿d©êèbÀ", 
key
);

195 
ªs
 = 
d
;

197 
	`lua_p›
(
L
, 1);

198  
ªs
;

199 
	}
}

202 c⁄° *
	$check›ti⁄
 (
lua_Sèã
 *
L
, c⁄° *
c⁄v
, *
buff
) {

203 c⁄° *c⁄° 
›ti⁄s
[] = 
LUA_STRFTIMEOPTIONS
;

204 
i
;

205 
i
 = 0; i < (
›ti⁄s
)/(options[0]); i += 2) {

206 i‡(*
c⁄v
 !'\0' && 
	`°rchr
(
›ti⁄s
[
i
], *c⁄vË!
NULL
) {

207 
buff
[1] = *
c⁄v
;

208 i‡(*
›ti⁄s
[
i
 + 1] == '\0') {

209 
buff
[2] = '\0';

210  
c⁄v
 + 1;

212 i‡(*(
c⁄v
 + 1) != '\0' &&

213 
	`°rchr
(
›ti⁄s
[
i
 + 1], *(
c⁄v
 + 1)Ë!
NULL
) {

214 
buff
[2] = *(
c⁄v
 + 1);

215 
buff
[3] = '\0';

216  
c⁄v
 + 2;

220 
	`luaL_¨gîr‹
(
L
, 1,

221 
	`lua_pushf°rög
(
L
, "övÆid c⁄vîsi⁄ s≥cifõ∏'%%%s'", 
c⁄v
));

222  
c⁄v
;

223 
	}
}

226 
	$os_d©e
 (
lua_Sèã
 *
L
) {

227 c⁄° *
s
 = 
	`luaL_›t°rög
(
L
, 1, "%c");

228 
time_t
 
t
 = 
	`luaL_›t
(
L
, 
l_checktime
, 2, 
	`time
(
NULL
));

229 
tm
 
tmr
, *
°m
;

230 i‡(*
s
 == '!') {

231 
°m
 = 
	`l_gmtime
(&
t
, &
tmr
);

232 
s
++;

235 
°m
 = 
	`l_loˇ…ime
(&
t
, &
tmr
);

236 i‡(
°m
 =
NULL
)

237 
	`lua_pushnû
(
L
);

238 i‡(
	`°rcmp
(
s
, "*t") == 0) {

239 
	`lua_¸óãèbÀ
(
L
, 0, 9);

240 
	`£tfõld
(
L
, "£c", 
°m
->
tm_£c
);

241 
	`£tfõld
(
L
, "mö", 
°m
->
tm_mö
);

242 
	`£tfõld
(
L
, "hour", 
°m
->
tm_hour
);

243 
	`£tfõld
(
L
, "day", 
°m
->
tm_mday
);

244 
	`£tfõld
(
L
, "m⁄th", 
°m
->
tm_m⁄
+1);

245 
	`£tfõld
(
L
, "yór", 
°m
->
tm_yór
+1900);

246 
	`£tfõld
(
L
, "wday", 
°m
->
tm_wday
+1);

247 
	`£tfõld
(
L
, "yday", 
°m
->
tm_yday
+1);

248 
	`£tboﬁfõld
(
L
, "isd°", 
°m
->
tm_isd°
);

251 
cc
[4];

252 
luaL_Buf„r
 
b
;

253 
cc
[0] = '%';

254 
	`luaL_bufföô
(
L
, &
b
);

255 *
s
) {

256 i‡(*
s
 != '%')

257 
	`luaL_addch¨
(&
b
, *
s
++);

259 
size_t
 
ª¶í
;

260 
buff
[200];

261 
s
 = 
	`check›ti⁄
(
L
, s + 1, 
cc
);

262 
ª¶í
 = 
	`°r·ime
(
buff
, (buff), 
cc
, 
°m
);

263 
	`luaL_addl°rög
(&
b
, 
buff
, 
ª¶í
);

266 
	`luaL_pushªsu…
(&
b
);

269 
	}
}

272 
	$os_time
 (
lua_Sèã
 *
L
) {

273 
time_t
 
t
;

274 i‡(
	`lua_i¢⁄e‹nû
(
L
, 1))

275 
t
 = 
	`time
(
NULL
);

277 
tm
 
ts
;

278 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

279 
	`lua_£â›
(
L
, 1);

280 
ts
.
tm_£c
 = 
	`gëfõld
(
L
, "sec", 0);

281 
ts
.
tm_mö
 = 
	`gëfõld
(
L
, "min", 0);

282 
ts
.
tm_hour
 = 
	`gëfõld
(
L
, "hour", 12);

283 
ts
.
tm_mday
 = 
	`gëfõld
(
L
, "day", -1);

284 
ts
.
tm_m⁄
 = 
	`gëfõld
(
L
, "month", -1) - 1;

285 
ts
.
tm_yór
 = 
	`gëfõld
(
L
, "year", -1) - 1900;

286 
ts
.
tm_isd°
 = 
	`gëboﬁfõld
(
L
, "isdst");

287 
t
 = 
	`mktime
(&
ts
);

289 i‡(
t
 !(
time_t
)(
l_timë
)t)

290 
	`luaL_îr‹
(
L
, "timeÑesult cannot beÑepresented inÅhis Lua instalation");

291 i‡(
t
 =(
time_t
)(-1))

292 
	`lua_pushnû
(
L
);

294 
	`l_pushtime
(
L
, 
t
);

296 
	}
}

299 
	$os_dif·ime
 (
lua_Sèã
 *
L
) {

300 
ªs
 = 
	`dif·ime
((
	`l_checktime
(
L
, 1)), (l_checktime(L, 2)));

301 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
ªs
);

303 
	}
}

308 
	$os_£éoˇÀ
 (
lua_Sèã
 *
L
) {

309 c⁄° 
ˇt
[] = {
LC_ALL
, 
LC_COLLATE
, 
LC_CTYPE
, 
LC_MONETARY
,

310 
LC_NUMERIC
, 
LC_TIME
};

311 c⁄° *c⁄° 
ˇäames
[] = {"all", "collate", "ctype", "monetary",

312 "numîic", "time", 
NULL
};

313 c⁄° *
l
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

314 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "Æl", 
ˇäames
);

315 
	`lua_push°rög
(
L
, 
	`£éoˇÀ
(
ˇt
[
›
], 
l
));

317 
	}
}

320 
	$os_exô
 (
lua_Sèã
 *
L
) {

321 
°©us
;

322 i‡(
	`lua_isboﬁón
(
L
, 1))

323 
°©us
 = (
	`lua_toboﬁón
(
L
, 1Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
);

325 
°©us
 = ()
	`luaL_›töãgî
(
L
, 1, 
EXIT_SUCCESS
);

326 i‡(
	`lua_toboﬁón
(
L
, 2))

327 
	`lua_˛o£
(
L
);

328 i‡(
L
Ë
	`exô
(
°©us
);

330 
	}
}

333 c⁄° 
luaL_Reg
 
	gsy¶ib
[] = {

334 {"˛ock", 
os_˛ock
},

335 {"d©e", 
os_d©e
},

336 {"dif·ime", 
os_dif·ime
},

337 {"execuã", 
os_execuã
},

338 {"exô", 
os_exô
},

339 {"gëív", 
os_gëív
},

340 {"ªmove", 
os_ªmove
},

341 {"ª«me", 
os_ª«me
},

342 {"£éoˇÀ", 
os_£éoˇÀ
},

343 {"time", 
os_time
},

344 {"tm≤ame", 
os_tm≤ame
},

345 {
NULL
, NULL}

352 
LUAMOD_API
 
	$lua›í_os
 (
lua_Sèã
 *
L
) {

353 
	`luaL_√wlib
(
L
, 
sy¶ib
);

355 
	}
}

	@lib/archive/lua-5.3.0/src/lparser.c

7 
	#Õ¨£r_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"lcode.h
"

18 
	~"ldebug.h
"

19 
	~"ldo.h
"

20 
	~"lfunc.h
"

21 
	~"Œex.h
"

22 
	~"lmem.h
"

23 
	~"lobje˘.h
"

24 
	~"l›codes.h
"

25 
	~"Õ¨£r.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

34 
	#MAXVARS
 200

	)

37 
	#hasmu…ªt
(
k
Ë((kË=
VCALL
 || (kË=
VVARARG
)

	)

42 
	#eq°r
(
a
,
b
Ë(◊Ë=(b))

	)

48 
	sBlockC¡
 {

49 
BlockC¡
 *
	m¥evious
;

50 
	mfú°œbñ
;

51 
	mfú°gŸo
;

52 
lu_byã
 
	m«˘v¨
;

53 
lu_byã
 
	mupvÆ
;

54 
lu_byã
 
	mi¶o›
;

55 } 
	tBlockC¡
;

62 
°©emít
 (
LexSèã
 *
ls
);

63 
ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
);

67 
l_n‹ë
 
	$£mîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

68 
ls
->
t
.
tokí
 = 0;

69 
	`luaX_sy¡axîr‹
(
ls
, 
msg
);

70 
	}
}

73 
l_n‹ë
 
	$îr‹_ex≥˘ed
 (
LexSèã
 *
ls
, 
tokí
) {

74 
	`luaX_sy¡axîr‹
(
ls
,

75 
	`luaO_pushf°rög
(
ls
->
L
, "%†ex≥˘ed", 
	`luaX_tokí2°r
÷s, 
tokí
)));

76 
	}
}

79 
l_n‹ë
 
	$îr‹limô
 (
FuncSèã
 *
fs
, 
limô
, c⁄° *
wh©
) {

80 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

81 c⁄° *
msg
;

82 
löe
 = 
fs
->
f
->
löedeföed
;

83 c⁄° *
whîe
 = (
löe
 == 0)

85 : 
	`luaO_pushf°rög
(
L
, "fun˘i⁄áàlöê%d", 
löe
);

86 
msg
 = 
	`luaO_pushf°rög
(
L
, "too many %s (limit is %d) in %s",

87 
wh©
, 
limô
, 
whîe
);

88 
	`luaX_sy¡axîr‹
(
fs
->
ls
, 
msg
);

89 
	}
}

92 
	$checklimô
 (
FuncSèã
 *
fs
, 
v
, 
l
, c⁄° *
wh©
) {

93 i‡(
v
 > 
l
Ë
	`îr‹limô
(
fs
,Ü, 
wh©
);

94 
	}
}

97 
	$ã°√xt
 (
LexSèã
 *
ls
, 
c
) {

98 i‡(
ls
->
t
.
tokí
 =
c
) {

99 
	`luaX_√xt
(
ls
);

103 
	}
}

106 
	$check
 (
LexSèã
 *
ls
, 
c
) {

107 i‡(
ls
->
t
.
tokí
 !
c
)

108 
	`îr‹_ex≥˘ed
(
ls
, 
c
);

109 
	}
}

112 
	$check√xt
 (
LexSèã
 *
ls
, 
c
) {

113 
	`check
(
ls
, 
c
);

114 
	`luaX_√xt
(
ls
);

115 
	}
}

118 
	#check_c⁄dôi⁄
(
ls
,
c
,
msg
Ë{ i‡(!(c)Ë
	`luaX_sy¡axîr‹
÷s, msg); }

	)

122 
	$check_m©ch
 (
LexSèã
 *
ls
, 
wh©
, 
who
, 
whîe
) {

123 i‡(!
	`ã°√xt
(
ls
, 
wh©
)) {

124 i‡(
whîe
 =
ls
->
löíumbî
)

125 
	`îr‹_ex≥˘ed
(
ls
, 
wh©
);

127 
	`luaX_sy¡axîr‹
(
ls
, 
	`luaO_pushf°rög
÷s->
L
,

129 
	`luaX_tokí2°r
(
ls
, 
wh©
),ÜuaX_tokí2°r÷s, 
who
), 
whîe
));

132 
	}
}

135 
TSåög
 *
	$°r_check«me
 (
LexSèã
 *
ls
) {

136 
TSåög
 *
ts
;

137 
	`check
(
ls
, 
TK_NAME
);

138 
ts
 = 
ls
->
t
.
£möfo
.ts;

139 
	`luaX_√xt
(
ls
);

140  
ts
;

141 
	}
}

144 
	$öô_exp
 (
expdesc
 *
e
, 
expköd
 
k
, 
i
) {

145 
e
->
f
 =É->
t
 = 
NO_JUMP
;

146 
e
->
k
 = k;

147 
e
->
u
.
öfo
 = 
i
;

148 
	}
}

151 
	$code°rög
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
TSåög
 *
s
) {

152 
	`öô_exp
(
e
, 
VK
, 
	`luaK_°rögK
(
ls
->
fs
, 
s
));

153 
	}
}

156 
	$check«me
 (
LexSèã
 *
ls
, 
expdesc
 *
e
) {

157 
	`code°rög
(
ls
, 
e
, 
	`°r_check«me
(ls));

158 
	}
}

161 
	$ªgi°îloˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
) {

162 
FuncSèã
 *
fs
 = 
ls
->fs;

163 
PrŸo
 *
f
 = 
fs
->f;

164 
ﬁdsize
 = 
f
->
sizñocv¨s
;

165 
	`luaM_growve˘‹
(
ls
->
L
, 
f
->
locv¨s
, 
fs
->
∆ocv¨s
, f->
sizñocv¨s
,

166 
LocV¨
, 
SHRT_MAX
, "local variables");

167 
ﬁdsize
 < 
f
->
sizñocv¨s
Ëf->
locv¨s
[ﬁdsize++].
v¨«me
 = 
NULL
;

168 
f
->
locv¨s
[
fs
->
∆ocv¨s
].
v¨«me
 = varname;

169 
	`luaC_objb¨rõr
(
ls
->
L
, 
f
, 
v¨«me
);

170  
fs
->
∆ocv¨s
++;

171 
	}
}

174 
	$√w_loˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
«me
) {

175 
FuncSèã
 *
fs
 = 
ls
->fs;

176 
Dynd©a
 *
dyd
 = 
ls
->dyd;

177 
ªg
 = 
	`ªgi°îloˇlv¨
(
ls
, 
«me
);

178 
	`checklimô
(
fs
, 
dyd
->
a˘v¨
.
n
 + 1 - fs->
fú°loˇl
,

179 
MAXVARS
, "local variables");

180 
	`luaM_growve˘‹
(
ls
->
L
, 
dyd
->
a˘v¨
.
¨r
, dyd->a˘v¨.
n
 + 1,

181 
dyd
->
a˘v¨
.
size
, 
V¨desc
, 
MAX_INT
, "local variables");

182 
dyd
->
a˘v¨
.
¨r
[dyd->a˘v¨.
n
++].
idx
 = 
	`ˇ°
(, 
ªg
);

183 
	}
}

186 
	$√w_loˇlv¨lôîÆ_
 (
LexSèã
 *
ls
, c⁄° *
«me
, 
size_t
 
sz
) {

187 
	`√w_loˇlv¨
(
ls
, 
	`luaX_√w°rög
÷s, 
«me
, 
sz
));

188 
	}
}

190 
	#√w_loˇlv¨lôîÆ
(
ls
,
v
) \

191 
	`√w_loˇlv¨lôîÆ_
(
ls
, "" 
v
, ((v)/())-1)

	)

194 
LocV¨
 *
	$gëlocv¨
 (
FuncSèã
 *
fs
, 
i
) {

195 
idx
 = 
fs
->
ls
->
dyd
->
a˘v¨
.
¨r
[fs->
fú°loˇl
 + 
i
].idx;

196 
	`lua_as£π
(
idx
 < 
fs
->
∆ocv¨s
);

197  &
fs
->
f
->
locv¨s
[
idx
];

198 
	}
}

201 
	$adju°loˇlv¨s
 (
LexSèã
 *
ls
, 
nv¨s
) {

202 
FuncSèã
 *
fs
 = 
ls
->fs;

203 
fs
->
«˘v¨
 = 
	`ˇ°_byã
(fs->«˘v¨ + 
nv¨s
);

204 ; 
nv¨s
;Çvars--) {

205 
	`gëlocv¨
(
fs
, fs->
«˘v¨
 - 
nv¨s
)->
°¨çc
 = fs->
pc
;

207 
	}
}

210 
	$ªmovev¨s
 (
FuncSèã
 *
fs
, 
tﬁevñ
) {

211 
fs
->
ls
->
dyd
->
a˘v¨
.
n
 -(fs->
«˘v¨
 - 
tﬁevñ
);

212 
fs
->
«˘v¨
 > 
tﬁevñ
)

213 
	`gëlocv¨
(
fs
, --fs->
«˘v¨
)->
ídpc
 = fs->
pc
;

214 
	}
}

217 
	$£¨chupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
) {

218 
i
;

219 
UpvÆdesc
 *
up
 = 
fs
->
f
->
upvÆues
;

220 
i
 = 0; i < 
fs
->
nups
; i++) {

221 i‡(
	`eq°r
(
up
[
i
].
«me
,Çame))  i;

224 
	}
}

227 
	$√wupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
, 
expdesc
 *
v
) {

228 
PrŸo
 *
f
 = 
fs
->f;

229 
ﬁdsize
 = 
f
->
sizeupvÆues
;

230 
	`checklimô
(
fs
, fs->
nups
 + 1, 
MAXUPVAL
, "upvalues");

231 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
upvÆues
, fs->
nups
, f->
sizeupvÆues
,

232 
UpvÆdesc
, 
MAXUPVAL
, "upvalues");

233 
ﬁdsize
 < 
f
->
sizeupvÆues
Ëf->
upvÆues
[ﬁdsize++].
«me
 = 
NULL
;

234 
f
->
upvÆues
[
fs
->
nups
].
ö°ack
 = (
v
->
k
 =
VLOCAL
);

235 
f
->
upvÆues
[
fs
->
nups
].
idx
 = 
	`ˇ°_byã
(
v
->
u
.
öfo
);

236 
f
->
upvÆues
[
fs
->
nups
].
«me
 =Çame;

237 
	`luaC_objb¨rõr
(
fs
->
ls
->
L
, 
f
, 
«me
);

238  
fs
->
nups
++;

239 
	}
}

242 
	$£¨chv¨
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
) {

243 
i
;

244 
i
 = 
	`ˇ°_öt
(
fs
->
«˘v¨
) - 1; i >= 0; i--) {

245 i‡(
	`eq°r
(
n
, 
	`gëlocv¨
(
fs
, 
i
)->
v¨«me
))

246  
i
;

249 
	}
}

256 
	$m¨kupvÆ
 (
FuncSèã
 *
fs
, 
Àvñ
) {

257 
BlockC¡
 *
bl
 = 
fs
->bl;

258 
bl
->
«˘v¨
 > 
Àvñ
Ëb»bl->
¥evious
;

259 
bl
->
upvÆ
 = 1;

260 
	}
}

267 
	$sögÀv¨aux
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
, 
expdesc
 *
v¨
, 
ba£
) {

268 i‡(
fs
 =
NULL
)

269  
VVOID
;

271 
v
 = 
	`£¨chv¨
(
fs
, 
n
);

272 i‡(
v
 >= 0) {

273 
	`öô_exp
(
v¨
, 
VLOCAL
, 
v
);

274 i‡(!
ba£
)

275 
	`m¨kupvÆ
(
fs
, 
v
);

276  
VLOCAL
;

279 
idx
 = 
	`£¨chupvÆue
(
fs
, 
n
);

280 i‡(
idx
 < 0) {

281 i‡(
	`sögÀv¨aux
(
fs
->
¥ev
, 
n
, 
v¨
, 0Ë=
VVOID
)

282  
VVOID
;

284 
idx
 = 
	`√wupvÆue
(
fs
, 
n
, 
v¨
);

286 
	`öô_exp
(
v¨
, 
VUPVAL
, 
idx
);

287  
VUPVAL
;

290 
	}
}

293 
	$sögÀv¨
 (
LexSèã
 *
ls
, 
expdesc
 *
v¨
) {

294 
TSåög
 *
v¨«me
 = 
	`°r_check«me
(
ls
);

295 
FuncSèã
 *
fs
 = 
ls
->fs;

296 i‡(
	`sögÀv¨aux
(
fs
, 
v¨«me
, 
v¨
, 1Ë=
VVOID
) {

297 
expdesc
 
key
;

298 
	`sögÀv¨aux
(
fs
, 
ls
->
ívn
, 
v¨
, 1);

299 
	`lua_as£π
(
v¨
->
k
 =
VLOCAL
 || v¨->k =
VUPVAL
);

300 
	`code°rög
(
ls
, &
key
, 
v¨«me
);

301 
	`luaK_ödexed
(
fs
, 
v¨
, &
key
);

303 
	}
}

306 
	$adju°_assign
 (
LexSèã
 *
ls
, 
nv¨s
, 
√xps
, 
expdesc
 *
e
) {

307 
FuncSèã
 *
fs
 = 
ls
->fs;

308 
exåa
 = 
nv¨s
 - 
√xps
;

309 i‡(
	`hasmu…ªt
(
e
->
k
)) {

310 
exåa
++;

311 i‡(
exåa
 < 0)Éxtra = 0;

312 
	`luaK_£åëu∫s
(
fs
, 
e
, 
exåa
);

313 i‡(
exåa
 > 1Ë
	`luaK_ª£rvîegs
(
fs
,Éxtra-1);

316 i‡(
e
->
k
 !
VVOID
Ë
	`luaK_exp2√xåeg
(
fs
,É);

317 i‡(
exåa
 > 0) {

318 
ªg
 = 
fs
->
‰ìªg
;

319 
	`luaK_ª£rvîegs
(
fs
, 
exåa
);

320 
	`luaK_nû
(
fs
, 
ªg
, 
exåa
);

323 
	}
}

326 
	$íãæevñ
 (
LexSèã
 *
ls
) {

327 
lua_Sèã
 *
L
 = 
ls
->L;

328 ++
L
->
nCˇŒs
;

329 
	`checklimô
(
ls
->
fs
, 
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
, "CÜevels");

330 
	}
}

333 
	#Àavñevñ
(
ls
Ë(÷s)->
L
->
nCˇŒs
--)

	)

336 
	$˛o£gŸo
 (
LexSèã
 *
ls
, 
g
, 
Labñdesc
 *
œbñ
) {

337 
i
;

338 
FuncSèã
 *
fs
 = 
ls
->fs;

339 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

340 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
g
];

341 
	`lua_as£π
(
	`eq°r
(
gt
->
«me
, 
œbñ
->name));

342 i‡(
gt
->
«˘v¨
 < 
œbñ
->nactvar) {

343 
TSåög
 *
v«me
 = 
	`gëlocv¨
(
fs
, 
gt
->
«˘v¨
)->
v¨«me
;

344 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

346 
	`gë°r
(
gt
->
«me
), gt->
löe
, gë°r(
v«me
));

347 
	`£mîr‹
(
ls
, 
msg
);

349 
	`luaK_∑tchli°
(
fs
, 
gt
->
pc
, 
œbñ
->pc);

351 
i
 = 
g
; i < 
gl
->
n
 - 1; i++)

352 
gl
->
¨r
[
i
] = gl->arr[i + 1];

353 
gl
->
n
--;

354 
	}
}

360 
	$födœbñ
 (
LexSèã
 *
ls
, 
g
) {

361 
i
;

362 
BlockC¡
 *
bl
 = 
ls
->
fs
->bl;

363 
Dynd©a
 *
dyd
 = 
ls
->dyd;

364 
Labñdesc
 *
gt
 = &
dyd
->gt.
¨r
[
g
];

366 
i
 = 
bl
->
fú°œbñ
; i < 
dyd
->
œbñ
.
n
; i++) {

367 
Labñdesc
 *
lb
 = &
dyd
->
œbñ
.
¨r
[
i
];

368 i‡(
	`eq°r
(
lb
->
«me
, 
gt
->name)) {

369 i‡(
gt
->
«˘v¨
 > 
lb
->nactvar &&

370 (
bl
->
upvÆ
 || 
dyd
->
œbñ
.
n
 > bl->
fú°œbñ
))

371 
	`luaK_∑tch˛o£
(
ls
->
fs
, 
gt
->
pc
, 
lb
->
«˘v¨
);

372 
	`˛o£gŸo
(
ls
, 
g
, 
lb
);

377 
	}
}

380 
	$√wœbñíåy
 (
LexSèã
 *
ls
, 
Labñli°
 *
l
, 
TSåög
 *
«me
,

381 
löe
, 
pc
) {

382 
n
 = 
l
->n;

383 
	`luaM_growve˘‹
(
ls
->
L
, 
l
->
¨r
, 
n
,Ü->
size
,

384 
Labñdesc
, 
SHRT_MAX
, "labels/gotos");

385 
l
->
¨r
[
n
].
«me
 =Çame;

386 
l
->
¨r
[
n
].
löe
 =Üine;

387 
l
->
¨r
[
n
].
«˘v¨
 = 
ls
->
fs
->nactvar;

388 
l
->
¨r
[
n
].
pc
 =Öc;

389 
l
->
n
 =Ç + 1;

390  
n
;

391 
	}
}

398 
	$födgŸos
 (
LexSèã
 *
ls
, 
Labñdesc
 *
lb
) {

399 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

400 
i
 = 
ls
->
fs
->
bl
->
fú°gŸo
;

401 
i
 < 
gl
->
n
) {

402 i‡(
	`eq°r
(
gl
->
¨r
[
i
].
«me
, 
lb
->name))

403 
	`˛o£gŸo
(
ls
, 
i
, 
lb
);

405 
i
++;

407 
	}
}

416 
	$movegŸosout
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

417 
i
 = 
bl
->
fú°gŸo
;

418 
Labñli°
 *
gl
 = &
fs
->
ls
->
dyd
->
gt
;

421 
i
 < 
gl
->
n
) {

422 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
i
];

423 i‡(
gt
->
«˘v¨
 > 
bl
->nactvar) {

424 i‡(
bl
->
upvÆ
)

425 
	`luaK_∑tch˛o£
(
fs
, 
gt
->
pc
, 
bl
->
«˘v¨
);

426 
gt
->
«˘v¨
 = 
bl
->nactvar;

428 i‡(!
	`födœbñ
(
fs
->
ls
, 
i
))

429 
i
++;

431 
	}
}

434 
	$íãrblock
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
, 
lu_byã
 
i¶o›
) {

435 
bl
->
i¶o›
 = isloop;

436 
bl
->
«˘v¨
 = 
fs
->nactvar;

437 
bl
->
fú°œbñ
 = 
fs
->
ls
->
dyd
->
œbñ
.
n
;

438 
bl
->
fú°gŸo
 = 
fs
->
ls
->
dyd
->
gt
.
n
;

439 
bl
->
upvÆ
 = 0;

440 
bl
->
¥evious
 = 
fs
->bl;

441 
fs
->
bl
 = bl;

442 
	`lua_as£π
(
fs
->
‰ìªg
 =fs->
«˘v¨
);

443 
	}
}

449 
	$bªakœbñ
 (
LexSèã
 *
ls
) {

450 
TSåög
 *
n
 = 
	`luaS_√w
(
ls
->
L
, "break");

451 
l
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
œbñ
, 
n
, 0,Üs->
fs
->
pc
);

452 
	`födgŸos
(
ls
, &ls->
dyd
->
œbñ
.
¨r
[
l
]);

453 
	}
}

459 
l_n‹ë
 
	$undefgŸo
 (
LexSèã
 *
ls
, 
Labñdesc
 *
gt
) {

460 c⁄° *
msg
 = 
	`i§e£rved
(
gt
->
«me
)

463 
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
, msg, 
	`gë°r
(
gt
->
«me
), gt->
löe
);

464 
	`£mîr‹
(
ls
, 
msg
);

465 
	}
}

468 
	$Àaveblock
 (
FuncSèã
 *
fs
) {

469 
BlockC¡
 *
bl
 = 
fs
->bl;

470 
LexSèã
 *
ls
 = 
fs
->ls;

471 i‡(
bl
->
¥evious
 && bl->
upvÆ
) {

473 
j
 = 
	`luaK_jump
(
fs
);

474 
	`luaK_∑tch˛o£
(
fs
, 
j
, 
bl
->
«˘v¨
);

475 
	`luaK_∑tchtohîe
(
fs
, 
j
);

477 i‡(
bl
->
i¶o›
)

478 
	`bªakœbñ
(
ls
);

479 
fs
->
bl
 = bl->
¥evious
;

480 
	`ªmovev¨s
(
fs
, 
bl
->
«˘v¨
);

481 
	`lua_as£π
(
bl
->
«˘v¨
 =
fs
->nactvar);

482 
fs
->
‰ìªg
 = fs->
«˘v¨
;

483 
ls
->
dyd
->
œbñ
.
n
 = 
bl
->
fú°œbñ
;

484 i‡(
bl
->
¥evious
)

485 
	`movegŸosout
(
fs
, 
bl
);

486 i‡(
bl
->
fú°gŸo
 < 
ls
->
dyd
->
gt
.
n
)

487 
	`undefgŸo
(
ls
, &ls->
dyd
->
gt
.
¨r
[
bl
->
fú°gŸo
]);

488 
	}
}

494 
PrŸo
 *
	$add¥ŸŸy≥
 (
LexSèã
 *
ls
) {

495 
PrŸo
 *
˛p
;

496 
lua_Sèã
 *
L
 = 
ls
->L;

497 
FuncSèã
 *
fs
 = 
ls
->fs;

498 
PrŸo
 *
f
 = 
fs
->f;

499 i‡(
fs
->
≈
 >
f
->
sizï
) {

500 
ﬁdsize
 = 
f
->
sizï
;

501 
	`luaM_growve˘‹
(
L
, 
f
->
p
, 
fs
->
≈
, f->
sizï
, 
PrŸo
 *, 
MAXARG_Bx
, "functions");

502 
ﬁdsize
 < 
f
->
sizï
Ëf->
p
[ﬁdsize++] = 
NULL
;

504 
f
->
p
[
fs
->
≈
++] = 
˛p
 = 
	`luaF_√w¥Ÿo
(
L
);

505 
	`luaC_objb¨rõr
(
L
, 
f
, 
˛p
);

506  
˛p
;

507 
	}
}

516 
	$code˛osuª
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

517 
FuncSèã
 *
fs
 = 
ls
->fs->
¥ev
;

518 
	`öô_exp
(
v
, 
VRELOCABLE
, 
	`luaK_codeABx
(
fs
, 
OP_CLOSURE
, 0, fs->
≈
 - 1));

519 
	`luaK_exp2√xåeg
(
fs
, 
v
);

520 
	}
}

523 
	$›í_func
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

524 
PrŸo
 *
f
;

525 
fs
->
¥ev
 = 
ls
->fs;

526 
fs
->
ls
 =Üs;

527 
ls
->
fs
 = fs;

528 
fs
->
pc
 = 0;

529 
fs
->
œ°èrgë
 = 0;

530 
fs
->
jpc
 = 
NO_JUMP
;

531 
fs
->
‰ìªg
 = 0;

532 
fs
->
nk
 = 0;

533 
fs
->
≈
 = 0;

534 
fs
->
nups
 = 0;

535 
fs
->
∆ocv¨s
 = 0;

536 
fs
->
«˘v¨
 = 0;

537 
fs
->
fú°loˇl
 = 
ls
->
dyd
->
a˘v¨
.
n
;

538 
fs
->
bl
 = 
NULL
;

539 
f
 = 
fs
->f;

540 
f
->
sour˚
 = 
ls
->source;

541 
f
->
max°acksize
 = 2;

542 
	`íãrblock
(
fs
, 
bl
, 0);

543 
	}
}

546 
	$˛o£_func
 (
LexSèã
 *
ls
) {

547 
lua_Sèã
 *
L
 = 
ls
->L;

548 
FuncSèã
 *
fs
 = 
ls
->fs;

549 
PrŸo
 *
f
 = 
fs
->f;

550 
	`luaK_ªt
(
fs
, 0, 0);

551 
	`Àaveblock
(
fs
);

552 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
code
, f->
sizecode
, 
fs
->
pc
, 
In°ru˘i⁄
);

553 
f
->
sizecode
 = 
fs
->
pc
;

554 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
, 
fs
->
pc
, );

555 
f
->
sizñöeöfo
 = 
fs
->
pc
;

556 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
k
, f->
sizek
, 
fs
->
nk
, 
TVÆue
);

557 
f
->
sizek
 = 
fs
->
nk
;

558 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
p
, f->
sizï
, 
fs
->
≈
, 
PrŸo
 *);

559 
f
->
sizï
 = 
fs
->
≈
;

560 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
, 
fs
->
∆ocv¨s
, 
LocV¨
);

561 
f
->
sizñocv¨s
 = 
fs
->
∆ocv¨s
;

562 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
, 
fs
->
nups
, 
UpvÆdesc
);

563 
f
->
sizeupvÆues
 = 
fs
->
nups
;

564 
	`lua_as£π
(
fs
->
bl
 =
NULL
);

565 
ls
->
fs
 = fs->
¥ev
;

566 
	`luaC_checkGC
(
L
);

567 
	}
}

581 
	$block_fﬁlow
 (
LexSèã
 *
ls
, 
wôhu¡û
) {

582 
ls
->
t
.
tokí
) {

583 
TK_ELSE
: 
TK_ELSEIF
:

584 
TK_END
: 
TK_EOS
:

586 
TK_UNTIL
:  
wôhu¡û
;

589 
	}
}

592 
	$°©li°
 (
LexSèã
 *
ls
) {

594 !
	`block_fﬁlow
(
ls
, 1)) {

595 i‡(
ls
->
t
.
tokí
 =
TK_RETURN
) {

596 
	`°©emít
(
ls
);

599 
	`°©emít
(
ls
);

601 
	}
}

604 
	$fõld£l
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

606 
FuncSèã
 *
fs
 = 
ls
->fs;

607 
expdesc
 
key
;

608 
	`luaK_exp2™yªgup
(
fs
, 
v
);

609 
	`luaX_√xt
(
ls
);

610 
	`check«me
(
ls
, &
key
);

611 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

612 
	}
}

615 
	$yödex
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

617 
	`luaX_√xt
(
ls
);

618 
	`ex¥
(
ls
, 
v
);

619 
	`luaK_exp2vÆ
(
ls
->
fs
, 
v
);

620 
	`check√xt
(
ls
, ']');

621 
	}
}

631 
	sC⁄sC⁄åﬁ
 {

632 
expdesc
 
	mv
;

633 
expdesc
 *
	mt
;

634 
	mnh
;

635 
	m«
;

636 
	mto°‹e
;

640 
	$ªcfõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

642 
FuncSèã
 *
fs
 = 
ls
->fs;

643 
ªg
 = 
ls
->
fs
->
‰ìªg
;

644 
expdesc
 
key
, 
vÆ
;

645 
rkkey
;

646 i‡(
ls
->
t
.
tokí
 =
TK_NAME
) {

647 
	`checklimô
(
fs
, 
cc
->
nh
, 
MAX_INT
, "items iná constructor");

648 
	`check«me
(
ls
, &
key
);

651 
	`yödex
(
ls
, &
key
);

652 
cc
->
nh
++;

653 
	`check√xt
(
ls
, '=');

654 
rkkey
 = 
	`luaK_exp2RK
(
fs
, &
key
);

655 
	`ex¥
(
ls
, &
vÆ
);

656 
	`luaK_codeABC
(
fs
, 
OP_SETTABLE
, 
cc
->
t
->
u
.
öfo
, 
rkkey
, 
	`luaK_exp2RK
(fs, &
vÆ
));

657 
fs
->
‰ìªg
 = 
ªg
;

658 
	}
}

661 
	$˛o£li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

662 i‡(
cc
->
v
.
k
 =
VVOID
) ;

663 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

664 
cc
->
v
.
k
 = 
VVOID
;

665 i‡(
cc
->
to°‹e
 =
LFIELDS_PER_FLUSH
) {

666 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

667 
cc
->
to°‹e
 = 0;

669 
	}
}

672 
	$œ°li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

673 i‡(
cc
->
to°‹e
 == 0) ;

674 i‡(
	`hasmu…ªt
(
cc
->
v
.
k
)) {

675 
	`luaK_£tmu…ªt
(
fs
, &
cc
->
v
);

676 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, 
LUA_MULTRET
);

677 
cc
->
«
--;

680 i‡(
cc
->
v
.
k
 !
VVOID
)

681 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

682 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

684 
	}
}

687 
	$li°fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

689 
	`ex¥
(
ls
, &
cc
->
v
);

690 
	`checklimô
(
ls
->
fs
, 
cc
->
«
, 
MAX_INT
, "items iná constructor");

691 
cc
->
«
++;

692 
cc
->
to°‹e
++;

693 
	}
}

696 
	$fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

698 
ls
->
t
.
tokí
) {

699 
TK_NAME
: {

700 i‡(
	`luaX_lookahód
(
ls
) != '=')

701 
	`li°fõld
(
ls
, 
cc
);

703 
	`ªcfõld
(
ls
, 
cc
);

707 
	`ªcfõld
(
ls
, 
cc
);

711 
	`li°fõld
(
ls
, 
cc
);

715 
	}
}

718 
	$c⁄°ru˘‹
 (
LexSèã
 *
ls
, 
expdesc
 *
t
) {

721 
FuncSèã
 *
fs
 = 
ls
->fs;

722 
löe
 = 
ls
->
löíumbî
;

723 
pc
 = 
	`luaK_codeABC
(
fs
, 
OP_NEWTABLE
, 0, 0, 0);

724 
C⁄sC⁄åﬁ
 
cc
;

725 
cc
.
«
 = cc.
nh
 = cc.
to°‹e
 = 0;

726 
cc
.
t
 =Å;

727 
	`öô_exp
(
t
, 
VRELOCABLE
, 
pc
);

728 
	`öô_exp
(&
cc
.
v
, 
VVOID
, 0);

729 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
t
);

730 
	`check√xt
(
ls
, '{');

732 
	`lua_as£π
(
cc
.
v
.
k
 =
VVOID
 || cc.
to°‹e
 > 0);

733 i‡(
ls
->
t
.
tokí
 == '}') ;

734 
	`˛o£li°fõld
(
fs
, &
cc
);

735 
	`fõld
(
ls
, &
cc
);

736 } 
	`ã°√xt
(
ls
, ',') ||Åestnext(ls, ';'));

737 
	`check_m©ch
(
ls
, '}', '{', 
löe
);

738 
	`œ°li°fõld
(
fs
, &
cc
);

739 
	`SETARG_B
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
«
));

740 
	`SETARG_C
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
nh
));

741 
	}
}

747 
	$∑æi°
 (
LexSèã
 *
ls
) {

749 
FuncSèã
 *
fs
 = 
ls
->fs;

750 
PrŸo
 *
f
 = 
fs
->f;

751 
≈¨ams
 = 0;

752 
f
->
is_v¨¨g
 = 0;

753 i‡(
ls
->
t
.
tokí
 != ')') {

755 
ls
->
t
.
tokí
) {

756 
TK_NAME
: {

757 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

758 
≈¨ams
++;

761 
TK_DOTS
: {

762 
	`luaX_√xt
(
ls
);

763 
f
->
is_v¨¨g
 = 1;

766 : 
	`luaX_sy¡axîr‹
(
ls
, "<name> or '...'Éxpected");

768 } !
f
->
is_v¨¨g
 && 
	`ã°√xt
(
ls
, ','));

770 
	`adju°loˇlv¨s
(
ls
, 
≈¨ams
);

771 
f
->
num∑øms
 = 
	`ˇ°_byã
(
fs
->
«˘v¨
);

772 
	`luaK_ª£rvîegs
(
fs
, fs->
«˘v¨
);

773 
	}
}

776 
	$body
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
ismëhod
, 
löe
) {

778 
FuncSèã
 
√w_fs
;

779 
BlockC¡
 
bl
;

780 
√w_fs
.
f
 = 
	`add¥ŸŸy≥
(
ls
);

781 
√w_fs
.
f
->
löedeföed
 = 
löe
;

782 
	`›í_func
(
ls
, &
√w_fs
, &
bl
);

783 
	`check√xt
(
ls
, '(');

784 i‡(
ismëhod
) {

785 
	`√w_loˇlv¨lôîÆ
(
ls
, "self");

786 
	`adju°loˇlv¨s
(
ls
, 1);

788 
	`∑æi°
(
ls
);

789 
	`check√xt
(
ls
, ')');

790 
	`°©li°
(
ls
);

791 
√w_fs
.
f
->
œ°löedeföed
 = 
ls
->
löíumbî
;

792 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FUNCTION
, 
löe
);

793 
	`code˛osuª
(
ls
, 
e
);

794 
	`˛o£_func
(
ls
);

795 
	}
}

798 
	$ex∂i°
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

800 
n
 = 1;

801 
	`ex¥
(
ls
, 
v
);

802 
	`ã°√xt
(
ls
, ',')) {

803 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
v
);

804 
	`ex¥
(
ls
, 
v
);

805 
n
++;

807  
n
;

808 
	}
}

811 
	$funˇrgs
 (
LexSèã
 *
ls
, 
expdesc
 *
f
, 
löe
) {

812 
FuncSèã
 *
fs
 = 
ls
->fs;

813 
expdesc
 
¨gs
;

814 
ba£
, 
≈¨ams
;

815 
ls
->
t
.
tokí
) {

817 
	`luaX_√xt
(
ls
);

818 i‡(
ls
->
t
.
tokí
 == ')')

819 
¨gs
.
k
 = 
VVOID
;

821 
	`ex∂i°
(
ls
, &
¨gs
);

822 
	`luaK_£tmu…ªt
(
fs
, &
¨gs
);

824 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

828 
	`c⁄°ru˘‹
(
ls
, &
¨gs
);

831 
TK_STRING
: {

832 
	`code°rög
(
ls
, &
¨gs
,Üs->
t
.
£möfo
.
ts
);

833 
	`luaX_√xt
(
ls
);

837 
	`luaX_sy¡axîr‹
(
ls
, "functionárgumentsÉxpected");

840 
	`lua_as£π
(
f
->
k
 =
VNONRELOC
);

841 
ba£
 = 
f
->
u
.
öfo
;

842 i‡(
	`hasmu…ªt
(
¨gs
.
k
))

843 
≈¨ams
 = 
LUA_MULTRET
;

845 i‡(
¨gs
.
k
 !
VVOID
)

846 
	`luaK_exp2√xåeg
(
fs
, &
¨gs
);

847 
≈¨ams
 = 
fs
->
‰ìªg
 - (
ba£
+1);

849 
	`öô_exp
(
f
, 
VCALL
, 
	`luaK_codeABC
(
fs
, 
OP_CALL
, 
ba£
, 
≈¨ams
+1, 2));

850 
	`luaK_fixlöe
(
fs
, 
löe
);

851 
fs
->
‰ìªg
 = 
ba£
+1;

853 
	}
}

865 
	$¥im¨yexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

867 
ls
->
t
.
tokí
) {

869 
löe
 = 
ls
->
löíumbî
;

870 
	`luaX_√xt
(
ls
);

871 
	`ex¥
(
ls
, 
v
);

872 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

873 
	`luaK_disch¨gev¨s
(
ls
->
fs
, 
v
);

876 
TK_NAME
: {

877 
	`sögÀv¨
(
ls
, 
v
);

881 
	`luaX_sy¡axîr‹
(
ls
, "unexpected symbol");

884 
	}
}

887 
	$suffixedexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

890 
FuncSèã
 *
fs
 = 
ls
->fs;

891 
löe
 = 
ls
->
löíumbî
;

892 
	`¥im¨yexp
(
ls
, 
v
);

894 
ls
->
t
.
tokí
) {

896 
	`fõld£l
(
ls
, 
v
);

900 
expdesc
 
key
;

901 
	`luaK_exp2™yªgup
(
fs
, 
v
);

902 
	`yödex
(
ls
, &
key
);

903 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

907 
expdesc
 
key
;

908 
	`luaX_√xt
(
ls
);

909 
	`check«me
(
ls
, &
key
);

910 
	`luaK_£lf
(
fs
, 
v
, &
key
);

911 
	`funˇrgs
(
ls
, 
v
, 
löe
);

914 '(': 
TK_STRING
: '{': {

915 
	`luaK_exp2√xåeg
(
fs
, 
v
);

916 
	`funˇrgs
(
ls
, 
v
, 
löe
);

922 
	}
}

925 
	$sim∂ìxp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

928 
ls
->
t
.
tokí
) {

929 
TK_FLT
: {

930 
	`öô_exp
(
v
, 
VKFLT
, 0);

931 
v
->
u
.
nvÆ
 = 
ls
->
t
.
£möfo
.
r
;

934 
TK_INT
: {

935 
	`öô_exp
(
v
, 
VKINT
, 0);

936 
v
->
u
.
ivÆ
 = 
ls
->
t
.
£möfo
.
i
;

939 
TK_STRING
: {

940 
	`code°rög
(
ls
, 
v
,Üs->
t
.
£möfo
.
ts
);

943 
TK_NIL
: {

944 
	`öô_exp
(
v
, 
VNIL
, 0);

947 
TK_TRUE
: {

948 
	`öô_exp
(
v
, 
VTRUE
, 0);

951 
TK_FALSE
: {

952 
	`öô_exp
(
v
, 
VFALSE
, 0);

955 
TK_DOTS
: {

956 
FuncSèã
 *
fs
 = 
ls
->fs;

957 
	`check_c⁄dôi⁄
(
ls
, 
fs
->
f
->
is_v¨¨g
,

959 
	`öô_exp
(
v
, 
VVARARG
, 
	`luaK_codeABC
(
fs
, 
OP_VARARG
, 0, 1, 0));

963 
	`c⁄°ru˘‹
(
ls
, 
v
);

966 
TK_FUNCTION
: {

967 
	`luaX_√xt
(
ls
);

968 
	`body
(
ls
, 
v
, 0,Üs->
löíumbî
);

972 
	`suffixedexp
(
ls
, 
v
);

976 
	`luaX_√xt
(
ls
);

977 
	}
}

980 
UnO¥
 
	$gëun›r
 (
›
) {

981 
›
) {

982 
TK_NOT
:  
OPR_NOT
;

983 '-':  
OPR_MINUS
;

984 '~':  
OPR_BNOT
;

985 '#':  
OPR_LEN
;

986 :  
OPR_NOUNOPR
;

988 
	}
}

991 
BöO¥
 
	$gëbö›r
 (
›
) {

992 
›
) {

993 '+':  
OPR_ADD
;

994 '-':  
OPR_SUB
;

995 '*':  
OPR_MUL
;

996 '%':  
OPR_MOD
;

997 '^':  
OPR_POW
;

998 '/':  
OPR_DIV
;

999 
TK_IDIV
:  
OPR_IDIV
;

1000 '&':  
OPR_BAND
;

1001 '|':  
OPR_BOR
;

1002 '~':  
OPR_BXOR
;

1003 
TK_SHL
:  
OPR_SHL
;

1004 
TK_SHR
:  
OPR_SHR
;

1005 
TK_CONCAT
:  
OPR_CONCAT
;

1006 
TK_NE
:  
OPR_NE
;

1007 
TK_EQ
:  
OPR_EQ
;

1008 '<':  
OPR_LT
;

1009 
TK_LE
:  
OPR_LE
;

1010 '>':  
OPR_GT
;

1011 
TK_GE
:  
OPR_GE
;

1012 
TK_AND
:  
OPR_AND
;

1013 
TK_OR
:  
OPR_OR
;

1014 :  
OPR_NOBINOPR
;

1016 
	}
}

1020 
lu_byã
 
	mÀ·
;

1021 
lu_byã
 
	mright
;

1022 } 
	g¥i‹ôy
[] = {

1035 
	#UNARY_PRIORITY
 12

	)

1042 
BöO¥
 
	$subex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
, 
limô
) {

1043 
BöO¥
 
›
;

1044 
UnO¥
 
u›
;

1045 
	`íãæevñ
(
ls
);

1046 
u›
 = 
	`gëun›r
(
ls
->
t
.
tokí
);

1047 i‡(
u›
 !
OPR_NOUNOPR
) {

1048 
löe
 = 
ls
->
löíumbî
;

1049 
	`luaX_√xt
(
ls
);

1050 
	`subex¥
(
ls
, 
v
, 
UNARY_PRIORITY
);

1051 
	`luaK_¥efix
(
ls
->
fs
, 
u›
, 
v
, 
löe
);

1053 
	`sim∂ìxp
(
ls
, 
v
);

1055 
›
 = 
	`gëbö›r
(
ls
->
t
.
tokí
);

1056 
›
 !
OPR_NOBINOPR
 && 
¥i‹ôy
[›].
À·
 > 
limô
) {

1057 
expdesc
 
v2
;

1058 
BöO¥
 
√xt›
;

1059 
löe
 = 
ls
->
löíumbî
;

1060 
	`luaX_√xt
(
ls
);

1061 
	`luaK_öfix
(
ls
->
fs
, 
›
, 
v
);

1063 
√xt›
 = 
	`subex¥
(
ls
, &
v2
, 
¥i‹ôy
[
›
].
right
);

1064 
	`luaK_posfix
(
ls
->
fs
, 
›
, 
v
, &
v2
, 
löe
);

1065 
›
 = 
√xt›
;

1067 
	`Àavñevñ
(
ls
);

1068  
›
;

1069 
	}
}

1072 
	$ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1073 
	`subex¥
(
ls
, 
v
, 0);

1074 
	}
}

1087 
	$block
 (
LexSèã
 *
ls
) {

1089 
FuncSèã
 *
fs
 = 
ls
->fs;

1090 
BlockC¡
 
bl
;

1091 
	`íãrblock
(
fs
, &
bl
, 0);

1092 
	`°©li°
(
ls
);

1093 
	`Àaveblock
(
fs
);

1094 
	}
}

1101 
	sLHS_assign
 {

1102 
LHS_assign
 *
	m¥ev
;

1103 
expdesc
 
	mv
;

1113 
	$check_c⁄Êi˘
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
expdesc
 *
v
) {

1114 
FuncSèã
 *
fs
 = 
ls
->fs;

1115 
exåa
 = 
fs
->
‰ìªg
;

1116 
c⁄Êi˘
 = 0;

1117 ; 
lh
;Üh =Üh->
¥ev
) {

1118 i‡(
lh
->
v
.
k
 =
VINDEXED
) {

1120 i‡(
lh
->
v
.
u
.
öd
.
vt
 =v->
k
 &&Üh->v.u.öd.
t
 =v->u.
öfo
) {

1121 
c⁄Êi˘
 = 1;

1122 
lh
->
v
.
u
.
öd
.
vt
 = 
VLOCAL
;

1123 
lh
->
v
.
u
.
öd
.
t
 = 
exåa
;

1126 i‡(
v
->
k
 =
VLOCAL
 && 
lh
->v.
u
.
öd
.
idx
 =v->u.
öfo
) {

1127 
c⁄Êi˘
 = 1;

1128 
lh
->
v
.
u
.
öd
.
idx
 = 
exåa
;

1132 i‡(
c⁄Êi˘
) {

1134 
OpCode
 
›
 = (
v
->
k
 =
VLOCAL
Ë? 
OP_MOVE
 : 
OP_GETUPVAL
;

1135 
	`luaK_codeABC
(
fs
, 
›
, 
exåa
, 
v
->
u
.
öfo
, 0);

1136 
	`luaK_ª£rvîegs
(
fs
, 1);

1138 
	}
}

1141 
	$assignmít
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
nv¨s
) {

1142 
expdesc
 
e
;

1143 
	`check_c⁄dôi⁄
(
ls
, 
	`vkisv¨
(
lh
->
v
.
k
), "syntaxÉrror");

1144 i‡(
	`ã°√xt
(
ls
, ',')) {

1145 
LHS_assign
 
nv
;

1146 
nv
.
¥ev
 = 
lh
;

1147 
	`suffixedexp
(
ls
, &
nv
.
v
);

1148 i‡(
nv
.
v
.
k
 !
VINDEXED
)

1149 
	`check_c⁄Êi˘
(
ls
, 
lh
, &
nv
.
v
);

1150 
	`checklimô
(
ls
->
fs
, 
nv¨s
 +Üs->
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
,

1152 
	`assignmít
(
ls
, &
nv
, 
nv¨s
+1);

1155 
√xps
;

1156 
	`check√xt
(
ls
, '=');

1157 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1158 i‡(
√xps
 !
nv¨s
) {

1159 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1160 i‡(
√xps
 > 
nv¨s
)

1161 
ls
->
fs
->
‰ìªg
 -
√xps
 - 
nv¨s
;

1164 
	`luaK_£t⁄îë
(
ls
->
fs
, &
e
);

1165 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1169 
	`öô_exp
(&
e
, 
VNONRELOC
, 
ls
->
fs
->
‰ìªg
-1);

1170 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1171 
	}
}

1174 
	$c⁄d
 (
LexSèã
 *
ls
) {

1176 
expdesc
 
v
;

1177 
	`ex¥
(
ls
, &
v
);

1178 i‡(
v
.
k
 =
VNIL
Ëv.k = 
VFALSE
;

1179 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1180  
v
.
f
;

1181 
	}
}

1184 
	$gŸo°©
 (
LexSèã
 *
ls
, 
pc
) {

1185 
löe
 = 
ls
->
löíumbî
;

1186 
TSåög
 *
œbñ
;

1187 
g
;

1188 i‡(
	`ã°√xt
(
ls
, 
TK_GOTO
))

1189 
œbñ
 = 
	`°r_check«me
(
ls
);

1191 
	`luaX_√xt
(
ls
);

1192 
œbñ
 = 
	`luaS_√w
(
ls
->
L
, "break");

1194 
g
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
gt
, 
œbñ
, 
löe
, 
pc
);

1195 
	`födœbñ
(
ls
, 
g
);

1196 
	}
}

1200 
	$checkª≥©ed
 (
FuncSèã
 *
fs
, 
Labñli°
 *
Œ
, 
TSåög
 *
œbñ
) {

1201 
i
;

1202 
i
 = 
fs
->
bl
->
fú°œbñ
; i < 
Œ
->
n
; i++) {

1203 i‡(
	`eq°r
(
œbñ
, 
Œ
->
¨r
[
i
].
«me
)) {

1204 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
fs
->
ls
->
L
,

1206 
	`gë°r
(
œbñ
), 
Œ
->
¨r
[
i
].
löe
);

1207 
	`£mîr‹
(
fs
->
ls
, 
msg
);

1210 
	}
}

1214 
	$skùno›°©
 (
LexSèã
 *
ls
) {

1215 
ls
->
t
.
tokí
 =';' ||Üs->t.tokí =
TK_DBCOLON
)

1216 
	`°©emít
(
ls
);

1217 
	}
}

1220 
	$œbñ°©
 (
LexSèã
 *
ls
, 
TSåög
 *
œbñ
, 
löe
) {

1222 
FuncSèã
 *
fs
 = 
ls
->fs;

1223 
Labñli°
 *
Œ
 = &
ls
->
dyd
->
œbñ
;

1224 
l
;

1225 
	`checkª≥©ed
(
fs
, 
Œ
, 
œbñ
);

1226 
	`check√xt
(
ls
, 
TK_DBCOLON
);

1228 
l
 = 
	`√wœbñíåy
(
ls
, 
Œ
, 
œbñ
, 
löe
, 
fs
->
pc
);

1229 
	`skùno›°©
(
ls
);

1230 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1232 
Œ
->
¨r
[
l
].
«˘v¨
 = 
fs
->
bl
->nactvar;

1234 
	`födgŸos
(
ls
, &
Œ
->
¨r
[
l
]);

1235 
	}
}

1238 
	$whûe°©
 (
LexSèã
 *
ls
, 
löe
) {

1240 
FuncSèã
 *
fs
 = 
ls
->fs;

1241 
whûeöô
;

1242 
c⁄dexô
;

1243 
BlockC¡
 
bl
;

1244 
	`luaX_√xt
(
ls
);

1245 
whûeöô
 = 
	`luaK_gëœbñ
(
fs
);

1246 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1247 
	`íãrblock
(
fs
, &
bl
, 1);

1248 
	`check√xt
(
ls
, 
TK_DO
);

1249 
	`block
(
ls
);

1250 
	`luaK_jum±o
(
fs
, 
whûeöô
);

1251 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_WHILE
, 
löe
);

1252 
	`Àaveblock
(
fs
);

1253 
	`luaK_∑tchtohîe
(
fs
, 
c⁄dexô
);

1254 
	}
}

1257 
	$ª≥©°©
 (
LexSèã
 *
ls
, 
löe
) {

1259 
c⁄dexô
;

1260 
FuncSèã
 *
fs
 = 
ls
->fs;

1261 
ª≥©_öô
 = 
	`luaK_gëœbñ
(
fs
);

1262 
BlockC¡
 
bl1
, 
bl2
;

1263 
	`íãrblock
(
fs
, &
bl1
, 1);

1264 
	`íãrblock
(
fs
, &
bl2
, 0);

1265 
	`luaX_√xt
(
ls
);

1266 
	`°©li°
(
ls
);

1267 
	`check_m©ch
(
ls
, 
TK_UNTIL
, 
TK_REPEAT
, 
löe
);

1268 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1269 i‡(
bl2
.
upvÆ
)

1270 
	`luaK_∑tch˛o£
(
fs
, 
c⁄dexô
, 
bl2
.
«˘v¨
);

1271 
	`Àaveblock
(
fs
);

1272 
	`luaK_∑tchli°
(
fs
, 
c⁄dexô
, 
ª≥©_öô
);

1273 
	`Àaveblock
(
fs
);

1274 
	}
}

1277 
	$exp1
 (
LexSèã
 *
ls
) {

1278 
expdesc
 
e
;

1279 
ªg
;

1280 
	`ex¥
(
ls
, &
e
);

1281 
	`luaK_exp2√xåeg
(
ls
->
fs
, &
e
);

1282 
	`lua_as£π
(
e
.
k
 =
VNONRELOC
);

1283 
ªg
 = 
e
.
u
.
öfo
;

1284  
ªg
;

1285 
	}
}

1288 
	$f‹body
 (
LexSèã
 *
ls
, 
ba£
, 
löe
, 
nv¨s
, 
i¢um
) {

1290 
BlockC¡
 
bl
;

1291 
FuncSèã
 *
fs
 = 
ls
->fs;

1292 
¥ï
, 
ídf‹
;

1293 
	`adju°loˇlv¨s
(
ls
, 3);

1294 
	`check√xt
(
ls
, 
TK_DO
);

1295 
¥ï
 = 
i¢um
 ? 
	`luaK_codeAsBx
(
fs
, 
OP_FORPREP
, 
ba£
, 
NO_JUMP
Ë: 
	`luaK_jump
(fs);

1296 
	`íãrblock
(
fs
, &
bl
, 0);

1297 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1298 
	`luaK_ª£rvîegs
(
fs
, 
nv¨s
);

1299 
	`block
(
ls
);

1300 
	`Àaveblock
(
fs
);

1301 
	`luaK_∑tchtohîe
(
fs
, 
¥ï
);

1302 i‡(
i¢um
)

1303 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_FORLOOP
, 
ba£
, 
NO_JUMP
);

1305 
	`luaK_codeABC
(
fs
, 
OP_TFORCALL
, 
ba£
, 0, 
nv¨s
);

1306 
	`luaK_fixlöe
(
fs
, 
löe
);

1307 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_TFORLOOP
, 
ba£
 + 2, 
NO_JUMP
);

1309 
	`luaK_∑tchli°
(
fs
, 
ídf‹
, 
¥ï
 + 1);

1310 
	`luaK_fixlöe
(
fs
, 
löe
);

1311 
	}
}

1314 
	$f‹num
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
, 
löe
) {

1316 
FuncSèã
 *
fs
 = 
ls
->fs;

1317 
ba£
 = 
fs
->
‰ìªg
;

1318 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for index)");

1319 
	`√w_loˇlv¨lôîÆ
(
ls
, "(forÜimit)");

1320 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for step)");

1321 
	`√w_loˇlv¨
(
ls
, 
v¨«me
);

1322 
	`check√xt
(
ls
, '=');

1323 
	`exp1
(
ls
);

1324 
	`check√xt
(
ls
, ',');

1325 
	`exp1
(
ls
);

1326 i‡(
	`ã°√xt
(
ls
, ','))

1327 
	`exp1
(
ls
);

1329 
	`luaK_codek
(
fs
, fs->
‰ìªg
, 
	`luaK_ötK
(fs, 1));

1330 
	`luaK_ª£rvîegs
(
fs
, 1);

1332 
	`f‹body
(
ls
, 
ba£
, 
löe
, 1, 1);

1333 
	}
}

1336 
	$f‹li°
 (
LexSèã
 *
ls
, 
TSåög
 *
ödex«me
) {

1338 
FuncSèã
 *
fs
 = 
ls
->fs;

1339 
expdesc
 
e
;

1340 
nv¨s
 = 4;

1341 
löe
;

1342 
ba£
 = 
fs
->
‰ìªg
;

1344 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for generator)");

1345 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for state)");

1346 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for control)");

1348 
	`√w_loˇlv¨
(
ls
, 
ödex«me
);

1349 
	`ã°√xt
(
ls
, ',')) {

1350 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1351 
nv¨s
++;

1353 
	`check√xt
(
ls
, 
TK_IN
);

1354 
löe
 = 
ls
->
löíumbî
;

1355 
	`adju°_assign
(
ls
, 3, 
	`ex∂i°
÷s, &
e
), &e);

1356 
	`luaK_check°ack
(
fs
, 3);

1357 
	`f‹body
(
ls
, 
ba£
, 
löe
, 
nv¨s
 - 3, 0);

1358 
	}
}

1361 
	$f‹°©
 (
LexSèã
 *
ls
, 
löe
) {

1363 
FuncSèã
 *
fs
 = 
ls
->fs;

1364 
TSåög
 *
v¨«me
;

1365 
BlockC¡
 
bl
;

1366 
	`íãrblock
(
fs
, &
bl
, 1);

1367 
	`luaX_√xt
(
ls
);

1368 
v¨«me
 = 
	`°r_check«me
(
ls
);

1369 
ls
->
t
.
tokí
) {

1370 '=': 
	`f‹num
(
ls
, 
v¨«me
, 
löe
); ;

1371 ',': 
TK_IN
: 
	`f‹li°
(
ls
, 
v¨«me
); ;

1372 : 
	`luaX_sy¡axîr‹
(
ls
, "'=' or 'in'Éxpected");

1374 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FOR
, 
löe
);

1375 
	`Àaveblock
(
fs
);

1376 
	}
}

1379 
	$ã°_thí_block
 (
LexSèã
 *
ls
, *
esˇ≥li°
) {

1381 
BlockC¡
 
bl
;

1382 
FuncSèã
 *
fs
 = 
ls
->fs;

1383 
expdesc
 
v
;

1384 
jf
;

1385 
	`luaX_√xt
(
ls
);

1386 
	`ex¥
(
ls
, &
v
);

1387 
	`check√xt
(
ls
, 
TK_THEN
);

1388 i‡(
ls
->
t
.
tokí
 =
TK_GOTO
 ||Üs->t.tokí =
TK_BREAK
) {

1389 
	`luaK_goifÁl£
(
ls
->
fs
, &
v
);

1390 
	`íãrblock
(
fs
, &
bl
, 0);

1391 
	`gŸo°©
(
ls
, 
v
.
t
);

1392 
	`skùno›°©
(
ls
);

1393 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1394 
	`Àaveblock
(
fs
);

1398 
jf
 = 
	`luaK_jump
(
fs
);

1401 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1402 
	`íãrblock
(
fs
, &
bl
, 0);

1403 
jf
 = 
v
.
f
;

1405 
	`°©li°
(
ls
);

1406 
	`Àaveblock
(
fs
);

1407 i‡(
ls
->
t
.
tokí
 =
TK_ELSE
 ||

1408 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1409 
	`luaK_c⁄ˇt
(
fs
, 
esˇ≥li°
, 
	`luaK_jump
(fs));

1410 
	`luaK_∑tchtohîe
(
fs
, 
jf
);

1411 
	}
}

1414 
	$if°©
 (
LexSèã
 *
ls
, 
löe
) {

1416 
FuncSèã
 *
fs
 = 
ls
->fs;

1417 
esˇ≥li°
 = 
NO_JUMP
;

1418 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1419 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1420 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1421 i‡(
	`ã°√xt
(
ls
, 
TK_ELSE
))

1422 
	`block
(
ls
);

1423 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_IF
, 
löe
);

1424 
	`luaK_∑tchtohîe
(
fs
, 
esˇ≥li°
);

1425 
	}
}

1428 
	$loˇlfunc
 (
LexSèã
 *
ls
) {

1429 
expdesc
 
b
;

1430 
FuncSèã
 *
fs
 = 
ls
->fs;

1431 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1432 
	`adju°loˇlv¨s
(
ls
, 1);

1433 
	`body
(
ls
, &
b
, 0,Üs->
löíumbî
);

1435 
	`gëlocv¨
(
fs
, 
b
.
u
.
öfo
)->
°¨çc
 = fs->
pc
;

1436 
	}
}

1439 
	$loˇl°©
 (
LexSèã
 *
ls
) {

1441 
nv¨s
 = 0;

1442 
√xps
;

1443 
expdesc
 
e
;

1445 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1446 
nv¨s
++;

1447 } 
	`ã°√xt
(
ls
, ','));

1448 i‡(
	`ã°√xt
(
ls
, '='))

1449 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1451 
e
.
k
 = 
VVOID
;

1452 
√xps
 = 0;

1454 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1455 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1456 
	}
}

1459 
	$fun˙ame
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1461 
ismëhod
 = 0;

1462 
	`sögÀv¨
(
ls
, 
v
);

1463 
ls
->
t
.
tokí
 == '.')

1464 
	`fõld£l
(
ls
, 
v
);

1465 i‡(
ls
->
t
.
tokí
 == ':') {

1466 
ismëhod
 = 1;

1467 
	`fõld£l
(
ls
, 
v
);

1469  
ismëhod
;

1470 
	}
}

1473 
	$func°©
 (
LexSèã
 *
ls
, 
löe
) {

1475 
ismëhod
;

1476 
expdesc
 
v
, 
b
;

1477 
	`luaX_√xt
(
ls
);

1478 
ismëhod
 = 
	`fun˙ame
(
ls
, &
v
);

1479 
	`body
(
ls
, &
b
, 
ismëhod
, 
löe
);

1480 
	`luaK_°‹ev¨
(
ls
->
fs
, &
v
, &
b
);

1481 
	`luaK_fixlöe
(
ls
->
fs
, 
löe
);

1482 
	}
}

1485 
	$ex¥°©
 (
LexSèã
 *
ls
) {

1487 
FuncSèã
 *
fs
 = 
ls
->fs;

1488 
LHS_assign
 
v
;

1489 
	`suffixedexp
(
ls
, &
v
.v);

1490 i‡(
ls
->
t
.
tokí
 == '=' ||Üs->t.token == ',') {

1491 
v
.
¥ev
 = 
NULL
;

1492 
	`assignmít
(
ls
, &
v
, 1);

1495 
	`check_c⁄dôi⁄
(
ls
, 
v
.v.
k
 =
VCALL
, "syntaxÉrror");

1496 
	`SETARG_C
(
	`gëcode
(
fs
, &
v
.v), 1);

1498 
	}
}

1501 
	$ªt°©
 (
LexSèã
 *
ls
) {

1503 
FuncSèã
 *
fs
 = 
ls
->fs;

1504 
expdesc
 
e
;

1505 
fú°
, 
ƒë
;

1506 i‡(
	`block_fﬁlow
(
ls
, 1Ë||Üs->
t
.
tokí
 == ';')

1507 
fú°
 = 
ƒë
 = 0;

1509 
ƒë
 = 
	`ex∂i°
(
ls
, &
e
);

1510 i‡(
	`hasmu…ªt
(
e
.
k
)) {

1511 
	`luaK_£tmu…ªt
(
fs
, &
e
);

1512 i‡(
e
.
k
 =
VCALL
 && 
ƒë
 == 1) {

1513 
	`SET_OPCODE
(
	`gëcode
(
fs
,&
e
), 
OP_TAILCALL
);

1514 
	`lua_as£π
(
	`GETARG_A
(
	`gëcode
(
fs
,&
e
)Ë=fs->
«˘v¨
);

1516 
fú°
 = 
fs
->
«˘v¨
;

1517 
ƒë
 = 
LUA_MULTRET
;

1520 i‡(
ƒë
 == 1)

1521 
fú°
 = 
	`luaK_exp2™yªg
(
fs
, &
e
);

1523 
	`luaK_exp2√xåeg
(
fs
, &
e
);

1524 
fú°
 = 
fs
->
«˘v¨
;

1525 
	`lua_as£π
(
ƒë
 =
fs
->
‰ìªg
 - 
fú°
);

1529 
	`luaK_ªt
(
fs
, 
fú°
, 
ƒë
);

1530 
	`ã°√xt
(
ls
, ';');

1531 
	}
}

1534 
	$°©emít
 (
LexSèã
 *
ls
) {

1535 
löe
 = 
ls
->
löíumbî
;

1536 
	`íãæevñ
(
ls
);

1537 
ls
->
t
.
tokí
) {

1539 
	`luaX_√xt
(
ls
);

1542 
TK_IF
: {

1543 
	`if°©
(
ls
, 
löe
);

1546 
TK_WHILE
: {

1547 
	`whûe°©
(
ls
, 
löe
);

1550 
TK_DO
: {

1551 
	`luaX_√xt
(
ls
);

1552 
	`block
(
ls
);

1553 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_DO
, 
löe
);

1556 
TK_FOR
: {

1557 
	`f‹°©
(
ls
, 
löe
);

1560 
TK_REPEAT
: {

1561 
	`ª≥©°©
(
ls
, 
löe
);

1564 
TK_FUNCTION
: {

1565 
	`func°©
(
ls
, 
löe
);

1568 
TK_LOCAL
: {

1569 
	`luaX_√xt
(
ls
);

1570 i‡(
	`ã°√xt
(
ls
, 
TK_FUNCTION
))

1571 
	`loˇlfunc
(
ls
);

1573 
	`loˇl°©
(
ls
);

1576 
TK_DBCOLON
: {

1577 
	`luaX_√xt
(
ls
);

1578 
	`œbñ°©
(
ls
, 
	`°r_check«me
÷s), 
löe
);

1581 
TK_RETURN
: {

1582 
	`luaX_√xt
(
ls
);

1583 
	`ªt°©
(
ls
);

1586 
TK_BREAK
:

1587 
TK_GOTO
: {

1588 
	`gŸo°©
(
ls
, 
	`luaK_jump
÷s->
fs
));

1592 
	`ex¥°©
(
ls
);

1596 
	`lua_as£π
(
ls
->
fs
->
f
->
max°acksize
 >ls->fs->
‰ìªg
 &&

1597 
ls
->
fs
->
‰ìªg
 >ls->fs->
«˘v¨
);

1598 
ls
->
fs
->
‰ìªg
 =Üs->fs->
«˘v¨
;

1599 
	`Àavñevñ
(
ls
);

1600 
	}
}

1609 
	$maöfunc
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
) {

1610 
BlockC¡
 
bl
;

1611 
expdesc
 
v
;

1612 
	`›í_func
(
ls
, 
fs
, &
bl
);

1613 
fs
->
f
->
is_v¨¨g
 = 1;

1614 
	`öô_exp
(&
v
, 
VLOCAL
, 0);

1615 
	`√wupvÆue
(
fs
, 
ls
->
ívn
, &
v
);

1616 
	`luaX_√xt
(
ls
);

1617 
	`°©li°
(
ls
);

1618 
	`check
(
ls
, 
TK_EOS
);

1619 
	`˛o£_func
(
ls
);

1620 
	}
}

1623 
LClosuª
 *
	$luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

1624 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
) {

1625 
LexSèã
 
Àx°©e
;

1626 
FuncSèã
 
func°©e
;

1627 
LClosuª
 *
˛
 = 
	`luaF_√wL˛osuª
(
L
, 1);

1628 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

1629 
	`ö¸_t›
(
L
);

1630 
Àx°©e
.
h
 = 
	`luaH_√w
(
L
);

1631 
	`£thvÆue
(
L
, L->
t›
, 
Àx°©e
.
h
);

1632 
	`ö¸_t›
(
L
);

1633 
func°©e
.
f
 = 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

1634 
func°©e
.
f
->
sour˚
 = 
	`luaS_√w
(
L
, 
«me
);

1635 
	`lua_as£π
(
	`iswhôe
(
func°©e
.
f
));

1636 
Àx°©e
.
buff
 = buff;

1637 
Àx°©e
.
dyd
 = dyd;

1638 
dyd
->
a˘v¨
.
n
 = dyd->
gt
.¿dyd->
œbñ
.n = 0;

1639 
	`luaX_£töput
(
L
, &
Àx°©e
, 
z
, 
func°©e
.
f
->
sour˚
, 
fú°ch¨
);

1640 
	`maöfunc
(&
Àx°©e
, &
func°©e
);

1641 
	`lua_as£π
(!
func°©e
.
¥ev
 && func°©e.
nups
 =1 && !
Àx°©e
.
fs
);

1643 
	`lua_as£π
(
dyd
->
a˘v¨
.
n
 =0 && dyd->
gt
.¿=0 && dyd->
œbñ
.n == 0);

1644 
L
->
t›
--;

1645  
˛
;

1646 
	}
}

	@lib/archive/lua-5.3.0/src/lparser.h

7 #i‚de‡
Õ¨£r_h


8 
	#Õ¨£r_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

20 
	mVVOID
,

21 
	mVNIL
,

22 
	mVTRUE
,

23 
	mVFALSE
,

24 
	mVK
,

25 
	mVKFLT
,

26 
	mVKINT
,

27 
	mVNONRELOC
,

28 
	mVLOCAL
,

29 
	mVUPVAL
,

30 
	mVINDEXED
,

31 
	mVJMP
,

32 
	mVRELOCABLE
,

33 
	mVCALL
,

34 
	mVVARARG


35 } 
	texpköd
;

38 
	#vkisv¨
(
k
Ë(
VLOCAL
 <(kË&& (kË<
VINDEXED
)

	)

39 
	#vkisöªg
(
k
Ë((kË=
VNONRELOC
 || (kË=
VLOCAL
)

	)

41 
	sexpdesc
 {

42 
expköd
 
	mk
;

45 
	midx
;

46 
lu_byã
 
	mt
;

47 
lu_byã
 
	mvt
;

48 } 
	möd
;

49 
	möfo
;

50 
lua_Numbî
 
	mnvÆ
;

51 
lua_I¡egî
 
	mivÆ
;

52 } 
	mu
;

53 
	mt
;

54 
	mf
;

55 } 
	texpdesc
;

59 
	sV¨desc
 {

60 
	midx
;

61 } 
	tV¨desc
;

65 
	sLabñdesc
 {

66 
TSåög
 *
	m«me
;

67 
	mpc
;

68 
	mlöe
;

69 
lu_byã
 
	m«˘v¨
;

70 } 
	tLabñdesc
;

74 
	sLabñli°
 {

75 
Labñdesc
 *
	m¨r
;

76 
	mn
;

77 
	msize
;

78 } 
	tLabñli°
;

82 
	sDynd©a
 {

84 
V¨desc
 *
	m¨r
;

85 
	mn
;

86 
	msize
;

87 } 
	ma˘v¨
;

88 
Labñli°
 
	mgt
;

89 
Labñli°
 
	mœbñ
;

90 } 
	tDynd©a
;

94 
	gBlockC¡
;

98 
	sFuncSèã
 {

99 
PrŸo
 *
	mf
;

100 
FuncSèã
 *
	m¥ev
;

101 
LexSèã
 *
	mls
;

102 
BlockC¡
 *
	mbl
;

103 
	mpc
;

104 
	mœ°èrgë
;

105 
	mjpc
;

106 
	mnk
;

107 
	m≈
;

108 
	mfú°loˇl
;

109 
	m∆ocv¨s
;

110 
lu_byã
 
	m«˘v¨
;

111 
lu_byã
 
	mnups
;

112 
lu_byã
 
	m‰ìªg
;

113 } 
	tFuncSèã
;

116 
LUAI_FUNC
 
LClosuª
 *
luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

117 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
);

	@lib/archive/lua-5.3.0/src/lprefix.h

7 #i‚de‡
Õªfix_h


8 
	#Õªfix_h


	)

14 #i‡!
deföed
(
LUA_USE_C89
)

16 #i‡!
deföed
(
_XOPEN_SOURCE
)

17 
	#_XOPEN_SOURCE
 600

	)

18 #ñi‡
_XOPEN_SOURCE
 == 0

19 #unde‡
_XOPEN_SOURCE


25 #i‡!
deföed
(
LUA_32BITS
Ë&& !deföed(
_FILE_OFFSET_BITS
)

26 
	#_LARGEFILE_SOURCE
 1

	)

27 
	#_FILE_OFFSET_BITS
 64

	)

36 #i‡
deföed
(
_WIN32
)

38 #i‡!
deföed
(
_CRT_SECURE_NO_WARNINGS
)

39 
	#_CRT_SECURE_NO_WARNINGS


	)

	@lib/archive/lua-5.3.0/src/lstate.c

7 
	#l°©e_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"Œex.h
"

24 
	~"lmem.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

31 #i‡!
deföed
(
LUAI_GCPAUSE
)

32 
	#LUAI_GCPAUSE
 200

	)

35 #i‡!
deföed
(
LUAI_GCMUL
)

36 
	#LUAI_GCMUL
 200

	)

40 
	#MEMERRMSG
 "nŸÉnough mem‹y"

	)

47 #i‡!
deföed
(
luai_make£ed
)

48 
	~<time.h
>

49 
	#luai_make£ed
(Ë
	`ˇ°
(, 
	`time
(
NULL
))

	)

57 
	sLX
 {

58 
lu_byã
 
	mexåa_
[
LUA_EXTRASPACE
];

59 
lua_Sèã
 
	ml
;

60 } 
	tLX
;

66 
	sLG
 {

67 
LX
 
	ml
;

68 
globÆ_Sèã
 
	mg
;

69 } 
	tLG
;

73 
	#‰om°©e
(
L
Ë(
	`ˇ°
(
LX
 *, ca°(
lu_byã
 *, (L)Ë- 
	`off£tof
(LX, 
l
)))

	)

80 
	#addbuff
(
b
,
p
,
e
) \

81 { 
size_t
 
t
 = 
	`ˇ°
(size_t, 
e
); \

82 
	`mem˝y
(
buff
 + 
p
, &
t
, —));Ö +—); }

	)

84 
	$make£ed
 (
lua_Sèã
 *
L
) {

85 
buff
[4 * (
size_t
)];

86 
h
 = 
	`luai_make£ed
();

87 
p
 = 0;

88 
	`addbuff
(
buff
, 
p
, 
L
);

89 
	`addbuff
(
buff
, 
p
, &
h
);

90 
	`addbuff
(
buff
, 
p
, 
luaO_nûobje˘
);

91 
	`addbuff
(
buff
, 
p
, &
lua_√w°©e
);

92 
	`lua_as£π
(
p
 =(
buff
));

93  
	`luaS_hash
(
buff
, 
p
, 
h
);

94 
	}
}

101 
	$luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
) {

102 
g
->
tŸÆbyãs
 -(
debt
 - g->
GCdebt
);

103 
g
->
GCdebt
 = 
debt
;

104 
	}
}

107 
CÆlInfo
 *
	$luaE_exãndCI
 (
lua_Sèã
 *
L
) {

108 
CÆlInfo
 *
ci
 = 
	`luaM_√w
(
L
, CallInfo);

109 
	`lua_as£π
(
L
->
ci
->
√xt
 =
NULL
);

110 
L
->
ci
->
√xt
 = ci;

111 
ci
->
¥evious
 = 
L
->ci;

112 
ci
->
√xt
 = 
NULL
;

113  
ci
;

114 
	}
}

120 
	$luaE_‰ìCI
 (
lua_Sèã
 *
L
) {

121 
CÆlInfo
 *
ci
 = 
L
->ci;

122 
CÆlInfo
 *
√xt
 = 
ci
->next;

123 
ci
->
√xt
 = 
NULL
;

124 (
ci
 = 
√xt
Ë!
NULL
) {

125 
√xt
 = 
ci
->next;

126 
	`luaM_‰ì
(
L
, 
ci
);

128 
	}
}

134 
	$luaE_shrökCI
 (
lua_Sèã
 *
L
) {

135 
CÆlInfo
 *
ci
 = 
L
->ci;

136 
ci
->
√xt
 !
NULL
) {

137 
CÆlInfo
 *
√xt2
 = 
ci
->
√xt
->next;

138 i‡(
√xt2
 =
NULL
) ;

139 
	`luaM_‰ì
(
L
, 
ci
->
√xt
);

140 
ci
->
√xt
 = 
√xt2
;

141 
√xt2
->
¥evious
 = 
ci
;

142 
ci
 = 
√xt2
;

144 
	}
}

147 
	$°ack_öô
 (
lua_Sèã
 *
L1
,Üua_Sèã *
L
) {

148 
i
; 
CÆlInfo
 *
ci
;

150 
L1
->
°ack
 = 
	`luaM_√wve˘‹
(
L
, 
BASIC_STACK_SIZE
, 
TVÆue
);

151 
L1
->
°acksize
 = 
BASIC_STACK_SIZE
;

152 
i
 = 0; i < 
BASIC_STACK_SIZE
; i++)

153 
	`£äûvÆue
(
L1
->
°ack
 + 
i
);

154 
L1
->
t›
 = L1->
°ack
;

155 
L1
->
°ack_œ°
 = L1->
°ack
 + L1->
°acksize
 - 
EXTRA_STACK
;

157 
ci
 = &
L1
->
ba£_ci
;

158 
ci
->
√xt
 = ci->
¥evious
 = 
NULL
;

159 
ci
->
ˇŒ°©us
 = 0;

160 
ci
->
func
 = 
L1
->
t›
;

161 
	`£äûvÆue
(
L1
->
t›
++);

162 
ci
->
t›
 = 
L1
->t› + 
LUA_MINSTACK
;

163 
L1
->
ci
 = ci;

164 
	}
}

167 
	$‰ì°ack
 (
lua_Sèã
 *
L
) {

168 i‡(
L
->
°ack
 =
NULL
)

170 
L
->
ci
 = &L->
ba£_ci
;

171 
	`luaE_‰ìCI
(
L
);

172 
	`luaM_‰ì¨øy
(
L
, L->
°ack
, L->
°acksize
);

173 
	}
}

179 
	$öô_ªgi°ry
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

180 
TVÆue
 
ãmp
;

182 
TabÀ
 *
ªgi°ry
 = 
	`luaH_√w
(
L
);

183 
	`£thvÆue
(
L
, &
g
->
l_ªgi°ry
, 
ªgi°ry
);

184 
	`luaH_ªsize
(
L
, 
ªgi°ry
, 
LUA_RIDX_LAST
, 0);

186 
	`£âhvÆue
(
L
, &
ãmp
, L);

187 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_MAINTHREAD
, &
ãmp
);

189 
	`£thvÆue
(
L
, &
ãmp
, 
	`luaH_√w
(L));

190 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_GLOBALS
, &
ãmp
);

191 
	}
}

198 
	$f_lua›í
 (
lua_Sèã
 *
L
, *
ud
) {

199 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

200 
	`UNUSED
(
ud
);

201 
	`°ack_öô
(
L
, L);

202 
	`öô_ªgi°ry
(
L
, 
g
);

203 
	`luaS_ªsize
(
L
, 
MINSTRTABSIZE
);

204 
	`luaT_öô
(
L
);

205 
	`luaX_öô
(
L
);

207 
g
->
memîrmsg
 = 
	`luaS_√wlôîÆ
(
L
, 
MEMERRMSG
);

208 
	`luaC_fix
(
L
, 
	`obj2gco
(
g
->
memîrmsg
));

209 
g
->
g¸u¬ög
 = 1;

210 
g
->
vîsi⁄
 = 
	`lua_vîsi⁄
(
NULL
);

211 
	`luai_u£r°©e›í
(
L
);

212 
	}
}

219 
	$¥eöô_thªad
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

220 
	`G
(
L
Ë
g
;

221 
L
->
°ack
 = 
NULL
;

222 
L
->
ci
 = 
NULL
;

223 
L
->
°acksize
 = 0;

224 
L
->
twups
 = L;

225 
L
->
îr‹Jmp
 = 
NULL
;

226 
L
->
nCˇŒs
 = 0;

227 
L
->
hook
 = 
NULL
;

228 
L
->
hookmask
 = 0;

229 
L
->
ba£hookcou¡
 = 0;

230 
L
->
Ælowhook
 = 1;

231 
	`ª£thookcou¡
(
L
);

232 
L
->
›íupvÆ
 = 
NULL
;

233 
L
->
¬y
 = 1;

234 
L
->
°©us
 = 
LUA_OK
;

235 
L
->
îrfunc
 = 0;

236 
	}
}

239 
	$˛o£_°©e
 (
lua_Sèã
 *
L
) {

240 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

241 
	`luaF_˛o£
(
L
, L->
°ack
);

242 
	`luaC_‰ìÆlobje˘s
(
L
);

243 i‡(
g
->
vîsi⁄
)

244 
	`luai_u£r°©e˛o£
(
L
);

245 
	`luaM_‰ì¨øy
(
L
, 
	`G
(L)->
°π
.
hash
, G(L)->°π.
size
);

246 
	`luaZ_‰ìbuf„r
(
L
, &
g
->
buff
);

247 
	`‰ì°ack
(
L
);

248 
	`lua_as£π
(
	`gëtŸÆbyãs
(
g
Ë=(
LG
));

249 (*
g
->
‰óŒoc
)(g->
ud
, 
	`‰om°©e
(
L
), (
LG
), 0);

250 
	}
}

253 
LUA_API
 
lua_Sèã
 *
	$lua_√wthªad
 (
lua_Sèã
 *
L
) {

254 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

255 
lua_Sèã
 *
L1
;

256 
	`lua_lock
(
L
);

257 
	`luaC_checkGC
(
L
);

259 
L1
 = &
	`ˇ°
(
LX
 *, 
	`luaM_√wobje˘
(
L
, 
LUA_TTHREAD
, (LX)))->
l
;

260 
L1
->
m¨ked
 = 
	`luaC_whôe
(
g
);

261 
L1
->
â
 = 
LUA_TTHREAD
;

263 
L1
->
√xt
 = 
g
->
Ælgc
;

264 
g
->
Ælgc
 = 
	`obj2gco
(
L1
);

266 
	`£âhvÆue
(
L
, L->
t›
, 
L1
);

267 
	`≠i_ö¸_t›
(
L
);

268 
	`¥eöô_thªad
(
L1
, 
g
);

269 
L1
->
hookmask
 = 
L
->hookmask;

270 
L1
->
ba£hookcou¡
 = 
L
->basehookcount;

271 
L1
->
hook
 = 
L
->hook;

272 
	`ª£thookcou¡
(
L1
);

274 
	`mem˝y
(
	`lua_gëexåa•a˚
(
L1
),Üua_gëexåa•a˚(
g
->
maöthªad
),

275 
LUA_EXTRASPACE
);

276 
	`luai_u£r°©ëhªad
(
L
, 
L1
);

277 
	`°ack_öô
(
L1
, 
L
);

278 
	`lua_u∆ock
(
L
);

279  
L1
;

280 
	}
}

283 
	$luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
) {

284 
LX
 *
l
 = 
	`‰om°©e
(
L1
);

285 
	`luaF_˛o£
(
L1
, L1->
°ack
);

286 
	`lua_as£π
(
L1
->
›íupvÆ
 =
NULL
);

287 
	`luai_u£r°©e‰ì
(
L
, 
L1
);

288 
	`‰ì°ack
(
L1
);

289 
	`luaM_‰ì
(
L
, 
l
);

290 
	}
}

293 
LUA_API
 
lua_Sèã
 *
	$lua_√w°©e
 (
lua_AŒoc
 
f
, *
ud
) {

294 
i
;

295 
lua_Sèã
 *
L
;

296 
globÆ_Sèã
 *
g
;

297 
LG
 *
l
 = 
	`ˇ°
(LG *, (*
f
)(
ud
, 
NULL
, 
LUA_TTHREAD
, (LG)));

298 i‡(
l
 =
NULL
)  NULL;

299 
L
 = &
l
->l.l;

300 
g
 = &
l
->g;

301 
L
->
√xt
 = 
NULL
;

302 
L
->
â
 = 
LUA_TTHREAD
;

303 
g
->
cuºítwhôe
 = 
	`bômask
(
WHITE0BIT
);

304 
L
->
m¨ked
 = 
	`luaC_whôe
(
g
);

305 
	`¥eöô_thªad
(
L
, 
g
);

306 
g
->
‰óŒoc
 = 
f
;

307 
g
->
ud
 = ud;

308 
g
->
maöthªad
 = 
L
;

309 
g
->
£ed
 = 
	`make£ed
(
L
);

310 
g
->
g¸u¬ög
 = 0;

311 
g
->
GCe°im©e
 = 0;

312 
g
->
°π
.
size
 = g->°π.
nu£
 = 0;

313 
g
->
°π
.
hash
 = 
NULL
;

314 
	`£äûvÆue
(&
g
->
l_ªgi°ry
);

315 
	`luaZ_öôbuf„r
(
L
, &
g
->
buff
);

316 
g
->
∑nic
 = 
NULL
;

317 
g
->
vîsi⁄
 = 
NULL
;

318 
g
->
gc°©e
 = 
GCS∑u£
;

319 
g
->
gcköd
 = 
KGC_NORMAL
;

320 
g
->
Ælgc
 = g->
föobj
 = g->
tobe‚z
 = g->
fixedgc
 = 
NULL
;

321 
g
->
swìpgc
 = 
NULL
;

322 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

323 
g
->
wók
 = g->
ïhemî⁄
 = g->
Ælwók
 = 
NULL
;

324 
g
->
twups
 = 
NULL
;

325 
g
->
tŸÆbyãs
 = (
LG
);

326 
g
->
GCdebt
 = 0;

327 
g
->
gcfönum
 = 0;

328 
g
->
g˝au£
 = 
LUAI_GCPAUSE
;

329 
g
->
gc°ïmul
 = 
LUAI_GCMUL
;

330 
i
=0; i < 
LUA_NUMTAGS
; i++Ë
g
->
mt
[i] = 
NULL
;

331 i‡(
	`luaD_øwru≈rŸe˘ed
(
L
, 
f_lua›í
, 
NULL
Ë!
LUA_OK
) {

333 
	`˛o£_°©e
(
L
);

334 
L
 = 
NULL
;

336  
L
;

337 
	}
}

340 
LUA_API
 
	$lua_˛o£
 (
lua_Sèã
 *
L
) {

341 
L
 = 
	`G
(L)->
maöthªad
;

342 
	`lua_lock
(
L
);

343 
	`˛o£_°©e
(
L
);

344 
	}
}

	@lib/archive/lua-5.3.0/src/lstate.h

7 #i‚de‡
l°©e_h


8 
	#l°©e_h


	)

10 
	~"lua.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

14 
	~"lzio.h
"

33 
	glua_l⁄gjmp
;

38 
	#EXTRA_STACK
 5

	)

41 
	#BASIC_STACK_SIZE
 (2*
LUA_MINSTACK
)

	)

45 
	#KGC_NORMAL
 0

	)

46 
	#KGC_EMERGENCY
 1

	)

49 
	s°rögèbÀ
 {

50 
TSåög
 **
	mhash
;

51 
	mnu£
;

52 
	msize
;

53 } 
	t°rögèbÀ
;

65 
	sCÆlInfo
 {

66 
StkId
 
	mfunc
;

67 
StkId
 
	mt›
;

68 
CÆlInfo
 *
	m¥evious
, *
	m√xt
;

71 
StkId
 
	mba£
;

72 c⁄° 
In°ru˘i⁄
 *
	mßvedpc
;

73 } 
	ml
;

75 
lua_KFun˘i⁄
 
	mk
;

76 
±rdiff_t
 
	mﬁd_îrfunc
;

77 
lua_KC⁄ãxt
 
	m˘x
;

78 } 
	mc
;

79 } 
	mu
;

80 
±rdiff_t
 
	mexåa
;

81 
	mƒesu…s
;

82 
lu_byã
 
	mˇŒ°©us
;

83 } 
	tCÆlInfo
;

89 
	#CIST_OAH
 (1<<0Ë

	)

90 
	#CIST_LUA
 (1<<1Ë

	)

91 
	#CIST_HOOKED
 (1<<2Ë

	)

92 
	#CIST_REENTRY
 (1<<3Ë

	)

94 
	#CIST_YPCALL
 (1<<4Ë

	)

95 
	#CIST_TAIL
 (1<<5Ë

	)

96 
	#CIST_HOOKYIELD
 (1<<6Ë

	)

98 
	#isLua
(
ci
Ë((ci)->
ˇŒ°©us
 & 
CIST_LUA
)

	)

101 
	#£tﬂh
(
°
,
v
Ë((°Ë((°Ë& ~
CIST_OAH
Ë| (v))

	)

102 
	#gëﬂh
(
°
Ë((°Ë& 
CIST_OAH
)

	)

108 
	sglobÆ_Sèã
 {

109 
lua_AŒoc
 
	m‰óŒoc
;

110 *
	mud
;

111 
lu_mem
 
	mtŸÆbyãs
;

112 
l_mem
 
	mGCdebt
;

113 
lu_mem
 
	mGCmemåav
;

114 
lu_mem
 
	mGCe°im©e
;

115 
°rögèbÀ
 
	m°π
;

116 
TVÆue
 
	ml_ªgi°ry
;

117 
	m£ed
;

118 
lu_byã
 
	mcuºítwhôe
;

119 
lu_byã
 
	mgc°©e
;

120 
lu_byã
 
	mgcköd
;

121 
lu_byã
 
	mg¸u¬ög
;

122 
GCObje˘
 *
	mÆlgc
;

123 
GCObje˘
 **
	mswìpgc
;

124 
GCObje˘
 *
	mföobj
;

125 
GCObje˘
 *
	mgøy
;

126 
GCObje˘
 *
	mgøyagaö
;

127 
GCObje˘
 *
	mwók
;

128 
GCObje˘
 *
	mïhemî⁄
;

129 
GCObje˘
 *
	mÆlwók
;

130 
GCObje˘
 *
	mtobe‚z
;

131 
GCObje˘
 *
	mfixedgc
;

132 
lua_Sèã
 *
	mtwups
;

133 
Mbuf„r
 
	mbuff
;

134 
	mgcfönum
;

135 
	mg˝au£
;

136 
	mgc°ïmul
;

137 
lua_CFun˘i⁄
 
	m∑nic
;

138 
lua_Sèã
 *
	mmaöthªad
;

139 c⁄° 
lua_Numbî
 *
	mvîsi⁄
;

140 
TSåög
 *
	mmemîrmsg
;

141 
TSåög
 *
	mtm«me
[
TM_N
];

142 
TabÀ
 *
	mmt
[
LUA_NUMTAGS
];

143 } 
	tglobÆ_Sèã
;

149 
	slua_Sèã
 {

150 
	mComm⁄Hódî
;

151 
lu_byã
 
	m°©us
;

152 
StkId
 
	mt›
;

153 
globÆ_Sèã
 *
	ml_G
;

154 
CÆlInfo
 *
	mci
;

155 c⁄° 
In°ru˘i⁄
 *
	mﬁdpc
;

156 
StkId
 
	m°ack_œ°
;

157 
StkId
 
	m°ack
;

158 
UpVÆ
 *
	m›íupvÆ
;

159 
GCObje˘
 *
	mg˛i°
;

160 
lua_Sèã
 *
	mtwups
;

161 
lua_l⁄gjmp
 *
	mîr‹Jmp
;

162 
CÆlInfo
 
	mba£_ci
;

163 
lua_Hook
 
	mhook
;

164 
±rdiff_t
 
	mîrfunc
;

165 
	m°acksize
;

166 
	mba£hookcou¡
;

167 
	mhookcou¡
;

168 
	m¬y
;

169 
	mnCˇŒs
;

170 
lu_byã
 
	mhookmask
;

171 
lu_byã
 
	mÆlowhook
;

173 * 
	m¥iv©e
;

177 
	#G
(
L
Ë(L->
l_G
)

	)

183 
	uGCUni⁄
 {

184 
GCObje˘
 
	mgc
;

185 
TSåög
 
	mts
;

186 
Ud©a
 
	mu
;

187 
Closuª
 
	m˛
;

188 
TabÀ
 
	mh
;

189 
PrŸo
 
	mp
;

190 
lua_Sèã
 
	mth
;

194 
	#ˇ°_u
(
o
Ë
	`ˇ°
(
GCUni⁄
 *, (o))

	)

197 
	#gco2ts
(
o
) \

198 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TSTRING
, &((
	`ˇ°_u
(o))->
ts
))

	)

199 
	#gco2u
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TUSERDATA
, &((
	`ˇ°_u
(o))->
u
))

	)

200 
	#gco2l˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TLCL
, &((
	`ˇ°_u
(o))->
˛
.
l
))

	)

201 
	#gco2c˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TCCL
, &((
	`ˇ°_u
(o))->
˛
.
c
))

	)

202 
	#gco2˛
(
o
) \

203 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TFUNCTION
, &((
	`ˇ°_u
(o))->
˛
))

	)

204 
	#gco2t
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTABLE
, &((
	`ˇ°_u
(o))->
h
))

	)

205 
	#gco2p
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TPROTO
, &((
	`ˇ°_u
(o))->
p
))

	)

206 
	#gco2th
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTHREAD
, &((
	`ˇ°_u
(o))->
th
))

	)

210 
	#obj2gco
(
v
) \

211 
	`check_exp
(
	`nov¨ü¡
((
v
)->
â
Ë< 
LUA_TDEADKEY
, (&(
	`ˇ°_u
(v)->
gc
)))

	)

215 
	#gëtŸÆbyãs
(
g
Ë((g)->
tŸÆbyãs
 + (g)->
GCdebt
)

	)

217 
LUAI_FUNC
 
luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
);

218 
LUAI_FUNC
 
luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
);

219 
LUAI_FUNC
 
CÆlInfo
 *
luaE_exãndCI
 (
lua_Sèã
 *
L
);

220 
LUAI_FUNC
 
luaE_‰ìCI
 (
lua_Sèã
 *
L
);

221 
LUAI_FUNC
 
luaE_shrökCI
 (
lua_Sèã
 *
L
);

	@lib/archive/lua-5.3.0/src/lstring.c

7 
	#l°rög_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

22 
	~"l°rög.h
"

30 #i‡!
deföed
(
LUAI_HASHLIMIT
)

31 
	#LUAI_HASHLIMIT
 5

	)

38 
	$luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
) {

39 
size_t
 
Àn
 = 
a
->len;

40 
	`lua_as£π
(
a
->
â
 =
LUA_TLNGSTR
 && 
b
->tt == LUA_TLNGSTR);

41  (
a
 =
b
) ||

42 ((
Àn
 =
b
->len) &&

43 (
	`memcmp
(
	`gë°r
(
a
), gë°r(
b
), 
Àn
) == 0));

44 
	}
}

47 
	$luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
) {

48 
h
 = 
£ed
 ^ 
	`ˇ°
(, 
l
);

49 
size_t
 
l1
;

50 
size_t
 
°ï
 = (
l
 >> 
LUAI_HASHLIMIT
) + 1;

51 
l1
 = 
l
;Ü1 >
°ï
;Ü1 -= step)

52 
h
 = h ^ ((h<<5Ë+ (h>>2Ë+ 
	`ˇ°_byã
(
°r
[
l1
 - 1]));

53  
h
;

54 
	}
}

60 
	$luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
) {

61 
i
;

62 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

63 i‡(
√wsize
 > 
tb
->
size
) {

64 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

65 
i
 = 
tb
->
size
; i < 
√wsize
; i++)

66 
tb
->
hash
[
i
] = 
NULL
;

68 
i
 = 0; i < 
tb
->
size
; i++) {

69 
TSåög
 *
p
 = 
tb
->
hash
[
i
];

70 
tb
->
hash
[
i
] = 
NULL
;

71 
p
) {

72 
TSåög
 *
h√xt
 = 
p
->hnext;

73 
h
 = 
	`lmod
(
p
->
hash
, 
√wsize
);

74 
p
->
h√xt
 = 
tb
->
hash
[
h
];

75 
tb
->
hash
[
h
] = 
p
;

76 
p
 = 
h√xt
;

79 i‡(
√wsize
 < 
tb
->
size
) {

81 
	`lua_as£π
(
tb
->
hash
[
√wsize
] =
NULL
 &&Åb->hash[tb->
size
 - 1] == NULL);

82 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

84 
tb
->
size
 = 
√wsize
;

85 
	}
}

92 
TSåög
 *
	$¸óã°robj
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
,

93 
èg
, 
h
) {

94 
TSåög
 *
ts
;

95 
GCObje˘
 *
o
;

96 
size_t
 
tŸÆsize
;

97 
tŸÆsize
 = 
	`sizñ°rög
(
l
);

98 
o
 = 
	`luaC_√wobj
(
L
, 
èg
, 
tŸÆsize
);

99 
ts
 = 
	`gco2ts
(
o
);

100 
ts
->
Àn
 = 
l
;

101 
ts
->
hash
 = 
h
;

102 
ts
->
exåa
 = 0;

103 
	`mem˝y
(
	`gëaddr°r
(
ts
), 
°r
, 
l
 * ());

104 
	`gëaddr°r
(
ts
)[
l
] = '\0';

105  
ts
;

106 
	}
}

109 
	$luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
) {

110 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

111 
TSåög
 **
p
 = &
tb
->
hash
[
	`lmod
(
ts
->hash,Åb->
size
)];

112 *
p
 !
ts
)

113 
p
 = &(*p)->
h√xt
;

114 *
p
 = (*p)->
h√xt
;

115 
tb
->
nu£
--;

116 
	}
}

122 
TSåög
 *
	$öã∫shr°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

123 
TSåög
 *
ts
;

124 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

125 
h
 = 
	`luaS_hash
(
°r
, 
l
, 
g
->
£ed
);

126 
TSåög
 **
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

127 
ts
 = *
li°
;Å†!
NULL
;Å†ts->
h√xt
) {

128 i‡(
l
 =
ts
->
Àn
 &&

129 (
	`memcmp
(
°r
, 
	`gë°r
(
ts
), 
l
 * ()) == 0)) {

131 i‡(
	`isdód
(
g
, 
ts
))

132 
	`ch™gewhôe
(
ts
);

133  
ts
;

136 i‡(
g
->
°π
.
nu£
 >g->°π.
size
 && g->°π.sizê<
MAX_INT
/2) {

137 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 * 2);

138 
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

140 
ts
 = 
	`¸óã°robj
(
L
, 
°r
, 
l
, 
LUA_TSHRSTR
, 
h
);

141 
ts
->
h√xt
 = *
li°
;

142 *
li°
 = 
ts
;

143 
g
->
°π
.
nu£
++;

144  
ts
;

145 
	}
}

151 
TSåög
 *
	$luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

152 i‡(
l
 <
LUAI_MAXSHORTLEN
)

153  
	`öã∫shr°r
(
L
, 
°r
, 
l
);

155 i‡(
l
 + 1 > (
MAX_SIZE
 - (
TSåög
))/())

156 
	`luaM_toobig
(
L
);

157  
	`¸óã°robj
(
L
, 
°r
, 
l
, 
LUA_TLNGSTR
, 
	`G
(L)->
£ed
);

159 
	}
}

165 
TSåög
 *
	$luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
) {

166  
	`luaS_√wl°r
(
L
, 
°r
, 
	`°æí
(str));

167 
	}
}

170 
Ud©a
 *
	$luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
) {

171 
Ud©a
 *
u
;

172 
GCObje˘
 *
o
;

173 i‡(
s
 > 
MAX_SIZE
 - (
Ud©a
))

174 
	`luaM_toobig
(
L
);

175 
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TUSERDATA
, 
	`sizñud©a
(
s
));

176 
u
 = 
	`gco2u
(
o
);

177 
u
->
Àn
 = 
s
;

178 
u
->
më©abÀ
 = 
NULL
;

179 
	`£tu£rvÆue
(
L
, 
u
, 
luaO_nûobje˘
);

180  
u
;

181 
	}
}

	@lib/archive/lua-5.3.0/src/lstring.h

7 #i‚de‡
l°rög_h


8 
	#l°rög_h


	)

10 
	~"lgc.h
"

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

15 
	#sizñ°rög
(
l
Ë((
UTSåög
Ë+ (÷Ë+ 1Ë* ())

	)

16 
	#size°rög
(
s
Ë
	`sizñ°rög
((s)->
Àn
)

	)

18 
	#sizñud©a
(
l
Ë((
UUd©a
Ë+ (l))

	)

19 
	#sizeud©a
(
u
Ë
	`sizñud©a
((u)->
Àn
)

	)

21 
	#luaS_√wlôîÆ
(
L
, 
s
Ë(
	`luaS_√wl°r
(L, "" s, \

22 ((
s
)/())-1))

	)

28 
	#i§e£rved
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 && (s)->
exåa
 > 0)

	)

34 
	#eqshr°r
(
a
,
b
Ë
	`check_exp
(◊)->
â
 =
LUA_TSHRSTR
, (aË=(b))

	)

37 
LUAI_FUNC
 
luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
);

38 
LUAI_FUNC
 
luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
);

39 
LUAI_FUNC
 
luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
);

40 
LUAI_FUNC
 
luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
);

41 
LUAI_FUNC
 
Ud©a
 *
luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
);

42 
LUAI_FUNC
 
TSåög
 *
luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
);

43 
LUAI_FUNC
 
TSåög
 *
luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
);

	@lib/archive/lua-5.3.0/src/lstrlib.c

7 
	#l°æib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<limôs.h
>

15 
	~<°ddef.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"œuxlib.h
"

23 
	~"luÆib.h
"

30 #i‡!
deföed
(
LUA_MAXCAPTURES
)

31 
	#LUA_MAXCAPTURES
 32

	)

36 
	#uch¨
(
c
Ë(()(c))

	)

43 
	#MAXSIZE
 \

44 ((
size_t
Ë< (Ë? (~(size_t)0Ë: (size_t)(
INT_MAX
))

	)

49 
	$°r_Àn
 (
lua_Sèã
 *
L
) {

50 
size_t
 
l
;

51 
	`luaL_checkl°rög
(
L
, 1, &
l
);

52 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
l
);

54 
	}
}

58 
lua_I¡egî
 
	$po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

59 i‡(
pos
 >= 0) Öos;

60 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

61  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

62 
	}
}

65 
	$°r_sub
 (
lua_Sèã
 *
L
) {

66 
size_t
 
l
;

67 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

68 
lua_I¡egî
 
°¨t
 = 
	`po§ñ©
(
	`luaL_checköãgî
(
L
, 2), 
l
);

69 
lua_I¡egî
 
íd
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
l
);

70 i‡(
°¨t
 < 1) start = 1;

71 i‡(
íd
 > (
lua_I¡egî
)
l
)Énd =Ü;

72 i‡(
°¨t
 <
íd
)

73 
	`lua_pushl°rög
(
L
, 
s
 + 
°¨t
 - 1, (
size_t
)(
íd
 - start + 1));

74 
	`lua_pushlôîÆ
(
L
, "");

76 
	}
}

79 
	$°r_ªvî£
 (
lua_Sèã
 *
L
) {

80 
size_t
 
l
, 
i
;

81 
luaL_Buf„r
 
b
;

82 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

83 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

84 
i
 = 0; i < 
l
; i++)

85 
p
[
i
] = 
s
[
l
 - i - 1];

86 
	`luaL_pushªsu…size
(&
b
, 
l
);

88 
	}
}

91 
	$°r_lowî
 (
lua_Sèã
 *
L
) {

92 
size_t
 
l
;

93 
size_t
 
i
;

94 
luaL_Buf„r
 
b
;

95 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

96 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

97 
i
=0; i<
l
; i++)

98 
p
[
i
] = 
	`tﬁowî
(
	`uch¨
(
s
[i]));

99 
	`luaL_pushªsu…size
(&
b
, 
l
);

101 
	}
}

104 
	$°r_uµî
 (
lua_Sèã
 *
L
) {

105 
size_t
 
l
;

106 
size_t
 
i
;

107 
luaL_Buf„r
 
b
;

108 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

109 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

110 
i
=0; i<
l
; i++)

111 
p
[
i
] = 
	`touµî
(
	`uch¨
(
s
[i]));

112 
	`luaL_pushªsu…size
(&
b
, 
l
);

114 
	}
}

117 
	$°r_ªp
 (
lua_Sèã
 *
L
) {

118 
size_t
 
l
, 
l£p
;

119 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

120 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

121 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 3, "", &
l£p
);

122 i‡(
n
 <0Ë
	`lua_pushlôîÆ
(
L
, "");

123 i‡(
l
 + 
l£p
 <Ü ||Ü +Ü£∞> 
MAXSIZE
 / 
n
)

124  
	`luaL_îr‹
(
L
, "resulting stringÅooÜarge");

126 
size_t
 
tŸÆÀn
 = (size_t)
n
 * 
l
 + (size_t)“ - 1Ë* 
l£p
;

127 
luaL_Buf„r
 
b
;

128 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
tŸÆÀn
);

129 
n
-- > 1) {

130 
	`mem˝y
(
p
, 
s
, 
l
 * ());Ö +=Ü;

131 i‡(
l£p
 > 0) {

132 
	`mem˝y
(
p
, 
£p
, 
l£p
 * ());

133 
p
 +
l£p
;

136 
	`mem˝y
(
p
, 
s
, 
l
 * ());

137 
	`luaL_pushªsu…size
(&
b
, 
tŸÆÀn
);

140 
	}
}

143 
	$°r_byã
 (
lua_Sèã
 *
L
) {

144 
size_t
 
l
;

145 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

146 
lua_I¡egî
 
posi
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
l
);

147 
lua_I¡egî
 
po£
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
l
);

148 
n
, 
i
;

149 i‡(
posi
 < 1)Öosi = 1;

150 i‡(
po£
 > (
lua_I¡egî
)
l
)Öose =Ü;

151 i‡(
posi
 > 
po£
)  0;

152 
n
 = ()(
po£
 - 
posi
 + 1);

153 i‡(
posi
 + 
n
 <
po£
)

154  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

155 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

156 
i
=0; i<
n
; i++)

157 
	`lua_pushöãgî
(
L
, 
	`uch¨
(
s
[
posi
+
i
-1]));

158  
n
;

159 
	}
}

162 
	$°r_ch¨
 (
lua_Sèã
 *
L
) {

163 
n
 = 
	`lua_gët›
(
L
);

164 
i
;

165 
luaL_Buf„r
 
b
;

166 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
n
);

167 
i
=1; i<=
n
; i++) {

168 
lua_I¡egî
 
c
 = 
	`luaL_checköãgî
(
L
, 
i
);

169 
	`luaL_¨gcheck
(
L
, 
	`uch¨
(
c
Ë=c, 
i
, "value out ofÑange");

170 
p
[
i
 - 1] = 
	`uch¨
(
c
);

172 
	`luaL_pushªsu…size
(&
b
, 
n
);

174 
	}
}

177 
	$wrôî
 (
lua_Sèã
 *
L
, c⁄° *
b
, 
size_t
 
size
, *
B
) {

178 ()
L
;

179 
	`luaL_addl°rög
((
luaL_Buf„r
 *Ë
B
, (c⁄° *)
b
, 
size
);

181 
	}
}

184 
	$°r_dump
 (
lua_Sèã
 *
L
) {

185 
luaL_Buf„r
 
b
;

186 
°rù
 = 
	`lua_toboﬁón
(
L
, 2);

187 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

188 
	`lua_£â›
(
L
, 1);

189 
	`luaL_bufföô
(
L
,&
b
);

190 i‡(
	`lua_dump
(
L
, 
wrôî
, &
b
, 
°rù
) != 0)

191  
	`luaL_îr‹
(
L
, "unableÅo dump given function");

192 
	`luaL_pushªsu…
(&
b
);

194 
	}
}

205 
	#CAP_UNFINISHED
 (-1)

	)

206 
	#CAP_POSITION
 (-2)

	)

209 
	sM©chSèã
 {

210 
	mm©chdïth
;

211 c⁄° *
	m§c_öô
;

212 c⁄° *
	m§c_íd
;

213 c⁄° *
	mp_íd
;

214 
lua_Sèã
 *
	mL
;

215 
	mÀvñ
;

217 c⁄° *
	möô
;

218 
±rdiff_t
 
	mÀn
;

219 } 
	mˇ±uª
[
LUA_MAXCAPTURES
];

220 } 
	tM©chSèã
;

224 c⁄° *
m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
);

228 #i‡!
deföed
(
MAXCCALLS
)

229 
	#MAXCCALLS
 200

	)

233 
	#L_ESC
 '%'

	)

234 
	#SPECIALS
 "^$*+?.([%-"

	)

237 
	$check_ˇ±uª
 (
M©chSèã
 *
ms
, 
l
) {

238 
l
 -= '1';

239 i‡(
l
 < 0 ||Ü >
ms
->
Àvñ
 || ms->
ˇ±uª
[l].
Àn
 =
CAP_UNFINISHED
)

240  
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
l
 + 1);

241  
l
;

242 
	}
}

245 
	$ˇ±uª_to_˛o£
 (
M©chSèã
 *
ms
) {

246 
Àvñ
 = 
ms
->level;

247 
Àvñ
--;Üevel>=0;Üevel--)

248 i‡(
ms
->
ˇ±uª
[
Àvñ
].
Àn
 =
CAP_UNFINISHED
) Üevel;

249  
	`luaL_îr‹
(
ms
->
L
, "invalidÖattern capture");

250 
	}
}

253 c⁄° *
	$˛as£nd
 (
M©chSèã
 *
ms
, c⁄° *
p
) {

254 *
p
++) {

255 
L_ESC
: {

256 i‡(
p
 =
ms
->
p_íd
)

257 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (ends with '%%')");

258  
p
+1;

261 i‡(*
p
 == '^')Ö++;

263 i‡(
p
 =
ms
->
p_íd
)

264 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missing ']')");

265 i‡(*(
p
++Ë=
L_ESC
 &&Ö < 
ms
->
p_íd
)

266 
p
++;

267 } *
p
 != ']');

268  
p
+1;

271  
p
;

274 
	}
}

277 
	$m©ch_˛ass
 (
c
, 
˛
) {

278 
ªs
;

279 
	`tﬁowî
(
˛
)) {

280 'a' : 
ªs
 = 
	`ißÕha
(
c
); ;

281 'c' : 
ªs
 = 
	`is˙ål
(
c
); ;

282 'd' : 
ªs
 = 
	`isdigô
(
c
); ;

283 'g' : 
ªs
 = 
	`isgøph
(
c
); ;

284 'l' : 
ªs
 = 
	`i¶owî
(
c
); ;

285 'p' : 
ªs
 = 
	`i•un˘
(
c
); ;

286 's' : 
ªs
 = 
	`is•a˚
(
c
); ;

287 'u' : 
ªs
 = 
	`isuµî
(
c
); ;

288 'w' : 
ªs
 = 
	`iß um
(
c
); ;

289 'x' : 
ªs
 = 
	`isxdigô
(
c
); ;

290 'z' : 
ªs
 = (
c
 == 0); ;

291 :  (
˛
 =
c
);

293  (
	`i¶owî
(
˛
Ë? 
ªs
 : !res);

294 
	}
}

297 
	$m©chbøckë˛ass
 (
c
, c⁄° *
p
, c⁄° *
ec
) {

298 
sig
 = 1;

299 i‡(*(
p
+1) == '^') {

300 
sig
 = 0;

301 
p
++;

303 ++
p
 < 
ec
) {

304 i‡(*
p
 =
L_ESC
) {

305 
p
++;

306 i‡(
	`m©ch_˛ass
(
c
, 
	`uch¨
(*
p
)))

307  
sig
;

309 i‡((*(
p
+1Ë='-'Ë&& (p+2 < 
ec
)) {

310 
p
+=2;

311 i‡(
	`uch¨
(*(
p
-2)Ë<
c
 && c <= uchar(*p))

312  
sig
;

314 i‡(
	`uch¨
(*
p
Ë=
c
Ë 
sig
;

316  !
sig
;

317 
	}
}

320 
	$sögÀm©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
,

321 c⁄° *
ï
) {

322 i‡(
s
 >
ms
->
§c_íd
)

325 
c
 = 
	`uch¨
(*
s
);

326 *
p
) {

328 
L_ESC
:  
	`m©ch_˛ass
(
c
, 
	`uch¨
(*(
p
+1)));

329 '[':  
	`m©chbøckë˛ass
(
c
, 
p
, 
ï
-1);

330 :  (
	`uch¨
(*
p
Ë=
c
);

333 
	}
}

336 c⁄° *
	$m©chbÆ™˚
 (
M©chSèã
 *
ms
, c⁄° *
s
,

337 c⁄° *
p
) {

338 i‡(
p
 >
ms
->
p_íd
 - 1)

339 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missingárgumentsÅo '%%b')");

340 i‡(*
s
 !*
p
Ë 
NULL
;

342 
b
 = *
p
;

343 
e
 = *(
p
+1);

344 
c⁄t
 = 1;

345 ++
s
 < 
ms
->
§c_íd
) {

346 i‡(*
s
 =
e
) {

347 i‡(--
c⁄t
 =0Ë 
s
+1;

349 i‡(*
s
 =
b
Ë
c⁄t
++;

352  
NULL
;

353 
	}
}

356 c⁄° *
	$max_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

357 c⁄° *
p
, c⁄° *
ï
) {

358 
±rdiff_t
 
i
 = 0;

359 
	`sögÀm©ch
(
ms
, 
s
 + 
i
, 
p
, 
ï
))

360 
i
++;

362 
i
>=0) {

363 c⁄° *
ªs
 = 
	`m©ch
(
ms
, (
s
+
i
), 
ï
+1);

364 i‡(
ªs
) Ñes;

365 
i
--;

367  
NULL
;

368 
	}
}

371 c⁄° *
	$mö_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

372 c⁄° *
p
, c⁄° *
ï
) {

374 c⁄° *
ªs
 = 
	`m©ch
(
ms
, 
s
, 
ï
+1);

375 i‡(
ªs
 !
NULL
)

376  
ªs
;

377 i‡(
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
))

378 
s
++;

379  
NULL
;

381 
	}
}

384 c⁄° *
	$°¨t_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

385 c⁄° *
p
, 
wh©
) {

386 c⁄° *
ªs
;

387 
Àvñ
 = 
ms
->level;

388 i‡(
Àvñ
 >
LUA_MAXCAPTURES
Ë
	`luaL_îr‹
(
ms
->
L
, "too many captures");

389 
ms
->
ˇ±uª
[
Àvñ
].
öô
 = 
s
;

390 
ms
->
ˇ±uª
[
Àvñ
].
Àn
 = 
wh©
;

391 
ms
->
Àvñ
 =Üevel+1;

392 i‡((
ªs
=
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

393 
ms
->
Àvñ
--;

394  
ªs
;

395 
	}
}

398 c⁄° *
	$íd_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

399 c⁄° *
p
) {

400 
l
 = 
	`ˇ±uª_to_˛o£
(
ms
);

401 c⁄° *
ªs
;

402 
ms
->
ˇ±uª
[
l
].
Àn
 = 
s
 - ms->ˇ±uª[l].
öô
;

403 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

404 
ms
->
ˇ±uª
[
l
].
Àn
 = 
CAP_UNFINISHED
;

405  
ªs
;

406 
	}
}

409 c⁄° *
	$m©ch_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
, 
l
) {

410 
size_t
 
Àn
;

411 
l
 = 
	`check_ˇ±uª
(
ms
,Ü);

412 
Àn
 = 
ms
->
ˇ±uª
[
l
].len;

413 i‡((
size_t
)(
ms
->
§c_íd
-
s
Ë>
Àn
 &&

414 
	`memcmp
(
ms
->
ˇ±uª
[
l
].
öô
, 
s
, 
Àn
) == 0)

415  
s
+
Àn
;

416  
NULL
;

417 
	}
}

420 c⁄° *
	$m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
) {

421 i‡(
ms
->
m©chdïth
-- == 0)

422 
	`luaL_îr‹
(
ms
->
L
, "patternÅoo complex");

423 
öô
:

424 i‡(
p
 !
ms
->
p_íd
) {

425 *
p
) {

427 i‡(*(
p
 + 1) == ')')

428 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 2, 
CAP_POSITION
);

430 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 1, 
CAP_UNFINISHED
);

434 
s
 = 
	`íd_ˇ±uª
(
ms
, s, 
p
 + 1);

438 i‡((
p
 + 1Ë!
ms
->
p_íd
)

439 
dÊt
;

440 
s
 = (†=
ms
->
§c_íd
Ë? s : 
NULL
;

443 
L_ESC
: {

444 *(
p
 + 1)) {

446 
s
 = 
	`m©chbÆ™˚
(
ms
, s, 
p
 + 2);

447 i‡(
s
 !
NULL
) {

448 
p
 +4; 
öô
;

453 c⁄° *
ï
; 
¥evious
;

454 
p
 += 2;

455 i‡(*
p
 != '[')

456 
	`luaL_îr‹
(
ms
->
L
, "missing '['áfter '%%f' inÖattern");

457 
ï
 = 
	`˛as£nd
(
ms
, 
p
);

458 
¥evious
 = (
s
 =
ms
->
§c_öô
) ? '\0' : *(s - 1);

459 i‡(!
	`m©chbøckë˛ass
(
	`uch¨
(
¥evious
), 
p
, 
ï
 - 1) &&

460 
	`m©chbøckë˛ass
(
	`uch¨
(*
s
), 
p
, 
ï
 - 1)) {

461 
p
 = 
ï
; 
öô
;

463 
s
 = 
NULL
;

469 
s
 = 
	`m©ch_ˇ±uª
(
ms
, s, 
	`uch¨
(*(
p
 + 1)));

470 i‡(
s
 !
NULL
) {

471 
p
 +2; 
öô
;

475 : 
dÊt
;

479 : 
dÊt
: {

480 c⁄° *
ï
 = 
	`˛as£nd
(
ms
, 
p
);

482 i‡(!
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
)) {

483 i‡(*
ï
 == '*' || *ep == '?' || *ep == '-') {

484 
p
 = 
ï
 + 1; 
öô
;

487 
s
 = 
NULL
;

490 *
ï
) {

492 c⁄° *
ªs
;

493 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
 + 1, 
ï
 + 1)Ë!
NULL
)

494 
s
 = 
ªs
;

496 
p
 = 
ï
 + 1; 
öô
;

501 
s
++;

504 
s
 = 
	`max_ex∑nd
(
ms
, s, 
p
, 
ï
);

507 
s
 = 
	`mö_ex∑nd
(
ms
, s, 
p
, 
ï
);

510 
s
++; 
p
 = 
ï
; 
öô
;

517 
ms
->
m©chdïth
++;

518  
s
;

519 
	}
}

523 c⁄° *
	$lmemföd
 (c⁄° *
s1
, 
size_t
 
l1
,

524 c⁄° *
s2
, 
size_t
 
l2
) {

525 i‡(
l2
 =0Ë 
s1
;

526 i‡(
l2
 > 
l1
Ë 
NULL
;

528 c⁄° *
öô
;

529 
l2
--;

530 
l1
 =Ü1-
l2
;

531 
l1
 > 0 && (
öô
 = (c⁄° *)
	`memchr
(
s1
, *
s2
,Ü1)Ë!
NULL
) {

532 
öô
++;

533 i‡(
	`memcmp
(
öô
, 
s2
+1, 
l2
) == 0)

534  
öô
-1;

536 
l1
 -
öô
-
s1
;

537 
s1
 = 
öô
;

540  
NULL
;

542 
	}
}

545 
	$push_⁄eˇ±uª
 (
M©chSèã
 *
ms
, 
i
, c⁄° *
s
,

546 c⁄° *
e
) {

547 i‡(
i
 >
ms
->
Àvñ
) {

548 i‡(
i
 == 0)

549 
	`lua_pushl°rög
(
ms
->
L
, 
s
, 
e
 - s);

551 
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
i
 + 1);

554 
±rdiff_t
 
l
 = 
ms
->
ˇ±uª
[
i
].
Àn
;

555 i‡(
l
 =
CAP_UNFINISHED
Ë
	`luaL_îr‹
(
ms
->
L
, "unfinished capture");

556 i‡(
l
 =
CAP_POSITION
)

557 
	`lua_pushöãgî
(
ms
->
L
, ms->
ˇ±uª
[
i
].
öô
 - ms->
§c_öô
 + 1);

559 
	`lua_pushl°rög
(
ms
->
L
, ms->
ˇ±uª
[
i
].
öô
, 
l
);

561 
	}
}

564 
	$push_ˇ±uªs
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
e
) {

565 
i
;

566 
∆evñs
 = (
ms
->
Àvñ
 =0 && 
s
) ? 1 : ms->level;

567 
	`luaL_check°ack
(
ms
->
L
, 
∆evñs
, "too many captures");

568 
i
 = 0; i < 
∆evñs
; i++)

569 
	`push_⁄eˇ±uª
(
ms
, 
i
, 
s
, 
e
);

570  
∆evñs
;

571 
	}
}

575 
	$no•ecüls
 (c⁄° *
p
, 
size_t
 
l
) {

576 
size_t
 
u±o
 = 0;

578 i‡(
	`°Ωbrk
(
p
 + 
u±o
, 
SPECIALS
))

580 
u±o
 +
	`°æí
(
p
 + upto) + 1;

581 } 
u±o
 <
l
);

583 
	}
}

586 
	$°r_föd_aux
 (
lua_Sèã
 *
L
, 
föd
) {

587 
size_t
 
ls
, 
Õ
;

588 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

589 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

590 
lua_I¡egî
 
öô
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ls
);

591 i‡(
öô
 < 1) init = 1;

592 i‡(
öô
 > (
lua_I¡egî
)
ls
 + 1) {

593 
	`lua_pushnû
(
L
);

597 i‡(
föd
 && (
	`lua_toboﬁón
(
L
, 4Ë|| 
	`no•ecüls
(
p
, 
Õ
))) {

599 c⁄° *
s2
 = 
	`lmemföd
(
s
 + 
öô
 - 1, 
ls
 - (
size_t
)öô + 1, 
p
, 
Õ
);

600 i‡(
s2
) {

601 
	`lua_pushöãgî
(
L
, 
s2
 - 
s
 + 1);

602 
	`lua_pushöãgî
(
L
, 
s2
 - 
s
 + 
Õ
);

607 
M©chSèã
 
ms
;

608 c⁄° *
s1
 = 
s
 + 
öô
 - 1;

609 
™ch‹
 = (*
p
 == '^');

610 i‡(
™ch‹
) {

611 
p
++; 
Õ
--;

613 
ms
.
L
 = L;

614 
ms
.
m©chdïth
 = 
MAXCCALLS
;

615 
ms
.
§c_öô
 = 
s
;

616 
ms
.
§c_íd
 = 
s
 + 
ls
;

617 
ms
.
p_íd
 = 
p
 + 
Õ
;

619 c⁄° *
ªs
;

620 
ms
.
Àvñ
 = 0;

621 
	`lua_as£π
(
ms
.
m©chdïth
 =
MAXCCALLS
);

622 i‡((
ªs
=
	`m©ch
(&
ms
, 
s1
, 
p
)Ë!
NULL
) {

623 i‡(
föd
) {

624 
	`lua_pushöãgî
(
L
, 
s1
 - 
s
 + 1);

625 
	`lua_pushöãgî
(
L
, 
ªs
 - 
s
);

626  
	`push_ˇ±uªs
(&
ms
, 
NULL
, 0) + 2;

629  
	`push_ˇ±uªs
(&
ms
, 
s1
, 
ªs
);

631 } 
s1
++ < 
ms
.
§c_íd
 && !
™ch‹
);

633 
	`lua_pushnû
(
L
);

635 
	}
}

638 
	$°r_föd
 (
lua_Sèã
 *
L
) {

639  
	`°r_föd_aux
(
L
, 1);

640 
	}
}

643 
	$°r_m©ch
 (
lua_Sèã
 *
L
) {

644  
	`°r_föd_aux
(
L
, 0);

645 
	}
}

648 
	$gm©ch_aux
 (
lua_Sèã
 *
L
) {

649 
M©chSèã
 
ms
;

650 
size_t
 
ls
, 
Õ
;

651 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
	`lua_upvÆueödex
(1), &
ls
);

652 c⁄° *
p
 = 
	`lua_tﬁ°rög
(
L
, 
	`lua_upvÆueödex
(2), &
Õ
);

653 c⁄° *
§c
;

654 
ms
.
L
 = L;

655 
ms
.
m©chdïth
 = 
MAXCCALLS
;

656 
ms
.
§c_öô
 = 
s
;

657 
ms
.
§c_íd
 = 
s
+
ls
;

658 
ms
.
p_íd
 = 
p
 + 
Õ
;

659 
§c
 = 
s
 + (
size_t
)
	`lua_toöãgî
(
L
, 
	`lua_upvÆueödex
(3));

660 
§c
 <
ms
.
§c_íd
;

661 
§c
++) {

662 c⁄° *
e
;

663 
ms
.
Àvñ
 = 0;

664 
	`lua_as£π
(
ms
.
m©chdïth
 =
MAXCCALLS
);

665 i‡((
e
 = 
	`m©ch
(&
ms
, 
§c
, 
p
)Ë!
NULL
) {

666 
lua_I¡egî
 
√w°¨t
 = 
e
-
s
;

667 i‡(
e
 =
§c
Ë
√w°¨t
++;

668 
	`lua_pushöãgî
(
L
, 
√w°¨t
);

669 
	`lua_ª∂a˚
(
L
, 
	`lua_upvÆueödex
(3));

670  
	`push_ˇ±uªs
(&
ms
, 
§c
, 
e
);

674 
	}
}

677 
	$gm©ch
 (
lua_Sèã
 *
L
) {

678 
	`luaL_check°rög
(
L
, 1);

679 
	`luaL_check°rög
(
L
, 2);

680 
	`lua_£â›
(
L
, 2);

681 
	`lua_pushöãgî
(
L
, 0);

682 
	`lua_pushc˛osuª
(
L
, 
gm©ch_aux
, 3);

684 
	}
}

687 
	$add_s
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

688 c⁄° *
e
) {

689 
size_t
 
l
, 
i
;

690 
lua_Sèã
 *
L
 = 
ms
->L;

691 c⁄° *
√ws
 = 
	`lua_tﬁ°rög
(
L
, 3, &
l
);

692 
i
 = 0; i < 
l
; i++) {

693 i‡(
√ws
[
i
] !
L_ESC
)

694 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

696 
i
++;

697 i‡(!
	`isdigô
(
	`uch¨
(
√ws
[
i
]))) {

698 i‡(
√ws
[
i
] !
L_ESC
)

699 
	`luaL_îr‹
(
L
, "övÆid u£ o‡'%c' i¿ª∂a˚míà°rög", 
L_ESC
);

700 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

702 i‡(
√ws
[
i
] == '0')

703 
	`luaL_addl°rög
(
b
, 
s
, 
e
 - s);

705 
	`push_⁄eˇ±uª
(
ms
, 
√ws
[
i
] - '1', 
s
, 
e
);

706 
	`luaL_tﬁ°rög
(
L
, -1, 
NULL
);

707 
	`lua_ªmove
(
L
, -2);

708 
	`luaL_addvÆue
(
b
);

712 
	}
}

715 
	$add_vÆue
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

716 c⁄° *
e
, 
å
) {

717 
lua_Sèã
 *
L
 = 
ms
->L;

718 
å
) {

719 
LUA_TFUNCTION
: {

720 
n
;

721 
	`lua_pushvÆue
(
L
, 3);

722 
n
 = 
	`push_ˇ±uªs
(
ms
, 
s
, 
e
);

723 
	`lua_ˇŒ
(
L
, 
n
, 1);

726 
LUA_TTABLE
: {

727 
	`push_⁄eˇ±uª
(
ms
, 0, 
s
, 
e
);

728 
	`lua_gëèbÀ
(
L
, 3);

732 
	`add_s
(
ms
, 
b
, 
s
, 
e
);

736 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

737 
	`lua_p›
(
L
, 1);

738 
	`lua_pushl°rög
(
L
, 
s
, 
e
 - s);

740 i‡(!
	`lua_is°rög
(
L
, -1))

741 
	`luaL_îr‹
(
L
, "övÆidÑïœ˚míàvÆuê◊ %s)", 
	`luaL_ty≥«me
(L, -1));

742 
	`luaL_addvÆue
(
b
);

743 
	}
}

746 
	$°r_gsub
 (
lua_Sèã
 *
L
) {

747 
size_t
 
§˛
, 
Õ
;

748 c⁄° *
§c
 = 
	`luaL_checkl°rög
(
L
, 1, &
§˛
);

749 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

750 
å
 = 
	`lua_ty≥
(
L
, 3);

751 
lua_I¡egî
 
max_s
 = 
	`luaL_›töãgî
(
L
, 4, 
§˛
 + 1);

752 
™ch‹
 = (*
p
 == '^');

753 
lua_I¡egî
 
n
 = 0;

754 
M©chSèã
 
ms
;

755 
luaL_Buf„r
 
b
;

756 
	`luaL_¨gcheck
(
L
, 
å
 =
LUA_TNUMBER
 ||Å∏=
LUA_TSTRING
 ||

757 
å
 =
LUA_TFUNCTION
 ||Å∏=
LUA_TTABLE
, 3,

759 
	`luaL_bufföô
(
L
, &
b
);

760 i‡(
™ch‹
) {

761 
p
++; 
Õ
--;

763 
ms
.
L
 = L;

764 
ms
.
m©chdïth
 = 
MAXCCALLS
;

765 
ms
.
§c_öô
 = 
§c
;

766 
ms
.
§c_íd
 = 
§c
+
§˛
;

767 
ms
.
p_íd
 = 
p
 + 
Õ
;

768 
n
 < 
max_s
) {

769 c⁄° *
e
;

770 
ms
.
Àvñ
 = 0;

771 
	`lua_as£π
(
ms
.
m©chdïth
 =
MAXCCALLS
);

772 
e
 = 
	`m©ch
(&
ms
, 
§c
, 
p
);

773 i‡(
e
) {

774 
n
++;

775 
	`add_vÆue
(&
ms
, &
b
, 
§c
, 
e
, 
å
);

777 i‡(
e
 &&É>
§c
)

778 
§c
 = 
e
;

779 i‡(
§c
 < 
ms
.
§c_íd
)

780 
	`luaL_addch¨
(&
b
, *
§c
++);

782 i‡(
™ch‹
) ;

784 
	`luaL_addl°rög
(&
b
, 
§c
, 
ms
.
§c_íd
-src);

785 
	`luaL_pushªsu…
(&
b
);

786 
	`lua_pushöãgî
(
L
, 
n
);

788 
	}
}

801 
	#MAX_ITEM
 512

	)

804 
	#FLAGS
 "-+ #0"

	)

810 
	#MAX_FORMAT
 ((
FLAGS
Ë+ 2 + 10)

	)

813 
	$addquŸed
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
¨g
) {

814 
size_t
 
l
;

815 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

816 
	`luaL_addch¨
(
b
, '"');

817 
l
--) {

818 i‡(*
s
 == '"' || *s == '\\' || *s == '\n') {

819 
	`luaL_addch¨
(
b
, '\\');

820 
	`luaL_addch¨
(
b
, *
s
);

822 i‡(*
s
 ='\0' || 
	`is˙ål
(
	`uch¨
(*s))) {

823 
buff
[10];

824 i‡(!
	`isdigô
(
	`uch¨
(*(
s
+1))))

825 
	`•rötf
(
buff
, "\\%d", ()
	`uch¨
(*
s
));

827 
	`•rötf
(
buff
, "\\%03d", ()
	`uch¨
(*
s
));

828 
	`luaL_add°rög
(
b
, 
buff
);

831 
	`luaL_addch¨
(
b
, *
s
);

832 
s
++;

834 
	`luaL_addch¨
(
b
, '"');

835 
	}
}

837 c⁄° *
	$sˇnf‹m©
 (
lua_Sèã
 *
L
, c⁄° *
°r‰mt
, *
f‹m
) {

838 c⁄° *
p
 = 
°r‰mt
;

839 *
p
 !'\0' && 
	`°rchr
(
FLAGS
, *pË!
NULL
)Ö++;

840 i‡((
size_t
)(
p
 - 
°r‰mt
Ë>(
FLAGS
)/())

841 
	`luaL_îr‹
(
L
, "invalid format (repeated flags)");

842 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

843 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

844 i‡(*
p
 == '.') {

845 
p
++;

846 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

847 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

849 i‡(
	`isdigô
(
	`uch¨
(*
p
)))

850 
	`luaL_îr‹
(
L
, "invalid format (width orÖrecisionÅooÜong)");

851 *(
f‹m
++) = '%';

852 
	`mem˝y
(
f‹m
, 
°r‰mt
, (
p
 - strfrmt + 1) * ());

853 
f‹m
 +
p
 - 
°r‰mt
 + 1;

854 *
f‹m
 = '\0';

855  
p
;

856 
	}
}

862 
	$addÀnmod
 (*
f‹m
, c⁄° *
Ànmod
) {

863 
size_t
 
l
 = 
	`°æí
(
f‹m
);

864 
size_t
 
lm
 = 
	`°æí
(
Ànmod
);

865 
•ec
 = 
f‹m
[
l
 - 1];

866 
	`°r˝y
(
f‹m
 + 
l
 - 1, 
Ànmod
);

867 
f‹m
[
l
 + 
lm
 - 1] = 
•ec
;

868 
f‹m
[
l
 + 
lm
] = '\0';

869 
	}
}

872 
	$°r_f‹m©
 (
lua_Sèã
 *
L
) {

873 
t›
 = 
	`lua_gët›
(
L
);

874 
¨g
 = 1;

875 
size_t
 
sÊ
;

876 c⁄° *
°r‰mt
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
sÊ
);

877 c⁄° *
°r‰mt_íd
 = 
°r‰mt
+
sÊ
;

878 
luaL_Buf„r
 
b
;

879 
	`luaL_bufföô
(
L
, &
b
);

880 
°r‰mt
 < 
°r‰mt_íd
) {

881 i‡(*
°r‰mt
 !
L_ESC
)

882 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

883 i‡(*++
°r‰mt
 =
L_ESC
)

884 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

886 
f‹m
[
MAX_FORMAT
];

887 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
MAX_ITEM
);

888 
nb
 = 0;

889 i‡(++
¨g
 > 
t›
)

890 
	`luaL_¨gîr‹
(
L
, 
¨g
, "no value");

891 
°r‰mt
 = 
	`sˇnf‹m©
(
L
, så‰mt, 
f‹m
);

892 *
°r‰mt
++) {

894 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, ()
	`luaL_checköãgî
(
L
, 
¨g
));

899 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

900 
	`addÀnmod
(
f‹m
, 
LUA_INTEGER_FRMLEN
);

901 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, 
n
);

904 #i‡
	`deföed
(
LUA_USE_AFORMAT
)

909 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

910 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, 
	`luaL_checknumbî
(
L
, 
¨g
));

914 
	`addquŸed
(
L
, &
b
, 
¨g
);

918 
size_t
 
l
;

919 c⁄° *
s
 = 
	`luaL_tﬁ°rög
(
L
, 
¨g
, &
l
);

920 i‡(!
	`°rchr
(
f‹m
, '.'Ë&& 
l
 >= 100) {

923 
	`luaL_addvÆue
(&
b
);

927 
nb
 = 
	`•rötf
(
buff
, 
f‹m
, 
s
);

928 
	`lua_p›
(
L
, 1);

933  
	`luaL_îr‹
(
L
, "invalid option '%%%c'Åo 'format'",

934 *(
°r‰mt
 - 1));

937 
	`luaL_addsize
(&
b
, 
nb
);

940 
	`luaL_pushªsu…
(&
b
);

942 
	}
}

955 #i‡!
deföed
(
LUA_PACKPADBYTE
)

956 
	#LUA_PACKPADBYTE
 0x00

	)

960 
	#MAXINTSIZE
 16

	)

963 
	#NB
 
CHAR_BIT


	)

966 
	#MC
 ((1 << 
NB
Ë- 1)

	)

969 
	#SZINT
 (()(
lua_I¡egî
))

	)

974 
	mdummy
;

975 
	mlôée
;

976 } 
	g«tivìndün
 = {1};

980 
	scD
 {

981 
	mc
;

982 uni⁄ { 
	md
; *
	mp
; 
lua_I¡egî
 
	mi
; 
lua_Numbî
 
	mn
; } 
	mu
;

985 
	#MAXALIGN
 (
	`off£tof
(
cD
, 
u
))

	)

991 
	uFty≥s
 {

992 
	mf
;

993 
	md
;

994 
lua_Numbî
 
	mn
;

995 
	mbuff
[5 * (
lua_Numbî
)];

996 } 
	tFty≥s
;

1002 
	sHódî
 {

1003 
lua_Sèã
 *
	mL
;

1004 
	mi¶ôée
;

1005 
	mmaxÆign
;

1006 } 
	tHódî
;

1012 
	eKO±i⁄
 {

1013 
	mKöt
,

1014 
	mKuöt
,

1015 
	mKÊﬂt
,

1016 
	mKch¨
,

1017 
	mK°rög
,

1018 
	mKz°r
,

1019 
	mK∑ddög
,

1020 
	mK∑ddÆign
,

1021 
	mKn›


1022 } 
	tKO±i⁄
;

1029 
	$digô
 (
c
Ë{  '0' <¯&& c <'9'; 
	}
}

1031 
	$gënum
 (c⁄° **
fmt
, 
df
) {

1032 i‡(!
	`digô
(**
fmt
))

1033  
df
;

1035 
a
 = 0;

1037 
a
 =á*10 + (*((*
fmt
)++) - '0');

1038 } 
	`digô
(**
fmt
Ë&& 
a
 <(()
MAXSIZE
 - 9)/10);

1039  
a
;

1041 
	}
}

1048 
	$gënumlimô
 (
Hódî
 *
h
, c⁄° **
fmt
, 
df
) {

1049 
sz
 = 
	`gënum
(
fmt
, 
df
);

1050 i‡(
sz
 > 
MAXINTSIZE
 || sz <= 0)

1051 
	`luaL_îr‹
(
h
->
L
, "integral size (%d) out ofÜimits [1,%d]",

1052 
sz
, 
MAXINTSIZE
);

1053  
sz
;

1054 
	}
}

1060 
	$öôhódî
 (
lua_Sèã
 *
L
, 
Hódî
 *
h
) {

1061 
h
->
L
 = L;

1062 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
;

1063 
h
->
maxÆign
 = 1;

1064 
	}
}

1070 
KO±i⁄
 
	$gë›ti⁄
 (
Hódî
 *
h
, c⁄° **
fmt
, *
size
) {

1071 
›t
 = *((*
fmt
)++);

1072 *
size
 = 0;

1073 
›t
) {

1074 'b': *
size
 = ();  
Köt
;

1075 'B': *
size
 = ();  
Kuöt
;

1076 'h': *
size
 = ();  
Köt
;

1077 'H': *
size
 = ();  
Kuöt
;

1078 'l': *
size
 = ();  
Köt
;

1079 'L': *
size
 = ();  
Kuöt
;

1080 'j': *
size
 = (
lua_I¡egî
);  
Köt
;

1081 'J': *
size
 = (
lua_I¡egî
);  
Kuöt
;

1082 'T': *
size
 = (
size_t
);  
Kuöt
;

1083 'f': *
size
 = ();  
KÊﬂt
;

1084 'd': *
size
 = ();  
KÊﬂt
;

1085 'n': *
size
 = (
lua_Numbî
);  
KÊﬂt
;

1086 'i': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Köt
;

1087 'I': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Kuöt
;

1088 's': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, (
size_t
));  
K°rög
;

1090 *
size
 = 
	`gënum
(
fmt
, -1);

1091 i‡(*
size
 == -1)

1092 
	`luaL_îr‹
(
h
->
L
, "missing size for format option 'c'");

1093  
Kch¨
;

1094 'z':  
Kz°r
;

1095 'x': *
size
 = 1;  
K∑ddög
;

1096 'X':  
K∑ddÆign
;

1098 '<': 
h
->
i¶ôée
 = 1; ;

1099 '>': 
h
->
i¶ôée
 = 0; ;

1100 '=': 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
; ;

1101 '!': 
h
->
maxÆign
 = 
	`gënumlimô
(h, 
fmt
, 
MAXALIGN
); ;

1102 : 
	`luaL_îr‹
(
h
->
L
, "övÆid f‹m© o±i⁄ '%c'", 
›t
);

1104  
Kn›
;

1105 
	}
}

1117 
KO±i⁄
 
	$gëdëaûs
 (
Hódî
 *
h
, 
size_t
 
tŸÆsize
,

1118 c⁄° **
fmt
, *
psize
, *
¡ﬂlign
) {

1119 
KO±i⁄
 
›t
 = 
	`gë›ti⁄
(
h
, 
fmt
, 
psize
);

1120 
Æign
 = *
psize
;

1121 i‡(
›t
 =
K∑ddÆign
) {

1122 i‡(**
fmt
 ='\0' || 
	`gë›ti⁄
(
h
, fmt, &
Æign
Ë=
Kch¨
 ||álign == 0)

1123 
	`luaL_¨gîr‹
(
h
->
L
, 1, "invalidÇext option for option 'X'");

1125 i‡(
Æign
 <1 || 
›t
 =
Kch¨
)

1126 *
¡ﬂlign
 = 0;

1128 i‡(
Æign
 > 
h
->
maxÆign
)

1129 
Æign
 = 
h
->
maxÆign
;

1130 i‡((
Æign
 & (align - 1)) != 0)

1131 
	`luaL_¨gîr‹
(
h
->
L
, 1, "formatásks forálignmentÇotÖower of 2");

1132 *
¡ﬂlign
 = (
Æign
 - ()(
tŸÆsize
 & (align - 1))) & (align - 1);

1134  
›t
;

1135 
	}
}

1144 
	$∑cköt
 (
luaL_Buf„r
 *
b
, 
lua_Unsig√d
 
n
,

1145 
i¶ôée
, 
size
, 
√g
) {

1146 *
buff
 = 
	`luaL_¥ïbuffsize
(
b
, 
size
);

1147 
i
;

1148 
buff
[
i¶ôée
 ? 0 : 
size
 - 1] = ()(
n
 & 
MC
);

1149 
i
 = 1; i < 
size
; i++) {

1150 
n
 >>
NB
;

1151 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()(
n
 & 
MC
);

1153 i‡(
√g
 && 
size
 > 
SZINT
) {

1154 
i
 = 
SZINT
; i < 
size
; i++)

1155 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()
MC
;

1157 
	`luaL_addsize
(
b
, 
size
);

1158 
	}
}

1165 
	$c›ywôhídün
 (vﬁ©ûê*
de°
, vﬁ©ûêc⁄° *
§c
,

1166 
size
, 
i¶ôée
) {

1167 i‡(
i¶ôée
 =
«tivìndün
.
lôée
) {

1168 
size
-- != 0)

1169 *(
de°
++Ë*(
§c
++);

1172 
de°
 +
size
 - 1;

1173 
size
-- != 0)

1174 *(
de°
--Ë*(
§c
++);

1176 
	}
}

1179 
	$°r_∑ck
 (
lua_Sèã
 *
L
) {

1180 
luaL_Buf„r
 
b
;

1181 
Hódî
 
h
;

1182 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1183 
¨g
 = 1;

1184 
size_t
 
tŸÆsize
 = 0;

1185 
	`öôhódî
(
L
, &
h
);

1186 
	`lua_pushnû
(
L
);

1187 
	`luaL_bufföô
(
L
, &
b
);

1188 *
fmt
 != '\0') {

1189 
size
, 
¡ﬂlign
;

1190 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1191 
tŸÆsize
 +
¡ﬂlign
 + 
size
;

1192 
¡ﬂlign
-- > 0)

1193 
	`luaL_addch¨
(&
b
, 
LUA_PACKPADBYTE
);

1194 
¨g
++;

1195 
›t
) {

1196 
Köt
: {

1197 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1198 i‡(
size
 < 
SZINT
) {

1199 
lua_I¡egî
 
lim
 = (lua_I¡egî)1 << ((
size
 * 
NB
) - 1);

1200 
	`luaL_¨gcheck
(
L
, -
lim
 <
n
 &&Ç <Üim, 
¨g
, "integer overflow");

1202 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, (n < 0));

1205 
Kuöt
: {

1206 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1207 i‡(
size
 < 
SZINT
)

1208 
	`luaL_¨gcheck
(
L
, (
lua_Unsig√d
)
n
 < (÷ua_Unsig√d)1 << (
size
 * 
NB
)),

1209 
¨g
, "unsigned overflow");

1210 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, 0);

1213 
KÊﬂt
: {

1214 vﬁ©ûê
Fty≥s
 
u
;

1215 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
size
);

1216 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

1217 i‡(
size
 =(
u
.
f
)Ëu.‡()
n
;

1218 i‡(
size
 =(
u
.
d
)Ëu.d = ()
n
;

1219 
u
.
n
 =Ç;

1221 
	`c›ywôhídün
(
buff
, 
u
.buff, 
size
, 
h
.
i¶ôée
);

1222 
	`luaL_addsize
(&
b
, 
size
);

1225 
Kch¨
: {

1226 
size_t
 
Àn
;

1227 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1228 
	`luaL_¨gcheck
(
L
, 
Àn
 =(
size_t
)
size
, 
¨g
, "wrongÜength");

1229 
	`luaL_addl°rög
(&
b
, 
s
, 
size
);

1232 
K°rög
: {

1233 
size_t
 
Àn
;

1234 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1235 
	`luaL_¨gcheck
(
L
, 
size
 >()(
size_t
) ||

1236 
Àn
 < ((
size_t
)1 << (
size
 * 
NB
)),

1237 
¨g
, "stringÜength doesÇot fit in given size");

1238 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
Àn
, 
h
.
i¶ôée
, 
size
, 0);

1239 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1240 
tŸÆsize
 +
Àn
;

1243 
Kz°r
: {

1244 
size_t
 
Àn
;

1245 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1246 
	`luaL_¨gcheck
(
L
, 
	`°æí
(
s
Ë=
Àn
, 
¨g
, "string contains zeros");

1247 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1248 
	`luaL_addch¨
(&
b
, '\0');

1249 
tŸÆsize
 +
Àn
 + 1;

1252 
K∑ddög
: 
	`luaL_addch¨
(&
b
, 
LUA_PACKPADBYTE
);

1253 
K∑ddÆign
: 
Kn›
:

1254 
¨g
--;

1258 
	`luaL_pushªsu…
(&
b
);

1260 
	}
}

1263 
	$°r_∑cksize
 (
lua_Sèã
 *
L
) {

1264 
Hódî
 
h
;

1265 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1266 
size_t
 
tŸÆsize
 = 0;

1267 
	`öôhódî
(
L
, &
h
);

1268 *
fmt
 != '\0') {

1269 
size
, 
¡ﬂlign
;

1270 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1271 
size
 +
¡ﬂlign
;

1272 
	`luaL_¨gcheck
(
L
, 
tŸÆsize
 <
MAXSIZE
 - 
size
, 1,

1274 
tŸÆsize
 +
size
;

1275 
›t
) {

1276 
K°rög
:

1277 
Kz°r
:

1278 
	`luaL_¨gîr‹
(
L
, 1, "variable-length format");

1283 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
tŸÆsize
);

1285 
	}
}

1296 
lua_I¡egî
 
	$u≈acköt
 (
lua_Sèã
 *
L
, c⁄° *
°r
,

1297 
i¶ôée
, 
size
, 
issig√d
) {

1298 
lua_Unsig√d
 
ªs
 = 0;

1299 
i
;

1300 
limô
 = (
size
 <
SZINT
) ? size : SZINT;

1301 
i
 = 
limô
 - 1; i >= 0; i--) {

1302 
ªs
 <<
NB
;

1303 
ªs
 |(
lua_Unsig√d
)()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i];

1305 i‡(
size
 < 
SZINT
) {

1306 i‡(
issig√d
) {

1307 
lua_Unsig√d
 
mask
 = (lua_Unsig√d)1 << (
size
*
NB
 - 1);

1308 
ªs
 = (‘e†^ 
mask
) - mask);

1311 i‡(
size
 > 
SZINT
) {

1312 
mask
 = (!
issig√d
 || (
lua_I¡egî
)
ªs
 >0Ë? 0 : 
MC
;

1313 
i
 = 
limô
; i < 
size
; i++) {

1314 i‡(()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] !
mask
)

1315 
	`luaL_îr‹
(
L
, "%d-byã i¡egî d€†nŸ fô i¡ÿLu®I¡egî", 
size
);

1318  (
lua_I¡egî
)
ªs
;

1319 
	}
}

1322 
	$°r_u≈ack
 (
lua_Sèã
 *
L
) {

1323 
Hódî
 
h
;

1324 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1325 
size_t
 
ld
;

1326 c⁄° *
d©a
 = 
	`luaL_checkl°rög
(
L
, 2, &
ld
);

1327 
size_t
 
pos
 = (size_t)
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ld
) - 1;

1328 
n
 = 0;

1329 
	`luaL_¨gcheck
(
L
, 
pos
 <
ld
, 3, "initialÖosition out of string");

1330 
	`öôhódî
(
L
, &
h
);

1331 *
fmt
 != '\0') {

1332 
size
, 
¡ﬂlign
;

1333 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
pos
, &
fmt
, &
size
, &
¡ﬂlign
);

1334 i‡((
size_t
)
¡ﬂlign
 + 
size
 > ~
pos
 ||Öo†+Çtﬂlig¿+ sizê> 
ld
)

1335 
	`luaL_¨gîr‹
(
L
, 2, "data stringÅoo short");

1336 
pos
 +
¡ﬂlign
;

1338 
	`luaL_check°ack
(
L
, 2, "too manyÑesults");

1339 
n
++;

1340 
›t
) {

1341 
Köt
:

1342 
Kuöt
: {

1343 
lua_I¡egî
 
ªs
 = 
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
,

1344 (
›t
 =
Köt
));

1345 
	`lua_pushöãgî
(
L
, 
ªs
);

1348 
KÊﬂt
: {

1349 vﬁ©ûê
Fty≥s
 
u
;

1350 
lua_Numbî
 
num
;

1351 
	`c›ywôhídün
(
u
.
buff
, 
d©a
 + 
pos
, 
size
, 
h
.
i¶ôée
);

1352 i‡(
size
 =(
u
.
f
)Ë
num
 = (
lua_Numbî
)u.f;

1353 i‡(
size
 =(
u
.
d
)Ë
num
 = (
lua_Numbî
)u.d;

1354 
num
 = 
u
.
n
;

1355 
	`lua_pushnumbî
(
L
, 
num
);

1358 
Kch¨
: {

1359 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
size
);

1362 
K°rög
: {

1363 
size_t
 
Àn
 = (size_t)
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
, 0);

1364 
	`luaL_¨gcheck
(
L
, 
pos
 + 
Àn
 + 
size
 <
ld
, 2, "data stringÅoo short");

1365 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
 + 
size
, 
Àn
);

1366 
pos
 +
Àn
;

1369 
Kz°r
: {

1370 
size_t
 
Àn
 = ()
	`°æí
(
d©a
 + 
pos
);

1371 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
Àn
);

1372 
pos
 +
Àn
 + 1;

1375 
K∑ddÆign
: 
K∑ddög
: 
Kn›
:

1376 
n
--;

1379 
pos
 +
size
;

1381 
	`lua_pushöãgî
(
L
, 
pos
 + 1);

1382  
n
 + 1;

1383 
	}
}

1388 c⁄° 
luaL_Reg
 
	g°æib
[] = {

1389 {"byã", 
°r_byã
},

1390 {"ch¨", 
°r_ch¨
},

1391 {"dump", 
°r_dump
},

1392 {"föd", 
°r_föd
},

1393 {"f‹m©", 
°r_f‹m©
},

1394 {"gm©ch", 
gm©ch
},

1395 {"gsub", 
°r_gsub
},

1396 {"Àn", 
°r_Àn
},

1397 {"lowî", 
°r_lowî
},

1398 {"m©ch", 
°r_m©ch
},

1399 {"ªp", 
°r_ªp
},

1400 {"ªvî£", 
°r_ªvî£
},

1401 {"sub", 
°r_sub
},

1402 {"uµî", 
°r_uµî
},

1403 {"∑ck", 
°r_∑ck
},

1404 {"∑cksize", 
°r_∑cksize
},

1405 {"u≈ack", 
°r_u≈ack
},

1406 {
NULL
, NULL}

1410 
	$¸óãmë©abÀ
 (
lua_Sèã
 *
L
) {

1411 
	`lua_¸óãèbÀ
(
L
, 0, 1);

1412 
	`lua_pushlôîÆ
(
L
, "");

1413 
	`lua_pushvÆue
(
L
, -2);

1414 
	`lua_£tmë©abÀ
(
L
, -2);

1415 
	`lua_p›
(
L
, 1);

1416 
	`lua_pushvÆue
(
L
, -2);

1417 
	`lua_£tfõld
(
L
, -2, "__index");

1418 
	`lua_p›
(
L
, 1);

1419 
	}
}

1425 
LUAMOD_API
 
	$lua›í_°rög
 (
lua_Sèã
 *
L
) {

1426 
	`luaL_√wlib
(
L
, 
°æib
);

1427 
	`¸óãmë©abÀ
(
L
);

1429 
	}
}

	@lib/archive/lua-5.3.0/src/ltable.c

7 
	#…abÀ_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

26 
	~<Êﬂt.h
>

27 
	~<m©h.h
>

28 
	~<°rög.h
>

29 
	~<limôs.h
>

31 
	~"lua.h
"

33 
	~"ldebug.h
"

34 
	~"ldo.h
"

35 
	~"lgc.h
"

36 
	~"lmem.h
"

37 
	~"lobje˘.h
"

38 
	~"l°©e.h
"

39 
	~"l°rög.h
"

40 
	~"…abÀ.h
"

41 
	~"lvm.h
"

48 
	#MAXABITS
 
	`ˇ°_öt
((Ë* 
CHAR_BIT
 - 1)

	)

49 
	#MAXASIZE
 (1u << 
MAXABITS
)

	)

57 
	#MAXHBITS
 (
MAXABITS
 - 1)

	)

60 
	#hashpow2
(
t
,
n
Ë(
	`gnode
—, 
	`lmod
(“), 
	`sizíode
—))))

	)

62 
	#hash°r
(
t
,
°r
Ë
	`hashpow2
—, (°r)->
hash
)

	)

63 
	#hashboﬁón
(
t
,
p
Ë
	`hashpow2
—,Ö)

	)

64 
	#hashöt
(
t
,
i
Ë
	`hashpow2
—, i)

	)

71 
	#hashmod
(
t
,
n
Ë(
	`gnode
—, (“Ë% ((
	`sizíode
—)-1)|1))))

	)

74 
	#hashpoöãr
(
t
,
p
Ë
	`hashmod
—, 
	`poöt2öt
’))

	)

77 
	#dummynode
 (&
dummynode_
)

	)

79 
	#isdummy
(
n
Ë(“Ë=
dummynode
)

	)

81 c⁄° 
Node
 
	gdummynode_
 = {

82 {
NILCONSTANT
},

83 {{
NILCONSTANT
, 0}}

91 
	$numisöãgî
 (
lua_Numbî
 
x
, 
lua_I¡egî
 *
p
) {

92 i‡((
x
Ë=
	`l_Êo‹
(x))

93  
	`lua_numbîtoöãgî
(
x
, 
p
);

95 
	}
}

101 
Node
 *
	$hashÊﬂt
 (c⁄° 
TabÀ
 *
t
, 
lua_Numbî
 
n
) {

102 
i
;

103 
n
 = 
	`l_m©h›
(
‰exp
)“, &
i
Ë* 
	`ˇ°_num
(
INT_MAX
 - 
DBL_MAX_EXP
);

104 
i
 +
	`ˇ°_öt
(
n
);

105 i‡(
i
 < 0) {

106 i‡(
	`ˇ°
(, 
i
) == 0u - i)

107 
i
 = 0;

108 
i
 = -i;

110  
	`hashmod
(
t
, 
i
);

111 
	}
}

119 
Node
 *
	$maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

120 
	`ây≥
(
key
)) {

121 
LUA_TNUMINT
:

122  
	`hashöt
(
t
, 
	`ivÆue
(
key
));

123 
LUA_TNUMFLT
:

124  
	`hashÊﬂt
(
t
, 
	`ÊtvÆue
(
key
));

125 
LUA_TSHRSTR
:

126  
	`hash°r
(
t
, 
	`tsvÆue
(
key
));

127 
LUA_TLNGSTR
: {

128 
TSåög
 *
s
 = 
	`tsvÆue
(
key
);

129 i‡(
s
->
exåa
 == 0) {

130 
s
->
hash
 = 
	`luaS_hash
(
	`gë°r
(s), s->
Àn
, s->hash);

131 
s
->
exåa
 = 1;

133  
	`hash°r
(
t
, 
	`tsvÆue
(
key
));

135 
LUA_TBOOLEAN
:

136  
	`hashboﬁón
(
t
, 
	`bvÆue
(
key
));

137 
LUA_TLIGHTUSERDATA
:

138  
	`hashpoöãr
(
t
, 
	`pvÆue
(
key
));

139 
LUA_TLCF
:

140  
	`hashpoöãr
(
t
, 
	`fvÆue
(
key
));

142  
	`hashpoöãr
(
t
, 
	`gcvÆue
(
key
));

144 
	}
}

151 
	$¨øyödex
 (c⁄° 
TVÆue
 *
key
) {

152 i‡(
	`âisöãgî
(
key
)) {

153 
lua_I¡egî
 
k
 = 
	`ivÆue
(
key
);

154 i‡(0 < 
k
 && (
lua_Unsig√d
)k <
MAXASIZE
)

155  
	`ˇ°
(, 
k
);

158 
	}
}

166 
	$födödex
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

167 
i
;

168 i‡(
	`âi¢û
(
key
))  0;

169 
i
 = 
	`¨øyödex
(
key
);

170 i‡(
i
 !0 && i <
t
->
sizóºay
)

171  
i
;

173 
nx
;

174 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

177 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
) ||

178 (
	`âisdódkey
(
	`gkey
(
n
)Ë&& 
	`iscﬁÀ˘abÀ
(
key
) &&

179 
	`dódvÆue
(
	`gkey
(
n
)Ë=
	`gcvÆue
(
key
))) {

180 
i
 = 
	`ˇ°_öt
(
n
 - 
	`gnode
(
t
, 0));

182  (
i
 + 1Ë+ 
t
->
sizóºay
;

184 
nx
 = 
	`g√xt
(
n
);

185 i‡(
nx
 == 0)

186 
	`luaG_ru√º‹
(
L
, "invalid keyÅo 'next'");

187 
n
 +
nx
;

190 
	}
}

193 
	$luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

194 
i
 = 
	`födödex
(
L
, 
t
, 
key
);

195 ; 
i
 < 
t
->
sizóºay
; i++) {

196 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
])) {

197 
	`£tivÆue
(
key
, 
i
 + 1);

198 
	`£tobj2s
(
L
, 
key
+1, &
t
->
¨øy
[
i
]);

202 
i
 -
t
->
sizóºay
; 
	`ˇ°_öt
(iË< 
	`sizíode
(t); i++) {

203 i‡(!
	`âi¢û
(
	`gvÆ
(
	`gnode
(
t
, 
i
)))) {

204 
	`£tobj2s
(
L
, 
key
, 
	`gkey
(
	`gnode
(
t
, 
i
)));

205 
	`£tobj2s
(
L
, 
key
+1, 
	`gvÆ
(
	`gnode
(
t
, 
i
)));

210 
	}
}

225 
	$compuãsizes
 (
nums
[], *
«ºay
) {

226 
i
;

227 
twŸoi
;

228 
a
 = 0;

229 
«
 = 0;

230 
n
 = 0;

231 
i
 = 0, 
twŸoi
 = 1;ÅwŸoi/2 < *
«ºay
; i++,Åwotoi *= 2) {

232 i‡(
nums
[
i
] > 0) {

233 
a
 +
nums
[
i
];

234 i‡(
a
 > 
twŸoi
/2) {

235 
n
 = 
twŸoi
;

236 
«
 = 
a
;

239 i‡(
a
 =*
«ºay
) ;

241 *
«ºay
 = 
n
;

242 
	`lua_as£π
(*
«ºay
/2 <
«
 &&Ça <= *narray);

243  
«
;

244 
	}
}

247 
	$cou¡öt
 (c⁄° 
TVÆue
 *
key
, *
nums
) {

248 
k
 = 
	`¨øyödex
(
key
);

249 i‡(
k
 != 0) {

250 
nums
[
	`luaO_˚ûlog2
(
k
)]++;

255 
	}
}

258 
	$numu£¨øy
 (c⁄° 
TabÀ
 *
t
, *
nums
) {

259 
lg
;

260 
âlg
;

261 
au£
 = 0;

262 
i
 = 1;

264 
lg
 = 0, 
âlg
 = 1;Üg <
MAXABITS
;Üg++,Åtlg *= 2) {

265 
lc
 = 0;

266 
lim
 = 
âlg
;

267 i‡(
lim
 > 
t
->
sizóºay
) {

268 
lim
 = 
t
->
sizóºay
;

269 i‡(
i
 > 
lim
)

273 ; 
i
 <
lim
; i++) {

274 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
-1]))

275 
lc
++;

277 
nums
[
lg
] +
lc
;

278 
au£
 +
lc
;

280  
au£
;

281 
	}
}

284 
	$numu£hash
 (c⁄° 
TabÀ
 *
t
, *
nums
,

285 *
≤asize
) {

286 
tŸÆu£
 = 0;

287 
au£
 = 0;

288 
i
 = 
	`sizíode
(
t
);

289 
i
--) {

290 
Node
 *
n
 = &
t
->
node
[
i
];

291 i‡(!
	`âi¢û
(
	`gvÆ
(
n
))) {

292 
au£
 +
	`cou¡öt
(
	`gkey
(
n
), 
nums
);

293 
tŸÆu£
++;

296 *
≤asize
 +
au£
;

297  
tŸÆu£
;

298 
	}
}

301 
	$£èºayve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

302 
i
;

303 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
,Å->
sizóºay
, 
size
, 
TVÆue
);

304 
i
=
t
->
sizóºay
; i<
size
; i++)

305 
	`£äûvÆue
(&
t
->
¨øy
[
i
]);

306 
t
->
sizóºay
 = 
size
;

307 
	}
}

310 
	$£äodeve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

311 
lsize
;

312 i‡(
size
 == 0) {

313 
t
->
node
 = 
	`ˇ°
(
Node
 *, 
dummynode
);

314 
lsize
 = 0;

317 
i
;

318 
lsize
 = 
	`luaO_˚ûlog2
(
size
);

319 i‡(
lsize
 > 
MAXHBITS
)

320 
	`luaG_ru√º‹
(
L
, "table overflow");

321 
size
 = 
	`twŸo
(
lsize
);

322 
t
->
node
 = 
	`luaM_√wve˘‹
(
L
, 
size
, 
Node
);

323 
i
 = 0; i < ()
size
; i++) {

324 
Node
 *
n
 = 
	`gnode
(
t
, 
i
);

325 
	`g√xt
(
n
) = 0;

326 
	`£äûvÆue
(
	`wgkey
(
n
));

327 
	`£äûvÆue
(
	`gvÆ
(
n
));

330 
t
->
lsizíode
 = 
	`ˇ°_byã
(
lsize
);

331 
t
->
œ°‰ì
 = 
	`gnode
—, 
size
);

332 
	}
}

335 
	$luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

336 
nhsize
) {

337 
i
;

338 
j
;

339 
ﬁdasize
 = 
t
->
sizóºay
;

340 
ﬁdhsize
 = 
t
->
lsizíode
;

341 
Node
 *
nﬁd
 = 
t
->
node
;

342 i‡(
«size
 > 
ﬁdasize
)

343 
	`£èºayve˘‹
(
L
, 
t
, 
«size
);

345 
	`£äodeve˘‹
(
L
, 
t
, 
nhsize
);

346 i‡(
«size
 < 
ﬁdasize
) {

347 
t
->
sizóºay
 = 
«size
;

349 
i
=
«size
; i<
ﬁdasize
; i++) {

350 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
]))

351 
	`luaH_£töt
(
L
, 
t
, 
i
 + 1, &t->
¨øy
[i]);

354 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
, 
ﬁdasize
, 
«size
, 
TVÆue
);

357 
j
 = 
	`twŸo
(
ﬁdhsize
) - 1; j >= 0; j--) {

358 
Node
 *
ﬁd
 = 
nﬁd
 + 
j
;

359 i‡(!
	`âi¢û
(
	`gvÆ
(
ﬁd
))) {

362 
	`£tobjt2t
(
L
, 
	`luaH_£t
(L, 
t
, 
	`gkey
(
ﬁd
)), 
	`gvÆ
(old));

365 i‡(!
	`isdummy
(
nﬁd
))

366 
	`luaM_‰ì¨øy
(
L
, 
nﬁd
, 
	`ˇ°
(
size_t
, 
	`twŸo
(
ﬁdhsize
)));

367 
	}
}

370 
	$luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
) {

371 
nsize
 = 
	`isdummy
(
t
->
node
Ë? 0 : 
	`sizíode
(t);

372 
	`luaH_ªsize
(
L
, 
t
, 
«size
, 
nsize
);

373 
	}
}

378 
	$ªhash
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
ek
) {

379 
«size
, 
«
;

380 
nums
[
MAXABITS
 + 1];

381 
i
;

382 
tŸÆu£
;

383 
i
 = 0; i <
MAXABITS
; i++Ë
nums
[i] = 0;

384 
«size
 = 
	`numu£¨øy
(
t
, 
nums
);

385 
tŸÆu£
 = 
«size
;

386 
tŸÆu£
 +
	`numu£hash
(
t
, 
nums
, &
«size
);

388 
«size
 +
	`cou¡öt
(
ek
, 
nums
);

389 
tŸÆu£
++;

391 
«
 = 
	`compuãsizes
(
nums
, &
«size
);

393 
	`luaH_ªsize
(
L
, 
t
, 
«size
, 
tŸÆu£
 - 
«
);

394 
	}
}

403 
TabÀ
 *
	$luaH_√w
 (
lua_Sèã
 *
L
) {

404 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TTABLE
, (
TabÀ
));

405 
TabÀ
 *
t
 = 
	`gco2t
(
o
);

406 
t
->
më©abÀ
 = 
NULL
;

407 
t
->
Êags
 = 
	`ˇ°_byã
(~0);

408 
t
->
¨øy
 = 
NULL
;

409 
t
->
sizóºay
 = 0;

410 
	`£äodeve˘‹
(
L
, 
t
, 0);

411  
t
;

412 
	}
}

415 
	$luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

416 i‡(!
	`isdummy
(
t
->
node
))

417 
	`luaM_‰ì¨øy
(
L
, 
t
->
node
, 
	`ˇ°
(
size_t
, 
	`sizíode
(t)));

418 
	`luaM_‰ì¨øy
(
L
, 
t
->
¨øy
,Å->
sizóºay
);

419 
	`luaM_‰ì
(
L
, 
t
);

420 
	}
}

423 
Node
 *
	$gë‰ìpos
 (
TabÀ
 *
t
) {

424 
t
->
œ°‰ì
 >Å->
node
) {

425 
t
->
œ°‰ì
--;

426 i‡(
	`âi¢û
(
	`gkey
(
t
->
œ°‰ì
)))

427  
t
->
œ°‰ì
;

429  
NULL
;

430 
	}
}

441 
TVÆue
 *
	$luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

442 
Node
 *
mp
;

443 
TVÆue
 
aux
;

444 i‡(
	`âi¢û
(
key
)Ë
	`luaG_ru√º‹
(
L
, "table index isÇil");

445 i‡(
	`âisÊﬂt
(
key
)) {

446 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(
key
);

447 
lua_I¡egî
 
k
;

448 i‡(
	`luai_numi¢™
(
n
))

449 
	`luaG_ru√º‹
(
L
, "table index is NaN");

450 i‡(
	`numisöãgî
(
n
, &
k
)) {

451 
	`£tivÆue
(&
aux
, 
k
);

452 
key
 = &
aux
;

455 
mp
 = 
	`maöposôi⁄
(
t
, 
key
);

456 i‡(!
	`âi¢û
(
	`gvÆ
(
mp
)Ë|| 
	`isdummy
(mp)) {

457 
Node
 *
Ÿhîn
;

458 
Node
 *
f
 = 
	`gë‰ìpos
(
t
);

459 i‡(
f
 =
NULL
) {

460 
	`ªhash
(
L
, 
t
, 
key
);

462  
	`luaH_£t
(
L
, 
t
, 
key
);

464 
	`lua_as£π
(!
	`isdummy
(
f
));

465 
Ÿhîn
 = 
	`maöposôi⁄
(
t
, 
	`gkey
(
mp
));

466 i‡(
Ÿhîn
 !
mp
) {

468 
Ÿhîn
 + 
	`g√xt
(ŸhînË!
mp
)

469 
Ÿhîn
 +
	`g√xt
(othern);

470 
	`g√xt
(
Ÿhîn
Ë
	`ˇ°_öt
(
f
 - othern);

471 *
f
 = *
mp
;

472 i‡(
	`g√xt
(
mp
) != 0) {

473 
	`g√xt
(
f
Ë+
	`ˇ°_öt
(
mp
 - f);

474 
	`g√xt
(
mp
) = 0;

476 
	`£äûvÆue
(
	`gvÆ
(
mp
));

480 i‡(
	`g√xt
(
mp
) != 0)

481 
	`g√xt
(
f
Ë
	`ˇ°_öt
((
mp
 + gnext(mp)) - f);

482 
	`lua_as£π
(
	`g√xt
(
f
) == 0);

483 
	`g√xt
(
mp
Ë
	`ˇ°_öt
(
f
 - mp);

484 
mp
 = 
f
;

487 
	`£äodekey
(
L
, &
mp
->
i_key
, 
key
);

488 
	`luaC_b¨rõrback
(
L
, 
t
, 
key
);

489 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
mp
)));

490  
	`gvÆ
(
mp
);

491 
	}
}

497 c⁄° 
TVÆue
 *
	$luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
) {

499 i‡(
	`l_ˇ°S2U
(
key
 - 1Ë< 
t
->
sizóºay
)

500  &
t
->
¨øy
[
key
 - 1];

502 
Node
 *
n
 = 
	`hashöt
(
t
, 
key
);

504 i‡(
	`âisöãgî
(
	`gkey
(
n
)Ë&& 
	`ivÆue
(gkey“)Ë=
key
)

505  
	`gvÆ
(
n
);

507 
nx
 = 
	`g√xt
(
n
);

508 i‡(
nx
 == 0) ;

509 
n
 +
nx
;

512  
luaO_nûobje˘
;

514 
	}
}

520 c⁄° 
TVÆue
 *
	$luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

521 
Node
 *
n
 = 
	`hash°r
(
t
, 
key
);

522 
	`lua_as£π
(
key
->
â
 =
LUA_TSHRSTR
);

524 c⁄° 
TVÆue
 *
k
 = 
	`gkey
(
n
);

525 i‡(
	`âisshr°rög
(
k
Ë&& 
	`eqshr°r
(
	`tsvÆue
(k), 
key
))

526  
	`gvÆ
(
n
);

528 
nx
 = 
	`g√xt
(
n
);

529 i‡(
nx
 == 0) ;

530 
n
 +
nx
;

533  
luaO_nûobje˘
;

534 
	}
}

540 c⁄° 
TVÆue
 *
	$luaH_gë
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

541 
	`ây≥
(
key
)) {

542 
LUA_TSHRSTR
:  
	`luaH_gë°r
(
t
, 
	`tsvÆue
(
key
));

543 
LUA_TNUMINT
:  
	`luaH_gëöt
(
t
, 
	`ivÆue
(
key
));

544 
LUA_TNIL
:  
luaO_nûobje˘
;

545 
LUA_TNUMFLT
: {

546 
lua_I¡egî
 
k
;

547 i‡(
	`numisöãgî
(
	`ÊtvÆue
(
key
), &
k
))

548  
	`luaH_gëöt
(
t
, 
k
);

552 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

554 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
))

555  
	`gvÆ
(
n
);

557 
nx
 = 
	`g√xt
(
n
);

558 i‡(
nx
 == 0) ;

559 
n
 +
nx
;

562  
luaO_nûobje˘
;

565 
	}
}

572 
TVÆue
 *
	$luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

573 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gë
(
t
, 
key
);

574 i‡(
p
 !
luaO_nûobje˘
)

575  
	`ˇ°
(
TVÆue
 *, 
p
);

576  
	`luaH_√wkey
(
L
, 
t
, 
key
);

577 
	}
}

580 
	$luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
, 
TVÆue
 *
vÆue
) {

581 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gëöt
(
t
, 
key
);

582 
TVÆue
 *
˚Œ
;

583 i‡(
p
 !
luaO_nûobje˘
)

584 
˚Œ
 = 
	`ˇ°
(
TVÆue
 *, 
p
);

586 
TVÆue
 
k
;

587 
	`£tivÆue
(&
k
, 
key
);

588 
˚Œ
 = 
	`luaH_√wkey
(
L
, 
t
, &
k
);

590 
	`£tobj2t
(
L
, 
˚Œ
, 
vÆue
);

591 
	}
}

594 
	$unbound_£¨ch
 (
TabÀ
 *
t
, 
j
) {

595 
i
 = 
j
;

596 
j
++;

598 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
j
))) {

599 
i
 = 
j
;

600 i‡(
j
 > 
	`ˇ°
(, 
MAX_INT
)/2) {

602 
i
 = 1;

603 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
i
))) i++;

604  
i
 - 1;

606 
j
 *= 2;

609 
j
 - 
i
 > 1) {

610 
m
 = (
i
+
j
)/2;

611 i‡(
	`âi¢û
(
	`luaH_gëöt
(
t
, 
m
))Ë
j
 = m;

612 
i
 = 
m
;

614  
i
;

615 
	}
}

622 
	$luaH_gën
 (
TabÀ
 *
t
) {

623 
j
 = 
t
->
sizóºay
;

624 i‡(
j
 > 0 && 
	`âi¢û
(&
t
->
¨øy
[j - 1])) {

626 
i
 = 0;

627 
j
 - 
i
 > 1) {

628 
m
 = (
i
+
j
)/2;

629 i‡(
	`âi¢û
(&
t
->
¨øy
[
m
 - 1])Ë
j
 = m;

630 
i
 = 
m
;

632  
i
;

635 i‡(
	`isdummy
(
t
->
node
))

636  
j
;

637  
	`unbound_£¨ch
(
t
, 
j
);

638 
	}
}

642 #i‡
deföed
(
LUA_DEBUG
)

644 
Node
 *
	$luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

645  
	`maöposôi⁄
(
t
, 
key
);

646 
	}
}

648 
	$luaH_isdummy
 (
Node
 *
n
Ë{  
	`isdummy
“); 
	}
}

	@lib/archive/lua-5.3.0/src/ltable.h

7 #i‚de‡
…abÀ_h


8 
	#…abÀ_h


	)

10 
	~"lobje˘.h
"

13 
	#gnode
(
t
,
i
Ë(&—)->
node
[i])

	)

14 
	#gvÆ
(
n
Ë(&“)->
i_vÆ
)

	)

15 
	#g√xt
(
n
Ë(“)->
i_key
.
nk
.
√xt
)

	)

19 
	#gkey
(
n
Ë
	`ˇ°
(c⁄° 
TVÆue
*, (&“)->
i_key
.
tvk
))

	)

21 
	#wgkey
(
n
Ë(&“)->
i_key
.
nk
)

	)

23 
	#övÆid©eTMˇche
(
t
Ë(—)->
Êags
 = 0)

	)

27 
	#key‰omvÆ
(
v
) \

28 (
	`gkey
(
	`ˇ°
(
Node
 *, ca°(*, (
v
)Ë- 
	`off£tof
(Node, 
i_vÆ
))))

	)

31 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
);

32 
LUAI_FUNC
 
luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
,

33 
TVÆue
 *
vÆue
);

34 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

35 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë
 (
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

36 
LUAI_FUNC
 
TVÆue
 *
luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

37 
LUAI_FUNC
 
TVÆue
 *
luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

38 
LUAI_FUNC
 
TabÀ
 *
luaH_√w
 (
lua_Sèã
 *
L
);

39 
LUAI_FUNC
 
luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

40 
nhsize
);

41 
LUAI_FUNC
 
luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
);

42 
LUAI_FUNC
 
luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
);

43 
LUAI_FUNC
 
luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
);

44 
LUAI_FUNC
 
luaH_gën
 (
TabÀ
 *
t
);

47 #i‡
deföed
(
LUA_DEBUG
)

48 
LUAI_FUNC
 
Node
 *
luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
);

49 
LUAI_FUNC
 
luaH_isdummy
 (
Node
 *
n
);

	@lib/archive/lua-5.3.0/src/ltablib.c

7 
	#…ablib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<limôs.h
>

14 
	~<°ddef.h
>

16 
	~"lua.h
"

18 
	~"œuxlib.h
"

19 
	~"luÆib.h
"

27 (*
	mgëi
Ë(
lua_Sèã
 *
	mL
, 
	midx
, 
lua_I¡egî
 
	mn
);

28 (*
	m£ti
Ë(
lua_Sèã
 *
	mL
, 
	midx
, 
lua_I¡egî
 
	mn
);

29 } 
	tTabA
;

36 
	$checkèb
 (
lua_Sèã
 *
L
, 
¨g
, 
TabA
 *
è
) {

37 
è
->
gëi
 = 
NULL
;Åa->
£ti
 = NULL;

38 i‡(
	`lua_gëmë©abÀ
(
L
, 
¨g
)) {

39 
	`lua_pushlôîÆ
(
L
, "__index");

40 i‡(
	`lua_øwgë
(
L
, -2Ë!
LUA_TNIL
)

41 
è
->
gëi
 = 
lua_gëi
;

42 
	`lua_pushlôîÆ
(
L
, "__newindex");

43 i‡(
	`lua_øwgë
(
L
, -3Ë!
LUA_TNIL
)

44 
è
->
£ti
 = 
lua_£ti
;

45 
	`lua_p›
(
L
, 3);

47 i‡(
è
->
gëi
 =
NULL
 ||Åa->
£ti
 == NULL) {

48 
	`luaL_checkty≥
(
L
, 
¨g
, 
LUA_TTABLE
);

49 i‡(
è
->
gëi
 =
NULL
Ëè->gëò
lua_øwgëi
;

50 i‡(
è
->
£ti
 =
NULL
Ëè->£tò
lua_øw£ti
;

52 
	}
}

55 
	#aux_gën
(
L
,
n
,
è
Ë(
	`checkèb
(L,Ç,Åa), 
	`luaL_Àn
(L,Ç))

	)

58 #i‡
deföed
(
LUA_COMPAT_MAXN
)

59 
	$maxn
 (
lua_Sèã
 *
L
) {

60 
lua_Numbî
 
max
 = 0;

61 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

62 
	`lua_pushnû
(
L
);

63 
	`lua_√xt
(
L
, 1)) {

64 
	`lua_p›
(
L
, 1);

65 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TNUMBER
) {

66 
lua_Numbî
 
v
 = 
	`lua_t⁄umbî
(
L
, -1);

67 i‡(
v
 > 
max
) max = v;

70 
	`lua_pushnumbî
(
L
, 
max
);

72 
	}
}

76 
	$tö£π
 (
lua_Sèã
 *
L
) {

77 
TabA
 
è
;

78 
lua_I¡egî
 
e
 = 
	`aux_gën
(
L
, 1, &
è
) + 1;

79 
lua_I¡egî
 
pos
;

80 
	`lua_gët›
(
L
)) {

82 
pos
 = 
e
;

86 
lua_I¡egî
 
i
;

87 
pos
 = 
	`luaL_checköãgî
(
L
, 2);

88 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
e
, 2, "position out of bounds");

89 
i
 = 
e
; i > 
pos
; i--) {

90 (*
è
.
gëi
)(
L
, 1, 
i
 - 1);

91 (*
è
.
£ti
)(
L
, 1, 
i
);

96  
	`luaL_îr‹
(
L
, "wrongÇumber ofárgumentsÅo 'insert'");

99 (*
è
.
£ti
)(
L
, 1, 
pos
);

101 
	}
}

104 
	$åemove
 (
lua_Sèã
 *
L
) {

105 
TabA
 
è
;

106 
lua_I¡egî
 
size
 = 
	`aux_gën
(
L
, 1, &
è
);

107 
lua_I¡egî
 
pos
 = 
	`luaL_›töãgî
(
L
, 2, 
size
);

108 i‡(
pos
 !
size
)

109 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
size
 + 1, 1, "position out of bounds");

110 (*
è
.
gëi
)(
L
, 1, 
pos
);

111  ; 
pos
 < 
size
;Öos++) {

112 (*
è
.
gëi
)(
L
, 1, 
pos
 + 1);

113 (*
è
.
£ti
)(
L
, 1, 
pos
);

115 
	`lua_pushnû
(
L
);

116 (*
è
.
£ti
)(
L
, 1, 
pos
);

118 
	}
}

121 
	$tmove
 (
lua_Sèã
 *
L
) {

122 
TabA
 
è
;

123 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 2);

124 
lua_I¡egî
 
e
 = 
	`luaL_checköãgî
(
L
, 3);

125 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 4);

126 
â
 = !
	`lua_i¢⁄e‹nû
(
L
, 5) ? 5 : 1;

128 
	`luaL_¨gcheck
(
L
, 
f
 > 0, 2, "initialÖosition must beÖositive");

129 i‡(
e
 >
f
) {

130 
lua_I¡egî
 
n
, 
i
;

131 
è
.
gëi
 = (
	`luaL_gëmëafõld
(
L
, 1, "__ödex"Ë=
LUA_TNIL
)

132 ? (
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
), 
lua_øwgëi
)

133 : 
lua_gëi
;

134 
è
.
£ti
 = (
	`luaL_gëmëafõld
(
L
, 
â
, "__√wödex"Ë=
LUA_TNIL
)

135 ? (
	`luaL_checkty≥
(
L
, 
â
, 
LUA_TTABLE
), 
lua_øw£ti
)

136 : 
lua_£ti
;

137 
n
 = 
e
 - 
f
 + 1;

138 i‡(
t
 > 
f
) {

139 
i
 = 
n
 - 1; i >= 0; i--) {

140 (*
è
.
gëi
)(
L
, 1, 
f
 + 
i
);

141 (*
è
.
£ti
)(
L
, 
â
, 
t
 + 
i
);

145 
i
 = 0; i < 
n
; i++) {

146 (*
è
.
gëi
)(
L
, 1, 
f
 + 
i
);

147 (*
è
.
£ti
)(
L
, 
â
, 
t
 + 
i
);

151 
	`lua_pushvÆue
(
L
, 
â
);

153 
	}
}

156 
	$addfõld
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
TabA
 *
è
, 
lua_I¡egî
 
i
) {

157 (*
è
->
gëi
)(
L
, 1, 
i
);

158 i‡(!
	`lua_is°rög
(
L
, -1))

159 
	`luaL_îr‹
(
L
, "invalid value (%s)át index %d inÅable for 'concat'",

160 
	`luaL_ty≥«me
(
L
, -1), 
i
);

161 
	`luaL_addvÆue
(
b
);

162 
	}
}

165 
	$tc⁄ˇt
 (
lua_Sèã
 *
L
) {

166 
TabA
 
è
;

167 
luaL_Buf„r
 
b
;

168 
size_t
 
l£p
;

169 
lua_I¡egî
 
i
, 
œ°
;

170 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 2, "", &
l£p
);

171 
	`checkèb
(
L
, 1, &
è
);

172 
i
 = 
	`luaL_›töãgî
(
L
, 3, 1);

173 
œ°
 = 
	`luaL_›t
(
L
, 
luaL_checköãgî
, 4, 
	`luaL_Àn
(L, 1));

174 
	`luaL_bufföô
(
L
, &
b
);

175 ; 
i
 < 
œ°
; i++) {

176 
	`addfõld
(
L
, &
b
, &
è
, 
i
);

177 
	`luaL_addl°rög
(&
b
, 
£p
, 
l£p
);

179 i‡(
i
 =
œ°
)

180 
	`addfõld
(
L
, &
b
, &
è
, 
i
);

181 
	`luaL_pushªsu…
(&
b
);

183 
	}
}

192 
	$∑ck
 (
lua_Sèã
 *
L
) {

193 
i
;

194 
n
 = 
	`lua_gët›
(
L
);

195 
	`lua_¸óãèbÀ
(
L
, 
n
, 1);

196 
	`lua_ö£π
(
L
, 1);

197 
i
 = 
n
; i >= 1; i--)

198 
	`lua_øw£ti
(
L
, 1, 
i
);

199 
	`lua_pushöãgî
(
L
, 
n
);

200 
	`lua_£tfõld
(
L
, 1, "n");

202 
	}
}

205 
	$u≈ack
 (
lua_Sèã
 *
L
) {

206 
TabA
 
è
;

207 
lua_I¡egî
 
i
, 
e
;

208 
lua_Unsig√d
 
n
;

209 
	`checkèb
(
L
, 1, &
è
);

210 
i
 = 
	`luaL_›töãgî
(
L
, 2, 1);

211 
e
 = 
	`luaL_›t
(
L
, 
luaL_checköãgî
, 3, 
	`luaL_Àn
(L, 1));

212 i‡(
i
 > 
e
)  0;

213 
n
 = (
lua_Unsig√d
)
e
 - 
i
;

214 i‡(
n
 >()
INT_MAX
 || !
	`lua_check°ack
(
L
, ()(++n)))

215  
	`luaL_îr‹
(
L
, "too manyÑesultsÅo unpack");

217 (*
è
.
gëi
)(
L
, 1, 
i
);

218 } 
i
++ < 
e
);

220  ()
n
;

221 
	}
}

236 
	$£t2
 (
lua_Sèã
 *
L
, 
TabA
 *
è
, 
i
, 
j
) {

237 (*
è
->
£ti
)(
L
, 1, 
i
);

238 (*
è
->
£ti
)(
L
, 1, 
j
);

239 
	}
}

241 
	$s‹t_comp
 (
lua_Sèã
 *
L
, 
a
, 
b
) {

242 i‡(!
	`lua_i¢û
(
L
, 2)) {

243 
ªs
;

244 
	`lua_pushvÆue
(
L
, 2);

245 
	`lua_pushvÆue
(
L
, 
a
-1);

246 
	`lua_pushvÆue
(
L
, 
b
-2);

247 
	`lua_ˇŒ
(
L
, 2, 1);

248 
ªs
 = 
	`lua_toboﬁón
(
L
, -1);

249 
	`lua_p›
(
L
, 1);

250  
ªs
;

253  
	`lua_com∑ª
(
L
, 
a
, 
b
, 
LUA_OPLT
);

254 
	}
}

256 
	$auxs‹t
 (
lua_Sèã
 *
L
, 
TabA
 *
è
, 
l
, 
u
) {

257 
l
 < 
u
) {

258 
i
, 
j
;

260 (*
è
->
gëi
)(
L
, 1, 
l
);

261 (*
è
->
gëi
)(
L
, 1, 
u
);

262 i‡(
	`s‹t_comp
(
L
, -1, -2))

263 
	`£t2
(
L
, 
è
, 
l
, 
u
);

265 
	`lua_p›
(
L
, 2);

266 i‡(
u
-
l
 == 1) ;

267 
i
 = (
l
+
u
)/2;

268 (*
è
->
gëi
)(
L
, 1, 
i
);

269 (*
è
->
gëi
)(
L
, 1, 
l
);

270 i‡(
	`s‹t_comp
(
L
, -2, -1))

271 
	`£t2
(
L
, 
è
, 
i
, 
l
);

273 
	`lua_p›
(
L
, 1);

274 (*
è
->
gëi
)(
L
, 1, 
u
);

275 i‡(
	`s‹t_comp
(
L
, -1, -2))

276 
	`£t2
(
L
, 
è
, 
i
, 
u
);

278 
	`lua_p›
(
L
, 2);

280 i‡(
u
-
l
 == 2) ;

281 (*
è
->
gëi
)(
L
, 1, 
i
);

282 
	`lua_pushvÆue
(
L
, -1);

283 (*
è
->
gëi
)(
L
, 1, 
u
-1);

284 
	`£t2
(
L
, 
è
, 
i
, 
u
-1);

286 
i
 = 
l
; 
j
 = 
u
-1;

289 (*
è
->
gëi
)(
L
, 1, ++
i
), 
	`s‹t_comp
(L, -1, -2)) {

290 i‡(
i
>=
u
Ë
	`luaL_îr‹
(
L
, "invalid order function for sorting");

291 
	`lua_p›
(
L
, 1);

294 (*
è
->
gëi
)(
L
, 1, --
j
), 
	`s‹t_comp
(L, -3, -1)) {

295 i‡(
j
<=
l
Ë
	`luaL_îr‹
(
L
, "invalid order function for sorting");

296 
	`lua_p›
(
L
, 1);

298 i‡(
j
<
i
) {

299 
	`lua_p›
(
L
, 3);

302 
	`£t2
(
L
, 
è
, 
i
, 
j
);

304 (*
è
->
gëi
)(
L
, 1, 
u
-1);

305 (*
è
->
gëi
)(
L
, 1, 
i
);

306 
	`£t2
(
L
, 
è
, 
u
-1, 
i
);

309 i‡(
i
-
l
 < 
u
-i) {

310 
j
=
l
; 
i
=i-1;Ü=i+2;

313 
j
=
i
+1; i=
u
; u=j-2;

315 
	`auxs‹t
(
L
, 
è
, 
j
, 
i
);

317 
	}
}

319 
	$s‹t
 (
lua_Sèã
 *
L
) {

320 
TabA
 
è
;

321 
n
 = ()
	`aux_gën
(
L
, 1, &
è
);

322 
	`luaL_check°ack
(
L
, 50, "");

323 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 2))

324 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

325 
	`lua_£â›
(
L
, 2);

326 
	`auxs‹t
(
L
, &
è
, 1, 
n
);

328 
	}
}

333 c⁄° 
luaL_Reg
 
	gèb_funcs
[] = {

334 {"c⁄ˇt", 
tc⁄ˇt
},

335 #i‡
deföed
(
LUA_COMPAT_MAXN
)

336 {"maxn", 
maxn
},

338 {"ö£π", 
tö£π
},

339 {"∑ck", 
∑ck
},

340 {"u≈ack", 
u≈ack
},

341 {"ªmove", 
åemove
},

342 {"move", 
tmove
},

343 {"s‹t", 
s‹t
},

344 {
NULL
, NULL}

348 
LUAMOD_API
 
	$lua›í_èbÀ
 (
lua_Sèã
 *
L
) {

349 
	`luaL_√wlib
(
L
, 
èb_funcs
);

350 #i‡
	`deföed
(
LUA_COMPAT_UNPACK
)

352 
	`lua_gëfõld
(
L
, -1, "unpack");

353 
	`lua_£tglobÆ
(
L
, "unpack");

356 
	}
}

	@lib/archive/lua-5.3.0/src/ltm.c

7 
	#…m_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lobje˘.h
"

20 
	~"l°©e.h
"

21 
	~"l°rög.h
"

22 
	~"…abÀ.h
"

23 
	~"…m.h
"

24 
	~"lvm.h
"

27 c⁄° 
	gud©©y≥«me
[] = "userdata";

29 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
] = {

31 "nû", "boﬁón", 
ud©©y≥«me
, "number",

32 "°rög", "èbÀ", "fun˘i⁄", 
ud©©y≥«me
, "thread",

37 
	$luaT_öô
 (
lua_Sèã
 *
L
) {

38 c⁄° *c⁄° 
luaT_evíäame
[] = {

47 
i
;

48 
i
=0; i<
TM_N
; i++) {

49 
	`G
(
L
)->
tm«me
[
i
] = 
	`luaS_√w
(L, 
luaT_evíäame
[i]);

50 
	`luaC_fix
(
L
, 
	`obj2gco
(
	`G
(L)->
tm«me
[
i
]));

52 
	}
}

59 c⁄° 
TVÆue
 *
	$luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
) {

60 c⁄° 
TVÆue
 *
tm
 = 
	`luaH_gë°r
(
evíts
, 
íame
);

61 
	`lua_as£π
(
evít
 <
TM_EQ
);

62 i‡(
	`âi¢û
(
tm
)) {

63 
evíts
->
Êags
 |
	`ˇ°_byã
(1u<<
evít
);

64  
NULL
;

66  
tm
;

67 
	}
}

70 c⁄° 
TVÆue
 *
	$luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, 
TMS
 
evít
) {

71 
TabÀ
 *
mt
;

72 
	`ânov
(
o
)) {

73 
LUA_TTABLE
:

74 
mt
 = 
	`hvÆue
(
o
)->
më©abÀ
;

76 
LUA_TUSERDATA
:

77 
mt
 = 
	`uvÆue
(
o
)->
më©abÀ
;

80 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
o
)];

82  (
mt
 ? 
	`luaH_gë°r
(mt, 
	`G
(
L
)->
tm«me
[
evít
]Ë: 
luaO_nûobje˘
);

83 
	}
}

86 
	$luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

87 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
) {

88 
±rdiff_t
 
ªsu…
 = 
	`ßve°ack
(
L
, 
p3
);

89 
	`£tobj2s
(
L
, L->
t›
++, 
f
);

90 
	`£tobj2s
(
L
, L->
t›
++, 
p1
);

91 
	`£tobj2s
(
L
, L->
t›
++, 
p2
);

92 i‡(!
ha§es
)

93 
	`£tobj2s
(
L
, L->
t›
++, 
p3
);

95 
	`luaD_ˇŒ
(
L
, L->
t›
 - (4 - 
ha§es
), ha§es, 
	`isLua
(L->
ci
));

96 i‡(
ha§es
) {

97 
p3
 = 
	`ª°‹e°ack
(
L
, 
ªsu…
);

98 
	`£tobjs2s
(
L
, 
p3
, --L->
t›
);

100 
	}
}

103 
	$luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

104 
StkId
 
ªs
, 
TMS
 
evít
) {

105 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p1
, 
evít
);

106 i‡(
	`âi¢û
(
tm
))

107 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p2
, 
evít
);

108 i‡(
	`âi¢û
(
tm
))  0;

109 
	`luaT_ˇŒTM
(
L
, 
tm
, 
p1
, 
p2
, 
ªs
, 1);

111 
	}
}

114 
	$luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

115 
StkId
 
ªs
, 
TMS
 
evít
) {

116 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
evít
)) {

117 
evít
) {

118 
TM_CONCAT
:

119 
	`luaG_c⁄ˇãº‹
(
L
, 
p1
, 
p2
);

120 
TM_BAND
: 
TM_BOR
: 
TM_BXOR
:

121 
TM_SHL
: 
TM_SHR
: 
TM_BNOT
: {

122 
lua_Numbî
 
dummy
;

123 i‡(
	`t⁄umbî
(
p1
, &
dummy
Ë&&Å⁄umbî(
p2
, &dummy))

124 
	`luaG_toöãº‹
(
L
, 
p1
, 
p2
);

126 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "perform bitwise operation on");

130 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "performárithmetic on");

133 
	}
}

136 
	$luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

137 
TMS
 
evít
) {

138 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, L->
t›
, 
evít
))

141  !
	`l_isÁl£
(
L
->
t›
);

142 
	}
}

	@lib/archive/lua-5.3.0/src/ltm.h

7 #i‚de‡
…m_h


8 
	#…m_h


	)

11 
	~"lobje˘.h
"

19 
	mTM_INDEX
,

20 
	mTM_NEWINDEX
,

21 
	mTM_GC
,

22 
	mTM_MODE
,

23 
	mTM_LEN
,

24 
	mTM_EQ
,

25 
	mTM_ADD
,

26 
	mTM_SUB
,

27 
	mTM_MUL
,

28 
	mTM_MOD
,

29 
	mTM_POW
,

30 
	mTM_DIV
,

31 
	mTM_IDIV
,

32 
	mTM_BAND
,

33 
	mTM_BOR
,

34 
	mTM_BXOR
,

35 
	mTM_SHL
,

36 
	mTM_SHR
,

37 
	mTM_UNM
,

38 
	mTM_BNOT
,

39 
	mTM_LT
,

40 
	mTM_LE
,

41 
	mTM_CONCAT
,

42 
	mTM_CALL
,

43 
	mTM_N


44 } 
	tTMS
;

48 
	#gÁ°tm
(
g
,
ë
,
e
Ë(”tË=
NULL
 ? NULL : \

49 ((
ë
)->
Êags
 & (1u<<(
e
))Ë? 
NULL
 : 
	`luaT_gëtm
”t,É, (
g
)->
tm«me
[e]))

	)

51 
	#Á°tm
(
l
,
ë
,
e
Ë
	`gÁ°tm
(
	`G
÷),Ét,É)

	)

53 
	#ây≥«me
(
x
Ë
luaT_ty≥«mes_
[(xË+ 1]

	)

54 
	#objty≥«me
(
x
Ë
	`ây≥«me
(
	`ânov
(x))

	)

56 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
];

59 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
);

60 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° TVÆuê*
o
,

61 
TMS
 
evít
);

62 
LUAI_FUNC
 
luaT_öô
 (
lua_Sèã
 *
L
);

64 
LUAI_FUNC
 
luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

65 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
);

66 
LUAI_FUNC
 
luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

67 
StkId
 
ªs
, 
TMS
 
evít
);

68 
LUAI_FUNC
 
luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

69 
StkId
 
ªs
, 
TMS
 
evít
);

70 
LUAI_FUNC
 
luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

71 c⁄° 
TVÆue
 *
p2
, 
TMS
 
evít
);

	@lib/archive/lua-5.3.0/src/lua-socket.c

68 
	~<°dio.h
>

69 
	~<°dlib.h
>

70 
	~<°döt.h
>

71 
	~<sig«l.h
>

72 
	~<öây≥s.h
>

73 
	~<sys/ty≥s.h
>

74 
	~<uni°d.h
>

75 
	~<°rög.h
>

76 
	~<sys/queue.h
>

77 
	~<√töë/ö.h
>

78 
	~<√t/if.h
>

79 
	~<f˙é.h
>

80 
	~<£tjmp.h
>

81 
	~<°d¨g.h
>

82 
	~<˘y≥.h
>

83 
	~<î∫o.h
>

84 
	~<gë›t.h
>

85 
	~<ãrmios.h
>

86 
	~<sys/io˘l.h
>

87 
	~<libgí.h
>

88 
	~<löux/if_tun.h
>

89 
	~<¨∑/öë.h
>

90 
	~<√tdb.h
>

91 
	~<as£π.h
>

93 
	~<πe_c⁄fig.h
>

94 
	~<πe_vîsi⁄.h
>

96 
	~<πe_log.h
>

97 
	~<πe_èûq.h
>

98 
	~<πe_comm⁄.h
>

99 
	~<πe_mem‹y.h
>

100 
	~<πe_mem˝y.h
>

101 
	~<πe_memz⁄e.h
>

102 
	~<πe_mÆloc.h
>

103 
	~<πe_ól.h
>

104 
	~<πe_≥r_lc‹e.h
>

105 
	~<πe_œunch.h
>

106 
	~<πe_©omic.h
>

107 
	~<πe_cy˛es.h
>

108 
	~<πe_¥e„tch.h
>

109 
	~<πe_lc‹e.h
>

110 
	~<πe_≥r_lc‹e.h
>

111 
	~<πe_bønch_¥edi˘i⁄.h
>

112 
	~<πe_pci.h
>

113 
	~<πe_øndom.h
>

114 
	~<πe_timî.h
>

115 
	~<πe_debug.h
>

116 
	~<πe_ëhî.h
>

117 
	~<πe_ëhdev.h
>

118 
	~<πe_rög.h
>

119 
	~<πe_mempoﬁ.h
>

120 
	~<πe_mbuf.h
>

122 
	#lua_c


	)

123 
	~"lua.h
"

124 
	~"luÆib.h
"

125 
	~"œuxlib.h
"

127 
	~"lua-sockë.h
"

128 
	~"lua_shñl.h
"

130 * 
lua_gë_¥iv©e
(* 
L
);

131 
lua_shñl
(*);

132 
lua_£t_°dfûes
(
lua_Sèã
 * 
L
, 
FILE
 * 
ö
, FILE * 
out
, FILE * 
îr
);

133 
lua_ª£t_°dfûes
(
lua_Sèã
 * 
L
);

134 
execuã_lua_°rög
(
lua_Sèã
 * 
L
, * 
°r
);

135 
execuã_lua_˛o£
(
lua_Sèã
 * 
L
);

138 
	$_sockë_›í
(
luaSîvî_t
 * 
pSîvî
)

140 i‡–
pSîvî
 !
NULL
 ) {

141 
pSîvî
->
ö
 = 
	`fd›í
’Sîvî->
˛õ¡_sockë
, "r");

142 
pSîvî
->
out
 = 
	`fd›í
’Sîvî->
˛õ¡_sockë
, "w");

143 
pSîvî
->
îr
 = 
	`fd›í
’Sîvî->
˛õ¡_sockë
, "w");

145 
	}
}

148 
	$_sockë_˛o£
(
luaSîvî_t
 * 
pSîvî
)

150 i‡–
pSîvî
 !
NULL
 ) {

151 
	`f˛o£
(
pSîvî
->
ö
);

152 
	`f˛o£
(
pSîvî
->
out
);

153 
	`f˛o£
(
pSîvî
->
îr
);

155 
	}
}

158 
	$_gë_°dout
(* 
¨g
)

160 
luaSîvî_t
 * 
s
;

162 i‡–
¨g
 =
NULL
 )

163  
°dout
;

164 
s
 = 
	`luaL_gë¥iv©e
(
¨g
);

165 i‡–(
s
 =
NULL
Ë|| (s->
out
 == NULL) )

166  
°dout
;

167  
s
->
out
;

168 
	}
}

171 
	$_gë_°dö
(* 
¨g
)

173 
luaSîvî_t
 * 
s
;

175 i‡–
¨g
 =
NULL
 )

176  
°dö
;

177 
s
 = 
	`luaL_gë¥iv©e
(
¨g
);

178 i‡–(
s
 =
NULL
Ë|| (s->
ö
 == NULL) )

179  
°dö
;

180  
s
->
ö
;

181 
	}
}

184 
	$_gë_°dîr
(* 
¨g
)

186 
luaSîvî_t
 * 
s
;

188 i‡–
¨g
 =
NULL
 )

189  
°dîr
;

190 
s
 = 
	`luaL_gë¥iv©e
(
¨g
);

191 i‡–(
s
 =
NULL
Ë|| (s->
îr
 == NULL) )

192  
°dîr
;

193  
s
->
îr
;

194 
	}
}

197 
	$_£t_°dfûes
(
lua_Sèã
 * 
L
, 
luaSîvî_t
 * 
pSîvî
)

199 
	`lua_£t_°dfûes
(
L
, 
pSîvî
->
ö
,ÖSîvî->
out
,ÖSîvî->
îr
);

200 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

201 
	}
}

204 
	$_ª£t_°dfûes
(
lua_Sèã
 * 
L
)

206 
	`sig«l
(
SIGPIPE
, 
SIG_DFL
);

207 
	`lua_ª£t_°dfûes
(
L
);

208 
	}
}

223 
	$¥o˚ss_£rvî_ªque°s
–
luaSîvî_t
 * 
pSîvî
 )

225 
sockaddr_ö
 
ùaddr
;

226 
sockÀn_t
 
Àn
;

228 
pSîvî
->
˛õ¡_sockë
 = -1;

230 
Àn
 = (
sockaddr_ö
);

231 i‡–(
pSîvî
->
˛õ¡_sockë
 = 
	`ac˚±
’Sîvî->
£rvî_sockë
, (
sockaddr
 *)&
ùaddr
, &
Àn
)) < 0) {

232 
	`≥º‹
("accept failed");

236 i‡–
pSîvî
->
˛õ¡_sockë
 > 0 ) {

238 
	`_sockë_›í
(
pSîvî
);

239 
	`lua_shñl
(
pSîvî
);

240 
	`_sockë_˛o£
(
pSîvî
);

242 
	`˛o£
(
pSîvî
->
˛õ¡_sockë
);

243 
pSîvî
->
˛õ¡_sockë
 = -1;

247 i‡–
pSîvî
->
£rvî_sockë
 > 0 ) {

248 
	`˛o£
(
pSîvî
->
£rvî_sockë
);

249 
pSîvî
->
£rvî_sockë
 = -1;

251 
	}
}

266 
	$£rvî_¸óã
–* 
¨g
 )

268 
luaSîvî_t
 * 
pSîvî
 = (luaSîvî_à*)
¨g
;

269 * 
îr_msg
 = 
NULL
;

270 
sockaddr_ö
 
ùaddr
;

271 
ho°ít
 * 
pHo°
;

272 
lögî
 = 1;

274 
îr_msg
 = "gethostbyname failed";

275 if–(
pHo°
 = 
	`gëho°by«me
(
pSîvî
->
ho°«me
)Ë=
NULL
 )

276 
îr‹_exô
;

278 
îr_msg
 = "Socket create failed";

279 i‡–(
pSîvî
->
£rvî_sockë
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0 )

280 
îr‹_exô
;

282 
	`mem£t
(&
ùaddr
, 0, (ipaddr));

283 
ùaddr
.
sö_Ámûy
 = 
AF_INET
;

284 
ùaddr
.
sö_p‹t
 = 
	`ht⁄s
(
pSîvî
->
sockë_p‹t
);

285 
ùaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

287 
îr_msg
 = "Setsockopt failed";

288 i‡(
	`£tsock›t
(
pSîvî
->
£rvî_sockë
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
lögî
, (linger)) == -1)

289 
îr‹_exô
;

291 
îr_msg
 = "Bind failed";

292 i‡(
	`böd
(
pSîvî
->
£rvî_sockë
, (
sockaddr
 *Ë&
ùaddr
, (ipaddr)) < 0)

293 
îr‹_exô
;

295 
îr_msg
 = "Listen failed";

296 i‡(
	`li°í
(
pSîvî
->
£rvî_sockë
, 5) < 0)

297 
îr‹_exô
;

299 
	`¥o˚ss_£rvî_ªque°s
(
pSîvî
);

303 
îr‹_exô
:

304 i‡–
pSîvî
->
£rvî_sockë
 != -1 )

305 
	`˛o£
–
pSîvî
->
£rvî_sockë
 );

306 
pSîvî
->
£rvî_sockë
 = -1;

307 i‡–
îr_msg
 ) {

308 
	`≥º‹
(
îr_msg
);

309 
	`fÊush
(
°dout
);

312 
	}
}

327 
	$lua_£rvî
(* 
¨g
) {

329 
	`±hªad_dëach
–
	`±hªad_£lf
() );

331 
	`£rvî_¸óã
((
luaSîvî_t
 *)
¨g
);

333  
NULL
;

334 
	}
}

349 
	$lua_öô_sockë
(
lua_Sèã
 * 
L
, 
±hªad_t
 * 
±hªad
, * 
ho°«me
, 
p‹t
)

351 
luaSîvî_t
 * 
p
;

352 
r
;

354 
p
 = 
	`luaL_gë¥iv©e
(
L
);

355 i‡–
p
 =
NULL
 )

358 
p
->
˛õ¡_sockë
 = -1;

359 
p
->
£rvî_sockë
 = -1;

360 
p
->
sockë_p‹t
 = 
p‹t
;

361 
p
->
ho°«me
 = 
	`°rdup
( (hostname) ? hostname : "localhost" );

364 
r
 = 
	`±hªad_¸óã
(
±hªad
, 
NULL
, 
lua_£rvî
, 
p
);

365 
	`as£π
–
r
 == 0 );

367 
	}
}

382 
	$lua_¸óã_ö°™˚
()

384 
luaSîvî_t
 * 
p
;

385 
lua_Sèã
 * 
L
;

387 
p
 = (
luaSîvî_t
 *)
	`ˇŒoc
(1, (luaServer_t));

388 i‡(
p
 =
NULL
)

389  
NULL
;

391 
L
 = 
	`luaL_√w°©e
();

392 i‡–
L
 =
NULL
 ) {

393 
	`‰ì
(
p
);

394  
NULL
;

397 
p
->
˛õ¡_sockë
 = -1;

398 
p
->
£rvî_sockë
 = -1;

399 
p
->
ö
 = 
NULL
;

400 
p
->
out
 = 
NULL
;

401 
p
->
îr
 = 
NULL
;

403 
	`luaL_£çriv©e
(
L
, 
p
);

406 
	`lua_wrôe°rög
(
L
, 
LUA_COPYRIGHT
, 
	`°æí
(LUA_COPYRIGHT));

407 
	`lua_wrôñöe
(
L
);

409 
	`lua_√wlibs_öô
(
L
);

411  
L
;

412 
	}
}

	@lib/archive/lua-5.3.0/src/lua-socket.h

68 #i‚de‡
_LUA_SOCKET_H_


69 
	#_LUA_SOCKET_H_


	)

71 
	~"lua.h
"

74 
	#MAX_LUA_BUFFER_SIZE
 1024

	)

76 
	sluaSîvî_s
 {

77 
öt32_t
 
	m£rvî_sockë
;

78 
öt32_t
 
	m˛õ¡_sockë
;

79 
öt32_t
 
	msockë_p‹t
;

80 * 
	mout
, * 
	mö
, * 
	mîr
;

81 * 
	mho°«me
;

82 
	md©a
[
MAX_LUA_BUFFER_SIZE
];

83 } 
	tluaSîvî_t
;

85 
_lua_›ílib
(
lua_Sèã
 *
L
);

86 * 
_gë_°dout
(* 
¨g
);

87 * 
_gë_°dö
(* 
¨g
);

88 * 
_gë_°dîr
(* 
¨g
);

89 
_£t_°dfûes
(
lua_Sèã
 * 
L
, 
luaSîvî_t
 * 
pSîvî
);

90 
_ª£t_°dfûes
(
lua_Sèã
 * 
L
);

92 
lua_öô_sockë
(
lua_Sèã
 * 
L
, 
±hªad_t
 * 
±hªad
, * 
ho°«me
, 
p‹t
);

93 * 
lua_¸óã_ö°™˚
();

	@lib/archive/lua-5.3.0/src/lua.c

7 
	#lua_c


	)

9 
	~"Õªfix.h
"

12 
	~<sig«l.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

23 #i‡!
deföed
(
LUA_PROMPT
)

24 
	#LUA_PROMPT
 "> "

	)

25 
	#LUA_PROMPT2
 ">> "

	)

28 #i‡!
deföed
(
LUA_PROGNAME
)

29 
	#LUA_PROGNAME
 "lua"

	)

32 #i‡!
deföed
(
LUA_MAXINPUT
)

33 
	#LUA_MAXINPUT
 512

	)

36 #i‡!
deföed
(
LUA_INIT_VAR
)

37 
	#LUA_INIT_VAR
 "LUA_INIT"

	)

40 
	#LUA_INITVARVERSION
 \

41 
LUA_INIT_VAR
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

48 #i‡!
deföed
(
lua_°dö_is_ây
)

50 #i‡
deföed
(
LUA_USE_POSIX
)

52 
	~<uni°d.h
>

53 
	#lua_°dö_is_ây
(Ë
	`ißây
(0)

	)

55 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

57 
	~<io.h
>

58 
	#lua_°dö_is_ây
(Ë
	`_ißây
(
	`_fûío
(
°dö
))

	)

63 
	#lua_°dö_is_ây
(Ë1

	)

76 #i‡!
deföed
(
lua_ªadlöe
)

78 #i‡
deföed
(
LUA_USE_READLINE
)

80 
	~<ªadlöe/ªadlöe.h
>

81 
	~<ªadlöe/hi°‹y.h
>

82 
	#lua_ªadlöe
(
L
,
b
,
p
Ë(()L, ((b)=
	`ªadlöe
’)Ë!
NULL
)

	)

83 
	#lua_ßvñöe
(
L
,
idx
) \

84 i‡(
	`lua_øwÀn
(
L
,
idx
) > 0) \

85 
	`add_hi°‹y
(
	`lua_to°rög
(
L
, 
idx
));

	)

86 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

90 
	#lua_ªadlöe
(
L
,
b
,
p
) \

91 (()
L
, 
	`Âuts
(
p
, 
°dout
), 
	`fÊush
(stdout), \

92 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
°dö
Ë!
NULL
Ë

	)

93 
	#lua_ßvñöe
(
L
,
idx
Ë{ ()L; ()idx; }

	)

94 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

103 
lua_Sèã
 *
	gglobÆL
 = 
NULL
;

105 c⁄° *
	g¥og«me
 = 
LUA_PROGNAME
;

111 
	$l°›
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

112 ()
¨
;

113 
	`lua_£thook
(
L
, 
NULL
, 0, 0);

114 
	`luaL_îr‹
(
L
, "interrupted!");

115 
	}
}

124 
	$œ˘i⁄
 (
i
) {

125 
	`sig«l
(
i
, 
SIG_DFL
);

126 
	`lua_£thook
(
globÆL
, 
l°›
, 
LUA_MASKCALL
 | 
LUA_MASKRET
 | 
LUA_MASKCOUNT
, 1);

127 
	}
}

130 
	$¥öt_ußge
 (
lua_Sèã
 * 
L
, c⁄° *
bad›ti⁄
) {

131 
	`lua_wrôe°rögîr‹
(
L
, "%s: ", 
¥og«me
);

132 i‡(
bad›ti⁄
[1] == 'e' || badoption[1] == 'l')

133 
	`lua_wrôe°rögîr‹
(
L
, "'%s'Çìd†¨gumít\n", 
bad›ti⁄
);

135 
	`lua_wrôe°rögîr‹
(
L
, "uƒecognized o±i⁄ '%s'\n", 
bad›ti⁄
);

136 
	`lua_wrôe°rögîr‹
(
L
,

147 
¥og«me
);

148 
	}
}

155 
	$l_mesßge
 (
lua_Sèã
 * 
L
, c⁄° *
≤ame
, c⁄° *
msg
) {

156 i‡(
≤ame
Ë
	`lua_wrôe°rögîr‹
(
L
, "%s: ",Öname);

157 
	`lua_wrôe°rögîr‹
(
L
, "%s\n", 
msg
);

158 
	}
}

166 
	$ªp‹t
 (
lua_Sèã
 *
L
, 
°©us
) {

167 i‡(
°©us
 !
LUA_OK
) {

168 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, -1);

169 
	`l_mesßge
(
¥og«me
, 
msg
);

170 
	`lua_p›
(
L
, 1);

172  
°©us
;

173 
	}
}

179 
	$msgh™dÀr
 (
lua_Sèã
 *
L
) {

180 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 1);

181 i‡(
msg
 =
NULL
) {

182 i‡(
	`luaL_ˇŒmëa
(
L
, 1, "__tostring") &&

183 
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
)

186 
msg
 = 
	`lua_pushf°rög
(
L
, "(error object isá %s value)",

187 
	`luaL_ty≥«me
(
L
, 1));

189 
	`luaL_åa˚back
(
L
, L, 
msg
, 1);

191 
	}
}

198 
	$doˇŒ
 (
lua_Sèã
 *
L
, 
«rg
, 
ƒes
) {

199 
°©us
;

200 
ba£
 = 
	`lua_gët›
(
L
Ë- 
«rg
;

201 
	`lua_pushcfun˘i⁄
(
L
, 
msgh™dÀr
);

202 
	`lua_ö£π
(
L
, 
ba£
);

203 
globÆL
 = 
L
;

204 
	`sig«l
(
SIGINT
, 
œ˘i⁄
);

205 
°©us
 = 
	`lua_pˇŒ
(
L
, 
«rg
, 
ƒes
, 
ba£
);

206 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

207 
	`lua_ªmove
(
L
, 
ba£
);

208  
°©us
;

209 
	}
}

212 
	$¥öt_vîsi⁄
 (
lua_Sèã
 * 
L
) {

213 
	`lua_wrôe°rög
(
L
, 
LUA_COPYRIGHT
, 
	`°æí
(LUA_COPYRIGHT));

214 
	`lua_wrôñöe
(
L
);

215 
	}
}

226 
	$¸óã¨gèbÀ
 (
lua_Sèã
 *
L
, **
¨gv
, 
¨gc
, 
s¸ùt
) {

227 
i
, 
«rg
;

228 i‡(
s¸ùt
 =
¨gc
) script = 0;

229 
«rg
 = 
¨gc
 - (
s¸ùt
 + 1);

230 
	`lua_¸óãèbÀ
(
L
, 
«rg
, 
s¸ùt
 + 1);

231 
i
 = 0; i < 
¨gc
; i++) {

232 
	`lua_push°rög
(
L
, 
¨gv
[
i
]);

233 
	`lua_øw£ti
(
L
, -2, 
i
 - 
s¸ùt
);

235 
	`lua_£tglobÆ
(
L
, "arg");

236 
	}
}

239 
	$dochunk
 (
lua_Sèã
 *
L
, 
°©us
) {

240 i‡(
°©us
 =
LUA_OK
Ë°©u†
	`doˇŒ
(
L
, 0, 0);

241  
	`ªp‹t
(
L
, 
°©us
);

242 
	}
}

245 
	$dofûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

246  
	`dochunk
(
L
, 
	`luaL_lﬂdfûe
(L, 
«me
));

247 
	}
}

250 
	$do°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
«me
) {

251  
	`dochunk
(
L
, 
	`luaL_lﬂdbuf„r
(L, 
s
, 
	`°æí
(s), 
«me
));

252 
	}
}

259 
	$dﬁibøry
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

260 
°©us
;

261 
	`lua_gëglobÆ
(
L
, "require");

262 
	`lua_push°rög
(
L
, 
«me
);

263 
°©us
 = 
	`doˇŒ
(
L
, 1, 1);

264 i‡(
°©us
 =
LUA_OK
)

265 
	`lua_£tglobÆ
(
L
, 
«me
);

266  
	`ªp‹t
(
L
, 
°©us
);

267 
	}
}

273 c⁄° *
	$gë_¥om±
 (
lua_Sèã
 *
L
, 
fú°löe
) {

274 c⁄° *
p
;

275 
	`lua_gëglobÆ
(
L
, 
fú°löe
 ? "_PROMPT" : "_PROMPT2");

276 
p
 = 
	`lua_to°rög
(
L
, -1);

277 i‡(
p
 =
NULL
Ë∞(
fú°löe
 ? 
LUA_PROMPT
 : 
LUA_PROMPT2
);

278  
p
;

279 
	}
}

282 
	#EOFMARK
 "<eof>"

	)

283 
	#m¨kÀn
 ((
EOFMARK
)/(Ë- 1)

	)

291 
	$öcom∂ëe
 (
lua_Sèã
 *
L
, 
°©us
) {

292 i‡(
°©us
 =
LUA_ERRSYNTAX
) {

293 
size_t
 
lmsg
;

294 c⁄° *
msg
 = 
	`lua_tﬁ°rög
(
L
, -1, &
lmsg
);

295 i‡(
lmsg
 >
m¨kÀn
 && 
	`°rcmp
(
msg
 +Ümsg - m¨kÀn, 
EOFMARK
) == 0) {

296 
	`lua_p›
(
L
, 1);

301 
	}
}

307 
	$pushlöe
 (
lua_Sèã
 *
L
, 
fú°löe
) {

308 
buf„r
[
LUA_MAXINPUT
];

309 *
b
 = 
buf„r
;

310 
size_t
 
l
;

311 c⁄° *
¥mt
 = 
	`gë_¥om±
(
L
, 
fú°löe
);

312 
ªad°©us
 = 
	`lua_ªadlöe
(
L
, 
b
, 
¥mt
);

313 i‡(
ªad°©us
 == 0)

315 
	`lua_p›
(
L
, 1);

316 
l
 = 
	`°æí
(
b
);

317 i‡(
l
 > 0 && 
b
[l-1] == '\n')

318 
b
[
l
-1] = '\0';

319 i‡(
fú°löe
 && 
b
[0] == '=')

320 
	`lua_pushf°rög
(
L
, "ªtu∫ %s", 
b
 + 1);

322 
	`lua_push°rög
(
L
, 
b
);

323 
	`lua_‰ìlöe
(
L
, 
b
);

325 
	}
}

332 
	$addªtu∫
 (
lua_Sèã
 *
L
) {

333 
°©us
;

334 
size_t
 
Àn
; c⁄° *
löe
;

335 
	`lua_pushlôîÆ
(
L
, "return ");

336 
	`lua_pushvÆue
(
L
, -2);

337 
	`lua_c⁄ˇt
(
L
, 2);

338 
löe
 = 
	`lua_tﬁ°rög
(
L
, -1, &
Àn
);

339 i‡((
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
Àn
, "=°dö")Ë=
LUA_OK
)

340 
	`lua_ªmove
(
L
, -3);

342 
	`lua_p›
(
L
, 2);

343  
°©us
;

344 
	}
}

350 
	$mu…ûöe
 (
lua_Sèã
 *
L
) {

352 
size_t
 
Àn
;

353 c⁄° *
löe
 = 
	`lua_tﬁ°rög
(
L
, 1, &
Àn
);

354 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
Àn
, "=stdin");

355 i‡(!
	`öcom∂ëe
(
L
, 
°©us
Ë|| !
	`pushlöe
(L, 0))

356  
°©us
;

357 
	`lua_pushlôîÆ
(
L
, "\n");

358 
	`lua_ö£π
(
L
, -2);

359 
	`lua_c⁄ˇt
(
L
, 3);

361 
	}
}

370 
	$lﬂdlöe
 (
lua_Sèã
 *
L
) {

371 
°©us
;

372 
	`lua_£â›
(
L
, 0);

373 i‡(!
	`pushlöe
(
L
, 1))

375 i‡((
°©us
 = 
	`addªtu∫
(
L
)Ë!
LUA_OK
)

376 
°©us
 = 
	`mu…ûöe
(
L
);

377 
	`lua_ßvñöe
(
L
, 1);

378 
	`lua_ªmove
(
L
, 1);

379 
	`lua_as£π
(
	`lua_gët›
(
L
) == 1);

380  
°©us
;

381 
	}
}

387 
	$l_¥öt
 (
lua_Sèã
 *
L
) {

388 
n
 = 
	`lua_gët›
(
L
);

389 i‡(
n
 > 0) {

390 
	`luaL_check°ack
(
L
, 
LUA_MINSTACK
, "too manyÑesultsÅoÖrint");

391 
	`lua_gëglobÆ
(
L
, "print");

392 
	`lua_ö£π
(
L
, 1);

393 i‡(
	`lua_pˇŒ
(
L
, 
n
, 0, 0Ë!
LUA_OK
)

394 
	`l_mesßge
(
¥og«me
, 
	`lua_pushf°rög
(
L
, "error calling 'print' (%s)",

395 
	`lua_to°rög
(
L
, -1)));

397 
	}
}

404 
	$doREPL
 (
lua_Sèã
 *
L
) {

405 
°©us
;

406 c⁄° *
ﬁd¥og«me
 = 
¥og«me
;

407 
¥og«me
 = 
NULL
;

408 (
°©us
 = 
	`lﬂdlöe
(
L
)) != -1) {

409 i‡(
°©us
 =
LUA_OK
)

410 
°©us
 = 
	`doˇŒ
(
L
, 0, 
LUA_MULTRET
);

411 i‡(
°©us
 =
LUA_OK
Ë
	`l_¥öt
(
L
);

412 
	`ªp‹t
(
L
, 
°©us
);

414 
	`lua_£â›
(
L
, 0);

415 
	`lua_wrôñöe
();

416 
¥og«me
 = 
ﬁd¥og«me
;

417 
	}
}

423 
	$push¨gs
 (
lua_Sèã
 *
L
) {

424 
i
, 
n
;

425 i‡(
	`lua_gëglobÆ
(
L
, "¨g"Ë!
LUA_TTABLE
)

426 
	`luaL_îr‹
(
L
, "'arg' isÇotáÅable");

427 
n
 = ()
	`luaL_Àn
(
L
, -1);

428 
	`luaL_check°ack
(
L
, 
n
 + 3, "too manyárgumentsÅo script");

429 
i
 = 1; i <
n
; i++)

430 
	`lua_øwgëi
(
L
, -
i
, i);

431 
	`lua_ªmove
(
L
, -
i
);

432  
n
;

433 
	}
}

436 
	$h™dÀ_s¸ùt
 (
lua_Sèã
 *
L
, **
¨gv
) {

437 
°©us
;

438 c⁄° *
‚ame
 = 
¨gv
[0];

439 i‡(
	`°rcmp
(
‚ame
, "-"Ë=0 && såcmp(
¨gv
[-1], "--") != 0)

440 
‚ame
 = 
NULL
;

441 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
‚ame
);

442 i‡(
°©us
 =
LUA_OK
) {

443 
n
 = 
	`push¨gs
(
L
);

444 
°©us
 = 
	`doˇŒ
(
L
, 
n
, 
LUA_MULTRET
);

446  
	`ªp‹t
(
L
, 
°©us
);

447 
	}
}

452 
	#has_îr‹
 1

	)

453 
	#has_i
 2

	)

454 
	#has_v
 4

	)

455 
	#has_e
 8

	)

456 
	#has_E
 16

	)

464 
	$cﬁÀ˘¨gs
 (**
¨gv
, *
fú°
) {

465 
¨gs
 = 0;

466 
i
;

467 
i
 = 1; 
¨gv
[i] !
NULL
; i++) {

468 *
fú°
 = 
i
;

469 i‡(
¨gv
[
i
][0] != '-')

470  
¨gs
;

471 
¨gv
[
i
][1]) {

473 i‡(
¨gv
[
i
][2] != '\0')

474  
has_îr‹
;

475 *
fú°
 = 
i
 + 1;

476  
¨gs
;

478  
¨gs
;

480 i‡(
¨gv
[
i
][2] != '\0')

481  
has_îr‹
;

482 
¨gs
 |
has_E
;

485 
¨gs
 |
has_i
;

487 i‡(
¨gv
[
i
][2] != '\0')

488  
has_îr‹
;

489 
¨gs
 |
has_v
;

492 
¨gs
 |
has_e
;

494 i‡(
¨gv
[
i
][2] == '\0') {

495 
i
++;

496 i‡(
¨gv
[
i
] =
NULL
 ||árgv[i][0] == '-')

497  
has_îr‹
;

501  
has_îr‹
;

504 *
fú°
 = 
i
;

505  
¨gs
;

506 
	}
}

513 
	$ru«rgs
 (
lua_Sèã
 *
L
, **
¨gv
, 
n
) {

514 
i
;

515 
i
 = 1; i < 
n
; i++) {

516 
°©us
;

517 
›ti⁄
 = 
¨gv
[
i
][1];

518 
	`lua_as£π
(
¨gv
[
i
][0] == '-');

519 i‡(
›ti⁄
 == 'e' || option == 'l') {

520 c⁄° *
exåa
 = 
¨gv
[
i
] + 2;

521 i‡(*
exåa
 ='\0'Ëexå®
¨gv
[++
i
];

522 
	`lua_as£π
(
exåa
 !
NULL
);

523 i‡(
›ti⁄
 == 'e')

524 
°©us
 = 
	`do°rög
(
L
, 
exåa
, "=(commandÜine)");

526 
°©us
 = 
	`dﬁibøry
(
L
, 
exåa
);

527 i‡(
°©us
 !
LUA_OK
)  0;

531 
	}
}

534 
	$h™dÀ_luaöô
 (
lua_Sèã
 *
L
) {

535 c⁄° *
«me
 = "=" 
LUA_INITVARVERSION
;

536 c⁄° *
öô
 = 
	`gëív
(
«me
 + 1);

537 i‡(
öô
 =
NULL
) {

538 
«me
 = "=" 
LUA_INIT_VAR
;

539 
öô
 = 
	`gëív
(
«me
 + 1);

541 i‡(
öô
 =
NULL
Ë 
LUA_OK
;

542 i‡(
öô
[0] == '@')

543  
	`dofûe
(
L
, 
öô
+1);

545  
	`do°rög
(
L
, 
öô
, 
«me
);

546 
	}
}

553 
	$pmaö
 (
lua_Sèã
 *
L
) {

554 
¨gc
 = ()
	`lua_toöãgî
(
L
, 1);

555 **
¨gv
 = (**)
	`lua_tou£rd©a
(
L
, 2);

556 
s¸ùt
;

557 
¨gs
 = 
	`cﬁÀ˘¨gs
(
¨gv
, &
s¸ùt
);

558 
	`luaL_checkvîsi⁄
(
L
);

559 i‡(
¨gv
[0] &&árgv[0][0]Ë
¥og«me
 =árgv[0];

560 i‡(
¨gs
 =
has_îr‹
) {

561 
	`¥öt_ußge
(
L
, 
¨gv
[
s¸ùt
]);

564 i‡(
¨gs
 & 
has_v
)

565 
	`¥öt_vîsi⁄
(
L
);

566 i‡(
¨gs
 & 
has_E
) {

567 
	`lua_pushboﬁón
(
L
, 1);

568 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

570 
	`luaL_›ílibs
(
L
);

571 
	`¸óã¨gèbÀ
(
L
, 
¨gv
, 
¨gc
, 
s¸ùt
);

572 i‡(!(
¨gs
 & 
has_E
)) {

573 i‡(
	`h™dÀ_luaöô
(
L
Ë!
LUA_OK
)

576 i‡(!
	`ru«rgs
(
L
, 
¨gv
, 
s¸ùt
))

578 i‡(
s¸ùt
 < 
¨gc
 &&

579 
	`h™dÀ_s¸ùt
(
L
, 
¨gv
 + 
s¸ùt
Ë!
LUA_OK
)

581 i‡(
¨gs
 & 
has_i
)

582 
	`doREPL
(
L
);

583 i‡(
s¸ùt
 =
¨gc
 && !(
¨gs
 & (
has_e
 | 
has_v
))) {

584 i‡(
	`lua_°dö_is_ây
()) {

585 
	`¥öt_vîsi⁄
(
L
);

586 
	`doREPL
(
L
);

588 
	`dofûe
(
L
, 
NULL
);

590 
	`lua_pushboﬁón
(
L
, 1);

592 
	}
}

595 
	$maö
 (
¨gc
, **
¨gv
) {

596 
°©us
, 
ªsu…
;

597 
lua_Sèã
 *
L
 = 
	`luaL_√w°©e
();

598 i‡(
L
 =
NULL
) {

599 
	`l_mesßge
(
¨gv
[0], "cannot create state:ÇotÉnough memory");

600  
EXIT_FAILURE
;

602 
	`lua_pushcfun˘i⁄
(
L
, &
pmaö
);

603 
	`lua_pushöãgî
(
L
, 
¨gc
);

604 
	`lua_pushlightu£rd©a
(
L
, 
¨gv
);

605 
°©us
 = 
	`lua_pˇŒ
(
L
, 2, 1, 0);

606 
ªsu…
 = 
	`lua_toboﬁón
(
L
, -1);

607 
	`ªp‹t
(
L
, 
°©us
);

608 
	`lua_˛o£
(
L
);

609  (
ªsu…
 && 
°©us
 =
LUA_OK
Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
;

610 
	}
}

	@lib/archive/lua-5.3.0/src/lua.h

9 #i‚de‡
lua_h


10 
	#lua_h


	)

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

16 
	~"luac⁄f.h
"

19 
	#LUA_VERSION_MAJOR
 "5"

	)

20 
	#LUA_VERSION_MINOR
 "3"

	)

21 
	#LUA_VERSION_NUM
 503

	)

22 
	#LUA_VERSION_RELEASE
 "0"

	)

24 
	#LUA_VERSION
 "Lu®" 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

25 
	#LUA_RELEASE
 
LUA_VERSION
 "." 
LUA_VERSION_RELEASE


	)

26 
	#LUA_COPYRIGHT
 
LUA_RELEASE
 " C›yrighà(CË1994-2015 Lua.‹g, PUC-Rio"

	)

27 
	#LUA_AUTHORS
 "R. Iîußlimschy, L. H. dêFigueúedo, W. Cñes"

	)

31 
	#LUA_SIGNATURE
 "\x1bLua"

	)

34 
	#LUA_MULTRET
 (-1)

	)

40 
	#LUA_REGISTRYINDEX
 
LUAI_FIRSTPSEUDOIDX


	)

41 
	#lua_upvÆueödex
(
i
Ë(
LUA_REGISTRYINDEX
 - (i))

	)

45 
	#LUA_OK
 0

	)

46 
	#LUA_YIELD
 1

	)

47 
	#LUA_ERRRUN
 2

	)

48 
	#LUA_ERRSYNTAX
 3

	)

49 
	#LUA_ERRMEM
 4

	)

50 
	#LUA_ERRGCMM
 5

	)

51 
	#LUA_ERRERR
 6

	)

54 
lua_Sèã
 
	tlua_Sèã
;

60 
	#LUA_TNONE
 (-1)

	)

62 
	#LUA_TNIL
 0

	)

63 
	#LUA_TBOOLEAN
 1

	)

64 
	#LUA_TLIGHTUSERDATA
 2

	)

65 
	#LUA_TNUMBER
 3

	)

66 
	#LUA_TSTRING
 4

	)

67 
	#LUA_TTABLE
 5

	)

68 
	#LUA_TFUNCTION
 6

	)

69 
	#LUA_TUSERDATA
 7

	)

70 
	#LUA_TTHREAD
 8

	)

72 
	#LUA_NUMTAGS
 9

	)

77 
	#LUA_MINSTACK
 20

	)

81 
	#LUA_RIDX_MAINTHREAD
 1

	)

82 
	#LUA_RIDX_GLOBALS
 2

	)

83 
	#LUA_RIDX_LAST
 
LUA_RIDX_GLOBALS


	)

87 
LUA_NUMBER
 
	tlua_Numbî
;

91 
LUA_INTEGER
 
	tlua_I¡egî
;

94 
LUA_UNSIGNED
 
	tlua_Unsig√d
;

97 
LUA_KCONTEXT
 
	tlua_KC⁄ãxt
;

103 (*
	tlua_CFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
);

108 (*
	tlua_KFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
, 
	t°©us
, 
	tlua_KC⁄ãxt
 
	t˘x
);

114 c⁄° * (*
	tlua_Ródî
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
, 
	tsize_t
 *
	tsz
);

116 (*
	tlua_Wrôî
Ë(
	tlua_Sèã
 *
	tL
, c⁄° *
	tp
, 
	tsize_t
 
	tsz
, *
	tud
);

122 * (*
	tlua_AŒoc
Ë(*
	tud
, *
	t±r
, 
	tsize_t
 
	tosize
, size_à
	tnsize
);

129 #i‡
	`deföed
(
LUA_USER_H
)

130 #ö˛udê
LUA_USER_H


137 c⁄° 
lua_idít
[];

143 
LUA_API
 
lua_Sèã
 *(
lua_√w°©e
Ë(
lua_AŒoc
 
f
, *
ud
);

144 
LUA_API
 (
lua_˛o£
Ë(
lua_Sèã
 *
L
);

145 
LUA_API
 
lua_Sèã
 *(
lua_√wthªad
Ë÷ua_Sèã *
L
);

147 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_©∑nic
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
);

150 
LUA_API
 c⁄° 
lua_Numbî
 *(
lua_vîsi⁄
Ë(
lua_Sèã
 *
L
);

156 
LUA_API
 (
lua_absödex
Ë(
lua_Sèã
 *
L
, 
idx
);

157 
LUA_API
 (
lua_gët›
Ë(
lua_Sèã
 *
L
);

158 
LUA_API
 (
lua_£â›
Ë(
lua_Sèã
 *
L
, 
idx
);

159 
LUA_API
 (
lua_pushvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

160 
LUA_API
 (
lua_rŸ©e
Ë(
lua_Sèã
 *
L
, 
idx
, 
n
);

161 
LUA_API
 (
lua_c›y
Ë(
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
);

162 
LUA_API
 (
lua_check°ack
Ë(
lua_Sèã
 *
L
, 
n
);

164 
LUA_API
 (
lua_xmove
Ë(
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
);

171 
LUA_API
 (
lua_i¢umbî
Ë(
lua_Sèã
 *
L
, 
idx
);

172 
LUA_API
 (
lua_is°rög
Ë(
lua_Sèã
 *
L
, 
idx
);

173 
LUA_API
 (
lua_iscfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

174 
LUA_API
 (
lua_isöãgî
Ë(
lua_Sèã
 *
L
, 
idx
);

175 
LUA_API
 (
lua_isu£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

176 
LUA_API
 (
lua_ty≥
Ë(
lua_Sèã
 *
L
, 
idx
);

177 
LUA_API
 c⁄° *(
lua_ty≥«me
Ë(
lua_Sèã
 *
L
, 
ç
);

179 
LUA_API
 
	$lua_Numbî
 (
lua_t⁄umbîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

180 
LUA_API
 
	$lua_I¡egî
 (
lua_toöãgîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

181 
LUA_API
 (
lua_toboﬁón
Ë(
lua_Sèã
 *
L
, 
idx
);

182 
LUA_API
 c⁄° *(
lua_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

183 
LUA_API
 
	$size_t
 (
lua_øwÀn
Ë(
lua_Sèã
 *
L
, 
idx
);

184 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_tocfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

185 
LUA_API
 *(
lua_tou£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

186 
LUA_API
 
lua_Sèã
 *(
lua_tŸhªad
Ë÷ua_Sèã *
L
, 
idx
);

187 
LUA_API
 c⁄° *(
lua_t›oöãr
Ë(
lua_Sèã
 *
L
, 
idx
);

194 
	#LUA_OPADD
 0

	)

195 
	#LUA_OPSUB
 1

	)

196 
	#LUA_OPMUL
 2

	)

197 
	#LUA_OPMOD
 3

	)

198 
	#LUA_OPPOW
 4

	)

199 
	#LUA_OPDIV
 5

	)

200 
	#LUA_OPIDIV
 6

	)

201 
	#LUA_OPBAND
 7

	)

202 
	#LUA_OPBOR
 8

	)

203 
	#LUA_OPBXOR
 9

	)

204 
	#LUA_OPSHL
 10

	)

205 
	#LUA_OPSHR
 11

	)

206 
	#LUA_OPUNM
 12

	)

207 
	#LUA_OPBNOT
 13

	)

209 
LUA_API
 (
lua_¨ôh
Ë(
lua_Sèã
 *
L
, 
›
);

211 
	#LUA_OPEQ
 0

	)

212 
	#LUA_OPLT
 1

	)

213 
	#LUA_OPLE
 2

	)

215 
LUA_API
 (
lua_øwequÆ
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
);

216 
LUA_API
 (
lua_com∑ª
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
, 
›
);

222 
LUA_API
 (
lua_pushnû
Ë(
lua_Sèã
 *
L
);

223 
LUA_API
 (
lua_pushnumbî
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
n
);

224 
LUA_API
 (
lua_pushöãgî
Ë(
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
);

225 
LUA_API
 c⁄° *(
lua_pushl°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
);

226 
LUA_API
 c⁄° *(
lua_push°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

227 
LUA_API
 c⁄° *(
lua_pushvf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
,

228 
va_li°
 
¨gp
);

229 
LUA_API
 c⁄° *(
lua_pushf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

230 
LUA_API
 (
lua_pushc˛osuª
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
);

231 
LUA_API
 (
lua_pushboﬁón
Ë(
lua_Sèã
 *
L
, 
b
);

232 
LUA_API
 (
lua_pushlightu£rd©a
Ë(
lua_Sèã
 *
L
, *
p
);

233 
LUA_API
 (
lua_pushthªad
Ë(
lua_Sèã
 *
L
);

239 
LUA_API
 (
lua_gëglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

240 
LUA_API
 (
lua_gëèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

241 
LUA_API
 (
lua_gëfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

242 
LUA_API
 (
lua_gëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

243 
LUA_API
 (
lua_øwgë
Ë(
lua_Sèã
 *
L
, 
idx
);

244 
LUA_API
 (
lua_øwgëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

245 
LUA_API
 (
lua_øwgëp
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

247 
LUA_API
 (
lua_¸óãèbÀ
Ë(
lua_Sèã
 *
L
, 
«º
, 
ƒec
);

248 
LUA_API
 *(
lua_√wu£rd©a
Ë(
lua_Sèã
 *
L
, 
size_t
 
sz
);

249 
LUA_API
 (
lua_gëmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

250 
LUA_API
 (
lua_gëu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

256 
LUA_API
 (
lua_£tglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

257 
LUA_API
 (
lua_£âabÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

258 
LUA_API
 (
lua_£tfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

259 
LUA_API
 (
lua_£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

260 
LUA_API
 (
lua_øw£t
Ë(
lua_Sèã
 *
L
, 
idx
);

261 
LUA_API
 (
lua_øw£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

262 
LUA_API
 (
lua_øw£ç
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

263 
LUA_API
 (
lua_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

264 
LUA_API
 (
lua_£tu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

270 
LUA_API
 (
lua_ˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

271 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

272 
	#lua_ˇŒ
(
L
,
n
,
r
Ë
	`lua_ˇŒk
(L, (n), (r), 0, 
NULL
)

	)

274 
LUA_API
 (
lua_pˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

275 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

276 
	#lua_pˇŒ
(
L
,
n
,
r
,
f
Ë
	`lua_pˇŒk
(L, (n), (r), (f), 0, 
NULL
)

	)

278 
LUA_API
 (
lua_lﬂd
Ë(
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
dt
,

279 c⁄° *
chunk«me
, c⁄° *
mode
);

281 
LUA_API
 (
lua_dump
Ë(
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
);

287 
LUA_API
 (
lua_yõldk
Ë(
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

288 
lua_KFun˘i⁄
 
k
);

289 
LUA_API
 (
lua_ªsume
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rg
);

290 
LUA_API
 (
lua_°©us
Ë(
lua_Sèã
 *
L
);

291 
LUA_API
 (
lua_isyõldabÀ
Ë(
lua_Sèã
 *
L
);

293 
	#lua_yõld
(
L
,
n
Ë
	`lua_yõldk
(L, (n), 0, 
NULL
)

	)

300 
	#LUA_GCSTOP
 0

	)

301 
	#LUA_GCRESTART
 1

	)

302 
	#LUA_GCCOLLECT
 2

	)

303 
	#LUA_GCCOUNT
 3

	)

304 
	#LUA_GCCOUNTB
 4

	)

305 
	#LUA_GCSTEP
 5

	)

306 
	#LUA_GCSETPAUSE
 6

	)

307 
	#LUA_GCSETSTEPMUL
 7

	)

308 
	#LUA_GCISRUNNING
 9

	)

310 
LUA_API
 (
lua_gc
Ë(
lua_Sèã
 *
L
, 
wh©
, 
d©a
);

317 
LUA_API
 (
lua_îr‹
Ë(
lua_Sèã
 *
L
);

319 
LUA_API
 (
lua_√xt
Ë(
lua_Sèã
 *
L
, 
idx
);

321 
LUA_API
 (
lua_c⁄ˇt
Ë(
lua_Sèã
 *
L
, 
n
);

322 
LUA_API
 (
lua_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

324 
LUA_API
 
	$size_t
 (
lua_°rögt⁄umbî
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

326 
LUA_API
 
	$lua_AŒoc
 (
lua_gëÆlocf
Ë(
lua_Sèã
 *
L
, **
ud
);

327 
LUA_API
 (
lua_£èŒocf
Ë(
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
);

337 
	#lua_gëexåa•a˚
(
L
Ë((*)((*)(LË- 
LUA_EXTRASPACE
))

	)

339 
	#lua_t⁄umbî
(
L
,
i
Ë
	`lua_t⁄umbîx
(L,(i),
NULL
)

	)

340 
	#lua_toöãgî
(
L
,
i
Ë
	`lua_toöãgîx
(L,(i),
NULL
)

	)

342 
	#lua_p›
(
L
,
n
Ë
	`lua_£â›
(L, -“)-1)

	)

344 
	#lua_√wèbÀ
(
L
Ë
	`lua_¸óãèbÀ
(L, 0, 0)

	)

346 
	#lua_ªgi°î
(
L
,
n
,
f
Ë(
	`lua_pushcfun˘i⁄
(L, (f)), 
	`lua_£tglobÆ
(L, (n)))

	)

348 
	#lua_pushcfun˘i⁄
(
L
,
f
Ë
	`lua_pushc˛osuª
(L, (f), 0)

	)

350 
	#lua_isfun˘i⁄
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TFUNCTION
)

	)

351 
	#lua_i°abÀ
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTABLE
)

	)

352 
	#lua_i¶ightu£rd©a
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TLIGHTUSERDATA
)

	)

353 
	#lua_i¢û
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNIL
)

	)

354 
	#lua_isboﬁón
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TBOOLEAN
)

	)

355 
	#lua_i°hªad
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTHREAD
)

	)

356 
	#lua_i¢⁄e
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNONE
)

	)

357 
	#lua_i¢⁄e‹nû
(
L
, 
n
Ë(
	`lua_ty≥
(L, (n)Ë<0)

	)

359 
	#lua_pushlôîÆ
(
L
, 
s
) \

360 
	`lua_pushl°rög
(
L
, "" 
s
, ((s)/())-1)

	)

362 
	#lua_pushglobÆèbÀ
(
L
) \

363 
	`lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_RIDX_GLOBALS
)

	)

365 
	#lua_to°rög
(
L
,
i
Ë
	`lua_tﬁ°rög
(L, (i), 
NULL
)

	)

368 
	#lua_ö£π
(
L
,
idx
Ë
	`lua_rŸ©e
(L, (idx), 1)

	)

370 
	#lua_ªmove
(
L
,
idx
Ë(
	`lua_rŸ©e
(L, (idx), -1), 
	`lua_p›
(L, 1))

	)

372 
	#lua_ª∂a˚
(
L
,
idx
Ë(
	`lua_c›y
(L, -1, (idx)), 
	`lua_p›
(L, 1))

	)

382 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

384 
	#lua_pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

385 
	#lua_tounsig√dx
(
L
,
i
,
is
Ë((
lua_Unsig√d
)
	`lua_toöãgîx
(L,i,is))

	)

386 
	#lua_tounsig√d
(
L
,
i
Ë
	`lua_tounsig√dx
(L,(i),
NULL
)

	)

401 
	#LUA_HOOKCALL
 0

	)

402 
	#LUA_HOOKRET
 1

	)

403 
	#LUA_HOOKLINE
 2

	)

404 
	#LUA_HOOKCOUNT
 3

	)

405 
	#LUA_HOOKTAILCALL
 4

	)

411 
	#LUA_MASKCALL
 (1 << 
LUA_HOOKCALL
)

	)

412 
	#LUA_MASKRET
 (1 << 
LUA_HOOKRET
)

	)

413 
	#LUA_MASKLINE
 (1 << 
LUA_HOOKLINE
)

	)

414 
	#LUA_MASKCOUNT
 (1 << 
LUA_HOOKCOUNT
)

	)

416 
lua_Debug
 
	tlua_Debug
;

420 (*
	tlua_Hook
Ë(
	tlua_Sèã
 *
	tL
, 
	tlua_Debug
 *
	t¨
);

423 
LUA_API
 (
lua_gë°ack
Ë(
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
);

424 
LUA_API
 (
lua_gëöfo
Ë(
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
);

425 
LUA_API
 c⁄° *(
lua_gëloˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

426 
LUA_API
 c⁄° *(
lua_£éoˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

427 
LUA_API
 c⁄° *(
lua_gëupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

428 
LUA_API
 c⁄° *(
lua_£tupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

430 
LUA_API
 *(
lua_upvÆueid
Ë(
lua_Sèã
 *
L
, 
fidx
, 
n
);

431 
LUA_API
 (
lua_upvÆuejoö
Ë(
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

432 
fidx2
, 
n2
);

434 
LUA_API
 (
lua_£thook
Ë(
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
);

435 
LUA_API
 
	$lua_Hook
 (
lua_gëhook
Ë(
lua_Sèã
 *
L
);

436 
LUA_API
 (
lua_gëhookmask
Ë(
lua_Sèã
 *
L
);

437 
LUA_API
 (
lua_gëhookcou¡
Ë(
lua_Sèã
 *
L
);

439 
LUA_API
 (
lua_£çriv©e
Ë(
lua_Sèã
 * 
L
, * 
vÆ
) ;

440 
LUA_API
 * (
lua_gë¥iv©e
Ë(
lua_Sèã
 * 
L
);

443 
	slua_Debug
 {

444 
evít
;

445 c⁄° *
«me
;

446 c⁄° *
«mewh©
;

447 c⁄° *
wh©
;

448 c⁄° *
sour˚
;

449 
cuºíéöe
;

450 
löedeföed
;

451 
œ°löedeföed
;

452 
nups
;

453 
≈¨ams
;

454 
isv¨¨g
;

455 
i°aûˇŒ
;

456 
sh‹t_§c
[
LUA_IDSIZE
];

458 
CÆlInfo
 *
i_ci
;

487 
	`lua_ˇŒback_routöe
(*);

	@lib/archive/lua-5.3.0/src/lua.hpp

6 
	~"lua.h
"

7 
	~"luÆib.h
"

8 
	~"œuxlib.h
"

	@lib/archive/lua-5.3.0/src/lua_shell.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

10 
	~<sig«l.h
>

12 
	#lua_c


	)

14 
	~"lua.h
"

15 
	~"l°©e.h
"

17 
	~"œuxlib.h
"

18 
	~"luÆib.h
"

19 
	~"lua-sockë.h
"

20 
	~"lua_shñl.h
"

22 #i‡!
deföed
(
LUA_PROGNAME
)

23 
	#LUA_PROGNAME
 "lua-shñl"

	)

26 #i‡!
deföed
(
LUA_MAXINPUT
)

27 
	#LUA_MAXINPUT
 1024

	)

30 #i‡!
deföed
(
LUA_INIT
)

31 
	#LUA_INIT
 "LUA_INIT"

	)

34 
	#LUA_INITVERSION
 \

35 
LUA_INIT
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

43 #i‡
deföed
(
LUA_USE_READLINE
)

45 
	~<°dio.h
>

46 
	~<ªadlöe/ªadlöe.h
>

47 
	~<ªadlöe/hi°‹y.h
>

48 
	#lua_ªadlöe
(
L
,
b
Ë(()L, ((b)=
	`ªadlöe
(
NULL
)Ë!NULL)

	)

49 
	#lua_ßvñöe
(
L
,
idx
) \

50 i‡(
	`lua_øwÀn
(
L
,
idx
) > 0) \

51 
	`add_hi°‹y
(
	`lua_to°rög
(
L
, 
idx
));

	)

52 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

54 #ñi‡!
deföed
(
lua_ªadlöe
)

56 
	#lua_ªadlöe
(
L
,
b
) \

57 (()
L
, 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
	`_gë_°dö
(L)Ë!
NULL
Ë

	)

58 
	#lua_ßvñöe
(
L
,
idx
Ë{ ()L; ()idx; }

	)

59 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

63 
lua_Sèã
 *
	gglobÆL
 = 
NULL
;

65 c⁄° *
	g¥og«me
 = 
LUA_PROGNAME
;

67 
	$l°›
(
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

68 (Ë
¨
;

69 
	`lua_£thook
(
L
, 
NULL
, 0, 0);

70 
	`luaL_îr‹
(
L
, "interrupted!");

71 
	}
}

73 
	$œ˘i⁄
(
i
) {

74 
	`sig«l
(
i
, 
SIG_DFL
 );

76 
	`lua_£thook
(
globÆL
, 
l°›
, 
LUA_MASKCALL
 | 
LUA_MASKRET
 | 
LUA_MASKCOUNT
, 1);

77 
	}
}

79 
	$l_mesßge
(
lua_Sèã
 * 
L
, c⁄° *
≤ame
, c⁄° *
msg
) {

80 i‡(
≤ame
)

81 
	`lua_wrôe°rögîr‹
("%s: ", 
≤ame
);

82 
	`lua_wrôe°rögîr‹
("%s\n", 
msg
);

83 
	}
}

85 
	$ªp‹t
(
lua_Sèã
 *
L
, 
°©us
) {

86 i‡(
°©us
 !
LUA_OK
 && !
	`lua_i¢û
(
L
, -1)) {

87 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, -1);

88 i‡(
msg
 =
NULL
 )

89 
msg
 = "(error object isÇotá string)";

90 
	`l_mesßge
(
L
, 
¥og«me
, 
msg
);

91 
	`lua_p›
(
L
, 1);

93 
	`lua_gc
(
L
, 
LUA_GCCOLLECT
, 0);

95  
°©us
;

96 
	}
}

99 
	$föÆªp‹t
(
lua_Sèã
 *
L
, 
°©us
) {

100 i‡(
°©us
 !
LUA_OK
) {

101 c⁄° *
msg
 =

102 (
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
Ë? 
	`lua_to°rög
(L, -1Ë: 
NULL
;

103 i‡(
msg
 =
NULL
 )

104 
msg
 = "(error object isÇotá string)";

105 
	`l_mesßge
(
L
, 
¥og«me
, 
msg
);

106 
	`lua_p›
(
L
, 1);

108 
	}
}

110 
	$åa˚back
(
lua_Sèã
 *
L
) {

111 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 1);

112 i‡(
msg
)

113 
	`luaL_åa˚back
(
L
, L, 
msg
, 1);

114 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

115 i‡(!
	`luaL_ˇŒmëa
(
L
, 1, "__tostring"))

116 
	`lua_pushlôîÆ
(
L
, "(noÉrror message)");

119 
	}
}

121 
	$doˇŒ
(
lua_Sèã
 *
L
, 
«rg
, 
ƒes
) {

122 
°©us
;

123 
ba£
 = 
	`lua_gët›
(
L
Ë- 
«rg
;

125 
	`lua_pushcfun˘i⁄
(
L
, 
åa˚back
);

127 
	`lua_ö£π
(
L
, 
ba£
);

128 
globÆL
 = 
L
;

129 
	`sig«l
(
SIGINT
, 
œ˘i⁄
);

130 
°©us
 = 
	`lua_pˇŒ
(
L
, 
«rg
, 
ƒes
, 
ba£
);

131 
	`sig«l
(
SIGINT
, 
SIG_DFL
 );

132 
globÆL
 = 
NULL
;

133 
	`lua_ªmove
(
L
, 
ba£
);

135  
°©us
;

136 
	}
}

138 
	$dofûe
(
lua_Sèã
 *
L
, c⁄° *
«me
) {

139 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
«me
);

140 i‡(
°©us
 =
LUA_OK
)

141 
°©us
 = 
	`doˇŒ
(
L
, 0, 0);

142  
	`ªp‹t
(
L
, 
°©us
);

143 
	}
}

145 
	$do°rög
(
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
«me
) {

146 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), 
«me
);

147 i‡(
°©us
 =
LUA_OK
)

148 
°©us
 = 
	`doˇŒ
(
L
, 0, 0);

149  
	`ªp‹t
(
L
, 
°©us
);

150 
	}
}

152 
	$dﬁibøry
(
lua_Sèã
 *
L
, c⁄° *
«me
) {

153 
°©us
;

154 
	`lua_gëglobÆ
(
L
, "require");

155 
	`lua_push°rög
(
L
, 
«me
);

156 
°©us
 = 
	`doˇŒ
(
L
, 1, 1);

157 i‡(
°©us
 =
LUA_OK
)

158 
	`lua_£tglobÆ
(
L
, 
«me
);

159  
	`ªp‹t
(
L
, 
°©us
);

160 
	}
}

163 
	#EOFMARK
 "<eof>"

	)

164 
	#m¨kÀn
 ((
EOFMARK
)/(Ë- 1)

	)

166 
	$öcom∂ëe
(
lua_Sèã
 *
L
, 
°©us
) {

167 i‡(
°©us
 =
LUA_ERRSYNTAX
) {

168 
size_t
 
lmsg
;

169 c⁄° *
msg
 = 
	`lua_tﬁ°rög
(
L
, -1, &
lmsg
);

170 i‡(
lmsg
 >
m¨kÀn
 && 
	`°rcmp
(
msg
 +Ümsg - m¨kÀn, 
EOFMARK
) == 0) {

171 
	`lua_p›
(
L
, 1);

176 
	}
}

178 
	$pushlöe
(
lua_Sèã
 *
L
, 
fú°löe
) {

179 
buf„r
[
LUA_MAXINPUT
];

180 *
b
 = 
buf„r
;

181 
size_t
 
l
;

183 i‡(
	`lua_ªadlöe
(
L
, 
b
) == 0)

186 
l
 = 
	`°æí
(
b
);

187 i‡(
l
 > 0 && 
b
[l - 1] == '\n')

188 
b
[
l
 - 1] = '\0';

189 i‡(
fú°löe
 && 
b
[0] == '=')

190 
	`lua_pushf°rög
(
L
, "ªtu∫ %s", 
b
 + 1);

192 
	`lua_push°rög
(
L
, 
b
);

193 
	`lua_‰ìlöe
(
L
, 
b
);

196 
	}
}

198 
	$lﬂdlöe
(
lua_Sèã
 *
L
) {

199 
°©us
;

201 
	`lua_£â›
(
L
, 0);

202 i‡(!
	`pushlöe
(
L
, 1))

206 
size_t
 
l
;

207 c⁄° *
löe
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

209 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
l
, "=stdin");

210 i‡(!
	`öcom∂ëe
(
L
, 
°©us
))

213 i‡(!
	`pushlöe
(
L
, 0))

216 
	`lua_pushlôîÆ
(
L
, "\n");

217 
	`lua_ö£π
(
L
, -2);

218 
	`lua_c⁄ˇt
(
L
, 3);

220 
	`lua_ßvñöe
(
L
, 1);

221 
	`lua_ªmove
(
L
, 1);

222  
°©us
;

223 
	}
}

225 
	$dŸty
(
lua_Sèã
 *
L
) {

226 
°©us
;

227 c⁄° *
ﬁd¥og«me
 = 
¥og«me
;

228 
¥og«me
 = 
NULL
;

230 (
°©us
 = 
	`lﬂdlöe
(
L
)) != -1) {

231 i‡(
°©us
 =
LUA_OK
)

232 
°©us
 = 
	`doˇŒ
(
L
, 0, 
LUA_MULTRET
);

233 
	`ªp‹t
(
L
, 
°©us
);

234 i‡(
°©us
 =
LUA_OK
 && 
	`lua_gët›
(
L
) > 0) {

235 
	`luaL_check°ack
(
L
, 
LUA_MINSTACK
, "too manyÑesultsÅoÖrint");

236 
	`lua_gëglobÆ
(
L
, "print");

237 
	`lua_ö£π
(
L
, 1);

238 i‡(
	`lua_pˇŒ
(
L
, 
	`lua_gët›
(L)-1, 0, 0Ë!
LUA_OK
)

239 
	`l_mesßge
(
L
, 
¥og«me
,

240 
	`lua_pushf°rög
(
L
,

241 "îr‹ cÆlög " 
	`LUA_QL
("print") " (%s)",

242 
	`lua_to°rög
(
L
, -1)));

245 
	`lua_£â›
(
L
, 0);

246 
	`lua_wrôñöe
(
L
);

248 
¥og«me
 = 
ﬁd¥og«me
;

249 
	}
}

251 
	$h™dÀ_luaöô
(
lua_Sèã
 *
L
) {

252 c⁄° *
«me
 = "=" 
LUA_INITVERSION
;

253 c⁄° *
öô
 = 
	`gëív
(
«me
 + 1);

254 i‡(
öô
 =
NULL
 ) {

255 
«me
 = "=" 
LUA_INIT
;

256 
öô
 = 
	`gëív
(
«me
 + 1);

258 i‡(
öô
 =
NULL
 )

259  
LUA_OK
;

260 i‡(
öô
[0] == '@')

261  
	`dofûe
(
L
, 
öô
 + 1);

263  
	`do°rög
(
L
, 
öô
, 
«me
);

264 
	}
}

266 
√wlib_t
 
	g√wlibs
[
MAX_NEW_LIBS
];

267 
	g√wlibs_idx
 = 0;

269 
	$lua_√wlib_add
(
√wlib_t
 
n
) {

270 i‡–
√wlibs_idx
 >
MAX_NEW_LIBS
 )

272 
√wlibs
[
√wlibs_idx
++] = 
n
;

274 
	}
}

276 
	$lua_√wlibs_öô
(
lua_Sèã
 * 
L
) {

277 
i
;

279 
i
 = 0; i < 
√wlibs_idx
; i++)

280 
√wlibs
[
i
](
L
);

282 
	}
}

284 
	$pmaö
(
lua_Sèã
 *
L
) {

287 
	`luaL_checkvîsi⁄
(
L
);

289 
	`lua_√wlibs_öô
(
L
);

291 i‡(
	`h™dÀ_luaöô
(
L
Ë!
LUA_OK
)

294 
	`_£t_°dfûes
(
L
, 
	`luaL_gë¥iv©e
(L));

296 
	`dŸty
(
L
);

298 
	`_ª£t_°dfûes
(
L
);

300 
	`lua_pushboﬁón
(
L
, 1);

303 
	}
}

305 
	$lua_shñl
(* 
pSîvî
) {

306 
°©us
, 
ªsu…
;

307 
lua_Sèã
 *
L
;

309 
L
 = 
	`luaL_√w°©e
();

310 i‡(
L
 =
NULL
 ) {

311 
	`l_mesßge
(
NULL
, "Lua-Shell", "cannot create state:ÇotÉnough memory");

312  
EXIT_FAILURE
;

314 
	`luaL_£çriv©e
(
L
, 
pSîvî
);

317 
	`lua_pushcfun˘i⁄
(
L
, &
pmaö
);

318 
°©us
 = 
	`lua_pˇŒ
(
L
, 0, 1, 0);

319 
ªsu…
 = 
	`lua_toboﬁón
(
L
, -1);

320 
	`föÆªp‹t
(
L
, 
°©us
);

321 
	`lua_˛o£
(
L
);

323  (
ªsu…
 && 
°©us
 =
LUA_OK
Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
;

324 
	}
}

339 
	$execuã_lua_°rög
–
lua_Sèã
 * 
L
, * 
buf„r
 )

341 i‡–(
buf„r
 =
NULL
Ë|| (
L
 == NULL) )

344 i‡–
	`luaL_do°rög
(
L
, 
buf„r
) != 0 ) {

345 
	`Ârötf
(
°dîr
,"%s\n", 
	`lua_to°rög
(
L
,-1));

350 
	}
}

365 
	$execuã_lua_˛o£
(
lua_Sèã
 * 
L
)

367 i‡–
L
 )

368 
	`lua_˛o£
(
L
);

369 
	}
}

	@lib/archive/lua-5.3.0/src/lua_shell.h

67 #i‚de‡
LUA_SHELL_H_


68 
	#LUA_SHELL_H_


	)

70 
	#lua_c


	)

71 
	~"lua.h
"

72 
	~"œuxlib.h
"

74 
	#MAX_NEW_LIBS
 16

	)

75 (*
	t√wlib_t
)(
	tlua_Sèã
 * 
	tL
);

77 
	`lua_√wlib_add
(
√wlib_t
 
n
);

78 
	`lua_√wlibs_öô
(
lua_Sèã
 * 
L
);

	@lib/archive/lua-5.3.0/src/luac.c

7 
	#luac_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<˘y≥.h
>

13 
	~<î∫o.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

19 
	~"œuxlib.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

23 
	~"lundump.h
"

25 
PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
);

26 
	#luaU_¥öt
 
PrötFun˘i⁄


	)

28 
	#PROGNAME
 "luac"

	)

29 
	#OUTPUT
 
PROGNAME
 ".out"

	)

31 
	gli°ög
=0;

32 
	gdumpög
=1;

33 
	g°rùpög
=0;

34 
	gOuçut
[]={ 
OUTPUT
 };

35 c⁄° * 
	gouçut
=
Ouçut
;

36 c⁄° * 
	g¥og«me
=
PROGNAME
;

38 
	$Áèl
(c⁄° * 
mesßge
)

40 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

41 
	`exô
(
EXIT_FAILURE
);

42 
	}
}

44 
	$ˇ¬Ÿ
(c⁄° * 
wh©
)

46 
	`Ârötf
(
°dîr
,"%s: c™nŸ %†%s: %s\n",
¥og«me
,
wh©
,
ouçut
,
	`°ªº‹
(
î∫o
));

47 
	`exô
(
EXIT_FAILURE
);

48 
	}
}

50 
	$ußge
(c⁄° * 
mesßge
)

52 i‡(*
mesßge
=='-')

53 
	`Ârötf
(
°dîr
,"%s: uƒecognized o±i⁄ '%s'\n",
¥og«me
,
mesßge
);

55 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

56 
	`Ârötf
(
°dîr
,

66 ,
¥og«me
,
Ouçut
);

67 
	`exô
(
EXIT_FAILURE
);

68 
	}
}

70 
	#IS
(
s
Ë(
	`°rcmp
(
¨gv
[
i
],s)==0)

	)

72 
	$dﬂrgs
(
¨gc
, * 
¨gv
[])

74 
i
;

75 
vîsi⁄
=0;

76 i‡(
¨gv
[0]!=
NULL
 && *¨gv[0]!=0Ë
¥og«me
=argv[0];

77 
i
=1; i<
¨gc
; i++)

79 i‡(*
¨gv
[
i
]!='-')

81 i‡(
	`IS
("--"))

83 ++
i
;

84 i‡(
vîsi⁄
) ++version;

87 i‡(
	`IS
("-"))

89 i‡(
	`IS
("-l"))

90 ++
li°ög
;

91 i‡(
	`IS
("-o"))

93 
ouçut
=
¨gv
[++
i
];

94 i‡(
ouçut
==
NULL
 || *output==0 || (*output=='-' && output[1]!=0))

95 
	`ußge
("'-o'Çeedsárgument");

96 i‡(
	`IS
("-")Ë
ouçut
=
NULL
;

98 i‡(
	`IS
("-p"))

99 
dumpög
=0;

100 i‡(
	`IS
("-s"))

101 
°rùpög
=1;

102 i‡(
	`IS
("-v"))

103 ++
vîsi⁄
;

105 
	`ußge
(
¨gv
[
i
]);

107 i‡(
i
==
¨gc
 && (
li°ög
 || !
dumpög
))

109 
dumpög
=0;

110 
¨gv
[--
i
]=
Ouçut
;

112 i‡(
vîsi⁄
)

114 
	`¥ötf
("%s\n",
LUA_COPYRIGHT
);

115 i‡(
vîsi⁄
==
¨gc
-1Ë
	`exô
(
EXIT_SUCCESS
);

117  
i
;

118 
	}
}

120 
	#FUNCTION
 "(fun˘i⁄(Înd)();"

	)

122 c⁄° * 
	$ªadî
(
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
)

124 
	`UNUSED
(
L
);

125 i‡((*(*)
ud
)--)

127 *
size
=(
FUNCTION
)-1;

128  
FUNCTION
;

132 *
size
=0;

133  
NULL
;

135 
	}
}

137 
	#t›rŸo
(
L
,
i
Ë
	`gë¥Ÿo
(L->
t›
+(i))

	)

139 c⁄° 
PrŸo
* 
	$comböe
(
lua_Sèã
* 
L
, 
n
)

141 i‡(
n
==1)

142  
	`t›rŸo
(
L
,-1);

145 
PrŸo
* 
f
;

146 
i
=
n
;

147 i‡(
	`lua_lﬂd
(
L
,
ªadî
,&
i
,"=(" 
PROGNAME
 ")",
NULL
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

148 
f
=
	`t›rŸo
(
L
,-1);

149 
i
=0; i<
n
; i++)

151 
f
->
p
[
i
]=
	`t›rŸo
(
L
,i-
n
-1);

152 i‡(
f
->
p
[
i
]->
sizeupvÆues
>0Ëf->p[i]->
upvÆues
[0].
ö°ack
=0;

154 
f
->
sizñöeöfo
=0;

155  
f
;

157 
	}
}

159 
	$wrôî
(
lua_Sèã
* 
L
, c⁄° * 
p
, 
size_t
 
size
, * 
u
)

161 
	`UNUSED
(
L
);

162  (
	`fwrôe
(
p
,
size
,1,(
FILE
*)
u
)!=1) && (size!=0);

163 
	}
}

165 
	$pmaö
(
lua_Sèã
* 
L
)

167 
¨gc
=()
	`lua_toöãgî
(
L
,1);

168 ** 
¨gv
=(**)
	`lua_tou£rd©a
(
L
,2);

169 c⁄° 
PrŸo
* 
f
;

170 
i
;

171 i‡(!
	`lua_check°ack
(
L
,
¨gc
)Ë
	`Áèl
("too many input files");

172 
i
=0; i<
¨gc
; i++)

174 c⁄° * 
fûíame
=
	`IS
("-"Ë? 
NULL
 : 
¨gv
[
i
];

175 i‡(
	`luaL_lﬂdfûe
(
L
,
fûíame
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

177 
f
=
	`comböe
(
L
,
¨gc
);

178 i‡(
li°ög
Ë
	`luaU_¥öt
(
f
,listing>1);

179 i‡(
dumpög
)

181 
FILE
* 
D
(
ouçut
==
NULL
Ë? 
°dout
 : 
	`f›í
(output,"wb");

182 i‡(
D
==
NULL
Ë
	`ˇ¬Ÿ
("open");

183 
	`lua_lock
(
L
);

184 
	`luaU_dump
(
L
,
f
,
wrôî
,
D
,
°rùpög
);

185 
	`lua_u∆ock
(
L
);

186 i‡(
	`„º‹
(
D
)Ë
	`ˇ¬Ÿ
("write");

187 i‡(
	`f˛o£
(
D
)Ë
	`ˇ¬Ÿ
("close");

190 
	}
}

192 
	$maö
(
¨gc
, * 
¨gv
[])

194 
lua_Sèã
* 
L
;

195 
i
=
	`dﬂrgs
(
¨gc
,
¨gv
);

196 
¨gc
-=
i
; 
¨gv
+=i;

197 i‡(
¨gc
<=0Ë
	`ußge
("no input files given");

198 
L
=
	`luaL_√w°©e
();

199 i‡(
L
==
NULL
Ë
	`Áèl
("cannot create state:ÇotÉnough memory");

200 
	`lua_pushcfun˘i⁄
(
L
,&
pmaö
);

201 
	`lua_pushöãgî
(
L
,
¨gc
);

202 
	`lua_pushlightu£rd©a
(
L
,
¨gv
);

203 i‡(
	`lua_pˇŒ
(
L
,2,0,0)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

204 
	`lua_˛o£
(
L
);

205  
EXIT_SUCCESS
;

206 
	}
}

214 
	~<˘y≥.h
>

215 
	~<°dio.h
>

217 
	#luac_c


	)

218 
	#LUA_CORE


	)

220 
	~"ldebug.h
"

221 
	~"lobje˘.h
"

222 
	~"l›codes.h
"

224 
	#VOID
(
p
Ë((c⁄° *)’))

	)

226 
	$PrötSåög
(c⁄° 
TSåög
* 
ts
)

228 c⁄° * 
s
=
	`gë°r
(
ts
);

229 
size_t
 
i
,
n
=
ts
->
Àn
;

230 
	`¥ötf
("%c",'"');

231 
i
=0; i<
n
; i++)

233 
c
=()()
s
[
i
];

234 
c
)

236 '"': 
	`¥ötf
("\\\""); ;

237 '\\': 
	`¥ötf
("\\\\"); ;

238 '\a': 
	`¥ötf
("\\a"); ;

239 '\b': 
	`¥ötf
("\\b"); ;

240 '\f': 
	`¥ötf
("\\f"); ;

241 '\n': 
	`¥ötf
("\\n"); ;

242 '\r': 
	`¥ötf
("\\r"); ;

243 '\t': 
	`¥ötf
("\\t"); ;

244 '\v': 
	`¥ötf
("\\v"); ;

245 : i‡(
	`i•röt
(
c
))

246 
	`¥ötf
("%c",
c
);

248 
	`¥ötf
("\\%03d",
c
);

251 
	`¥ötf
("%c",'"');

252 
	}
}

254 
	$PrötC⁄°™t
(c⁄° 
PrŸo
* 
f
, 
i
)

256 c⁄° 
TVÆue
* 
o
=&
f
->
k
[
i
];

257 
	`ây≥
(
o
))

259 
LUA_TNIL
:

260 
	`¥ötf
("nil");

262 
LUA_TBOOLEAN
:

263 
	`¥ötf
(
	`bvÆue
(
o
) ? "true" : "false");

265 
LUA_TNUMFLT
:

267 
buff
[100];

268 
	`•rötf
(
buff
,
LUA_NUMBER_FMT
,
	`ÊtvÆue
(
o
));

269 
	`¥ötf
("%s",
buff
);

270 i‡(
buff
[
	`°r•n
(buff,"-0123456789")]=='\0'Ë
	`¥ötf
(".0");

273 
LUA_TNUMINT
:

274 
	`¥ötf
(
LUA_INTEGER_FMT
,
	`ivÆue
(
o
));

276 
LUA_TSHRSTR
: 
LUA_TLNGSTR
:

277 
	`PrötSåög
(
	`tsvÆue
(
o
));

280 
	`¥ötf
("?Åy≥=%d",
	`ây≥
(
o
));

283 
	}
}

285 
	#UPVALNAME
(
x
Ë((
f
->
upvÆues
[x].
«me
Ë? 
	`gë°r
(f->upvÆues[x].«meË: "-")

	)

286 
	#MYK
(
x
Ë(-1-(x))

	)

288 
	$PrötCode
(c⁄° 
PrŸo
* 
f
)

290 c⁄° 
In°ru˘i⁄
* 
code
=
f
->code;

291 
pc
,
n
=
f
->
sizecode
;

292 
pc
=0;Öc<
n
;Öc++)

294 
In°ru˘i⁄
 
i
=
code
[
pc
];

295 
OpCode
 
o
=
	`GET_OPCODE
(
i
);

296 
a
=
	`GETARG_A
(
i
);

297 
b
=
	`GETARG_B
(
i
);

298 
c
=
	`GETARG_C
(
i
);

299 
ax
=
	`GETARG_Ax
(
i
);

300 
bx
=
	`GETARG_Bx
(
i
);

301 
sbx
=
	`GETARG_sBx
(
i
);

302 
löe
=
	`gëfun˛öe
(
f
,
pc
);

303 
	`¥ötf
("\t%d\t",
pc
+1);

304 i‡(
löe
>0Ë
	`¥ötf
("[%d]\t",line); printf("[-]\t");

305 
	`¥ötf
("%-9s\t",
luaP_›«mes
[
o
]);

306 
	`gëOpMode
(
o
))

308 
iABC
:

309 
	`¥ötf
("%d",
a
);

310 i‡(
	`gëBMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
b
Ë? (
	`MYK
(
	`INDEXK
(b))) : b);

311 i‡(
	`gëCMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
c
Ë? (
	`MYK
(
	`INDEXK
(c))) : c);

313 
iABx
:

314 
	`¥ötf
("%d",
a
);

315 i‡(
	`gëBMode
(
o
)==
OpArgK
Ë
	`¥ötf
(" %d",
	`MYK
(
bx
));

316 i‡(
	`gëBMode
(
o
)==
OpArgU
Ë
	`¥ötf
(" %d",
bx
);

318 
iAsBx
:

319 
	`¥ötf
("%d %d",
a
,
sbx
);

321 
iAx
:

322 
	`¥ötf
("%d",
	`MYK
(
ax
));

325 
o
)

327 
OP_LOADK
:

328 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
bx
);

330 
OP_GETUPVAL
:

331 
OP_SETUPVAL
:

332 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

334 
OP_GETTABUP
:

335 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

336 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

338 
OP_SETTABUP
:

339 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
a
));

340 i‡(
	`ISK
(
b
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); }

341 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

343 
OP_GETTABLE
:

344 
OP_SELF
:

345 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

347 
OP_SETTABLE
:

348 
OP_ADD
:

349 
OP_SUB
:

350 
OP_MUL
:

351 
OP_POW
:

352 
OP_DIV
:

353 
OP_IDIV
:

354 
OP_BAND
:

355 
OP_BOR
:

356 
OP_BXOR
:

357 
OP_SHL
:

358 
OP_SHR
:

359 
OP_EQ
:

360 
OP_LT
:

361 
OP_LE
:

362 i‡(
	`ISK
(
b
Ë|| ISK(
c
))

364 
	`¥ötf
("\t; ");

365 i‡(
	`ISK
(
b
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); 
	`¥ötf
("-");

366 
	`¥ötf
(" ");

367 i‡(
	`ISK
(
c
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); 
	`¥ötf
("-");

370 
OP_JMP
:

371 
OP_FORLOOP
:

372 
OP_FORPREP
:

373 
OP_TFORLOOP
:

374 
	`¥ötf
("\t;Åÿ%d",
sbx
+
pc
+2);

376 
OP_CLOSURE
:

377 
	`¥ötf
("\t; %p",
	`VOID
(
f
->
p
[
bx
]));

379 
OP_SETLIST
:

380 i‡(
c
==0Ë
	`¥ötf
("\t; %d",()
code
[++
pc
]); printf("\t; %d",c);

382 
OP_EXTRAARG
:

383 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
ax
);

388 
	`¥ötf
("\n");

390 
	}
}

392 
	#SS
(
x
Ë((x==1)?"":"s")

	)

393 
	#S
(
x
Ë()(x),
	`SS
(x)

	)

395 
	$PrötHódî
(c⁄° 
PrŸo
* 
f
)

397 c⁄° * 
s
=
f
->
sour˚
 ? 
	`gë°r
(f->source) : "=?";

398 i‡(*
s
=='@' || *s=='=')

399 
s
++;

400 i‡(*
s
==
LUA_SIGNATURE
[0])

401 
s
="(bstring)";

403 
s
="(string)";

404 
	`¥ötf
("\n%s <%s:%d,%d> (%d instruction%sát %p)\n",

405 (
f
->
löedeföed
==0)?"maö":"fun˘i⁄",
s
,

406 
f
->
löedeföed
,f->
œ°löedeföed
,

407 
	`S
(
f
->
sizecode
),
	`VOID
(f));

408 
	`¥ötf
("%d%sÖaram%s, %d slot%s, %d upvalue%s, ",

409 ()(
f
->
num∑øms
),f->
is_v¨¨g
?"+":"",
	`SS
(f->numparams),

410 
	`S
(
f
->
max°acksize
),S(f->
sizeupvÆues
));

411 
	`¥ötf
("%dÜocal%s, %d constant%s, %d function%s\n",

412 
	`S
(
f
->
sizñocv¨s
),S(f->
sizek
),S(f->
sizï
));

413 
	}
}

415 
	$PrötDebug
(c⁄° 
PrŸo
* 
f
)

417 
i
,
n
;

418 
n
=
f
->
sizek
;

419 
	`¥ötf
("c⁄°™t†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

420 
i
=0; i<
n
; i++)

422 
	`¥ötf
("\t%d\t",
i
+1);

423 
	`PrötC⁄°™t
(
f
,
i
);

424 
	`¥ötf
("\n");

426 
n
=
f
->
sizñocv¨s
;

427 
	`¥ötf
("loˇl†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

428 
i
=0; i<
n
; i++)

430 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

431 
i
,
	`gë°r
(
f
->
locv¨s
[i].
v¨«me
),f->locv¨s[i].
°¨çc
+1,f->locv¨s[i].
ídpc
+1);

433 
n
=
f
->
sizeupvÆues
;

434 
	`¥ötf
("upvÆue†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

435 
i
=0; i<
n
; i++)

437 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

438 
i
,
	`UPVALNAME
(i),
f
->
upvÆues
[i].
ö°ack
,f->upvÆues[i].
idx
);

440 
	}
}

442 
	$PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
)

444 
i
,
n
=
f
->
sizï
;

445 
	`PrötHódî
(
f
);

446 
	`PrötCode
(
f
);

447 i‡(
fuŒ
Ë
	`PrötDebug
(
f
);

448 
i
=0; i<
n
; i++Ë
	`PrötFun˘i⁄
(
f
->
p
[i],
fuŒ
);

449 
	}
}

	@lib/archive/lua-5.3.0/src/luaconf.h

8 #i‚de‡
luac⁄f_h


9 
	#luac⁄f_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

50 #i‡!
deföed
(
LUA_USE_C89
Ë&& deföed(
_WIN32
Ë&& !deföed(
_WIN32_WCE
)

51 
	#LUA_USE_WINDOWS


	)

55 #i‡
deföed
(
LUA_USE_WINDOWS
)

56 
	#LUA_DL_DLL


	)

57 
	#LUA_USE_C89


	)

61 #i‡
deföed
(
LUA_USE_LINUX
)

62 
	#LUA_USE_POSIX


	)

63 
	#LUA_USE_DLOPEN


	)

64 #unde‡
LUA_USE_READLINE


68 #i‡
deföed
(
LUA_USE_MACOSX
)

69 
	#LUA_USE_POSIX


	)

70 
	#LUA_USE_DLOPEN


	)

71 
	#LUA_USE_READLINE


	)

80 #i‡
deföed
(
LUA_USE_C89
Ë&& !deföed(
LUA_USE_WINDOWS
)

81 
	#LUA_C89_NUMBERS


	)

90 #i‡((
INT_MAX
 >> 15) >> 15) >= 1

91 
	#LUAI_BITSINT
 32

	)

94 
	#LUAI_BITSINT
 16

	)

110 #i‡
deföed
(
LUA_32BITS
)

114 #i‡
LUAI_BITSINT
 >= 32

115 
	#LUA_INT_INT


	)

117 
	#LUA_INT_LONG


	)

119 
	#LUA_REAL_FLOAT


	)

121 #ñi‡
deföed
(
LUA_C89_NUMBERS
)

125 
	#LUA_INT_LONG


	)

126 
	#LUA_REAL_DOUBLE


	)

132 
	#LUA_INT_LONGLONG


	)

133 
	#LUA_REAL_DOUBLE


	)

157 
	#LUA_VDIR
 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

158 #i‡
deföed
(
_WIN32
)

163 
	#LUA_LDIR
 "!\\lua\\"

	)

164 
	#LUA_CDIR
 "!\\"

	)

165 
	#LUA_SHRDIR
 "!\\..\\sh¨e\\lua\\" 
LUA_VDIR
 "\\"

	)

166 
	#LUA_PATH_DEFAULT
 \

167 
LUA_LDIR
"?.lua;" LUA_LDIR"?\\init.lua;" \

168 
LUA_CDIR
"?.lua;" LUA_CDIR"?\\init.lua;" \

169 
LUA_SHRDIR
"?.lua;" LUA_SHRDIR"?\\init.lua;" \

170 ".\\?.lua;" ".\\?\\öô.lua"

	)

171 
	#LUA_CPATH_DEFAULT
 \

172 
LUA_CDIR
"?.dll;" \

173 
LUA_CDIR
"..\\lib\\lua\\" 
LUA_VDIR
 "\\?.dll;" \

174 
LUA_CDIR
"lﬂdÆl.dŒ;" ".\\?.dŒ"

	)

178 
	#LUA_ROOT
 "/u§/loˇl/"

	)

179 
	#LUA_LDIR
 
LUA_ROOT
 "sh¨e/lua/" 
LUA_VDIR
 "/"

	)

180 
	#LUA_CDIR
 
LUA_ROOT
 "lib/lua/" 
LUA_VDIR
 "/"

	)

181 
	#LUA_PATH_DEFAULT
 \

182 
LUA_LDIR
"?.lua;" LUA_LDIR"?/init.lua;" \

183 
LUA_CDIR
"?.lua;" LUA_CDIR"?/init.lua;" \

184 "./?.lua;" "./?/öô.lua"

	)

185 
	#LUA_CPATH_DEFAULT
 \

186 
LUA_CDIR
"?.so;" LUA_CDIR"lﬂdÆl.so;" "./?.so"

	)

195 #i‡
deföed
(
_WIN32
)

196 
	#LUA_DIRSEP
 "\\"

	)

198 
	#LUA_DIRSEP
 "/"

	)

219 #i‡
deföed
(
LUA_BUILD_AS_DLL
)

221 #i‡
deföed
(
LUA_CORE
Ë|| deföed(
LUA_LIB
)

222 
	#LUA_API
 
	`__de˛•ec
(
dŒexp‹t
)

	)

224 
	#LUA_API
 
	`__de˛•ec
(
dŒimp‹t
)

	)

229 
	#LUA_API
 

	)

235 
	#LUALIB_API
 
LUA_API


	)

236 
	#LUAMOD_API
 
LUALIB_API


	)

253 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__*100 + 
__GNUC_MINOR__
) >= 302) && \

254 
	$deföed
(
__ELF__
)

255 
	#LUAI_FUNC
 
	`__©åibuã__
((
	`visibûôy
("hiddí"))Ë

	)

257 
	#LUAI_FUNC
 

	)

260 
	#LUAI_DDEC
 
LUAI_FUNC


	)

261 
	#LUAI_DDEF


	)

278 #i‡
	`deföed
(
LUA_COMPAT_5_2
)

284 
	#LUA_COMPAT_MATHLIB


	)

289 
	#LUA_COMPAT_BITLIB


	)

294 
	#LUA_COMPAT_IPAIRS


	)

301 
	#LUA_COMPAT_APIINTCASTS


	)

315 #i‡
	`deföed
(
LUA_COMPAT_5_1
)

321 
	#LUA_COMPAT_UNPACK


	)

327 
	#LUA_COMPAT_LOADERS


	)

333 
	#lua_˝ˇŒ
(
L
,
f
,
u
) \

334 (
	`lua_pushcfun˘i⁄
(
L
, (
f
)), \

335 
	`lua_pushlightu£rd©a
(
L
,(
u
)), \

336 
	`lua_pˇŒ
(
L
,1,0,0))

	)

343 
	#LUA_COMPAT_LOG10


	)

349 
	#LUA_COMPAT_LOADSTRING


	)

354 
	#LUA_COMPAT_MAXN


	)

361 
	#lua_°æí
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

363 
	#lua_objÀn
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

365 
	#lua_equÆ
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPEQ
)

	)

366 
	#lua_Às°h™
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPLT
)

	)

372 
	#LUA_COMPAT_MODULE


	)

403 #i‡
	`deföed
(
LUA_REAL_FLOAT
)

405 
	#LUA_NUMBER
 

	)

407 
	#LUAI_UACNUMBER
 

	)

409 
	#LUA_NUMBER_FRMLEN
 ""

	)

410 
	#LUA_NUMBER_FMT
 "%.7g"

	)

412 
	#l_m©h›
(
›
Ë›##
f


	)

414 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πof
((s), (p))

	)

417 #ñi‡
	`deföed
(
LUA_REAL_LONGDOUBLE
)

419 
	#LUA_NUMBER
 

	)

421 
	#LUAI_UACNUMBER
 

	)

423 
	#LUA_NUMBER_FRMLEN
 "L"

	)

424 
	#LUA_NUMBER_FMT
 "%.19Lg"

	)

426 
	#l_m©h›
(
›
Ë›##
l


	)

428 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πﬁd
((s), (p))

	)

430 #ñi‡
	`deföed
(
LUA_REAL_DOUBLE
)

432 
	#LUA_NUMBER
 

	)

434 
	#LUAI_UACNUMBER
 

	)

436 
	#LUA_NUMBER_FRMLEN
 ""

	)

437 
	#LUA_NUMBER_FMT
 "%.14g"

	)

439 
	#l_m©h›
(
›
Ë
	)
op

441 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πod
((s), (p))

	)

450 
	#l_Êo‹
(
x
Ë(
	`l_m©h›
(
Êo‹
)(x))

	)

452 
	#lua_numbî2°r
(
s
,
n
Ë
	`•rötf
((s), 
LUA_NUMBER_FMT
, (n))

	)

463 
	#lua_numbîtoöãgî
(
n
,
p
) \

464 ((
n
Ë>(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

465 (
n
Ë< -(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

466 (*(
p
Ë(
LUA_INTEGER
)(
n
), 1))

	)

475 #i‡
	`deföed
(
lobje˘_c
Ë|| deföed(
lvm_c
)

476 
	~<m©h.h
>

479 
	#luai_numidiv
(
L
,
a
,
b
Ë(()L, 
	`l_m©h›
(
Êo‹
)(
	`luai_numdiv
(L,a,b)))

	)

488 
	#luai_nummod
(
L
,
a
,
b
,
m
) \

489 { (
m
Ë
	`l_m©h›
(
fmod
)(
a
,
b
); i‡((m)*(bË< 0Ë(mË+(b); 
	}

	)
}

492 
	#luai_numpow
(
L
,
a
,
b
Ë(()L, 
	`l_m©h›
(
pow
)◊,b))

	)

497 #i‡
deföed
(
LUA_CORE
)

498 
	#luai_numadd
(
L
,
a
,
b
Ë(◊)+(b))

	)

499 
	#luai_numsub
(
L
,
a
,
b
Ë(◊)-(b))

	)

500 
	#luai_nummul
(
L
,
a
,
b
Ë(◊)*(b))

	)

501 
	#luai_numdiv
(
L
,
a
,
b
Ë(◊)/(b))

	)

502 
	#luai_numunm
(
L
,
a
Ë(-◊))

	)

503 
	#luai_numeq
(
a
,
b
Ë(◊)==(b))

	)

504 
	#luai_num…
(
a
,
b
Ë(◊)<(b))

	)

505 
	#luai_numÀ
(
a
,
b
Ë(◊)<=(b))

	)

506 
	#luai_numi¢™
(
a
Ë(!
	`luai_numeq
(◊), (a)))

	)

527 
	#LUA_INTEGER_FMT
 "%" 
LUA_INTEGER_FRMLEN
 "d"

	)

528 
	#lua_öãgî2°r
(
s
,
n
Ë
	`•rötf
((s), 
LUA_INTEGER_FMT
, (n))

	)

530 
	#LUAI_UACINT
 
LUA_INTEGER


	)

536 
	#LUA_UNSIGNED
 
LUAI_UACINT


	)

541 #i‡
deföed
(
LUA_INT_INT
)

543 
	#LUA_INTEGER
 

	)

544 
	#LUA_INTEGER_FRMLEN
 ""

	)

546 
	#LUA_MAXINTEGER
 
INT_MAX


	)

547 
	#LUA_MININTEGER
 
INT_MIN


	)

549 #ñi‡
deföed
(
LUA_INT_LONG
)

551 
	#LUA_INTEGER
 

	)

552 
	#LUA_INTEGER_FRMLEN
 "l"

	)

554 
	#LUA_MAXINTEGER
 
LONG_MAX


	)

555 
	#LUA_MININTEGER
 
LONG_MIN


	)

557 #ñi‡
deföed
(
LUA_INT_LONGLONG
)

559 #i‡
deföed
(
LLONG_MAX
)

562 
	#LUA_INTEGER
 

	)

563 
	#LUA_INTEGER_FRMLEN
 "Œ"

	)

565 
	#LUA_MAXINTEGER
 
LLONG_MAX


	)

566 
	#LUA_MININTEGER
 
LLONG_MIN


	)

568 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

571 
	#LUA_INTEGER
 
__öt64


	)

572 
	#LUA_INTEGER_FRMLEN
 "I64"

	)

574 
	#LUA_MAXINTEGER
 
_I64_MAX


	)

575 
	#LUA_MININTEGER
 
_I64_MIN


	)

605 #i‡!
deföed
(
LUA_USE_C89
)

606 
	#lua_°rx2numbî
(
s
,
p
Ë
	`lua_°r2numbî
(s,p)

	)

615 #i‡!
deföed
(
LUA_USE_C89
Ë|| deföed(
LUA_USE_WINDOWS
)

616 
	#LUA_USE_AFORMAT


	)

626 #i‡
deföed
(
LUA_USE_C89
Ë|| (deföed(
HUGE_VAL
Ë&& !deföed(
HUGE_VALF
))

627 #unde‡
l_m©h›


628 #unde‡
lua_°r2numbî


629 
	#l_m©h›
(
›
Ë(
lua_Numbî
)›

	)

630 
	#lua_°r2numbî
(
s
,
p
Ë((
lua_Numbî
)
	`°πod
((s), (p)))

	)

640 
	#LUA_KCONTEXT
 
±rdiff_t


	)

642 #i‡!
deföed
(
LUA_USE_C89
Ë&& deföed(
__STDC_VERSION__
) && \

643 
__STDC_VERSION__
 >= 199901L

644 
	~<°döt.h
>

645 #i‡
deföed
 (
INTPTR_MAX
)

646 #unde‡
LUA_KCONTEXT


647 
	#LUA_KCONTEXT
 
öçå_t


	)

668 #i‡
LUAI_BITSINT
 >= 32

669 
	#LUAI_MAXSTACK
 1000000

	)

671 
	#LUAI_MAXSTACK
 15000

	)

675 
	#LUAI_FIRSTPSEUDOIDX
 (-
LUAI_MAXSTACK
 - 1000)

	)

683 
	#LUA_EXTRASPACE
 ((*))

	)

691 
	#LUA_IDSIZE
 60

	)

700 
	#LUAI_MAXSHORTLEN
 40

	)

707 
	#LUAL_BUFFERSIZE
 (()(0x80 * (*Ë* (
lua_I¡egî
)))

	)

717 
	#LUA_QL
(
x
Ë"'" x "'"

	)

718 
	#LUA_QS
 
	`LUA_QL
("%s")

	)

737 #i‡
deföed
(
LUA_LIB
Ë|| deföed(
lua_c
)

738 
	~<°dio.h
>

739 * 
_gë_°dout
(* 
L
);

740 
	#lua_put°rög
(
L
, 
s
Ë(
	`fwrôe
((s), (), 
	`°æí
(s), 
	`_gë_°dout
(L)), 
	`fÊush
(_gë_°dout(L)))

	)

741 
	#lua_wrôe°rög
(
_L
, 
s
,
l
Ë(
	`fwrôe
((s), (), (l), 
	`_gë_°dout
(_L)), 
	`fÊush
(_gë_°dout(
L
)))

	)

742 
	#lua_wrôñöe
(
_L
Ë(
	`lua_wrôe°rög
(_L, "\n", 1), 
	`fÊush
(
	`_gë_°dout
(_L)))

	)

749 * 
_gë_°dîr
(* 
L
);

750 
	#lua_wrôe°rögîr‹
(
_L
, 
s
, 
p
) \

751 (
	`Ârötf
(
	`_gë_°dîr
(
_L
), (
s
), (
p
)), 
	`fÊush
(_gë_°dîr(_L)))

	)

	@lib/archive/lua-5.3.0/src/lualib.h

8 #i‚de‡
luÆib_h


9 
	#luÆib_h


	)

11 
	~"lua.h
"

15 
LUAMOD_API
 (
lua›í_ba£
Ë(
lua_Sèã
 *
L
);

17 
	#LUA_COLIBNAME
 "c‹outöe"

	)

18 
LUAMOD_API
 (
lua›í_c‹outöe
Ë(
lua_Sèã
 *
L
);

20 
	#LUA_TABLIBNAME
 "èbÀ"

	)

21 
LUAMOD_API
 (
lua›í_èbÀ
Ë(
lua_Sèã
 *
L
);

23 
	#LUA_IOLIBNAME
 "io"

	)

24 
LUAMOD_API
 (
lua›í_io
Ë(
lua_Sèã
 *
L
);

26 
	#LUA_OSLIBNAME
 "os"

	)

27 
LUAMOD_API
 (
lua›í_os
Ë(
lua_Sèã
 *
L
);

29 
	#LUA_STRLIBNAME
 "°rög"

	)

30 
LUAMOD_API
 (
lua›í_°rög
Ë(
lua_Sèã
 *
L
);

32 
	#LUA_UTF8LIBNAME
 "utf8"

	)

33 
LUAMOD_API
 (
lua›í_utf8
Ë(
lua_Sèã
 *
L
);

35 
	#LUA_BITLIBNAME
 "bô32"

	)

36 
LUAMOD_API
 (
lua›í_bô32
Ë(
lua_Sèã
 *
L
);

38 
	#LUA_MATHLIBNAME
 "m©h"

	)

39 
LUAMOD_API
 (
lua›í_m©h
Ë(
lua_Sèã
 *
L
);

41 
	#LUA_DBLIBNAME
 "debug"

	)

42 
LUAMOD_API
 (
lua›í_debug
Ë(
lua_Sèã
 *
L
);

44 
	#LUA_LOADLIBNAME
 "∑ckage"

	)

45 
LUAMOD_API
 (
lua›í_∑ckage
Ë(
lua_Sèã
 *
L
);

49 
LUALIB_API
 (
luaL_›ílibs
Ë(
lua_Sèã
 *
L
);

53 #i‡!
	`deföed
(
lua_as£π
)

54 
	#lua_as£π
(
x
Ë(()0)

	)

	@lib/archive/lua-5.3.0/src/lundump.c

7 
	#lundump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°rög.h
"

23 
	~"lundump.h
"

24 
	~"lzio.h
"

27 #i‡!
deföed
(
luai_vîifycode
)

28 
	#luai_vîifycode
(
L
,
b
,
f
Ë

	)

33 
lua_Sèã
 *
	mL
;

34 
ZIO
 *
	mZ
;

35 
Mbuf„r
 *
	mb
;

36 c⁄° *
	m«me
;

37 } 
	tLﬂdSèã
;

40 
l_n‹ë
 
	$îr‹
(
LﬂdSèã
 *
S
, c⁄° *
why
) {

41 
	`luaO_pushf°rög
(
S
->
L
, "%s: %†¥ecompûed chunk", S->
«me
, 
why
);

42 
	`luaD_throw
(
S
->
L
, 
LUA_ERRSYNTAX
);

43 
	}
}

50 
	#LﬂdVe˘‹
(
S
,
b
,
n
Ë
	`LﬂdBlock
(S,b,“)*((b)[0]))

	)

52 
	$LﬂdBlock
 (
LﬂdSèã
 *
S
, *
b
, 
size_t
 
size
) {

53 i‡(
	`luaZ_ªad
(
S
->
Z
, 
b
, 
size
) != 0)

54 
	`îr‹
(
S
, "truncated");

55 
	}
}

58 
	#LﬂdV¨
(
S
,
x
Ë
	`LﬂdVe˘‹
(S,&x,1)

	)

61 
lu_byã
 
	$LﬂdByã
 (
LﬂdSèã
 *
S
) {

62 
lu_byã
 
x
;

63 
	`LﬂdV¨
(
S
, 
x
);

64  
x
;

65 
	}
}

68 
	$LﬂdI¡
 (
LﬂdSèã
 *
S
) {

69 
x
;

70 
	`LﬂdV¨
(
S
, 
x
);

71  
x
;

72 
	}
}

75 
lua_Numbî
 
	$LﬂdNumbî
 (
LﬂdSèã
 *
S
) {

76 
lua_Numbî
 
x
;

77 
	`LﬂdV¨
(
S
, 
x
);

78  
x
;

79 
	}
}

82 
lua_I¡egî
 
	$LﬂdI¡egî
 (
LﬂdSèã
 *
S
) {

83 
lua_I¡egî
 
x
;

84 
	`LﬂdV¨
(
S
, 
x
);

85  
x
;

86 
	}
}

89 
TSåög
 *
	$LﬂdSåög
 (
LﬂdSèã
 *
S
) {

90 
size_t
 
size
 = 
	`LﬂdByã
(
S
);

91 i‡(
size
 == 0xFF)

92 
	`LﬂdV¨
(
S
, 
size
);

93 i‡(
size
 == 0)

94  
NULL
;

96 *
s
 = 
	`luaZ_›í•a˚
(
S
->
L
, S->
b
, --
size
);

97 
	`LﬂdVe˘‹
(
S
, 
s
, 
size
);

98  
	`luaS_√wl°r
(
S
->
L
, 
s
, 
size
);

100 
	}
}

103 
	$LﬂdCode
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

104 
n
 = 
	`LﬂdI¡
(
S
);

105 
f
->
code
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
In°ru˘i⁄
);

106 
f
->
sizecode
 = 
n
;

107 
	`LﬂdVe˘‹
(
S
, 
f
->
code
, 
n
);

108 
	}
}

111 
LﬂdFun˘i⁄
(
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
);

114 
	$LﬂdC⁄°™ts
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

115 
i
;

116 
n
 = 
	`LﬂdI¡
(
S
);

117 
f
->
k
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
TVÆue
);

118 
f
->
sizek
 = 
n
;

119 
i
 = 0; i < 
n
; i++)

120 
	`£äûvÆue
(&
f
->
k
[
i
]);

121 
i
 = 0; i < 
n
; i++) {

122 
TVÆue
 *
o
 = &
f
->
k
[
i
];

123 
t
 = 
	`LﬂdByã
(
S
);

124 
t
) {

125 
LUA_TNIL
:

126 
	`£äûvÆue
(
o
);

128 
LUA_TBOOLEAN
:

129 
	`£tbvÆue
(
o
, 
	`LﬂdByã
(
S
));

131 
LUA_TNUMFLT
:

132 
	`£tÊtvÆue
(
o
, 
	`LﬂdNumbî
(
S
));

134 
LUA_TNUMINT
:

135 
	`£tivÆue
(
o
, 
	`LﬂdI¡egî
(
S
));

137 
LUA_TSHRSTR
:

138 
LUA_TLNGSTR
:

139 
	`£tsvÆue2n
(
S
->
L
, 
o
, 
	`LﬂdSåög
(S));

142 
	`lua_as£π
(0);

145 
	}
}

148 
	$LﬂdPrŸos
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

149 
i
;

150 
n
 = 
	`LﬂdI¡
(
S
);

151 
f
->
p
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
PrŸo
 *);

152 
f
->
sizï
 = 
n
;

153 
i
 = 0; i < 
n
; i++)

154 
f
->
p
[
i
] = 
NULL
;

155 
i
 = 0; i < 
n
; i++) {

156 
f
->
p
[
i
] = 
	`luaF_√w¥Ÿo
(
S
->
L
);

157 
	`LﬂdFun˘i⁄
(
S
, 
f
->
p
[
i
], f->
sour˚
);

159 
	}
}

162 
	$LﬂdUpvÆues
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

163 
i
, 
n
;

164 
n
 = 
	`LﬂdI¡
(
S
);

165 
f
->
upvÆues
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
UpvÆdesc
);

166 
f
->
sizeupvÆues
 = 
n
;

167 
i
 = 0; i < 
n
; i++)

168 
f
->
upvÆues
[
i
].
«me
 = 
NULL
;

169 
i
 = 0; i < 
n
; i++) {

170 
f
->
upvÆues
[
i
].
ö°ack
 = 
	`LﬂdByã
(
S
);

171 
f
->
upvÆues
[
i
].
idx
 = 
	`LﬂdByã
(
S
);

173 
	}
}

176 
	$LﬂdDebug
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

177 
i
, 
n
;

178 
n
 = 
	`LﬂdI¡
(
S
);

179 
f
->
löeöfo
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, );

180 
f
->
sizñöeöfo
 = 
n
;

181 
	`LﬂdVe˘‹
(
S
, 
f
->
löeöfo
, 
n
);

182 
n
 = 
	`LﬂdI¡
(
S
);

183 
f
->
locv¨s
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
LocV¨
);

184 
f
->
sizñocv¨s
 = 
n
;

185 
i
 = 0; i < 
n
; i++)

186 
f
->
locv¨s
[
i
].
v¨«me
 = 
NULL
;

187 
i
 = 0; i < 
n
; i++) {

188 
f
->
locv¨s
[
i
].
v¨«me
 = 
	`LﬂdSåög
(
S
);

189 
f
->
locv¨s
[
i
].
°¨çc
 = 
	`LﬂdI¡
(
S
);

190 
f
->
locv¨s
[
i
].
ídpc
 = 
	`LﬂdI¡
(
S
);

192 
n
 = 
	`LﬂdI¡
(
S
);

193 
i
 = 0; i < 
n
; i++)

194 
f
->
upvÆues
[
i
].
«me
 = 
	`LﬂdSåög
(
S
);

195 
	}
}

198 
	$LﬂdFun˘i⁄
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
) {

199 
f
->
sour˚
 = 
	`LﬂdSåög
(
S
);

200 i‡(
f
->
sour˚
 =
NULL
)

201 
f
->
sour˚
 = 
psour˚
;

202 
f
->
löedeföed
 = 
	`LﬂdI¡
(
S
);

203 
f
->
œ°löedeföed
 = 
	`LﬂdI¡
(
S
);

204 
f
->
num∑øms
 = 
	`LﬂdByã
(
S
);

205 
f
->
is_v¨¨g
 = 
	`LﬂdByã
(
S
);

206 
f
->
max°acksize
 = 
	`LﬂdByã
(
S
);

207 
	`LﬂdCode
(
S
, 
f
);

208 
	`LﬂdC⁄°™ts
(
S
, 
f
);

209 
	`LﬂdUpvÆues
(
S
, 
f
);

210 
	`LﬂdPrŸos
(
S
, 
f
);

211 
	`LﬂdDebug
(
S
, 
f
);

212 
	}
}

215 
	$checklôîÆ
 (
LﬂdSèã
 *
S
, c⁄° *
s
, c⁄° *
msg
) {

216 
buff
[(
LUA_SIGNATURE
Ë+ (
LUAC_DATA
)];

217 
size_t
 
Àn
 = 
	`°æí
(
s
);

218 
	`LﬂdVe˘‹
(
S
, 
buff
, 
Àn
);

219 i‡(
	`memcmp
(
s
, 
buff
, 
Àn
) != 0)

220 
	`îr‹
(
S
, 
msg
);

221 
	}
}

224 
	$fchecksize
 (
LﬂdSèã
 *
S
, 
size_t
 
size
, c⁄° *
äame
) {

225 i‡(
	`LﬂdByã
(
S
Ë!
size
)

226 
	`îr‹
(
S
, 
	`luaO_pushf°rög
(S->
L
, "%†sizêmism©ch in", 
äame
));

227 
	}
}

230 
	#checksize
(
S
,
t
Ë
	`fchecksize
(S,—),#t)

	)

232 
	$checkHódî
 (
LﬂdSèã
 *
S
) {

233 
	`checklôîÆ
(
S
, 
LUA_SIGNATURE
 + 1, "notá");

234 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_VERSION
)

235 
	`îr‹
(
S
, "version mismatch in");

236 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_FORMAT
)

237 
	`îr‹
(
S
, "format mismatch in");

238 
	`checklôîÆ
(
S
, 
LUAC_DATA
, "corrupted");

239 
	`checksize
(
S
, );

240 
	`checksize
(
S
, 
size_t
);

241 
	`checksize
(
S
, 
In°ru˘i⁄
);

242 
	`checksize
(
S
, 
lua_I¡egî
);

243 
	`checksize
(
S
, 
lua_Numbî
);

244 i‡(
	`LﬂdI¡egî
(
S
Ë!
LUAC_INT
)

245 
	`îr‹
(
S
, "endianness mismatch in");

246 i‡(
	`LﬂdNumbî
(
S
Ë!
LUAC_NUM
)

247 
	`îr‹
(
S
, "float format mismatch in");

248 
	}
}

254 
LClosuª
 *
	$luaU_undump
(
lua_Sèã
 *
L
, 
ZIO
 *
Z
, 
Mbuf„r
 *
buff
,

255 c⁄° *
«me
) {

256 
LﬂdSèã
 
S
;

257 
LClosuª
 *
˛
;

258 i‡(*
«me
 == '@' || *name == '=')

259 
S
.
«me
 =Çame + 1;

260 i‡(*
«me
 =
LUA_SIGNATURE
[0])

261 
S
.
«me
 = "binary string";

263 
S
.
«me
 =Çame;

264 
S
.
L
 = L;

265 
S
.
Z
 = Z;

266 
S
.
b
 = 
buff
;

267 
	`checkHódî
(&
S
);

268 
˛
 = 
	`luaF_√wL˛osuª
(
L
, 
	`LﬂdByã
(&
S
));

269 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

270 
	`ö¸_t›
(
L
);

271 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

272 
	`LﬂdFun˘i⁄
(&
S
, 
˛
->
p
, 
NULL
);

273 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

274 
	`luai_vîifycode
(
L
, 
buff
, 
˛
->
p
);

275  
˛
;

276 
	}
}

	@lib/archive/lua-5.3.0/src/lundump.h

7 #i‚de‡
lundump_h


8 
	#lundump_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

16 
	#LUAC_DATA
 "\x19\x93\r\n\x1a\n"

	)

18 
	#LUAC_INT
 0x5678

	)

19 
	#LUAC_NUM
 
	`ˇ°_num
(370.5)

	)

21 
	#MYINT
(
s
Ë(s[0]-'0')

	)

22 
	#LUAC_VERSION
 (
	`MYINT
(
LUA_VERSION_MAJOR
)*16+MYINT(
LUA_VERSION_MINOR
))

	)

23 
	#LUAC_FORMAT
 0

	)

26 
LUAI_FUNC
 
LClosuª
* 
luaU_undump
 (
lua_Sèã
* 
L
, 
ZIO
* 
Z
, 
Mbuf„r
* 
buff
,

27 c⁄° * 
«me
);

30 
LUAI_FUNC
 
luaU_dump
 (
lua_Sèã
* 
L
, c⁄° 
PrŸo
* 
f
, 
lua_Wrôî
 
w
,

31 * 
d©a
, 
°rù
);

	@lib/archive/lua-5.3.0/src/lutf8lib.c

7 
	#lutf8lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<as£π.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

22 
	#MAXUNICODE
 0x10FFFF

	)

24 
	#isc⁄t
(
p
Ë((*’Ë& 0xC0Ë=0x80)

	)

29 
lua_I¡egî
 
	$u_po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

30 i‡(
pos
 >= 0) Öos;

31 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

32  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

33 
	}
}

39 c⁄° *
	$utf8_decode
 (c⁄° *
o
, *
vÆ
) {

40 
limôs
[] = {0xFF, 0x7F, 0x7FF, 0xFFFF};

41 c⁄° *
s
 = (c⁄° *)
o
;

42 
c
 = 
s
[0];

43 
ªs
 = 0;

44 i‡(
c
 < 0x80)

45 
ªs
 = 
c
;

47 
cou¡
 = 0;

48 
c
 & 0x40) {

49 
cc
 = 
s
[++
cou¡
];

50 i‡((
cc
 & 0xC0) != 0x80)

51  
NULL
;

52 
ªs
 = (ª†<< 6Ë| (
cc
 & 0x3F);

53 
c
 <<= 1;

55 
ªs
 |((
c
 & 0x7FË<< (
cou¡
 * 5));

56 i‡(
cou¡
 > 3 || 
ªs
 > 
MAXUNICODE
 ||Ñe†<
limôs
[count])

57  
NULL
;

58 
s
 +
cou¡
;

60 i‡(
vÆ
Ë*vÆ = 
ªs
;

61  (c⁄° *)
s
 + 1;

62 
	}
}

70 
	$utÊí
 (
lua_Sèã
 *
L
) {

71 
n
 = 0;

72 
size_t
 
Àn
;

73 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

74 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

75 
lua_I¡egî
 
posj
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
Àn
);

76 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 2,

78 
	`luaL_¨gcheck
(
L
, --
posj
 < (
lua_I¡egî
)
Àn
, 3,

80 
posi
 <
posj
) {

81 c⁄° *
s1
 = 
	`utf8_decode
(
s
 + 
posi
, 
NULL
);

82 i‡(
s1
 =
NULL
) {

83 
	`lua_pushnû
(
L
);

84 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

87 
posi
 = 
s1
 - 
s
;

88 
n
++;

90 
	`lua_pushöãgî
(
L
, 
n
);

92 
	}
}

99 
	$codïoöt
 (
lua_Sèã
 *
L
) {

100 
size_t
 
Àn
;

101 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

102 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

103 
lua_I¡egî
 
po£
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
Àn
);

104 
n
;

105 c⁄° *
£
;

106 
	`luaL_¨gcheck
(
L
, 
posi
 >= 1, 2, "out ofÑange");

107 
	`luaL_¨gcheck
(
L
, 
po£
 <(
lua_I¡egî
)
Àn
, 3, "out ofÑange");

108 i‡(
posi
 > 
po£
)  0;

109 
n
 = ()(
po£
 - 
posi
 + 1);

110 i‡(
posi
 + 
n
 <
po£
)

111  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

112 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

113 
n
 = 0;

114 
£
 = 
s
 + 
po£
;

115 
s
 +
posi
 - 1; s < 
£
;) {

116 
code
;

117 
s
 = 
	`utf8_decode
(s, &
code
);

118 i‡(
s
 =
NULL
)

119  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

120 
	`lua_pushöãgî
(
L
, 
code
);

121 
n
++;

123  
n
;

124 
	}
}

127 
	$pushutfch¨
 (
lua_Sèã
 *
L
, 
¨g
) {

128 
lua_I¡egî
 
code
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

129 
	`luaL_¨gcheck
(
L
, 0 <
code
 && codê<
MAXUNICODE
, 
¨g
, "value out ofÑange");

130 
	`lua_pushf°rög
(
L
, "%U", ()
code
);

131 
	}
}

137 
	$utfch¨
 (
lua_Sèã
 *
L
) {

138 
n
 = 
	`lua_gët›
(
L
);

139 i‡(
n
 == 1)

140 
	`pushutfch¨
(
L
, 1);

142 
i
;

143 
luaL_Buf„r
 
b
;

144 
	`luaL_bufföô
(
L
, &
b
);

145 
i
 = 1; i <
n
; i++) {

146 
	`pushutfch¨
(
L
, 
i
);

147 
	`luaL_addvÆue
(&
b
);

149 
	`luaL_pushªsu…
(&
b
);

152 
	}
}

159 
	$byãoff£t
 (
lua_Sèã
 *
L
) {

160 
size_t
 
Àn
;

161 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

162 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

163 
lua_I¡egî
 
posi
 = (
n
 >0Ë? 1 : 
Àn
 + 1;

164 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3,Öosi), 
Àn
);

165 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 3,

167 i‡(
n
 == 0) {

169 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi))Öosi--;

172 i‡(
	`isc⁄t
(
s
 + 
posi
))

173 
	`luaL_îr‹
(
L
, "initialÖosition isá continuation byte");

174 i‡(
n
 < 0) {

175 
n
 < 0 && 
posi
 > 0) {

177 
posi
--;

178 } 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi));

179 
n
++;

183 
n
--;

184 
n
 > 0 && 
posi
 < (
lua_I¡egî
)
Àn
) {

186 
posi
++;

187 } 
	`isc⁄t
(
s
 + 
posi
));

188 
n
--;

192 i‡(
n
 == 0)

193 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

195 
	`lua_pushnû
(
L
);

197 
	}
}

200 
	$ôî_aux
 (
lua_Sèã
 *
L
) {

201 
size_t
 
Àn
;

202 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

203 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 2) - 1;

204 i‡(
n
 < 0)

205 
n
 = 0;

206 i‡(
n
 < (
lua_I¡egî
)
Àn
) {

207 
n
++;

208 
	`isc⁄t
(
s
 + 
n
))Ç++;

210 i‡(
n
 >(
lua_I¡egî
)
Àn
)

213 
code
;

214 c⁄° *
√xt
 = 
	`utf8_decode
(
s
 + 
n
, &
code
);

215 i‡(
√xt
 =
NULL
 || 
	`isc⁄t
(next))

216  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

217 
	`lua_pushöãgî
(
L
, 
n
 + 1);

218 
	`lua_pushöãgî
(
L
, 
code
);

221 
	}
}

224 
	$ôî_codes
 (
lua_Sèã
 *
L
) {

225 
	`luaL_check°rög
(
L
, 1);

226 
	`lua_pushcfun˘i⁄
(
L
, 
ôî_aux
);

227 
	`lua_pushvÆue
(
L
, 1);

228 
	`lua_pushöãgî
(
L
, 0);

230 
	}
}

234 
	#UTF8PATT
 "[\0-\x7F\xC2-\xF4][\x80-\xBF]*"

	)

237 
luaL_Reg
 
	gfuncs
[] = {

238 {"off£t", 
byãoff£t
},

239 {"codïoöt", 
codïoöt
},

240 {"ch¨", 
utfch¨
},

241 {"Àn", 
utÊí
},

242 {"codes", 
ôî_codes
},

244 {"ch¨∑âîn", 
NULL
},

245 {
NULL
, NULL}

249 
LUAMOD_API
 
	$lua›í_utf8
 (
lua_Sèã
 *
L
) {

250 
	`luaL_√wlib
(
L
, 
funcs
);

251 
	`lua_pushlôîÆ
(
L
, 
UTF8PATT
);

252 
	`lua_£tfõld
(
L
, -2, "charpattern");

254 
	}
}

	@lib/archive/lua-5.3.0/src/lvm.c

7 
	#lvm_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<limôs.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"ldebug.h
"

21 
	~"ldo.h
"

22 
	~"lfunc.h
"

23 
	~"lgc.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"…m.h
"

30 
	~"lvm.h
"

38 #i‡!
deföed
(
LUA_FLOORN2I
)

39 
	#LUA_FLOORN2I
 0

	)

44 
	#MAXTAGLOOP
 2000

	)

51 
	$toÊﬂt
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
) {

52 i‡(
	`âisÊﬂt
(
obj
)Ë*
n
 = 
	`ÊtvÆue
(obj);

53 i‡(
	`âisöãgî
(
obj
)) {

54 vﬁ©ûê
lua_Numbî
 
x
 = 
	`ˇ°_num
(
	`ivÆue
(
obj
));

55 *
n
 = 
x
;

58 *
n
 = 0;

62 
	}
}

69 
	$luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
) {

70 
TVÆue
 
v
;

71 i‡(
	`âisöãgî
(
obj
)) {

72 *
n
 = 
	`ˇ°_num
(
	`ivÆue
(
obj
));

75 i‡(
	`cvt2num
(
obj
) &&

76 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`tsvÆue
(obj)->
Àn
 + 1) {

77 *
n
 = 
	`nvÆue
(&
v
);

82 
	}
}

91 
	$toöãgî_aux
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
) {

92 
TVÆue
 
v
;

93 
agaö
:

94 i‡(
	`âisÊﬂt
(
obj
)) {

95 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(
obj
);

96 
lua_Numbî
 
f
 = 
	`l_Êo‹
(
n
);

97 i‡(
n
 !
f
) {

98 i‡(
mode
 == 0)  0;

99 i‡(
mode
 > 1)

100 
f
 += 1;

102  
	`lua_numbîtoöãgî
(
f
, 
p
);

104 i‡(
	`âisöãgî
(
obj
)) {

105 *
p
 = 
	`ivÆue
(
obj
);

108 i‡(
	`cvt2num
(
obj
) &&

109 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`tsvÆue
(obj)->
Àn
 + 1) {

110 
obj
 = &
v
;

111 
agaö
;

114 
	}
}

120 
	$luaV_toöãgî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
) {

121  
	`toöãgî_aux
(
obj
, 
p
, 
LUA_FLOORN2I
);

122 
	}
}

140 
	$f‹limô
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
,Üua_I¡egî 
°ï
,

141 *
°›now
) {

142 *
°›now
 = 0;

143 i‡(!
	`toöãgî_aux
(
obj
, 
p
, (
°ï
 < 0 ? 2 : 1))) {

144 
lua_Numbî
 
n
;

145 i‡(!
	`t⁄umbî
(
obj
, &
n
))

147 i‡(
n
 > 0) {

148 *
p
 = 
LUA_MAXINTEGER
;

149 i‡(
°ï
 < 0Ë*
°›now
 = 1;

152 *
p
 = 
LUA_MININTEGER
;

153 i‡(
°ï
 >0Ë*
°›now
 = 1;

157 
	}
}

164 
	$luaV_gëèbÀ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
, 
StkId
 
vÆ
) {

165 
lo›
;

166 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

167 c⁄° 
TVÆue
 *
tm
;

168 i‡(
	`âi°abÀ
(
t
)) {

169 
TabÀ
 *
h
 = 
	`hvÆue
(
t
);

170 c⁄° 
TVÆue
 *
ªs
 = 
	`luaH_gë
(
h
, 
key
);

171 i‡(!
	`âi¢û
(
ªs
) ||

172 (
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_INDEX
)Ë=
NULL
) {

173 
	`£tobj2s
(
L
, 
vÆ
, 
ªs
);

178 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_INDEX
)))

179 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

180 i‡(
	`âisfun˘i⁄
(
tm
)) {

181 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 1);

184 
t
 = 
tm
;

186 
	`luaG_ru√º‹
(
L
, "gettable chainÅooÜong;ÖossibleÜoop");

187 
	}
}

194 
	$luaV_£âabÀ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
, 
StkId
 
vÆ
) {

195 
lo›
;

196 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

197 c⁄° 
TVÆue
 *
tm
;

198 i‡(
	`âi°abÀ
(
t
)) {

199 
TabÀ
 *
h
 = 
	`hvÆue
(
t
);

200 
TVÆue
 *
ﬁdvÆ
 = 
	`ˇ°
(TVÆuê*, 
	`luaH_gë
(
h
, 
key
));

203 i‡(!
	`âi¢û
(
ﬁdvÆ
) ||

205 ((
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_NEWINDEX
)Ë=
NULL
 &&

207 (
ﬁdvÆ
 !
luaO_nûobje˘
 ||

210 (
ﬁdvÆ
 = 
	`luaH_√wkey
(
L
, 
h
, 
key
), 1)))) {

212 
	`£tobj2t
(
L
, 
ﬁdvÆ
, 
vÆ
);

213 
	`övÆid©eTMˇche
(
h
);

214 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

220 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_NEWINDEX
)))

221 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

223 i‡(
	`âisfun˘i⁄
(
tm
)) {

224 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 0);

227 
t
 = 
tm
;

229 
	`luaG_ru√º‹
(
L
, "settable chainÅooÜong;ÖossibleÜoop");

230 
	}
}

240 
	$l_°rcmp
 (c⁄° 
TSåög
 *
ls
, c⁄° TSåög *
rs
) {

241 c⁄° *
l
 = 
	`gë°r
(
ls
);

242 
size_t
 
Œ
 = 
ls
->
Àn
;

243 c⁄° *
r
 = 
	`gë°r
(
rs
);

244 
size_t
 
Ã
 = 
rs
->
Àn
;

246 
ãmp
 = 
	`°rcﬁl
(
l
, 
r
);

247 i‡(
ãmp
 != 0)

248  
ãmp
;

250 
size_t
 
Àn
 = 
	`°æí
(
l
);

251 i‡(
Àn
 =
Ã
)

252  (
Àn
 =
Œ
) ? 0 : 1;

253 i‡(
Àn
 =
Œ
)

256 
Àn
++;

257 
l
 +
Àn
; 
Œ
 -Àn; 
r
 +Àn; 
Ã
 -=Üen;

260 
	}
}

266 
	$luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

267 
ªs
;

268 
lua_Numbî
 
∆
, 
ƒ
;

269 i‡(
	`âisöãgî
(
l
Ë&&Åtisöãgî(
r
))

270  (
	`ivÆue
(
l
Ë< ivÆue(
r
));

271 i‡(
	`toÊﬂt
(
l
, &
∆
Ë&&ÅoÊﬂt(
r
, &
ƒ
))

272  
	`luai_num…
(
∆
, 
ƒ
);

273 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

274  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) < 0;

275 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LT
)) < 0)

276 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

277  
ªs
;

278 
	}
}

284 
	$luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

285 
ªs
;

286 
lua_Numbî
 
∆
, 
ƒ
;

287 i‡(
	`âisöãgî
(
l
Ë&&Åtisöãgî(
r
))

288  (
	`ivÆue
(
l
Ë<ivÆue(
r
));

289 i‡(
	`toÊﬂt
(
l
, &
∆
Ë&&ÅoÊﬂt(
r
, &
ƒ
))

290  
	`luai_numÀ
(
∆
, 
ƒ
);

291 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

292  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) <= 0;

293 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LE
)) >= 0)

294  
ªs
;

295 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
r
, 
l
, 
TM_LT
)) < 0)

296 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

297  !
ªs
;

298 
	}
}

305 
	$luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
) {

306 c⁄° 
TVÆue
 *
tm
;

307 i‡(
	`ây≥
(
t1
Ë!ây≥(
t2
)) {

308 i‡(
	`ânov
(
t1
Ë!ânov(
t2
Ë||Åäov—1Ë!
LUA_TNUMBER
)

311 
lua_Numbî
 
n1
, 
n2
;

312 
	`lua_as£π
(
	`âi¢umbî
(
t1
Ë&&Åti¢umbî(
t2
));

313 
	`ˇ°_void
(
	`toÊﬂt
(
t1
, &
n1
)); ca°_void—oÊﬂt(
t2
, &
n2
));

314  
	`luai_numeq
(
n1
, 
n2
);

318 
	`ây≥
(
t1
)) {

319 
LUA_TNIL
:  1;

320 
LUA_TNUMINT
:  (
	`ivÆue
(
t1
Ë=ivÆue(
t2
));

321 
LUA_TNUMFLT
:  
	`luai_numeq
(
	`ÊtvÆue
(
t1
), f…vÆue(
t2
));

322 
LUA_TBOOLEAN
:  
	`bvÆue
(
t1
Ë=bvÆue(
t2
);

323 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
t1
Ë=pvÆue(
t2
);

324 
LUA_TLCF
:  
	`fvÆue
(
t1
Ë=fvÆue(
t2
);

325 
LUA_TSHRSTR
:  
	`eqshr°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

326 
LUA_TLNGSTR
:  
	`luaS_eq g°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

327 
LUA_TUSERDATA
: {

328 i‡(
	`uvÆue
(
t1
Ë=uvÆue(
t2
))  1;

329 i‡(
L
 =
NULL
)  0;

330 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

331 i‡(
tm
 =
NULL
)

332 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

335 
LUA_TTABLE
: {

336 i‡(
	`hvÆue
(
t1
Ë=hvÆue(
t2
))  1;

337 i‡(
L
 =
NULL
)  0;

338 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

339 i‡(
tm
 =
NULL
)

340 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

344  
	`gcvÆue
(
t1
Ë=gcvÆue(
t2
);

346 i‡(
tm
 =
NULL
)

348 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t1
, 
t2
, L->
t›
, 1);

349  !
	`l_isÁl£
(
L
->
t›
);

350 
	}
}

354 
	#to°rög
(
L
,
o
) \

355 (
	`âis°rög
(
o
Ë|| (
	`cvt2°r
(oË&& (
	`luaO_to°rög
(
L
, o), 1)))

	)

361 
	$luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
) {

362 
	`lua_as£π
(
tŸÆ
 >= 2);

364 
StkId
 
t›
 = 
L
->top;

365 
n
 = 2;

366 i‡(!(
	`âis°rög
(
t›
-2Ë|| 
	`cvt2°r
—›-2)Ë|| !
	`to°rög
(
L
,Åop-1))

367 
	`luaT_åyböTM
(
L
, 
t›
-2,Å›-1,Å›-2, 
TM_CONCAT
);

368 i‡(
	`tsvÆue
(
t›
-1)->
Àn
 == 0)

369 
	`ˇ°_void
(
	`to°rög
(
L
, 
t›
 - 2));

370 i‡(
	`âis°rög
(
t›
-2Ë&& 
	`tsvÆue
—›-2)->
Àn
 == 0) {

371 
	`£tobjs2s
(
L
, 
t›
 - 2,Åop - 1);

375 
size_t
 
é
 = 
	`tsvÆue
(
t›
-1)->
Àn
;

376 *
buf„r
;

377 
i
;

379 
i
 = 1; i < 
tŸÆ
 && 
	`to°rög
(
L
, 
t›
-i-1); i++) {

380 
size_t
 
l
 = 
	`tsvÆue
(
t›
-
i
-1)->
Àn
;

381 i‡(
l
 >(
MAX_SIZE
/()Ë- 
é
)

382 
	`luaG_ru√º‹
(
L
, "stringÜength overflow");

383 
é
 +
l
;

385 
buf„r
 = 
	`luaZ_›í•a˚
(
L
, &
	`G
(L)->
buff
, 
é
);

386 
é
 = 0;

387 
n
 = 
i
;

389 
size_t
 
l
 = 
	`tsvÆue
(
t›
-
i
)->
Àn
;

390 
	`mem˝y
(
buf„r
+
é
, 
	`svÆue
(
t›
-
i
), 
l
 * ());

391 
é
 +
l
;

392 } --
i
 > 0);

393 
	`£tsvÆue2s
(
L
, 
t›
-
n
, 
	`luaS_√wl°r
(L, 
buf„r
, 
é
));

395 
tŸÆ
 -
n
-1;

396 
L
->
t›
 -
n
-1;

397 } 
tŸÆ
 > 1);

398 
	}
}

404 
	$luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
) {

405 c⁄° 
TVÆue
 *
tm
;

406 
	`ânov
(
rb
)) {

407 
LUA_TTABLE
: {

408 
TabÀ
 *
h
 = 
	`hvÆue
(
rb
);

409 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_LEN
);

410 i‡(
tm
) ;

411 
	`£tivÆue
(
ø
, 
	`luaH_gën
(
h
));

414 
LUA_TSTRING
: {

415 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
Àn
);

419 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
rb
, 
TM_LEN
);

420 i‡(
	`âi¢û
(
tm
))

421 
	`luaG_ty≥îr‹
(
L
, 
rb
, "getÜength of");

425 
	`luaT_ˇŒTM
(
L
, 
tm
, 
rb
,Ñb, 
ø
, 1);

426 
	}
}

435 
lua_I¡egî
 
	$luaV_div
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

436 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

437 i‡(
n
 == 0)

438 
	`luaG_ru√º‹
(
L
, "attemptÅo divide by zero");

439  
	`öt›
(-, 0, 
m
);

442 
lua_I¡egî
 
q
 = 
m
 / 
n
;

443 i‡((
m
 ^ 
n
) < 0 && m %Ç != 0)

444 
q
 -= 1;

445  
q
;

447 
	}
}

455 
lua_I¡egî
 
	$luaV_mod
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

456 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

457 i‡(
n
 == 0)

458 
	`luaG_ru√º‹
(
L
, "attemptÅoÖerform 'n%%0'");

462 
lua_I¡egî
 
r
 = 
m
 % 
n
;

463 i‡(
r
 !0 && (
m
 ^ 
n
) < 0)

464 
r
 +
n
;

465  
r
;

467 
	}
}

471 
	#NBITS
 
	`ˇ°_öt
((
lua_I¡egî
Ë* 
CHAR_BIT
)

	)

476 
lua_I¡egî
 
	$luaV_shi·l
 (
lua_I¡egî
 
x
,Üua_I¡egî 
y
) {

477 i‡(
y
 < 0) {

478 i‡(
y
 <-
NBITS
)  0;

479  
	`öt›
(>>, 
x
, -
y
);

482 i‡(
y
 >
NBITS
)  0;

483  
	`öt›
(<<, 
x
, 
y
);

485 
	}
}

493 
LClosuª
 *
	$gëˇched
 (
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
) {

494 
LClosuª
 *
c
 = 
p
->
ˇche
;

495 i‡(
c
 !
NULL
) {

496 
nup
 = 
p
->
sizeupvÆues
;

497 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

498 
i
;

499 
i
 = 0; i < 
nup
; i++) {

500 
TVÆue
 *
v
 = 
uv
[
i
].
ö°ack
 ? 
ba£
 + uv[i].
idx
 : 
ícup
[uv[i].idx]->v;

501 i‡(
c
->
upvÆs
[
i
]->
v
 != v)

502  
NULL
;

505  
c
;

506 
	}
}

515 
	$push˛osuª
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
,

516 
StkId
 
ø
) {

517 
nup
 = 
p
->
sizeupvÆues
;

518 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

519 
i
;

520 
LClosuª
 *
n˛
 = 
	`luaF_√wL˛osuª
(
L
, 
nup
);

521 
n˛
->
p
 =Ö;

522 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

523 
i
 = 0; i < 
nup
; i++) {

524 i‡(
uv
[
i
].
ö°ack
)

525 
n˛
->
upvÆs
[
i
] = 
	`luaF_födupvÆ
(
L
, 
ba£
 + 
uv
[i].
idx
);

527 
n˛
->
upvÆs
[
i
] = 
ícup
[
uv
[i].
idx
];

528 
n˛
->
upvÆs
[
i
]->
ªfcou¡
++;

531 i‡(!
	`isbœck
(
p
))

532 
p
->
ˇche
 = 
n˛
;

533 
	}
}

539 
	$luaV_föishOp
 (
lua_Sèã
 *
L
) {

540 
CÆlInfo
 *
ci
 = 
L
->ci;

541 
StkId
 
ba£
 = 
ci
->
u
.
l
.base;

542 
In°ru˘i⁄
 
ö°
 = *(
ci
->
u
.
l
.
ßvedpc
 - 1);

543 
OpCode
 
›
 = 
	`GET_OPCODE
(
ö°
);

544 
›
) {

545 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_DIV
: 
OP_IDIV
:

546 
OP_BAND
: 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
:

547 
OP_MOD
: 
OP_POW
:

548 
OP_UNM
: 
OP_BNOT
: 
OP_LEN
:

549 
OP_GETTABUP
: 
OP_GETTABLE
: 
OP_SELF
: {

550 
	`£tobjs2s
(
L
, 
ba£
 + 
	`GETARG_A
(
ö°
), --L->
t›
);

553 
OP_LE
: 
OP_LT
: 
OP_EQ
: {

554 
ªs
 = !
	`l_isÁl£
(
L
->
t›
 - 1);

555 
L
->
t›
--;

557 
	`lua_as£π
(!
	`ISK
(
	`GETARG_B
(
ö°
)));

558 i‡(
›
 =
OP_LE
 &&

559 
	`âi¢û
(
	`luaT_gëtmbyobj
(
L
, 
ba£
 + 
	`GETARG_B
(
ö°
), 
TM_LE
)))

560 
ªs
 = !res;

561 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_JMP
);

562 i‡(
ªs
 !
	`GETARG_A
(
ö°
))

563 
ci
->
u
.
l
.
ßvedpc
++;

566 
OP_CONCAT
: {

567 
StkId
 
t›
 = 
L
->top - 1;

568 
b
 = 
	`GETARG_B
(
ö°
);

569 
tŸÆ
 = 
	`ˇ°_öt
(
t›
 - 1 - (
ba£
 + 
b
));

570 
	`£tobj2s
(
L
, 
t›
 - 2,Åop);

571 i‡(
tŸÆ
 > 1) {

572 
L
->
t›
 =Åop - 1;

573 
	`luaV_c⁄ˇt
(
L
, 
tŸÆ
);

576 
	`£tobj2s
(
L
, 
ci
->
u
.
l
.
ba£
 + 
	`GETARG_A
(
ö°
), L->
t›
 - 1);

577 
L
->
t›
 = 
ci
->top;

580 
OP_TFORCALL
: {

581 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_TFORLOOP
);

582 
L
->
t›
 = 
ci
->top;

585 
OP_CALL
: {

586 i‡(
	`GETARG_C
(
ö°
) - 1 >= 0)

587 
L
->
t›
 = 
ci
->top;

590 
OP_TAILCALL
: 
OP_SETTABUP
: 
OP_SETTABLE
:

592 : 
	`lua_as£π
(0);

594 
	}
}

610 #i‡!
deföed
 
luai_ru¡imecheck


611 
	#luai_ru¡imecheck
(
L
, 
c
Ë

	)

615 
	#RA
(
i
Ë(
ba£
+
	`GETARG_A
(i))

	)

617 
	#RB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_B
(i))

	)

618 
	#RC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_C
(i))

	)

619 
	#RKB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

620 
	`ISK
(
	`GETARG_B
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_B(i)Ë: 
ba£
+GETARG_B(i))

	)

621 
	#RKC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

622 
	`ISK
(
	`GETARG_C
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_C(i)Ë: 
ba£
+GETARG_C(i))

	)

623 
	#KBx
(
i
) \

624 (
k
 + (
	`GETARG_Bx
(
i
Ë!0 ? GETARG_Bx(iË- 1 : 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++)))

	)

628 
	#dojump
(
ci
,
i
,
e
) \

629 { 
a
 = 
	`GETARG_A
(
i
); \

630 i‡(
a
 > 0Ë
	`luaF_˛o£
(
L
, 
ci
->
u
.
l
.
ba£
 +á - 1); \

631 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
Ë+ 
e
; }

	)

634 
	#d⁄extjump
(
ci
Ë{ 
i
 = *ci->
u
.
l
.
ßvedpc
; 
	`dojump
(ci, i, 1); }

	)

637 
	#PrŸe˘
(
x
Ë{ {x;}; 
ba£
 = 
ci
->
u
.
l
.ba£; }

	)

639 
	#checkGC
(
L
,
c
) \

640 
	`PrŸe˘
–
	`luaC_c⁄dGC
(
L
,{L->
t›
 = (
c
); \

641 
	`luaC_°ï
(
L
); \

642 
L
->
t›
 = 
ci
->top;}) \

643 
	`luai_thªadyõld
(
L
); )

	)

646 
	#vmdi•©ch
(
o
Ëo)

	)

647 
	#vmˇ£
(
l
Ël:

	)

648 
	#vmbªak
 

	)

650 
	$luaV_execuã
 (
lua_Sèã
 *
L
) {

651 
CÆlInfo
 *
ci
 = 
L
->ci;

652 
LClosuª
 *
˛
;

653 
TVÆue
 *
k
;

654 
StkId
 
ba£
;

655 
√w‰ame
:

656 
	`lua_as£π
(
ci
 =
L
->ci);

657 
˛
 = 
	`˛LvÆue
(
ci
->
func
);

658 
k
 = 
˛
->
p
->k;

659 
ba£
 = 
ci
->
u
.
l
.base;

662 
In°ru˘i⁄
 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

663 
StkId
 
ø
;

664 i‡((
L
->
hookmask
 & (
LUA_MASKLINE
 | 
LUA_MASKCOUNT
)) &&

665 (--
L
->
hookcou¡
 =0 || L->
hookmask
 & 
LUA_MASKLINE
)) {

666 
	`PrŸe˘
(
	`luaG_åa˚exec
(
L
));

669 
ø
 = 
	`RA
(
i
);

670 
	`lua_as£π
(
ba£
 =
ci
->
u
.
l
.base);

671 
	`lua_as£π
(
ba£
 <
L
->
t›
 && L->t› < L->
°ack
 + L->
°acksize
);

672 
	`vmdi•©ch
 (
	`GET_OPCODE
(
i
)) {

673 
	`vmˇ£
(
OP_MOVE
) {

674 
	`£tobjs2s
(
L
, 
ø
, 
	`RB
(
i
));

675 
vmbªak
;

677 
	`vmˇ£
(
OP_LOADK
) {

678 
TVÆue
 *
rb
 = 
k
 + 
	`GETARG_Bx
(
i
);

679 
	`£tobj2s
(
L
, 
ø
, 
rb
);

680 
vmbªak
;

682 
	`vmˇ£
(
OP_LOADKX
) {

683 
TVÆue
 *
rb
;

684 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

685 
rb
 = 
k
 + 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

686 
	`£tobj2s
(
L
, 
ø
, 
rb
);

687 
vmbªak
;

689 
	`vmˇ£
(
OP_LOADBOOL
) {

690 
	`£tbvÆue
(
ø
, 
	`GETARG_B
(
i
));

691 i‡(
	`GETARG_C
(
i
)Ë
ci
->
u
.
l
.
ßvedpc
++;

692 
vmbªak
;

694 
	`vmˇ£
(
OP_LOADNIL
) {

695 
b
 = 
	`GETARG_B
(
i
);

697 
	`£äûvÆue
(
ø
++);

698 } 
b
--);

699 
vmbªak
;

701 
	`vmˇ£
(
OP_GETUPVAL
) {

702 
b
 = 
	`GETARG_B
(
i
);

703 
	`£tobj2s
(
L
, 
ø
, 
˛
->
upvÆs
[
b
]->
v
);

704 
vmbªak
;

706 
	`vmˇ£
(
OP_GETTABUP
) {

707 
b
 = 
	`GETARG_B
(
i
);

708 
	`PrŸe˘
(
	`luaV_gëèbÀ
(
L
, 
˛
->
upvÆs
[
b
]->
v
, 
	`RKC
(
i
), 
ø
));

709 
vmbªak
;

711 
	`vmˇ£
(
OP_GETTABLE
) {

712 
	`PrŸe˘
(
	`luaV_gëèbÀ
(
L
, 
	`RB
(
i
), 
	`RKC
(i), 
ø
));

713 
vmbªak
;

715 
	`vmˇ£
(
OP_SETTABUP
) {

716 
a
 = 
	`GETARG_A
(
i
);

717 
	`PrŸe˘
(
	`luaV_£âabÀ
(
L
, 
˛
->
upvÆs
[
a
]->
v
, 
	`RKB
(
i
), 
	`RKC
(i)));

718 
vmbªak
;

720 
	`vmˇ£
(
OP_SETUPVAL
) {

721 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)];

722 
	`£tobj
(
L
, 
uv
->
v
, 
ø
);

723 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

724 
vmbªak
;

726 
	`vmˇ£
(
OP_SETTABLE
) {

727 
	`PrŸe˘
(
	`luaV_£âabÀ
(
L
, 
ø
, 
	`RKB
(
i
), 
	`RKC
(i)));

728 
vmbªak
;

730 
	`vmˇ£
(
OP_NEWTABLE
) {

731 
b
 = 
	`GETARG_B
(
i
);

732 
c
 = 
	`GETARG_C
(
i
);

733 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

734 
	`£thvÆue
(
L
, 
ø
, 
t
);

735 i‡(
b
 !0 || 
c
 != 0)

736 
	`luaH_ªsize
(
L
, 
t
, 
	`luaO_fb2öt
(
b
),ÜuaO_fb2öt(
c
));

737 
	`checkGC
(
L
, 
ø
 + 1);

738 
vmbªak
;

740 
	`vmˇ£
(
OP_SELF
) {

741 
StkId
 
rb
 = 
	`RB
(
i
);

742 
	`£tobjs2s
(
L
, 
ø
+1, 
rb
);

743 
	`PrŸe˘
(
	`luaV_gëèbÀ
(
L
, 
rb
, 
	`RKC
(
i
), 
ø
));

744 
vmbªak
;

746 
	`vmˇ£
(
OP_ADD
) {

747 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

748 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

749 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

750 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

751 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

752 
	`£tivÆue
(
ø
, 
	`öt›
(+, 
ib
, 
ic
));

754 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

755 
	`£tÊtvÆue
(
ø
, 
	`luai_numadd
(
L
, 
nb
, 
nc
));

757 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_ADD
)); }

758 
vmbªak
;

760 
	`vmˇ£
(
OP_SUB
) {

761 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

762 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

763 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

764 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

765 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

766 
	`£tivÆue
(
ø
, 
	`öt›
(-, 
ib
, 
ic
));

768 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

769 
	`£tÊtvÆue
(
ø
, 
	`luai_numsub
(
L
, 
nb
, 
nc
));

771 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SUB
)); }

772 
vmbªak
;

774 
	`vmˇ£
(
OP_MUL
) {

775 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

776 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

777 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

778 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

779 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

780 
	`£tivÆue
(
ø
, 
	`öt›
(*, 
ib
, 
ic
));

782 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

783 
	`£tÊtvÆue
(
ø
, 
	`luai_nummul
(
L
, 
nb
, 
nc
));

785 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MUL
)); }

786 
vmbªak
;

788 
	`vmˇ£
(
OP_DIV
) {

789 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

790 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

791 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

792 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

793 
	`£tÊtvÆue
(
ø
, 
	`luai_numdiv
(
L
, 
nb
, 
nc
));

795 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_DIV
)); }

796 
vmbªak
;

798 
	`vmˇ£
(
OP_BAND
) {

799 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

800 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

801 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

802 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

803 
	`£tivÆue
(
ø
, 
	`öt›
(&, 
ib
, 
ic
));

805 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BAND
)); }

806 
vmbªak
;

808 
	`vmˇ£
(
OP_BOR
) {

809 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

810 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

811 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

812 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

813 
	`£tivÆue
(
ø
, 
	`öt›
(|, 
ib
, 
ic
));

815 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BOR
)); }

816 
vmbªak
;

818 
	`vmˇ£
(
OP_BXOR
) {

819 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

820 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

821 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

822 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

823 
	`£tivÆue
(
ø
, 
	`öt›
(^, 
ib
, 
ic
));

825 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BXOR
)); }

826 
vmbªak
;

828 
	`vmˇ£
(
OP_SHL
) {

829 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

830 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

831 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

832 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

833 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, 
ic
));

835 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHL
)); }

836 
vmbªak
;

838 
	`vmˇ£
(
OP_SHR
) {

839 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

840 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

841 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

842 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

843 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, -
ic
));

845 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHR
)); }

846 
vmbªak
;

848 
	`vmˇ£
(
OP_MOD
) {

849 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

850 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

851 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

852 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

853 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

854 
	`£tivÆue
(
ø
, 
	`luaV_mod
(
L
, 
ib
, 
ic
));

856 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

857 
lua_Numbî
 
m
;

858 
	`luai_nummod
(
L
, 
nb
, 
nc
, 
m
);

859 
	`£tÊtvÆue
(
ø
, 
m
);

861 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MOD
)); }

862 
vmbªak
;

864 
	`vmˇ£
(
OP_IDIV
) {

865 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

866 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

867 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

868 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

869 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

870 
	`£tivÆue
(
ø
, 
	`luaV_div
(
L
, 
ib
, 
ic
));

872 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

873 
	`£tÊtvÆue
(
ø
, 
	`luai_numidiv
(
L
, 
nb
, 
nc
));

875 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_IDIV
)); }

876 
vmbªak
;

878 
	`vmˇ£
(
OP_POW
) {

879 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

880 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

881 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

882 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

883 
	`£tÊtvÆue
(
ø
, 
	`luai_numpow
(
L
, 
nb
, 
nc
));

885 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_POW
)); }

886 
vmbªak
;

888 
	`vmˇ£
(
OP_UNM
) {

889 
TVÆue
 *
rb
 = 
	`RB
(
i
);

890 
lua_Numbî
 
nb
;

891 i‡(
	`âisöãgî
(
rb
)) {

892 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);

893 
	`£tivÆue
(
ø
, 
	`öt›
(-, 0, 
ib
));

895 i‡(
	`t⁄umbî
(
rb
, &
nb
)) {

896 
	`£tÊtvÆue
(
ø
, 
	`luai_numunm
(
L
, 
nb
));

899 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_UNM
));

901 
vmbªak
;

903 
	`vmˇ£
(
OP_BNOT
) {

904 
TVÆue
 *
rb
 = 
	`RB
(
i
);

905 
lua_I¡egî
 
ib
;

906 i‡(
	`toöãgî
(
rb
, &
ib
)) {

907 
	`£tivÆue
(
ø
, 
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
ib
));

910 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_BNOT
));

912 
vmbªak
;

914 
	`vmˇ£
(
OP_NOT
) {

915 
TVÆue
 *
rb
 = 
	`RB
(
i
);

916 
ªs
 = 
	`l_isÁl£
(
rb
);

917 
	`£tbvÆue
(
ø
, 
ªs
);

918 
vmbªak
;

920 
	`vmˇ£
(
OP_LEN
) {

921 
	`PrŸe˘
(
	`luaV_objÀn
(
L
, 
ø
, 
	`RB
(
i
)));

922 
vmbªak
;

924 
	`vmˇ£
(
OP_CONCAT
) {

925 
b
 = 
	`GETARG_B
(
i
);

926 
c
 = 
	`GETARG_C
(
i
);

927 
StkId
 
rb
;

928 
L
->
t›
 = 
ba£
 + 
c
 + 1;

929 
	`PrŸe˘
(
	`luaV_c⁄ˇt
(
L
, 
c
 - 
b
 + 1));

930 
ø
 = 
	`RA
(
i
);

931 
rb
 = 
b
 + 
ba£
;

932 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

933 
	`checkGC
(
L
, (
ø
 >
rb
 ?Ña + 1 :Ñb));

934 
L
->
t›
 = 
ci
->top;

935 
vmbªak
;

937 
	`vmˇ£
(
OP_JMP
) {

938 
	`dojump
(
ci
, 
i
, 0);

939 
vmbªak
;

941 
	`vmˇ£
(
OP_EQ
) {

942 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

943 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

944 
	`PrŸe˘
(

945 i‡(
	`ˇ°_öt
(
	`luaV_equÆobj
(
L
, 
rb
, 
rc
)Ë!
	`GETARG_A
(
i
))

946 
ci
->
u
.
l
.
ßvedpc
++;

948 
	`d⁄extjump
(
ci
);

950 
vmbªak
;

952 
	`vmˇ£
(
OP_LT
) {

953 
	`PrŸe˘
(

954 i‡(
	`luaV_Às°h™
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

955 
ci
->
u
.
l
.
ßvedpc
++;

957 
	`d⁄extjump
(
ci
);

959 
vmbªak
;

961 
	`vmˇ£
(
OP_LE
) {

962 
	`PrŸe˘
(

963 i‡(
	`luaV_Às£quÆ
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

964 
ci
->
u
.
l
.
ßvedpc
++;

966 
	`d⁄extjump
(
ci
);

968 
vmbªak
;

970 
	`vmˇ£
(
OP_TEST
) {

971 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
ø
) : !l_isfalse(ra))

972 
ci
->
u
.
l
.
ßvedpc
++;

974 
	`d⁄extjump
(
ci
);

975 
vmbªak
;

977 
	`vmˇ£
(
OP_TESTSET
) {

978 
TVÆue
 *
rb
 = 
	`RB
(
i
);

979 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
rb
) : !l_isfalse(rb))

980 
ci
->
u
.
l
.
ßvedpc
++;

982 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

983 
	`d⁄extjump
(
ci
);

985 
vmbªak
;

987 
	`vmˇ£
(
OP_CALL
) {

988 
b
 = 
	`GETARG_B
(
i
);

989 
ƒesu…s
 = 
	`GETARG_C
(
i
) - 1;

990 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

991 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
ƒesu…s
)) {

992 i‡(
ƒesu…s
 >0Ë
L
->
t›
 = 
ci
->top;

993 
ba£
 = 
ci
->
u
.
l
.base;

996 
ci
 = 
L
->ci;

997 
ci
->
ˇŒ°©us
 |
CIST_REENTRY
;

998 
√w‰ame
;

1000 
vmbªak
;

1002 
	`vmˇ£
(
OP_TAILCALL
) {

1003 
b
 = 
	`GETARG_B
(
i
);

1004 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1005 
	`lua_as£π
(
	`GETARG_C
(
i
Ë- 1 =
LUA_MULTRET
);

1006 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
LUA_MULTRET
))

1007 
ba£
 = 
ci
->
u
.
l
.base;

1010 
CÆlInfo
 *
nci
 = 
L
->
ci
;

1011 
CÆlInfo
 *
oci
 = 
nci
->
¥evious
;

1012 
StkId
 
nfunc
 = 
nci
->
func
;

1013 
StkId
 
ofunc
 = 
oci
->
func
;

1015 
StkId
 
lim
 = 
nci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
nfunc
)->
num∑øms
;

1016 
aux
;

1018 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
oci
->
u
.
l
.
ba£
);

1020 
aux
 = 0; 
nfunc
 +áux < 
lim
;áux++)

1021 
	`£tobjs2s
(
L
, 
ofunc
 + 
aux
, 
nfunc
 +áux);

1022 
oci
->
u
.
l
.
ba£
 = 
ofunc
 + (
nci
->u.l.ba£ - 
nfunc
);

1023 
oci
->
t›
 = 
L
->t› = 
ofunc
 + (L->t› - 
nfunc
);

1024 
oci
->
u
.
l
.
ßvedpc
 = 
nci
->u.l.savedpc;

1025 
oci
->
ˇŒ°©us
 |
CIST_TAIL
;

1026 
ci
 = 
L
->cò
oci
;

1027 
	`lua_as£π
(
L
->
t›
 =
oci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
ofunc
)->
max°acksize
);

1028 
√w‰ame
;

1030 
vmbªak
;

1032 
	`vmˇ£
(
OP_RETURN
) {

1033 
b
 = 
	`GETARG_B
(
i
);

1034 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b-1;

1035 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
ba£
);

1036 
b
 = 
	`luaD_posˇŒ
(
L
, 
ø
);

1037 i‡(!(
ci
->
ˇŒ°©us
 & 
CIST_REENTRY
))

1040 
ci
 = 
L
->ci;

1041 i‡(
b
Ë
L
->
t›
 = 
ci
->top;

1042 
	`lua_as£π
(
	`isLua
(
ci
));

1043 
	`lua_as£π
(
	`GET_OPCODE
(*((
ci
)->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_CALL
);

1044 
√w‰ame
;

1047 
	`vmˇ£
(
OP_FORLOOP
) {

1048 i‡(
	`âisöãgî
(
ø
)) {

1049 
lua_I¡egî
 
°ï
 = 
	`ivÆue
(
ø
 + 2);

1050 
lua_I¡egî
 
idx
 = 
	`ivÆue
(
ø
Ë+ 
°ï
;

1051 
lua_I¡egî
 
limô
 = 
	`ivÆue
(
ø
 + 1);

1052 i‡((0 < 
°ï
Ë? (
idx
 <
limô
) : (limit <= idx)) {

1053 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1054 
	`£tivÆue
(
ø
, 
idx
);

1055 
	`£tivÆue
(
ø
 + 3, 
idx
);

1059 
lua_Numbî
 
°ï
 = 
	`ÊtvÆue
(
ø
 + 2);

1060 
lua_Numbî
 
idx
 = 
	`luai_numadd
(
L
, 
	`ÊtvÆue
(
ø
), 
°ï
);

1061 
lua_Numbî
 
limô
 = 
	`ÊtvÆue
(
ø
 + 1);

1062 i‡(
	`luai_num…
(0, 
°ï
Ë? 
	`luai_numÀ
(
idx
, 
limô
)

1063 : 
	`luai_numÀ
(
limô
, 
idx
)) {

1064 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1065 
	`£tÊtvÆue
(
ø
, 
idx
);

1066 
	`£tÊtvÆue
(
ø
 + 3, 
idx
);

1069 
vmbªak
;

1071 
	`vmˇ£
(
OP_FORPREP
) {

1072 
TVÆue
 *
öô
 = 
ø
;

1073 
TVÆue
 *
∂imô
 = 
ø
 + 1;

1074 
TVÆue
 *
p°ï
 = 
ø
 + 2;

1075 
lua_I¡egî
 
ûimô
;

1076 
°›now
;

1077 i‡(
	`âisöãgî
(
öô
Ë&&Åtisöãgî(
p°ï
) &&

1078 
	`f‹limô
(
∂imô
, &
ûimô
, 
	`ivÆue
(
p°ï
), &
°›now
)) {

1080 
lua_I¡egî
 
öôv
 = (
°›now
 ? 0 : 
	`ivÆue
(
öô
));

1081 
	`£tivÆue
(
∂imô
, 
ûimô
);

1082 
	`£tivÆue
(
öô
, 
öôv
 - 
	`ivÆue
(
p°ï
));

1085 
lua_Numbî
 
nöô
;Üua_Numbî 
∆imô
;Üua_Numbî 
n°ï
;

1086 i‡(!
	`t⁄umbî
(
∂imô
, &
∆imô
))

1087 
	`luaG_ru√º‹
(
L
, "'for'Üimit must beáÇumber");

1088 
	`£tÊtvÆue
(
∂imô
, 
∆imô
);

1089 i‡(!
	`t⁄umbî
(
p°ï
, &
n°ï
))

1090 
	`luaG_ru√º‹
(
L
, "'for' step must beáÇumber");

1091 
	`£tÊtvÆue
(
p°ï
, 
n°ï
);

1092 i‡(!
	`t⁄umbî
(
öô
, &
nöô
))

1093 
	`luaG_ru√º‹
(
L
, "'for' initial value must beáÇumber");

1094 
	`£tÊtvÆue
(
öô
, 
	`luai_numsub
(
L
, 
nöô
, 
n°ï
));

1096 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1097 
vmbªak
;

1099 
	`vmˇ£
(
OP_TFORCALL
) {

1100 
StkId
 
cb
 = 
ø
 + 3;

1101 
	`£tobjs2s
(
L
, 
cb
+2, 
ø
+2);

1102 
	`£tobjs2s
(
L
, 
cb
+1, 
ø
+1);

1103 
	`£tobjs2s
(
L
, 
cb
, 
ø
);

1104 
L
->
t›
 = 
cb
 + 3;

1105 
	`PrŸe˘
(
	`luaD_ˇŒ
(
L
, 
cb
, 
	`GETARG_C
(
i
), 1));

1106 
L
->
t›
 = 
ci
->top;

1107 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

1108 
ø
 = 
	`RA
(
i
);

1109 
	`lua_as£π
(
	`GET_OPCODE
(
i
Ë=
OP_TFORLOOP
);

1110 
l_tf‹lo›
;

1112 
	`vmˇ£
(
OP_TFORLOOP
) {

1113 
l_tf‹lo›
:

1114 i‡(!
	`âi¢û
(
ø
 + 1)) {

1115 
	`£tobjs2s
(
L
, 
ø
,Ña + 1);

1116 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1118 
vmbªak
;

1120 
	`vmˇ£
(
OP_SETLIST
) {

1121 
n
 = 
	`GETARG_B
(
i
);

1122 
c
 = 
	`GETARG_C
(
i
);

1123 
œ°
;

1124 
TabÀ
 *
h
;

1125 i‡(
n
 =0Ë¿
	`ˇ°_öt
(
L
->
t›
 - 
ø
) - 1;

1126 i‡(
c
 == 0) {

1127 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

1128 
c
 = 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

1130 
	`luai_ru¡imecheck
(
L
, 
	`âi°abÀ
(
ø
));

1131 
h
 = 
	`hvÆue
(
ø
);

1132 
œ°
 = ((
c
-1)*
LFIELDS_PER_FLUSH
Ë+ 
n
;

1133 i‡(
œ°
 > 
h
->
sizóºay
)

1134 
	`luaH_ªsizóºay
(
L
, 
h
, 
œ°
);

1135 ; 
n
 > 0;Ç--) {

1136 
TVÆue
 *
vÆ
 = 
ø
+
n
;

1137 
	`luaH_£töt
(
L
, 
h
, 
œ°
--, 
vÆ
);

1138 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

1140 
L
->
t›
 = 
ci
->top;

1141 
vmbªak
;

1143 
	`vmˇ£
(
OP_CLOSURE
) {

1144 
PrŸo
 *
p
 = 
˛
->p->p[
	`GETARG_Bx
(
i
)];

1145 
LClosuª
 *
n˛
 = 
	`gëˇched
(
p
, 
˛
->
upvÆs
, 
ba£
);

1146 i‡(
n˛
 =
NULL
)

1147 
	`push˛osuª
(
L
, 
p
, 
˛
->
upvÆs
, 
ba£
, 
ø
);

1149 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

1150 
	`checkGC
(
L
, 
ø
 + 1);

1151 
vmbªak
;

1153 
	`vmˇ£
(
OP_VARARG
) {

1154 
b
 = 
	`GETARG_B
(
i
) - 1;

1155 
j
;

1156 
n
 = 
	`ˇ°_öt
(
ba£
 - 
ci
->
func
Ë- 
˛
->
p
->
num∑øms
 - 1;

1157 i‡(
b
 < 0) {

1158 
b
 = 
n
;

1159 
	`PrŸe˘
(
	`luaD_check°ack
(
L
, 
n
));

1160 
ø
 = 
	`RA
(
i
);

1161 
L
->
t›
 = 
ø
 + 
n
;

1163 
j
 = 0; j < 
b
; j++) {

1164 i‡(
j
 < 
n
) {

1165 
	`£tobjs2s
(
L
, 
ø
 + 
j
, 
ba£
 - 
n
 + j);

1168 
	`£äûvÆue
(
ø
 + 
j
);

1171 
vmbªak
;

1173 
	`vmˇ£
(
OP_EXTRAARG
) {

1174 
	`lua_as£π
(0);

1175 
vmbªak
;

1179 
	}
}

	@lib/archive/lua-5.3.0/src/lvm.h

7 #i‚de‡
lvm_h


8 
	#lvm_h


	)

11 
	~"ldo.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

16 #i‡!
deföed
(
LUA_NOCVTN2S
)

17 
	#cvt2°r
(
o
Ë
	`âi¢umbî
(o)

	)

19 
	#cvt2°r
(
o
Ë0

	)

23 #i‡!
deföed
(
LUA_NOCVTS2N
)

24 
	#cvt2num
(
o
Ë
	`âis°rög
(o)

	)

26 
	#cvt2num
(
o
Ë0

	)

30 
	#t⁄umbî
(
o
,
n
) \

31 (
	`âisÊﬂt
(
o
Ë? (*(
n
Ë
	`ÊtvÆue
(o), 1Ë: 
	`luaV_t⁄umbî_
(o,n))

	)

33 
	#toöãgî
(
o
,
i
) \

34 (
	`âisöãgî
(
o
Ë? (*(
i
Ë
	`ivÆue
(o), 1Ë: 
	`luaV_toöãgî_
(o,i))

	)

36 
	#öt›
(
›
,
v1
,
v2
Ë
	`l_ˇ°U2S
(
	`l_ˇ°S2U
(v1Ë›Ü_ˇ°S2U(v2))

	)

38 
	#luaV_øwequÆobj
(
t1
,
t2
Ë
	`luaV_equÆobj
(
NULL
,t1,t2)

	)

41 
LUAI_FUNC
 
luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
);

42 
LUAI_FUNC
 
luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

43 
LUAI_FUNC
 
luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

44 
LUAI_FUNC
 
luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
);

45 
LUAI_FUNC
 
luaV_toöãgî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
);

46 
LUAI_FUNC
 
luaV_gëèbÀ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

47 
StkId
 
vÆ
);

48 
LUAI_FUNC
 
luaV_£âabÀ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

49 
StkId
 
vÆ
);

50 
LUAI_FUNC
 
luaV_föishOp
 (
lua_Sèã
 *
L
);

51 
LUAI_FUNC
 
luaV_execuã
 (
lua_Sèã
 *
L
);

52 
LUAI_FUNC
 
luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
);

53 
LUAI_FUNC
 
lua_I¡egî
 
luaV_div
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

54 
LUAI_FUNC
 
lua_I¡egî
 
luaV_mod
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

55 
LUAI_FUNC
 
lua_I¡egî
 
luaV_shi·l
 (lua_I¡egî 
x
,Üua_I¡egî 
y
);

56 
LUAI_FUNC
 
luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
);

	@lib/archive/lua-5.3.0/src/lzio.c

7 
	#lzio_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"Œimôs.h
"

18 
	~"lmem.h
"

19 
	~"l°©e.h
"

20 
	~"lzio.h
"

23 
	$luaZ_fûl
 (
ZIO
 *
z
) {

24 
size_t
 
size
;

25 
lua_Sèã
 *
L
 = 
z
->L;

26 c⁄° *
buff
;

27 
	`lua_u∆ock
(
L
);

28 
buff
 = 
z
->
	`ªadî
(
L
, z->
d©a
, &
size
);

29 
	`lua_lock
(
L
);

30 i‡(
buff
 =
NULL
 || 
size
 == 0)

31  
EOZ
;

32 
z
->
n
 = 
size
 - 1;

33 
z
->
p
 = 
buff
;

34  
	`ˇ°_uch¨
(*(
z
->
p
++));

35 
	}
}

38 
	$luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
, *
d©a
) {

39 
z
->
L
 = L;

40 
z
->
ªadî
 =Ñeader;

41 
z
->
d©a
 = data;

42 
z
->
n
 = 0;

43 
z
->
p
 = 
NULL
;

44 
	}
}

48 
size_t
 
	$luaZ_ªad
 (
ZIO
 *
z
, *
b
, 
size_t
 
n
) {

49 
n
) {

50 
size_t
 
m
;

51 i‡(
z
->
n
 == 0) {

52 i‡(
	`luaZ_fûl
(
z
Ë=
EOZ
)

53  
n
;

55 
z
->
n
++;

56 
z
->
p
--;

59 
m
 = (
n
 <
z
->n) ?Ç : z->n;

60 
	`mem˝y
(
b
, 
z
->
p
, 
m
);

61 
z
->
n
 -
m
;

62 
z
->
p
 +
m
;

63 
b
 = (*)b + 
m
;

64 
n
 -
m
;

67 
	}
}

70 *
	$luaZ_›í•a˚
 (
lua_Sèã
 *
L
, 
Mbuf„r
 *
buff
, 
size_t
 
n
) {

71 i‡(
n
 > 
buff
->
buffsize
) {

72 i‡(
n
 < 
LUA_MINBUFFER
)Ç = LUA_MINBUFFER;

73 
	`luaZ_ªsizebuf„r
(
L
, 
buff
, 
n
);

75  
buff
->
buf„r
;

76 
	}
}

	@lib/archive/lua-5.3.0/src/lzio.h

8 #i‚de‡
lzio_h


9 
	#lzio_h


	)

11 
	~"lua.h
"

13 
	~"lmem.h
"

16 
	#EOZ
 (-1Ë

	)

18 
Zio
 
	tZIO
;

20 
	#zgëc
(
z
Ë(((z)->
n
--)>0 ? 
	`ˇ°_uch¨
(*(z)->
p
++Ë: 
	`luaZ_fûl
(z))

	)

23 
	sMbuf„r
 {

24 *
	mbuf„r
;

25 
size_t
 
	mn
;

26 
size_t
 
	mbuffsize
;

27 } 
	tMbuf„r
;

29 
	#luaZ_öôbuf„r
(
L
, 
buff
Ë((buff)->
buf„r
 = 
NULL
, (buff)->
buffsize
 = 0)

	)

31 
	#luaZ_buf„r
(
buff
Ë((buff)->
buf„r
)

	)

32 
	#luaZ_sizebuf„r
(
buff
Ë((buff)->
buffsize
)

	)

33 
	#luaZ_bufÊí
(
buff
Ë((buff)->
n
)

	)

35 
	#luaZ_buf‰emove
(
buff
,
i
Ë((buff)->
n
 -(i))

	)

36 
	#luaZ_ª£tbuf„r
(
buff
Ë((buff)->
n
 = 0)

	)

39 
	#luaZ_ªsizebuf„r
(
L
, 
buff
, 
size
) \

40 ((
buff
)->
buf„r
 = 
	`luaM_ªÆlocvch¨
(
L
, (buff)->buffer, \

41 (
buff
)->
buffsize
, 
size
), \

42 (
buff
)->
buffsize
 = 
size
)

	)

44 
	#luaZ_‰ìbuf„r
(
L
, 
buff
Ë
	`luaZ_ªsizebuf„r
(L, buff, 0)

	)

47 
LUAI_FUNC
 *
luaZ_›í•a˚
 (
lua_Sèã
 *
L
, 
Mbuf„r
 *
buff
, 
size_t
 
n
);

48 
LUAI_FUNC
 
luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
,

49 *
d©a
);

50 
LUAI_FUNC
 
size_t
 
luaZ_ªad
 (
ZIO
* 
z
, *
b
, size_à
n
);

56 
	sZio
 {

57 
size_t
 
	mn
;

58 c⁄° *
	mp
;

59 
lua_Ródî
 
	mªadî
;

60 *
	md©a
;

61 
lua_Sèã
 *
	mL
;

65 
LUAI_FUNC
 
luaZ_fûl
 (
ZIO
 *
z
);

	@lib/common/wr_cksum.c

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°döt.h
>

38 
	~<öây≥s.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<uni°d.h
>

41 
	~<°rög.h
>

42 
	~<sys/queue.h
>

43 
	~<√töë/ö.h
>

44 
	~<√t/if.h
>

45 
	~<f˙é.h
>

46 
	~<£tjmp.h
>

47 
	~<°d¨g.h
>

48 
	~<˘y≥.h
>

49 
	~<î∫o.h
>

50 
	~<gë›t.h
>

51 
	~<ãrmios.h
>

52 
	~<sys/io˘l.h
>

53 
	~<libgí.h
>

54 
	~<löux/if_tun.h
>

55 
	~<¨∑/öë.h
>

56 
	~<√tdb.h
>

57 
	~<pﬁl.h
>

58 
	~<as£π.h
>

60 
	~<πe_vîsi⁄.h
>

61 
	~<πe_c⁄fig.h
>

63 
	~<πe_log.h
>

64 
	~<πe_èûq.h
>

65 #i‡
deföed
(
RTE_VER_MAJOR
) && (RTE_VER_MAJOR < 2)

66 
	~<πe_èûq_ñem.h
>

68 
	~<πe_comm⁄.h
>

69 
	~<πe_mem‹y.h
>

70 
	~<πe_mem˝y.h
>

71 
	~<πe_memz⁄e.h
>

72 
	~<πe_mÆloc.h
>

73 
	~<πe_ól.h
>

74 
	~<πe_≥r_lc‹e.h
>

75 
	~<πe_œunch.h
>

76 
	~<πe_©omic.h
>

77 
	~<πe_cy˛es.h
>

78 
	~<πe_¥e„tch.h
>

79 
	~<πe_lc‹e.h
>

80 
	~<πe_≥r_lc‹e.h
>

81 
	~<πe_bønch_¥edi˘i⁄.h
>

82 
	~<πe_pci.h
>

83 
	~<πe_øndom.h
>

84 
	~<πe_timî.h
>

85 
	~<πe_debug.h
>

86 
	~<πe_ëhî.h
>

87 
	~<πe_ëhdev.h
>

88 
	~<πe_rög.h
>

89 
	~<πe_mempoﬁ.h
>

90 
	~<πe_mbuf.h
>

91 
	~<πe_Õm.h
>

92 
	~<πe_°rög_‚s.h
>

93 
	~<πe_byã‹dî.h
>

94 
	~<πe_î∫o.h
>

96 
	~"wr_c›yright_öfo.h
"

97 
	~"wr_p‹t_c⁄fig.h
"

99 
	~"wr_s¸n.h
"

100 
	~"wr_öë.h
"

101 
	~"wr_cy˛es.h
"

102 
	~"wr_mbuf.h
"

103 
	~"wr_cksum.h
"

124 
uöt16_t


125 
	$cksum
(*
pBuf
, 
öt32_t
 
size
, 
uöt32_t
 
cksum
)

127  
	`cksumD⁄e
(
	`cksumUpd©e
(
pBuf
, 
size
, 
cksum
) );

128 
	}
}

150 
uöt32_t


151 
	$cksumUpd©e
(*
pBuf
, 
öt32_t
 
size
, 
uöt32_t
 
cksum
)

153 
uöt32_t
 
nW‹ds
;

154 
uöt16_t
 *
pWd
 = (uöt16_à*)
pBuf
;

156 
nW‹ds
 = (
size
 >> 5);ÇWords > 0;ÇWords--) {

157 
cksum
 +*
pWd
++; cksum += *pWd++; cksum += *pWd++;

158 
cksum
 +*
pWd
++;

159 
cksum
 +*
pWd
++; cksum += *pWd++; cksum += *pWd++;

160 
cksum
 +*
pWd
++;

161 
cksum
 +*
pWd
++; cksum += *pWd++; cksum += *pWd++;

162 
cksum
 +*
pWd
++;

163 
cksum
 +*
pWd
++; cksum += *pWd++; cksum += *pWd++;

164 
cksum
 +*
pWd
++;

168 
nW‹ds
 = (
size
 & 0x1f) >> 1;ÇWords > 0;ÇWords--)

169 
cksum
 +*
pWd
++;

172 i‡(
size
 & 1)

173 
cksum
 +*
pWd
 & 
	`ht⁄s
(0xFF00);

175  
cksum
;

176 
	}
}

194 
uöt16_t


195 
	$cksumD⁄e
(
uöt32_t
 
cksum
)

198 
cksum
 = (cksum & 0xFFFF) + (cksum >> 16);

199 
cksum
 = (cksum & 0xFFFF) + (cksum >> 16);

201  ~((
uöt16_t
)
cksum
);

202 
	}
}

224 
uöt32_t


225 
	$p£udoChecksum
(
uöt32_t
 
§c
, uöt32_à
d°
, 
uöt16_t
 
¥o
, uöt16_à
Àn
,

226 
uöt32_t
 
sum
)

229  
sum
 + (
§c
 & 0xFFFFË+ (§¯>> 16Ë+ (
d°
 & 0xFFFF) +

230 (
d°
 >> 16) +

231 
	`¡ohs
(
Àn
Ë+Çtohs(
¥o
);

232 
	}
}

254 
uöt32_t


255 
	$p£udoIPv6Checksum
(
uöt16_t
 *
§c
,

256 
uöt16_t
 *
d°
,

257 
uöt8_t
 
√xt_hdr
,

258 
uöt32_t
 
tŸÆ_Àn
,

259 
uöt32_t
 
sum
)

261 
uöt32_t
 
Àn
 = 
	`ht⁄l
(
tŸÆ_Àn
), 
i
;

263 
sum
 = (sum + (
uöt16_t
)
√xt_hdr
 + (
Àn
 & 0xFFFF) + (len >> 16));

265 
i
 = 0; i < 8; i++) {

266 
sum
 +
§c
[
i
];

267 
sum
 +
d°
[
i
];

269  
sum
;

270 
	}
}

	@lib/common/wr_cksum.h

34 #i‚de‡
__WR_CKSUM_H


35 
	#__WR_CKSUM_H


	)

37 
uöt16_t
 
cksum
(*
pBuf
, 
öt32_t
 
size
, 
uöt32_t
 cksum);

38 
uöt32_t
 
cksumUpd©e
(*
pBuf
, 
öt32_t
 
size
, uöt32_à
cksum
);

39 
uöt16_t
 
cksumD⁄e
(
uöt32_t
 
cksum
);

40 
uöt32_t
 
p£udoChecksum
(uöt32_à
§c
, uöt32_à
d°
,

41 
uöt16_t
 
¥Ÿo
, uöt16_à
Àn
,

42 
uöt32_t
 
cksum
);

43 
uöt32_t
 
p£udoIPv6Checksum
(
uöt16_t
 *
§c
,

44 
uöt16_t
 *
d°
,

45 
uöt8_t
 
√xt_hdr
,

46 
uöt32_t
 
tŸÆ_Àn
,

47 
uöt32_t
 
sum
);

	@lib/common/wr_copyright_info.c

68 
	~<°dio.h
>

69 
	~<°dlib.h
>

70 
	~<°döt.h
>

71 
	~<öây≥s.h
>

72 
	~<sys/ty≥s.h
>

73 
	~<uni°d.h
>

74 
	~<°rög.h
>

75 
	~<°d¨g.h
>

76 
	~<˘y≥.h
>

78 
	~<πe_vîsi⁄.h
>

79 
	~<πe_c⁄fig.h
>

80 
	~<πe_©omic.h
>

81 
	~<πe_cy˛es.h
>

83 
	~"wr_s¸n.h
"

84 
	~"wr_c›yright_öfo.h
"

86 
	#COPYRIGHT_MSG
 \

87 "C›yrighà(cË<2010-2016>, I¡ñ C‹p‹©i⁄. AŒÑight†ª£rved."

	)

88 
	#COPYRIGHT_MSG_SHORT
 "C›yrighà(cË<2010-2016>, I¡ñ C‹p‹©i⁄"

	)

89 
	#POWERED_BY_DPDK
 "Powîed by I¡ñ¬Æ DPDK"

	)

91 #ifde‡
ENABLE_COPYRIGHT_OUTPUT


92 c⁄° *
	göãl_c›yright
[] = {

124 
NULL


126 c⁄° *
	gwr_c›yright
[] = {

156 
NULL


173 
	$wr_¥öt_c›yright
(c⁄° *
≠≤ame
, c⁄° *
¸óãd_by
)

175 #ifde‡
COPYRIGHT_OUTPUT_ENABLED


176 
i
;

178 
	`πe_¥ötf_°©us
("-----------------------\n");

179 
i
 = 0; 
öãl_c›yright
[i] !
NULL
; i++)

180 
	`πe_¥ötf_°©us
(" %s\n", 
öãl_c›yright
[
i
]);

181 
	`πe_¥ötf_°©us
("-----------------------\n");

183 
	`πe_¥ötf_°©us
(" %s\n\n", 
COPYRIGHT_MSG
);

184 
i
 = 0; 
wr_c›yright
[i] !
NULL
; i++)

185 
	`πe_¥ötf_°©us
(" %s\n", 
wr_c›yright
[
i
]);

187 
	`wr_s¸n_cﬁ‹
(
YELLOW
, 
NO_CHANGE
, 
OFF
);

188 
	`πe_¥ötf_°©us
(" %s created by: %s -- >>> %s <<<\n",

189 
≠≤ame
,

190 
¸óãd_by
,

191 
POWERED_BY_DPDK
);

192 
	`wr_s¸n_cﬁ‹
(
BLUE
, 
NO_CHANGE
, 
OFF
);

193 
	`πe_¥ötf_°©us
("-----------------------\n");

195 
	`¥ötf
(" %s\n", 
COPYRIGHT_MSG
);

196 
	`¥ötf
(" %s created by: %s -- >>> %s <<<\n\n",

197 
≠≤ame
,

198 
¸óãd_by
,

199 
POWERED_BY_DPDK
);

201 
	}
}

204 
	$wr_logo
(
row
, 
cﬁ
, c⁄° *
≠≤ame
)

206 #ifde‡
INCLUDE_LOGO_OUTPUT


207 
i
;

208 c⁄° *
logo
[] = {

232 
NULL


235 
	`wr_s¸n_˛s
();

236 
	`wr_s¸n_cﬁ‹
(
GREEN
, 
NO_CHANGE
, 
BOLD
);

237 
i
 = 0, 
row
++; 
logo
[i] !
NULL
; i++)

238 
	`wr_s¸n_¥ötf
(
row
++, 7, "%s", 
logo
[
i
]);

240 
	`wr_s¸n_cﬁ‹
(
MAGENTA
, 
NO_CHANGE
, 
OFF
);

241 
	`wr_s¸n_¥ötf
(++
row
, 
cﬁ
, "%s", 
COPYRIGHT_MSG
);

242 
	`wr_s¸n_cﬁ‹
(
BLUE
, 
NO_CHANGE
, 
BOLD
);

243 
	`wr_s¸n_¥ötf
(++
row
,

244 
cﬁ
 + 6,

246 
≠≤ame
,

247 
POWERED_BY_DPDK
);

248 
	`wr_s¸n_cﬁ‹
(
BLACK
, 
NO_CHANGE
, 
OFF
);

249 
	`wr_s¸n_pos
(++
row
, 1);

251 
	`πe_dñay_ms
(1500);

253 
	`wr_s¸n_˛s
();

254 
	`wr_s¸n_pos
(100, 1);

256 ()
row
;

257 ()
cﬁ
;

258 ()
≠≤ame
;

260 
	}
}

263 
	$wr_•œsh_s¸ìn
(
row
, 
cﬁ
, c⁄° *
≠≤ame
, c⁄° *
¸óãd_by
)

265 #ifde‡
ENABLE_COPYRIGHT_OUTPUT


266 
i
;

268 
row
 = 3;

269 
	`wr_s¸n_cﬁ‹
(
BLUE
, 
NO_CHANGE
, 
OFF
);

270 
	`wr_s¸n_¥ötf
(
row
++, 
cﬁ
, "%s", 
COPYRIGHT_MSG
);

271 
	`wr_s¸n_cﬁ‹
(
GREEN
, 
NO_CHANGE
, 
BOLD
);

272 
i
 = 0, 
row
++; 
wr_c›yright
[i] !
NULL
; i++)

273 
	`wr_s¸n_¥ötf
(
row
++, 7, "%s", 
wr_c›yright
[
i
]);

274 
	`wr_s¸n_cﬁ‹
(
BLUE
, 
NO_CHANGE
, 
BOLD
);

275 
	`wr_s¸n_¥ötf
(
row
++,

276 
cﬁ
,

278 
≠≤ame
,

279 
¸óãd_by
,

280 
POWERED_BY_DPDK
);

281 
	`wr_s¸n_cﬁ‹
(
BLACK
, 
NO_CHANGE
, 
OFF
);

282 
	`wr_s¸n_pos
(++
row
, 1);

284 
	`πe_dñay_ms
(1500);

286 
	`wr_s¸n_˛s
();

287 
	`wr_s¸n_pos
(100, 1);

289 ()
row
;

290 ()
cﬁ
;

291 ()
≠≤ame
;

292 ()
¸óãd_by
;

294 
	}
}

302 
	$wr_c›yright_msg
() {

303  
COPYRIGHT_MSG
;

304 
	}
}

312 
	$wr_c›yright_msg_sh‹t
() {

313  
COPYRIGHT_MSG_SHORT
;

314 
	}
}

322 
	$wr_powîed_by
() {

323  
POWERED_BY_DPDK
;

324 
	}
}

	@lib/common/wr_copyright_info.h

34 #i‚de‡
_WR_COPYRIGHT_INFO_H


35 
	#_WR_COPYRIGHT_INFO_H


	)

37 
wr_¥öt_c›yright
(c⁄° *
≠≤ame
, c⁄° *
¸óãd_by
);

38 
wr_logo
(
row
, 
cﬁ
, c⁄° *
≠≤ame
);

39 
wr_•œsh_s¸ìn
(
row
,

40 
cﬁ
,

41 c⁄° *
≠≤ame
,

42 c⁄° *
¸óãd_by
);

49 c⁄° *
wr_c›yright_msg
();

56 c⁄° *
wr_c›yright_msg_sh‹t
();

63 c⁄° *
wr_powîed_by
();

	@lib/common/wr_core_info.c

68 
	~<°dio.h
>

69 
	~<°dlib.h
>

70 
	~<°döt.h
>

71 
	~<öây≥s.h
>

72 
	~<sys/ty≥s.h
>

73 
	~<uni°d.h
>

74 
	~<°rög.h
>

75 
	~<°d¨g.h
>

76 
	~<˘y≥.h
>

78 
	~<πe_vîsi⁄.h
>

79 
	~<πe_c⁄fig.h
>

80 
	~<πe_lc‹e.h
>

81 
	~<πe_©omic.h
>

82 
	~<πe_cy˛es.h
>

83 
	~<πe_pci.h
>

84 
	~<πe_debug.h
>

86 
	~"wr_s¸n.h
"

87 
	~"wr_c‹e_öfo.h
"

88 
	~"wr_ls˝u.h
"

89 
	~"wr_utûs.h
"

90 
	~"wr_c‹em≠.h
"

92 
	#COREMASK_STRING_SIZE
 256

	)

94 
lc_öfo_t
 
	gc‹e_m≠
[
RTE_MAX_LCORE
];

95 
uöt32_t
 
	gnum_c‹es
;

97 
uöt32_t


98 
	$wr_s˘_c⁄vît
(*
s˘
[])

100 
uöt32_t
 
lc‹e
 = 0xFFFF, 
i
;

101 
lc_öfo_t
 
vÆ
, 
t°
;

103 i‡–(
s˘
 =
NULL
) || (sct[0] == NULL) )

106 
vÆ
.
s
.
sockë_id
 = (
uöt8_t
)
	`°πoul
(
s˘
[0], 
NULL
, 10);

107 
vÆ
.
s
.
c‹e_id
 = (
uöt8_t
)
	`°πoul
(
s˘
[1], 
NULL
, 10);

108 
vÆ
.
s
.
thªad_id
 = (
uöt8_t
)
	`°πoul
(
s˘
[2], 
NULL
, 10);

110 
i
 = 0; i < 
num_c‹es
; i++) {

111 
t°
.
w‹d
 = 
c‹e_m≠
[
i
].word;

112 
t°
.
s
.
id
 = 0;

113 i‡(
t°
.
w‹d
 =
vÆ
.word) {

114 
lc‹e
 = 
c‹e_m≠
[
i
].
s
.
id
;

118  
lc‹e
;

119 
	}
}

	@lib/common/wr_core_info.h

68 #i‚de‡
_WR_CORE_INFO_H


69 
	#_WR_CORE_INFO_H


	)

77 
__ölöe__
 
uöt32_t


78 
	$wr_lc‹e_mask
(
uöt8_t
 *
fú°
, uöt8_à*
œ°
) {

79 
öt32_t
 
˙t
, 
lid
;

81 
lid
 = 
	`πe_gë_ma°î_lc‹e
();

82 i‡(
fú°
)

83 *
fú°
 = 
lid
;

86 
˙t
 = 0; 
lid
 < 
RTE_MAX_LCORE
;Üid++) {

87 i‡(!
	`πe_lc‹e_is_íabÀd
(
lid
) )

89 
˙t
++;

90 i‡(
œ°
)

91 *
œ°
 = 
lid
;

94  
˙t
;

95 
	}
}

97 
uöt32_t
 
wr_s˘_c⁄vît
(*
s˘
[]);

	@lib/common/wr_coremap.c

51 
	~<°dio.h
>

52 
	~<°dlib.h
>

53 
	~<°rög.h
>

54 
	~<gë›t.h
>

55 
	~<°döt.h
>

57 
	~"wr_c‹em≠.h
"

59 *
	gmodñ_«me
;

61 
	slc‹e
 {

62 
lc‹e
 *
	m√xt
;

63 
lc_öfo_t
 
	mu
;

64 } 
	tlc‹e_t
;

66 
	glc‹e_t
 *(*
	tdo_löe_‚
)(c⁄° *
	tlöe
, 
	tlc‹e_t
 *);

67 (*
	tgëãr_‚
)(c⁄° 
	tlc‹e_t
 *);

68 (*
	t£âî_‚
)(
	tlc‹e_t
 *, 
	t√w_vÆ
);

70 
	sa˘i⁄
 {

71 c⁄° *
desc
;

72 
do_löe_‚
 
‚
;

73 } 
	ta˘i⁄_t
;

76 
	$gë_sockë_id
(c⁄° 
lc‹e_t
 *
lc
)

78  
lc
->
u
.
s
.
sockë_id
;

79 
	}
}

82 
	$£t_sockë_id
(
lc‹e_t
 *
lc
, 
v
)

84 
lc
->
u
.
s
.
sockë_id
 = 
v
;

85 
	}
}

88 
	$gë_c‹e_id
(c⁄° 
lc‹e_t
 *
lc
)

90  
lc
->
u
.
s
.
c‹e_id
;

91 
	}
}

94 
	$£t_c‹e_id
(
lc‹e_t
 *
lc
, 
v
)

96 
lc
->
u
.
s
.
c‹e_id
 = 
v
;

97 
	}
}

100 
	$gë_thªad_id
(c⁄° 
lc‹e_t
 *
lc
)

102  
lc
->
u
.
s
.
thªad_id
;

103 
	}
}

106 
	$as_°r
(c⁄° *
löe
)

108 i‡(*
löe
 != ':')

109  
	`as_°r
(
löe
 + 1);

110  
löe
 + 1;

111 
	}
}

114 
	$as_öt
(c⁄° *
löe
)

116  
	`©oi
(
	`as_°r
(
löe
));

117 
	}
}

119 
lc‹e_t
 *

120 
	$√w_lc‹e
(c⁄° *
löe
, 
lc‹e_t
 *
ª°
)

122 
lc‹e_t
 *
lc
 = 
	`ˇŒoc
(1,  *lc);

124 
lc
->
√xt
 = 
ª°
;

125 
lc
->
u
.
s
.
id
 = 
	`as_öt
(
löe
);

126  
lc
;

127 
	}
}

129 
lc‹e_t
 *

130 
	$£t_øw_sockë_id
(c⁄° *
löe
, 
lc‹e_t
 *
lc
)

132 
lc
->
u
.
s
.
sockë_id
 = 
	`as_öt
(
löe
);

133  
lc
;

134 
	}
}

136 
lc‹e_t
 *

137 
	$£t_øw_c‹e_id
(c⁄° *
löe
, 
lc‹e_t
 *
lc
)

139 
lc
->
u
.
s
.
c‹e_id
 = 
	`as_öt
(
löe
);

140  
lc
;

141 
	}
}

143 
lc‹e_t
 *

144 
	$£t_modñ_«me
(c⁄° *
löe
, 
lc‹e_t
 *
lc
)

146 i‡(!
modñ_«me
)

147 
modñ_«me
 = 
	`°rdup
(
	`as_°r
(
löe
));

148  
lc
;

149 
	}
}

152 
	$gë_√xt_thªad_id
(c⁄° 
lc‹e_t
 *
lc
, 
sockë_id
, 
c‹e_id
)

154 i‡(
lc
 =
NULL
)

156 i‡(
lc
->
u
.
s
.
sockë_id
 =sockë_id &&Üc->u.s.
c‹e_id
 == core_id)

157  
lc
->
u
.
s
.
thªad_id
 + 1;

158  
	`gë_√xt_thªad_id
(
lc
->
√xt
, 
sockë_id
, 
c‹e_id
);

159 
	}
}

161 
lc‹e_t
 *

162 
	$£t_thªad_id_°r
(c⁄° *
unu£d
, 
lc‹e_t
 *
lc
)

164 ()
unu£d
;

165 
lc
->
u
.
s
.
thªad_id
 = 
	`gë_√xt_thªad_id
÷c->
√xt
,

166 
lc
->
u
.
s
.
sockë_id
,

167 
lc
->
u
.
s
.
c‹e_id
);

168  
lc
;

169 
	}
}

171 
lc‹e_t
 *

172 
	$ign‹e_löe
(c⁄° *
unu£d
, 
lc‹e_t
 *
lc
)

174 ()
unu£d
;

175  
lc
;

176 
	}
}

178 
do_löe_‚


179 
	$gë_m©chög_a˘i⁄
(c⁄° *
löe
)

181 
a˘i⁄
 
a˘i⁄s
[] = {

182 { "¥o˚ss‹", 
√w_lc‹e
 },

183 { "physiˇ»id", 
£t_øw_sockë_id
 },

184 { "c‹êid", 
£t_øw_c‹e_id
 },

185 { "modñÇame", 
£t_modñ_«me
 },

186 { "\n", 
£t_thªad_id_°r
 },

187 { 
NULL
, NULL }

189 
a˘i⁄
 *action;

191 
a˘i⁄
 = 
a˘i⁄s
;á˘i⁄->
‚
 !
NULL
; ++action)

192 i‡(
	`°∫cmp
(
a˘i⁄
->
desc
, 
löe
, 
	`°æí
(action->desc)) == 0)

193  
a˘i⁄
->
‚
;

194  
ign‹e_löe
;

195 
	}
}

202 
	$ªm≠
(
lc‹e_t
 *
lc
,

203 
‰om
,

204 
to
,

205 
gëãr_‚
 
gë
,

206 
£âî_‚
 
£t
)

208 i‡(
lc
) {

209 i‡(
	`gë
(
lc
Ë=
‰om
)

210 
	`£t
(
lc
, 
to
);

211 
	`ªm≠
(
lc
->
√xt
, 
‰om
, 
to
, 
gë
, 
£t
);

213 
	}
}

219 
lc‹e_t
 *

220 
	$˛o£°_gã
(
lc‹e_t
 *
lc
,Üc‹e_à*
£l
, 
v
, 
gëãr_‚
 
gë
)

222 i‡(
lc
 =
NULL
)

223  
£l
;

224 i‡(
	`gë
(
lc
Ë>
v
 && (
£l
 =
NULL
 || get(sel) - v > get(lc) - v))

225  
	`˛o£°_gã
(
lc
->
√xt
,Üc, 
v
, 
gë
);

226  
	`˛o£°_gã
(
lc
->
√xt
, 
£l
, 
v
, 
gë
);

227 
	}
}

235 
	$zîo_ba£
(
lc‹e_t
 *
hód
, 
gëãr_‚
 
gë
, 
£âî_‚
 
£t
)

237 
id
 = 0;

238 
lc‹e_t
 *
lc
;

240 (
lc
 = 
	`˛o£°_gã
(
hód
, 
NULL
, 
id
, 
gë
)) != NULL) {

241 
	`ªm≠
(
lc
, 
	`gë
÷c), 
id
, 
gë
, 
£t
);

242 ++
id
;

244 
	}
}

250 
__ölöe__
 

251 
	$˙t
(c⁄° 
lc‹e_t
 *
lc
, 
gëãr_‚
 
gë
)

253 
˙t
 = 0;

255 
lc
) {

256 i‡(
˙t
 < 
	`gë
(
lc
))

257 
˙t
 = 
	`gë
(
lc
);

258 
lc
 =Üc->
√xt
;

260  
˙t
 + 1;

261 
	}
}

264 
	$¥öt_™d_‰ì_lc‹es
(
lc‹e_t
 *
lc
)

266 i‡(
lc
) {

267 
	`¥öt_™d_‰ì_lc‹es
(
lc
->
√xt
);

268 
	`¥ötf
("%u/%u/%u\t%u\n",

269 
lc
->
u
.
s
.
sockë_id
,

270 
lc
->
u
.
s
.
c‹e_id
,

271 
lc
->
u
.
s
.
thªad_id
,

272 
lc
->
u
.
s
.
id
);

273 
	`‰ì
(
lc
);

275 
	}
}

277 
lc_öfo_t
 *

278 
	$gë_™d_‰ì_lc‹es
(
lc‹e_t
 *
lc
, 
lc_öfo_t
 *
gë
, 
˙t
)

280 i‡((
lc
 =
NULL
Ë|| (
˙t
 == 0))

281  
NULL
;

283 
	`gë_™d_‰ì_lc‹es
(
lc
->
√xt
, 
gë
 + 1, 
˙t
 - 1);

284 
gë
->
w‹d
 = 
lc
->
u
.word;

285  
gë
;

286 
	}
}

289 
	$¥öt_m©chög_lc‹es
(
lc‹e_t
 *
lc
, 
s
, 
c
, 
t
)

291 i‡(
lc
) {

292 
	`¥öt_m©chög_lc‹es
(
lc
->
√xt
, 
s
, 
c
, 
t
);

293 i‡(
lc
->
u
.
s
.
sockë_id
 =†&&Üc->u.s.
c‹e_id
 =
c
 &&

294 
lc
->
u
.
s
.
thªad_id
 =
t
)

295 
	`¥ötf
("%u ", 
lc
->
u
.
s
.
id
);

297 
	}
}

299 
__ölöe__
 

300 
	$‰ì_lc‹es
(
lc‹e_t
 *
lc
)

302 i‡(
lc
) {

303 
	`‰ì_lc‹es
(
lc
->
√xt
);

304 
	`‰ì
(
lc
);

306 
	}
}

309 
	$¥öt_c‹e_m≠
(
lc‹e_t
 *
lc‹es
, 
mode
, 
bÆ™˚d
)

311 
s
, 
c
;

326 i‡(
bÆ™˚d
) {

331 
c
 = 0; c < 
	`˙t
(
lc‹es
, 
gë_c‹e_id
); c++)

332 
s
 = 0; s < 
	`˙t
(
lc‹es
, 
gë_sockë_id
); s++) {

333 
	`¥öt_m©chög_lc‹es
(
lc‹es
, 
s
, 
c
, 0);

335 i‡(
mode
 =0 && (
c
 !0 || 
s
 != 0))

336 
	`¥öt_m©chög_lc‹es
(
lc‹es
, 
s
, 
c
, 1);

343 
s
 = 0; s < 
	`˙t
(
lc‹es
, 
gë_sockë_id
); s++)

344 
c
 = 0; c < 
	`˙t
(
lc‹es
, 
gë_c‹e_id
); c++) {

345 
	`¥öt_m©chög_lc‹es
(
lc‹es
, 
s
, 
c
, 0);

346 i‡(
mode
 =0 && (
c
 !0 || 
s
 != 0))

347 
	`¥öt_m©chög_lc‹es
(
lc‹es
, 
s
, 
c
, 1);

351 i‡(
mode
 == 0)

352 
	`¥öt_m©chög_lc‹es
(
lc‹es
, 0, 0, 1);

354 
	`‰ì_lc‹es
(
lc‹es
);

355 
	`¥ötf
("\n");

356 
	}
}

358 
__ölöe__
 

359 
	$cou¡_c‹es
(
lc‹e_t
 *
lc‹es
)

361 
num
 = 0;

363 
lc‹es
) {

364 
lc‹es
 =Üc‹es->
√xt
;

365 
num
++;

367  
num
;

368 
	}
}

371 
	$wr_c‹em≠
(c⁄° *
¨g
,

372 
lc_öfo_t
 *
gë_lc‹es
,

373 
max_˙t
,

374 c⁄° *
¥oc_˝uöfo
)

376 
FILE
 *
f
;

377 *
löe
 = 
NULL
;

378 
size_t
 
löe_sz
 = 0;

379 
¥öt_m≠
 = 0;

380 
bÆ™˚d
 = 1;

381 
mode
 = 0;

382 
lc‹e_t
 *
lc‹es
 = 
NULL
;

384 i‡(
¥oc_˝uöfo
 =
NULL
)

385 
¥oc_˝uöfo
 = 
PROC_CPUINFO
;

387 i‡–(
f
 = 
	`f›í
(
¥oc_˝uöfo
, "r")Ë=
NULL
) {

388 
	`Ârötf
(
°dîr
, "Cannot open %s onÅhis system\n",

389 
¥oc_˝uöfo
);

393 
	`gëlöe
(&
löe
, &
löe_sz
, 
f
) >= 0)

394 
lc‹es
 = 
	`gë_m©chög_a˘i⁄
(
löe
)(line,Ücores);

396 i‡(
f
Ë
	`f˛o£
(f);

397 i‡(
löe
Ë
	`‰ì
(line);

399 
	`zîo_ba£
(
lc‹es
, 
gë_sockë_id
, 
£t_sockë_id
);

400 
	`zîo_ba£
(
lc‹es
, 
gë_c‹e_id
, 
£t_c‹e_id
);

402 i‡(
	`°rcmp
(
¨g
, "info") != 0) {

403 
¥öt_m≠
 = 1;

405 i‡(
	`°rcmp
(
¨g
, "paired_balanced") == 0) {

406 
mode
 = 0; 
bÆ™˚d
 = 1;

407 } i‡(
	`°rcmp
(
¨g
, "unpaired_balanced") == 0) {

408 
mode
 = 1; 
bÆ™˚d
 = 1;

409 } i‡(
	`°rcmp
(
¨g
, "paired_unbalanced") == 0) {

410 
mode
 = 0; 
bÆ™˚d
 = 0;

411 } i‡(
	`°rcmp
(
¨g
, "unpaired_unbalanced") == 0) {

412 
mode
 = 1; 
bÆ™˚d
 = 0;

413 } i‡(
	`°rcmp
(
¨g
, "array") == 0) {

414 
num_c‹es
 = 
	`cou¡_c‹es
(
lc‹es
);

415 i‡–(
gë_lc‹es
 !
NULL
Ë|| (
max_˙t
 > 0) )

416 
	`gë_™d_‰ì_lc‹es
(
lc‹es
,

417 &
gë_lc‹es
[0],

418 
max_˙t
);

419  
num_c‹es
;

422 i‡(
¥öt_m≠
) {

423 
	`¥öt_c‹e_m≠
(
lc‹es
, 
mode
, 
bÆ™˚d
);

427 
	`¥ötf
("CPU : %s", 
modñ_«me
);

428 
	`¥ötf
("%u socket%s, %u core%sÖer socketánd %uÅhread%sÖer core\n",

429 
	`˙t
(
lc‹es
, 
gë_sockë_id
),

430 
	`˙t
(
lc‹es
, 
gë_sockë_id
) > 1 ? "s" : "",

431 
	`˙t
(
lc‹es
, 
gë_c‹e_id
),

432 
	`˙t
(
lc‹es
, 
gë_c‹e_id
) > 1 ? "s" : "",

433 
	`˙t
(
lc‹es
, 
gë_thªad_id
),

434 
	`˙t
(
lc‹es
, 
gë_thªad_id
) > 1 ? "s" : "");

435 
	`¥öt_™d_‰ì_lc‹es
(
lc‹es
);

438 
	}
}

440 (*
	t_gëãr_‚
)(c⁄° 
	tlc_öfo_t
 *);

443 
	$_gë_sockë_id
(c⁄° 
lc_öfo_t
 *
lc
)

445  
lc
->
s
.
sockë_id
;

446 
	}
}

449 
	$_gë_c‹e_id
(c⁄° 
lc_öfo_t
 *
lc
)

451  
lc
->
s
.
c‹e_id
;

452 
	}
}

455 
	$_gë_thªad_id
(c⁄° 
lc_öfo_t
 *
lc
)

457  
lc
->
s
.
thªad_id
;

458 
	}
}

461 
	$_gë_lc‹e_id
(c⁄° 
lc_öfo_t
 *
lc
)

463  
lc
->
s
.
id
;

464 
	}
}

471 
	$wr_c‹em≠_˙t
(c⁄° 
lc_öfo_t
 *
lc
, 
max_˙t
, 
t
)

473 
_gëãr_‚
 
gë
;

474 
_gëãr_‚
 
_ty≥
[] =

475 { 
_gë_sockë_id
, 
_gë_c‹e_id
, 
_gë_thªad_id
, 
_gë_lc‹e_id
, 
NULL
 };

476 
˙t
 = 0, 
i
;

478 
gë
 = 
_ty≥
[
t
];

479 
i
 = 0; i < 
max_˙t
; i++, 
lc
++)

480 i‡(
˙t
 < 
	`gë
(
lc
))

481 
˙t
 = 
	`gë
(
lc
);

482  
˙t
 + 1;

483 
	}
}

	@lib/common/wr_coremap.h

68 #i‚de‡
__INC_COREMAP_H


69 
	#__INC_COREMAP_H


	)

71 
	~<°döt.h
>

73 
	#PROC_CPUINFO
 "/¥oc/˝uöfo"

	)

77 
uöt8_t
 
	mid
;

78 
uöt8_t
 
	msockë_id
;

79 
uöt8_t
 
	mc‹e_id
;

80 
uöt8_t
 
	mthªad_id
;

81 } 
	ms
;

82 
uöt32_t
 
	mw‹d
;

83 } 
	tlc_öfo_t
;

85 
wr_c‹em≠
(c⁄° *
›t
,

86 
lc_öfo_t
 *
gë
,

87 
˙t
,

88 c⁄° *
¥oc_˝uöfo
);

89 
wr_c‹em≠_˙t
(c⁄° 
lc_öfo_t
 *
lc
, 
max_˙t
,

90 
t
);

	@lib/common/wr_cycles.h

36 #i‚de‡
_WR_CYCLES_H_


37 
	#_WR_CYCLES_H_


	)

39 #ifde‡
__˝lu•lus


43 
__ölöe__
 

44 
wr_dñay_us
(
uöt32_t
 
us
) {

45 
uöt64_t
 
°¨t
;

46 
uöt64_t
 
ticks
;

47 
uöt32_t
 
ªsﬁuti⁄_fs
;

49 
ªsﬁuti⁄_fs
 =

50 (
uöt32_t
)((1000ULL * 1000ULL * 1000ULL * 1000ULL * 1000ULL) /

51 
πe_gë_timî_hz
());

53 
ticks
 = (
uöt64_t
)
us
 * 1000ULL * 1000ULL * 1000ULL;

54 
ticks
 /
ªsﬁuti⁄_fs
;

56 
°¨t
 = 
πe_gë_timî_cy˛es
();

58 (
πe_gë_timî_cy˛es
(Ë- 
°¨t
Ë< 
ticks
) {

59 
πe_timî_m™age
();

60 
πe_∑u£
();

64 
__ölöe__
 

65 
wr_dñay_ms
(
uöt32_t
 
ms
) {

66 
wr_dñay_us
(
ms
 * 1000);

69 
__ölöe__
 

70 
wr_¶ìp
(
uöt32_t
 
£cs
) {

71 
wr_dñay_us
(
£cs
 * (1000 * 1000));

74 #ifde‡
__˝lu•lus


	@lib/common/wr_inet.h

68 #i‚de‡
__WR_INET_H


69 
	#__WR_INET_H


	)

71 
	#IPv4_VERSION
 4

	)

72 
	#IPv6_VERSION
 6

	)

74 #ifde‡
RTE_MACHINE_CPUFLAG_SSE4_2


75 
	~<nmmöåö.h
>

77 
	~<πe_jhash.h
>

79 
	~<°dio.h
>

80 
	~<°döt.h
>

82 
	~<¨∑/öë.h
>

84 
	~<πe_ëhî.h
>

107 
	sùHdr_s
 {

108 
uöt8_t
 
	mvl
;

109 
uöt8_t
 
	mtos
;

110 
uöt16_t
 
	méí
;

111 
uöt16_t
 
	midít
;

112 
uöt16_t
 
	mf‰ag
;

113 
uöt8_t
 
	mâl
;

114 
uöt8_t
 
	m¥Ÿo
;

115 
uöt16_t
 
	mcksum
;

116 
uöt32_t
 
	m§c
;

117 
uöt32_t
 
	md°
;

118 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tùHdr_t
;

120 
	#PG_ISFRAG
(
off
Ë((offË& (
PG_OFF_MF
 | 
PG_OFF_MASK
))

	)

121 
	#PG_OFF_MASK
 0x1fff

	)

122 
	#PG_OFF_MF
 0x2000

	)

123 
	#PG_OFF_DF
 0x4000

	)

149 
	sùv6Hdr_s
 {

150 
uöt32_t
 
	mvî_tc_Ê
;

151 
uöt16_t
 
	m∑ylﬂd_Àngth
;

152 
uöt8_t
 
	m√xt_hódî
;

153 
uöt8_t
 
	mh›_limô
;

154 
uöt8_t
 
	mßddr
[16];

155 
uöt8_t
 
	mdaddr
[16];

156 } 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	tùv6Hdr_t
;

173 
	#PG_IPPROTO_NONE
 0

	)

174 
	#PG_IPPROTO_IP
 
IPPROTO_IP


	)

175 
	#PG_IPPROTO_ICMP
 
IPPROTO_ICMP


	)

176 
	#PG_IPPROTO_IGMP
 
IPPROTO_IGMP


	)

177 
	#PG_IPPROTO_IPV4
 
IPPROTO_IPV4


	)

178 
	#PG_IPPROTO_TCP
 
IPPROTO_TCP


	)

179 
	#PG_IPPROTO_UDP
 
IPPROTO_UDP


	)

180 
	#PG_IPPROTO_IPV6
 
IPPROTO_IPV6


	)

181 
	#PG_IPPROTO_IPV6_ROUTE
 43

	)

182 
	#PG_IPPROTO_IPV6_FRAG
 44

	)

183 
	#PG_IPPROTO_GRE
 
IPPROTO_GRE


	)

184 
	#PG_IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

185 
	#PG_IPPROTO_IPV6_ICMP
 
IPPROTO_ICMPV6


	)

186 
	#PG_IPPROTO_IPV6_NONXT
 59

	)

187 
	#PG_IPPROTO_IPV6_OPTS
 60

	)

188 
	#PG_IPPROTO_RAW
 
IPPROTO_RAW


	)

189 
	#PG_IPPROTO_MAX
 256

	)

191 
	#PG_IPPROTO_L4_GTPU_PORT
 2152

	)

192 
	#PG_IPPROTO_L4_DNS_PORT
 53

	)

194 
	#IPv4
(
a
, 
b
, 
c
, 
d
Ë((
uöt32_t
)(((a) & 0xff) << 24) | \

195 (((
b
) & 0xff) << 16) | \

196 (((
c
) & 0xff) << 8) | \

197 ((
d
Ë& 0xff))

	)

218 
	sgçuHdr_s
 {

219 
uöt8_t
 
	mvîsi⁄_Êags
;

220 
uöt8_t
 
	mmsg_ty≥
;

221 
uöt16_t
 
	mtŸ_Àn
;

222 
uöt32_t
 
	mãid
;

223 
uöt16_t
 
	m£q_no
;

224 
uöt8_t
 
	m≈du_no
;

225 
uöt8_t
 
	m√xt_ext_hdr_ty≥
;

226 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tgçuHdr_t
;

229 
	sùOvîœy_s
 {

230 
uöt32_t
 
	mnode
[2];

231 
uöt8_t
 
	m∑d0
;

232 
uöt8_t
 
	m¥Ÿo
;

233 
uöt16_t
 
	mÀn
;

234 
uöt32_t
 
	m§c
;

235 
uöt32_t
 
	md°
;

236 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tùOvîœy_t
;

238 
	sùv6Ovîœy_s
 {

239 
uöt8_t
 
	mßddr
[16];

240 
uöt8_t
 
	mdaddr
[16];

241 
uöt32_t
 
	mt˝_Àngth
;

242 
uöt16_t
 
	mzîo
;

243 
uöt8_t
 
	m∑d
;

244 
uöt8_t
 
	m√xt_hódî
;

245 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tùv6Ovîœy_t
;

247 
	t£q_t
;

250 
	sudpHdr_s
 {

251 
uöt16_t
 
	m•‹t
;

252 
uöt16_t
 
	mdp‹t
;

253 
uöt16_t
 
	mÀn
;

254 
uöt16_t
 
	mcksum
;

255 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tudpHdr_t
;

258 
	sudpù_s
 {

259 
ùOvîœy_t
 
	mù
;

260 
udpHdr_t
 
	mudp
;

261 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tudpù_t
;

264 
	sdnsHdr_s
 {

265 
uöt16_t
 
	mid
;

266 
uöt16_t
 
	mÊags
;

267 
uöt16_t
 
	mqdcou¡
;

268 
uöt16_t
 
	m™cou¡
;

269 
uöt16_t
 
	mnscou¡
;

270 
uöt16_t
 
	m¨cou¡
;

271 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tdnsHdr_t
;

274 
	sdnsUdpIp_s
 {

275 
ùOvîœy_t
 
	mù
;

276 
udpHdr_t
 
	mudp
;

277 
dnsHdr_t
 
	mdns
;

278 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tdnsUdpIp_t
;

281 
	sdnsQuîy_s
 {

282 
uöt16_t
 
	mqty≥
;

283 
uöt16_t
 
	mq˛ass
;

284 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tdnsQuîy_t
;

288 
	sgçuUdpIp_s
 {

289 
ùOvîœy_t
 
	mù
;

290 
udpHdr_t
 
	mudp
;

291 
gçuHdr_t
 
	mgçu
;

292 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tgçuUdpIp_t
;

295 
	sudpùv6_s
 {

296 
ùv6Ovîœy_t
 
	mù
;

297 
udpHdr_t
 
	mudp
;

298 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tudpùv6_t
;

324 
	st˝Hdr_s
 {

325 
uöt16_t
 
	m•‹t
;

326 
uöt16_t
 
	mdp‹t
;

327 
£q_t
 
	m£q
;

328 
£q_t
 
	mack
;

329 
uöt8_t
 
	moff£t
;

330 
uöt8_t
 
	mÊags
;

331 
uöt16_t
 
	mwödow
;

332 
uöt16_t
 
	mcksum
;

333 
uöt16_t
 
	murgít
;

334 
uöt8_t
 
	m›ts
[0];

335 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tt˝Hdr_t
;

337 íum { 
	mURG_FLAG
 = 0x20, 
	mACK_FLAG
 = 0x10, 
	mPSH_FLAG
 = 0x08, 
	mRST_FLAG
 = 0x04,

338 
	mSYN_FLAG
 = 0x02, 
	mFIN_FLAG
 = 0x01 };

341 
	st˝ù_s
 {

342 
ùOvîœy_t
 
	mù
;

343 
t˝Hdr_t
 
	mt˝
;

344 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tt˝ù_t
;

347 
	sgçuT˝Ip_s
 {

348 
ùOvîœy_t
 
	mù
;

349 
t˝Hdr_t
 
	mt˝
;

350 
gçuHdr_t
 
	mgçu
;

351 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tgçuT˝Ip_t
;

354 
	st˝ùv6_s
 {

355 
ùv6Ovîœy_t
 
	mù
;

356 
t˝Hdr_t
 
	mt˝
;

357 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tt˝ùv6_t
;

360 
	sicmpv4Hdr_s
 {

361 
uöt8_t
 
	mty≥
;

362 
uöt8_t
 
	mcode
;

363 
uöt16_t
 
	mcksum
;

367 
uöt16_t
 
	midít
;

368 
uöt16_t
 
	m£q
;

369 
uöt32_t
 
	md©a
;

370 } 
	mecho
;

373 
uöt32_t
 
	mg©eway
;

374 
uöt16_t
 
	mù
[10];

375 
uöt16_t
 
	må™•‹t
[4];

376 } 
	mªdúe˘
;

379 
uöt32_t
 
	m√xtH›Mtu
;

380 
uöt16_t
 
	mù
[10];

381 
uöt16_t
 
	må™•‹t
[4];

382 } 
	mÁûög_pkt
;

385 
uöt16_t
 
	midít
;

386 
uöt16_t
 
	m£q
;

387 
uöt32_t
 
	m‹igö©e
;

388 
uöt32_t
 
	mª˚ive
;

389 
uöt32_t
 
	må™smô
;

390 } 
	mtime°amp
;

393 
uöt32_t
 
	mmu…iˇ°
;

394 
uöt8_t
 
	ms_qrv
;

395 
uöt8_t
 
	mqqic
;

396 
uöt16_t
 
	mnumbîOfSour˚s
;

397 
uöt16_t
 
	msour˚_addr
[1];

398 } 
	migmp
;

401 
uöt8_t
 
	mpoöãr
;

402 
uöt8_t
 
	munu£d
[3];

403 } 
	m∑øm
;

406 
uöt8_t
 
	mnumAddrs
;

407 
uöt8_t
 
	maddrE¡rySize
;

408 
uöt16_t
 
	mli„time
;

409 
uöt32_t
 
	madvît
[1];

410 } 
	madvîti£
;

414 
uöt16_t
 
	midít
;

415 
uöt16_t
 
	m£q
;

416 
uöt32_t
 
	mdmask
;

417 } 
	mmask
;

418 } 
	md©a
;

419 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	ticmpv4Hdr_t
;

421 
	#ICMP4_TIMESTAMP_SIZE
 12

	)

424 
	#ICMP4_ECHO_REPLY
 0

	)

425 
	#ICMP4_DEST_UNREACHABLE
 3

	)

426 
	#ICMP4_SOURCE_QUENCH
 4

	)

427 
	#ICMP4_REDIRECT
 5

	)

428 
	#ICMP4_ECHO
 8

	)

429 
	#ICMP4_ROUTER_ADVERT
 9

	)

430 
	#ICMP4_ROUTER_SOLICIT
 10

	)

431 
	#ICMP4_TIME_EXCEEDED
 11

	)

432 
	#ICMP4_PARAMETER_PROBLEM
 12

	)

433 
	#ICMP4_TIMESTAMP
 13

	)

434 
	#ICMP4_TIMESTAMP_REPLY
 14

	)

435 
	#ICMP4_INFO_REQUEST
 15

	)

436 
	#ICMP4_INFO_REPLY
 16

	)

437 
	#ICMP4_MASK_REQUEST
 17

	)

438 
	#ICMP4_MASK_REPLY
 18

	)

458 
	#MPLS_SET_BOS
(
m∂s_œbñ
Ëdÿ{ m∂s_œbñ |(1 << 8); } 0);

	)

459 
	#MPLS_CLR_BOS
(
m∂s_œbñ
Ëdÿ{ m∂s_œbñ &~(1 << 8); } 0);

	)

461 
	sm∂sHdr_s
 {

462 
uöt32_t
 
	mœbñ
;

463 } 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	tm∂sHdr_t
;

482 
	sqöqHdr_s
 {

483 
uöt16_t
 
	mqöq_tci
;

484 
uöt16_t
 
	mvœn_çid
;

485 
uöt16_t
 
	mvœn_tci
;

486 
uöt16_t
 
	mëh_¥Ÿo
;

487 } 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	tqöqHdr_t
;

521 
	sgªHdr_s
 {

522 
uöt8_t
 
	mª£rved0_0
 : 4;

523 
uöt8_t
 
	m£q_¥e£¡
 : 1;

524 
uöt8_t
 
	mkey_¥e£¡
 : 1;

525 
uöt8_t
 
	munu£d
 : 1;

526 
uöt8_t
 
	mchk_¥e£¡
 : 1;

527 
uöt8_t
 
	mvîsi⁄
 : 3;

528 
uöt8_t
 
	mª£rved0_1
 : 5;

529 
uöt16_t
 
	mëh_ty≥
;

530 
uöt32_t
 
	mexåa_fõlds
[3];

531 } 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	tgªHdr_t
;

534 
	sgªIp_s
 {

535 
ùHdr_t
 
	mù
;

536 
gªHdr_t
 
	mgª
;

537 } 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	tgªIp_t
;

540 
	sgªEthî_s
 {

541 
ùHdr_t
 
	mù
;

542 
gªHdr_t
 
	mgª
;

543 
ëhî_hdr
 
	mëhî
;

544 } 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	tgªEthî_t
;

547 
	#ETH_HW_TYPE
 1

	)

548 
	#ETH_HDR_SIZE
 14

	)

549 
	#ETH_ADDR_SIZE
 6

	)

550 
	#ETH_MTU
 1500

	)

551 
	#ETH_MAX_PKT
 1518

	)

552 
	#ETH_MIN_PKT
 60

	)

553 
	#IPV6_ADDR_LEN
 16

	)

555 
	#ETH_VLAN_ENCAP_LEN
 4

	)

558 
	#ETHER_TYPE_MPLS_UNICAST
 0x8847

	)

559 
	#ETHER_TYPE_MPLS_MULTICAST
 0x8848

	)

561 
	#ETHER_TYPE_Q_IN_Q
 0x88A8

	)

562 
	#ETHER_TYPE_TRANSP_ETH_BR
 0x6558

	)

565 íum { 
	mARP_REQUEST
 = 1, 
	mARP_REPLY
 = 2, 
	mRARP_REQUEST
 = 3, 
	mRARP_REPLY
 = 4,

566 
	mGRATUITOUS_ARP
 = 5 };

569 
uöt16_t
 
	m_16
[3];

570 
uöt8_t
 
	m_8
[6];

571 } 
	tmac_e
;

574 
uöt16_t
 
	m_16
[2];

575 
uöt32_t
 
	m_32
;

576 } 
	tù4_e
;

579 
	s¨pPkt_s
 {

580 
uöt16_t
 
	mhrd
;

581 
uöt16_t
 
	m¥o
;

582 
uöt8_t
 
	mh 
;

583 
uöt8_t
 
	m∂n
;

584 
uöt16_t
 
	m›
;

585 
mac_e
 
	msha
;

586 
ù4_e
 
	m•a
;

587 
mac_e
 
	mtha
;

588 
ù4_e
 
	mça
;

589 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	t¨pPkt_t
;

591 
	spkt_hdr_s
 {

592 
ëhî_hdr
 
	mëh
;

594 
ùHdr_t
 
	mùv4
;

595 
ùv6Hdr_t
 
	mùv6
;

596 
t˝ù_t
 
	mtù
;

597 
udpù_t
 
	muù
;

598 
gçuUdpIp_t
 
	mguù
;

599 
icmpv4Hdr_t
 
	micmp
;

600 
t˝ùv6_t
 
	mtù6
;

601 
udpùv6_t
 
	muù6
;

602 
uöt64_t
 
	m∑d
[8];

603 } 
	mu
;

604 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tpkt_hdr_t
;

606 
	sùv4_5tu∂e
 {

607 
uöt32_t
 
	mù_d°
;

608 
uöt32_t
 
	mù_§c
;

609 
uöt16_t
 
	mp‹t_d°
;

610 
uöt16_t
 
	mp‹t_§c
;

611 
uöt8_t
 
	m¥Ÿo
;

612 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tùv4_5tu∂e_t
;

614 
	sl3_4rouã_s
 {

615 
ùv4_5tu∂e_t
 
	mkey
;

616 
uöt8_t
 
	mifid
;

617 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl3_4rouã_t
;

619 
	sùv6_5tu∂e_s
 {

620 
uöt8_t
 
	md°
[
IPV6_ADDR_LEN
];

621 
uöt8_t
 
	m§c
[
IPV6_ADDR_LEN
];

622 
uöt16_t
 
	m•‹t
;

623 
uöt16_t
 
	mdp‹t
;

624 
uöt8_t
 
	m¥Ÿo
;

625 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tùv6_5tu∂e_t
;

627 
	sl3_6rouã_s
 {

628 
ùv6_5tu∂e_t
 
	mkey
;

629 
uöt8_t
 
	mifid
;

630 } 
	t__©åibuã__
 ((
	t∑cked
)Ë
	tl3_6rouã_t
;

645 
ölöe
 
uöt32_t


646 
πe_hash6_¸c
(c⁄° *
d©a
, 
__©åibuã__
 (

647 (
unu£d
)Ë
uöt32_t
 
d©a_Àn
, uöt32_à
öô_vÆ
)

649 #ifde‡
RTE_MACHINE_CPUFLAG_SSE4_2


650 c⁄° 
uöt32_t
 *
	gp32
 = (c⁄° uöt32_à*)
d©a
;

651 c⁄° 
uöt16_t
 
	gvÆ
 = *(c⁄° uöt16_à*)
p32
;

653  
_mm_¸c32_u32
(
vÆ
, _mm_¸c32_u32(*
p32
++, 
öô_vÆ
));

655  
πe_jhash
(
d©a
, 
d©a_Àn
, 
öô_vÆ
);

660 
__ölöe__
 

661 
	$ëhAddrC›y
(*
t
, *
f
) {

662 
uöt16_t
 *
d
 = (uöt16_à*)
t
;

663 
uöt16_t
 *
s
 = (uöt16_à*)
f
;

665 *
d
++ = *
s
++; *d++ = *s++; *d = *s;

666 
	}
}

669 
__ölöe__
 

670 
	$uöt16Sw≠
(*
t
, *
f
) {

671 
uöt16_t
 *
d
 = (uöt16_à*)
t
;

672 
uöt16_t
 *
s
 = (uöt16_à*)
f
;

673 
uöt16_t
 
v
;

675 
v
 = *
d
; *d = *
s
; *s = v;

676 
	}
}

679 
__ölöe__
 

680 
	$ëhAddrSw≠
(*
t
, *
f
) {

681 
uöt16_t
 *
d
 = (uöt16_à*)
t
;

682 
uöt16_t
 *
s
 = (uöt16_à*)
f
;

684 
	`uöt16Sw≠
(
d
++, 
s
++);

685 
	`uöt16Sw≠
(
d
++, 
s
++);

686 
	`uöt16Sw≠
(
d
, 
s
);

687 
	}
}

690 
__ölöe__
 

691 
	$öëAddrC›y
(*
t
, *
f
) {

692 
uöt32_t
 *
d
 = (uöt32_à*)
t
;

693 
uöt32_t
 *
s
 = (uöt32_à*)
f
;

695 *
d
 = *
s
;

696 
	}
}

699 
__ölöe__
 

700 
	$öëAddrSw≠
(*
t
, *
f
) {

701 
uöt32_t
 *
d
 = (uöt32_à*)
t
;

702 
uöt32_t
 *
s
 = (uöt32_à*)
f
;

703 
uöt32_t
 
v
;

705 
v
 = *
d
; *d = *
s
; *s = v;

706 
	}
}

709 
__ölöe__
 

710 
	$mask_size
(
uöt32_t
 
mask
) {

711 i‡(
mask
 == 0)

713 i‡(
mask
 == 0xFF000000)

715 i‡(
mask
 == 0xFFFF0000)

717 i‡(
mask
 == 0xFFFFFF00)

719 i‡(
mask
 == 0xFFFFFFFF)

722 
i
;

723 
i
 = 0; i < 32; i++)

724 i‡–(
mask
 & (1 << (31 - 
i
))) == 0)

726  
i
;

728 
	}
}

731 
__ölöe__
 
uöt32_t


732 
	$size_to_mask
(
Àn
) {

733 
uöt32_t
 
mask
 = 0;

735 i‡(
Àn
 == 0)

736 
mask
 = 0x00000000;

737 i‡(
Àn
 == 8)

738 
mask
 = 0xFF000000;

739 i‡(
Àn
 == 16)

740 
mask
 = 0xFFFF0000;

741 i‡(
Àn
 == 24)

742 
mask
 = 0xFFFFFF00;

743 i‡(
Àn
 == 32)

744 
mask
 = 0xFFFFFFFF;

746 
i
;

748 
i
 = 0; i < 
Àn
; i++)

749 
mask
 |(1 << (31 - 
i
));

751  
mask
;

752 
	}
}

755 
__ölöe__
 *

756 
	$öë_¡›4
(*
buff
, 
Àn
, 
ù_addr
, 
mask
) {

757 
lbuf
[64];

759 
	`öë_¡›
(
AF_INET
, &
ù_addr
, 
buff
, 
Àn
);

760 i‡(
mask
 != 0xFFFFFFFF) {

761 
	`¢¥ötf
(
lbuf
, ÷buf), "%s/%d", 
buff
, 
	`mask_size
(
mask
));

762 
	`°∫˝y
(
buff
, 
lbuf
, 
Àn
);

764  
buff
;

765 
	}
}

767 
__ölöe__
 const *

768 
	$öë_¡›6
(* 
buff
, 
Àn
, 
uöt8_t
 * 
ù6
) {

769  
	`öë_¡›
(
AF_INET6
, 
ù6
, 
buff
, 
Àn
);

770 
	}
}

773 
__ölöe__
 *

774 
	$öë_mtﬂ
(*
buff
, 
Àn
, 
ëhî_addr
 *
óddr
) {

775 
	`¢¥ötf
(
buff
, 
Àn
, "%02x:%02x:%02x:%02x:%02x:%02x",

776 
óddr
->
addr_byãs
[0],Éaddr->addr_bytes[1],

777 
óddr
->
addr_byãs
[2],Éaddr->addr_bytes[3],

778 
óddr
->
addr_byãs
[4],Éaddr->addr_bytes[5]);

779  
buff
;

780 
	}
}

783 
__ölöe__
 
uöt64_t


784 
	$öë_mtoh64
(
ëhî_addr
 *
óddr
, 
uöt64_t
 *
vÆue
) {

785 *
vÆue
 = ((
uöt64_t
)
óddr
->
addr_byãs
[5] << 0)

786 + ((
uöt64_t
)
óddr
->
addr_byãs
[4] << 8)

787 + ((
uöt64_t
)
óddr
->
addr_byãs
[3] << 16)

788 + ((
uöt64_t
)
óddr
->
addr_byãs
[2] << 24)

789 + ((
uöt64_t
)
óddr
->
addr_byãs
[1] << 32)

790 + ((
uöt64_t
)
óddr
->
addr_byãs
[0] << 40);

791  *
vÆue
;

792 
	}
}

795 
__ölöe__
 
ëhî_addr
 *

796 
	$öë_h64tom
(
uöt64_t
 
vÆue
, 
ëhî_addr
 *
óddr
) {

797 
óddr
->
addr_byãs
[5] = ((
vÆue
 >> 0) & 0xFF);

798 
óddr
->
addr_byãs
[4] = ((
vÆue
 >> 8) & 0xFF);

799 
óddr
->
addr_byãs
[3] = ((
vÆue
 >> 16) & 0xFF);

800 
óddr
->
addr_byãs
[2] = ((
vÆue
 >> 24) & 0xFF);

801 
óddr
->
addr_byãs
[1] = ((
vÆue
 >> 32) & 0xFF);

802 
óddr
->
addr_byãs
[0] = ((
vÆue
 >> 40) & 0xFF);

803  
óddr
;

804 
	}
}

	@lib/common/wr_l2p.c

68 
	~<°dio.h
>

69 
	~<°dlib.h
>

70 
	~<°döt.h
>

71 
	~<öây≥s.h
>

72 
	~<sys/ty≥s.h
>

73 
	~<uni°d.h
>

74 
	~<°rög.h
>

75 
	~<°d¨g.h
>

76 
	~<˘y≥.h
>

78 
	~<πe_vîsi⁄.h
>

79 
	~<πe_c⁄fig.h
>

80 
	~<πe_lc‹e.h
>

81 
	~<πe_©omic.h
>

82 
	~<πe_cy˛es.h
>

83 
	~<πe_pci.h
>

84 
	~<πe_debug.h
>

85 
	~<πe_mem‹y.h
>

87 
	~"wr_s¸n.h
"

88 
	~"wr_l2p.h
"

89 
	~"wr_c‹e_öfo.h
"

90 
	~"wr_utûs.h
"

92 
	#cou¡of
(
t
Ë(—Ë/ —[0]))

	)

94 íum { 
	mRX_IDX
 = 0, 
	mTX_IDX
 = 1, 
	mRXTX_CNT
 = 2 };

96 
	sls_s
 {

97 
uöt8_t
 
	mls
[
RTE_MAX_LCORE
 / 8];

98 } 
	tls_t
;

100 
	sps_s
 {

101 
uöt8_t
 
	mps
[
RTE_MAX_ETHPORTS
 / 8];

102 } 
	tps_t
;

104 
	slc‹e_p‹t_s
 {

105 
ls_t
 
	mlc‹es
[
RXTX_CNT
];

106 
ps_t
 
	mp‹ts
[
RXTX_CNT
];

107 } 
	tÕ_t
;

109 
ölöe
 

110 
	$_bt°
(
uöt8_t
 *
p
, uöt8_à
idx
) {

111 
öt32_t
 
c
 = (
idx
 / 8);

113  
p
[
c
] & (1 << (
idx
 - (c * 8)));

114 
	}
}

116 
ölöe
 

117 
	$_b£t
(
uöt8_t
 *
p
, uöt8_à
idx
) {

118 
öt32_t
 
c
 = (
idx
 / 8);

120 
p
[
c
] |(1 << (
idx
 - (c * 8)));

121 
	}
}

135 
uöt32_t


136 
	$wr_∑r£_p‹tmask
(c⁄° *
p‹tmask
)

138  
	`°πoul
(
p‹tmask
, 
NULL
, 0);

139 
	}
}

153 
öt32_t


154 
	$wr_∑r£_π_li°
(*
li°
, 
uöt8_t
 *
m≠
)

156 *
p
;

157 
öt32_t
 
k
, 
i
;

158 *
¨r
[33];

160 i‡(
li°
 =
NULL
)

163 
p
 = 
	`wr_°πrim£t
(
li°
, "[]{}");

164 i‡–(
p
 =
NULL
) || (*p == '\0') )

168 
k
 = 
	`wr_°Ω¨£
(
p
, "/", 
¨r
, 
	`cou¡of
(arr));

169 i‡(
k
 == 0)

172 
i
 = 0; (ò< 
k
Ë&& 
¨r
[i]; i++) {

173 
p
 = 
	`°rchr
(
¨r
[
i
], '-');

174 i‡(
p
 !
NULL
) {

175 
uöt32_t
 
l
, 
h
;

176 *
p
++ = '\0';

177 
l
 = 
	`°πﬁ
(
¨r
[
i
], 
NULL
, 10);

178 
h
 = 
	`°πﬁ
(
p
, 
NULL
, 10);

180 
	`_b£t
(
m≠
, 
l
);

181 ++
l
 <
h
);

183 
	`_b£t
(
m≠
, 
	`°πﬁ
(
¨r
[
i
], 
NULL
, 10));

186 
	}
}

200 
öt32_t


201 
	$wr_∑r£_lc‹e_li°
(*
li°
, 
ls_t
 *
ls
)

203 *
¨r
[3];

204 
öt32_t
 
k
;

207 
k
 = 
	`wr_°Ω¨£
(
li°
, ":", 
¨r
, 
	`cou¡of
(arr) );

208 i‡–(
k
 == 0) || (k == 3) ) {

209 
	`Ârötf
(
°dîr
, "*** InvÆid såög (%s)\n", 
li°
);

213 i‡(
k
 == 1) {

214 
	`wr_∑r£_π_li°
(
¨r
[0], 
ls
[
RX_IDX
].ls);

215 
	`mem˝y
(
ls
[
TX_IDX
].ls,Üs[
RX_IDX
].ls, (
ls_t
));

218 i‡(
	`wr_∑r£_π_li°
(
¨r
[0], 
ls
[
RX_IDX
].ls) )

221 i‡(
	`wr_∑r£_π_li°
(
¨r
[1], 
ls
[
TX_IDX
].ls) )

225 
	}
}

239 
öt32_t


240 
	$wr_∑r£_p‹t_li°
(*
li°
, 
ps_t
 *
ps
)

242 *
¨r
[3];

243 
öt32_t
 
k
;

246 
k
 = 
	`wr_°Ω¨£
(
li°
, ":", 
¨r
, 
	`cou¡of
(arr) );

247 i‡–(
k
 == 0) || (k == 3) ) {

248 
	`Ârötf
(
°dîr
, "*** InvÆid såög (%s)\n", 
li°
);

252 i‡(
k
 == 1) {

253 
	`wr_∑r£_π_li°
(
¨r
[0], 
ps
[
RX_IDX
].ps);

254 
	`mem˝y
(
ps
[
TX_IDX
].ps,Ös[
RX_IDX
].ps, (
ps_t
));

257 i‡(
	`wr_∑r£_π_li°
(
¨r
[0], 
ps
[
RX_IDX
].ps) )

260 i‡(
	`wr_∑r£_π_li°
(
¨r
[1], 
ps
[
TX_IDX
].ps) )

264 
	}
}

266 
ölöe
 

267 
	$wr_dump_lc‹e_m≠
(c⁄° *
t
, 
uöt8_t
 *
m
) {

268 
i
;

270 
	`Ârötf
(
°dîr
, "%s–", 
t
);

272 
i
 = 0; i < 
RTE_MAX_LCORE
; i++)

273 i‡(
	`_bt°
(
m
, 
i
) )

274 
	`Ârötf
(
°dîr
, "%d ", 
i
);

275 
	`Ârötf
(
°dîr
, ")");

276 
	}
}

278 
ölöe
 

279 
	$wr_dump_p‹t_m≠
(c⁄° *
t
, 
uöt8_t
 *
m
) {

280 
i
;

282 
	`Ârötf
(
°dîr
, "%s–", 
t
);

284 
i
 = 0; i < 
RTE_MAX_ETHPORTS
; i++)

285 i‡(
	`_bt°
(
m
, 
i
) )

286 
	`Ârötf
(
°dîr
, "%d ", 
i
);

287 
	`Ârötf
(
°dîr
, ")");

288 
	}
}

335 
	$wr_∑r£_m©rix
(
l2p_t
 *
l2p
, *
°r
)

337 *
lc‹e_p‹t
[
MAX_MATRIX_ENTRIES
];

338 
buff
[256];

339 
i
, 
m
, 
k
, 
lid_ty≥
, 
pid_ty≥
;

340 
uöt32_t
 
pid
, 
lid
;

341 
Õ_t
 
Õ
;

342 
rxtx_t
 
˙t
, 
n
;

344 
	`wr_°rc˝y
(
buff
, 
°r
, " \r\n\t\"");

347 
k
 = 
	`wr_°Ω¨£
(
buff
, ",", 
lc‹e_p‹t
, 
	`cou¡of
(lcore_port));

348 i‡(
k
 <= 0) {

349 
	`Ârötf
(
°dîr
, "%s: couldÇotÖarse (%s) string\n",

350 
__FUNCTION__
, 
buff
);

354 
i
 = 0; (ò< 
k
Ë&& 
lc‹e_p‹t
[i]; i++) {

355 *
¨r
[3];

356 
°r
[64];

359 
	`°∫˝y
(
°r
, 
lc‹e_p‹t
[
i
], (str));

362 
m
 = 
	`wr_°Ω¨£
(
lc‹e_p‹t
[
i
], ".", 
¨r
, 3);

363 i‡(
m
 != 2) {

364 
	`Ârötf
(
°dîr
,

366 
__FUNCTION__
,

367 
lc‹e_p‹t
[
i
]);

371 
	`mem£t
(&
Õ
, '\0', (lp));

373 i‡(
	`wr_∑r£_lc‹e_li°
(
¨r
[0], 
Õ
.
lc‹es
) ) {

374 
	`Ârötf
(
°dîr
,

376 
__FUNCTION__
,

377 
¨r
[0]);

381 i‡(
	`wr_∑r£_p‹t_li°
(
¨r
[1], 
Õ
.
p‹ts
) ) {

382 
	`Ârötf
(
°dîr
,

384 
__FUNCTION__
,

385 
¨r
[1]);

390 
	`Ârötf
(
°dîr
, "%-16†lc‹es: ", 
°r
);

391 
	`wr_dump_lc‹e_m≠
("RX", 
Õ
.
lc‹es
[
RX_IDX
].
ls
);

392 
	`wr_dump_lc‹e_m≠
("TX", 
Õ
.
lc‹es
[
TX_IDX
].
ls
);

393 
	`Ârötf
(
°dîr
, "Öorts: ");

394 
	`wr_dump_p‹t_m≠
("RX", 
Õ
.
p‹ts
[
RX_IDX
].
ps
);

395 
	`wr_dump_p‹t_m≠
("TX", 
Õ
.
p‹ts
[
TX_IDX
].
ps
);

396 
	`Ârötf
(
°dîr
, "\n");

398 
lid
 = 0;Üid < 
RTE_MAX_LCORE
;Üid++) {

399 
lid_ty≥
 = 0;

400 i‡(
	`_bt°
(
Õ
.
lc‹es
[
RX_IDX
].
ls
, 
lid
) )

401 
lid_ty≥
 |
RX_TYPE
;

402 i‡(
	`_bt°
(
Õ
.
lc‹es
[
TX_IDX
].
ls
, 
lid
) )

403 
lid_ty≥
 |
TX_TYPE
;

404 i‡(
lid_ty≥
 == 0)

407 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

408 
pid_ty≥
 = 0;

409 i‡(
	`_bt°
(
Õ
.
p‹ts
[
RX_IDX
].
ps
, 
pid
) )

410 
pid_ty≥
 |
RX_TYPE
;

411 i‡(
	`_bt°
(
Õ
.
p‹ts
[
TX_IDX
].
ps
, 
pid
) )

412 
pid_ty≥
 |
TX_TYPE
;

413 i‡(
pid_ty≥
 == 0)

415 
	`wr_l2p_c⁄√˘
(
l2p
, 
pid
, 
lid
, 
lid_ty≥
);

420 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

421 
n
.
rxtx
 = 0;

422 
lid
 = 0;Üid < 
RTE_MAX_LCORE
;Üid++)

423 i‡–(
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
l2p
, 
pid
, 
lid
)) > 0) {

424 i‡(
˙t
.
tx
 > 0)

425 
n
.
tx
++;

426 i‡(
˙t
.
rx
 > 0)

427 
n
.
rx
++;

429 
l2p
->
m≠
[
pid
][
lid
].
rxtx
 = 
n
.rxtx;

431 
lid
 = 0;Üid < 
RTE_MAX_LCORE
;Üid++) {

432 
n
.
rxtx
 = 0;

433 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++)

434 i‡–(
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
l2p
, 
pid
, 
lid
)) > 0) {

435 i‡(
˙t
.
tx
 > 0)

436 
n
.
tx
++;

437 i‡(
˙t
.
rx
 > 0)

438 
n
.
rx
++;

440 
l2p
->
m≠
[
pid
][
lid
].
rxtx
 = 
n
.rxtx;

444 
	}
}

459 
	$wr_p‹t_m©rix_dump
(
l2p_t
 *
l2p
)

461 
uöt32_t
 
pid
, 
lid
;

462 
uöt8_t
 
fú°
, 
œ°
;

463 
rxtx_t
 
˙t
;

465 
fú°
 = 
œ°
 = 0;

467 
	`¥ötf
("\n===ÖortÅoÜcore mappingÅable (#Ücores %d) ===\n",

468 
	`wr_lc‹e_mask
(&
fú°
, &
œ°
));

470 
	`¥ötf
("Ücore: ");

471 
lid
 = 
fú°
;Üid <
œ°
;Üid++)

472 
	`¥ötf
(" %2d ", 
lid
);

473 
	`¥ötf
("\n");

475 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

476 
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
l2p
, 
pid
, 
RTE_MAX_LCORE
);

477 i‡(
˙t
.
rxtx
 == 0)

479 
	`¥ötf
("p‹à %2d:", 
pid
);

480 
lid
 = 
fú°
;Üid <
œ°
;Üid++) {

481 
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
l2p
, 
pid
, 
lid
);

482 i‡(
lid
 =
	`πe_gë_ma°î_lc‹e
() )

483 
	`¥ötf
(" %s:%s", " D", " T");

485 
	`¥ötf
(" %2d:%2d", 
˙t
.
rx
, c¡.
tx
);

487 
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
l2p
, 
pid
, 
RTE_MAX_LCORE
);

488 
	`¥ötf
(" = %2d:%2d\n", 
˙t
.
rx
, c¡.
tx
);

491 
	`¥ötf
("Total :");

492 
lid
 = 
fú°
;Üid <
œ°
;Üid++) {

493 
˙t
.
rxtx
 = 
	`wr_gë_m≠
(
l2p
, 
RTE_MAX_ETHPORTS
, 
lid
);

494 
	`¥ötf
(" %2d:%2d", 
˙t
.
rx
, c¡.
tx
);

497 
	`¥ötf
(

499 
	`πe_gë_ma°î_lc‹e
());

500 
	`fÊush
(
°dout
);

501 
	}
}

	@lib/common/wr_l2p.h

34 #i‚de‡
__WR_L2P_H


35 
	#__WR_L2P_H


	)

37 
	~<°rög.h
>

39 
	~<πe_mem‹y.h
>

40 
	~<πe_©omic.h
>

42 
	#MAX_MATRIX_ENTRIES
 128

	)

43 
	#MAX_STRING
 256

	)

44 
	#MAX_MAP_PORTS
 (
RTE_MAX_ETHPORTS
 + 1)

	)

45 
	#MAX_MAP_LCORES
 (
RTE_MAX_LCORE
 + 1)

	)

47 íum { 
	mNO_TYPE
 = 0, 
	mRX_TYPE
 = 0x01, 
	mTX_TYPE
 = 0x02 };

49 
	spq_s
 {

50 
uöt8_t
 
	mrx_˙t
;

51 
uöt8_t
 
	mtx_˙t
;

52 
uöt8_t
 
	m∑d0
[2];

53 
uöt16_t
 
	mrx
[
RTE_MAX_ETHPORTS
];

54 
uöt16_t
 
	mtx
[
RTE_MAX_ETHPORTS
];

55 } 
	tpq_t
;

58 
uöt8_t
 
	mlid
;

59 
uöt8_t
 
	mty≥
;

60 
uöt8_t
 
	m∑d0
[2];

61 
pq_t
 
	mpids
;

62 
pq_t
 
	mqids
;

63 *
	m¥iv©e
;

64 } 
	t__πe_ˇche_Æig√d
 
	tlobj_t
;

67 
uöt8_t
 
	mpid
;

68 
uöt8_t
 
	mrx_qid
;

69 
uöt8_t
 
	mtx_qid
;

70 
uöt8_t
 
	mnb_lids
;

71 
uöt8_t
 
	mlids
[
RTE_MAX_LCORE
];

72 *
	m¥iv©e
;

73 } 
	t__πe_ˇche_Æig√d
 
	tpobj_t
;

77 
uöt8_t
 
	mrx
;

78 
uöt8_t
 
	mtx
;

80 
uöt16_t
 
	mrxtx
;

81 } 
	trxtx_t
;

84 vﬁ©ûê
uöt8_t
 
	m°›
[
RTE_MAX_LCORE
];

85 
lobj_t
 
	mlc‹es
[
RTE_MAX_LCORE
];

86 
pobj_t
 
	mp‹ts
[
RTE_MAX_ETHPORTS
];

87 
rxtx_t
 
	mm≠
[
MAX_MAP_PORTS
][
MAX_MAP_LCORES
];

88 } 
	t__πe_ˇche_Æig√d
 
	tl2p_t
;

94 
__ölöe__
 

95 
	$wr_øw_dump_l2p
(
l2p_t
 *
l2p
)

97 
uöt8_t
 
i
, 
j
;

98 
lobj_t
 *
lobj
;

99 
pobj_t
 *
pobj
;

100 c⁄° *
ty≥s
[] = { "Unkn", " RX ", " TX ", "RXTX", 
NULL
 };

102 
	`¥ötf
("\nRunningÜcores: ");

103 
i
 = 0; i < 
RTE_MAX_LCORE
; i++)

104 i‡(
l2p
->
°›
[
i
] == 0)

105 
	`¥ötf
("%2d ", 
i
);

106 
	`¥ötf
("\n");

108 
	`¥ötf
("Lcores:\n");

109 
j
 = 0; j < 
RTE_MAX_LCORE
; j++) {

110 
lobj
 = &
l2p
->
lc‹es
[
j
];

111 i‡(
lobj
->
pids
.
rx_˙t
 ||Üobj->pids.
tx_˙t
) {

112 
	`¥ötf
(" %2d:Åy≥ %†¥iv©ê%p\n", 
lobj
->
lid
,

113 
ty≥s
[
lobj
->
ty≥
],Üobj->
¥iv©e
);

114 
	`¥ötf
(" Pid†RX %2d: ", 
lobj
->
pids
.
rx_˙t
);

115 
i
 = 0; i < 
lobj
->
pids
.
rx_˙t
; i++)

116 
	`¥ötf
("%2d ", 
lobj
->
pids
.
rx
[
i
]);

117 
	`¥ötf
("\n");

118 
	`¥ötf
(" Pid†TX %2d: ", 
lobj
->
pids
.
tx_˙t
);

119 
i
 = 0; i < 
lobj
->
pids
.
tx_˙t
; i++)

120 
	`¥ötf
("%2d ", 
lobj
->
pids
.
tx
[
i
]);

121 
	`¥ötf
("\n");

123 i‡(
lobj
->
qids
.
rx_˙t
 ||Üobj->qids.
tx_˙t
) {

124 
	`¥ötf
(" Qid†RX %2d: ", 
lobj
->
qids
.
rx_˙t
);

125 
i
 = 0; i < 
RTE_MAX_ETHPORTS
; i++)

126 
	`¥ötf
("%2d ", 
lobj
->
qids
.
rx
[
i
]);

127 
	`¥ötf
("\n");

128 
	`¥ötf
(" Qid†TX %2d: ", 
lobj
->
qids
.
tx_˙t
);

129 
i
 = 0; i < 
RTE_MAX_ETHPORTS
; i++)

130 
	`¥ötf
("%2d ", 
lobj
->
qids
.
tx
[
i
]);

131 
	`¥ötf
("\n");

135 
	`¥ötf
("Ports:\n");

136 
i
 = 0; i < 
RTE_MAX_ETHPORTS
; i++) {

137 
pobj
 = &
l2p
->
p‹ts
[
i
];

138 i‡(
pobj
->
nb_lids
 == 0)

140 
	`¥ötf
(" Lids idx %2d: RX %2d, TX %2d,Örivate %p: ",

141 
pobj
->
pid
,Öobj->
rx_qid
,Öobj->
tx_qid
,Öobj->
¥iv©e
);

142 
j
 = 0; j < 
pobj
->
nb_lids
; j++)

143 
	`¥ötf
("%2d ", 
pobj
->
lids
[
j
]);

144 
	`¥ötf
("\n");

146 
	`¥ötf
("\n");

147 
	}
}

154 
__ölöe__
 
l2p_t
 *

155 
	$wr_l2p_¸óã
()

157 
l2p_t
 *
l2p
;

158 
uöt32_t
 
i
;

160 
l2p
 = (
l2p_t
 *)
	`ˇŒoc
(1, (l2p_t));

161 i‡(
l2p
 =
NULL
)

162  
NULL
;

165 
	`mem£t
(
l2p
, 0, (
l2p_t
));

167 
i
 = 0; i < 
RTE_MAX_LCORE
; i++)

168 
l2p
->
lc‹es
[
i
].
lid
 = i;

170 
i
 = 0; i < 
RTE_MAX_ETHPORTS
; i++)

171 
l2p
->
p‹ts
[
i
].
pid
 = i;

174 
i
 = 0; i < 
RTE_MAX_LCORE
; i++)

175 
l2p
->
°›
[
i
] = 1;

177  
l2p
;

178 
	}
}

184 
__ölöe__
 
uöt8_t


185 
	$wr_√w_rxque
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
)

187 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

189  
pobj
->
rx_qid
++;

190 
	}
}

196 
__ölöe__
 
uöt8_t


197 
	$wr_√w_txque
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
)

199 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

201  
pobj
->
tx_qid
++;

202 
	}
}

208 
__ölöe__
 

209 
	$wr_öc_rx
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
, uöt8_à
lid
) {

210 
l2p
->
m≠
[
pid
][
lid
].
rx
++;

211 
	}
}

217 
__ölöe__
 

218 
	$wr_öc_tx
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
, uöt8_à
lid
) {

219 
l2p
->
m≠
[
pid
][
lid
].
tx
++;

220 
	}
}

226 
__ölöe__
 
uöt16_t


227 
	$wr_gë_m≠
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
, uöt8_à
lid
)

229  
l2p
->
m≠
[
pid
][
lid
].
rxtx
;

230 
	}
}

236 
__ölöe__
 

237 
	$wr_l2p_c⁄√˘
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
, uöt8_à
lid
, 
uöt32_t
 
ty≥
)

239 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

240 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

242 
lobj
->
ty≥
 =Åype;

244 i‡(
ty≥
 & 
RX_TYPE
) {

245 
lobj
->
pids
.
rx
[lobj->pids.
rx_˙t
++] = 
pid
;

246 
lobj
->
qids
.
rx
[
pid
] = 
	`wr_√w_rxque
(
l2p
,Öid);

247 
lobj
->
qids
.
rx_˙t
++;

248 
	`wr_öc_rx
(
l2p
, 
pid
, 
lid
);

251 i‡(
ty≥
 & 
TX_TYPE
) {

252 
lobj
->
pids
.
tx
[lobj->pids.
tx_˙t
++] = 
pid
;

253 
lobj
->
qids
.
tx
[
pid
] = 
	`wr_√w_txque
(
l2p
,Öid);

254 
lobj
->
qids
.
tx_˙t
++;

255 
	`wr_öc_tx
(
l2p
, 
pid
, 
lid
);

257 
pobj
->
lids
[pobj->
nb_lids
++] = 
lid
;

258 
	}
}

264 
__ölöe__
 
uöt8_t


265 
	$wr_gë_ty≥
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
)

267 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

269  
lobj
->
ty≥
;

270 
	}
}

276 
__ölöe__
 
uöt8_t


277 
	$wr_gë_lc‹e_rx˙t
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
)

279 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

281  
lobj
->
pids
.
rx_˙t
;

282 
	}
}

288 
__ölöe__
 
uöt8_t


289 
	$wr_gë_lc‹e_tx˙t
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
)

291 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

293  
lobj
->
pids
.
tx_˙t
;

294 
	}
}

300 
__ölöe__
 
uöt8_t


301 
	$wr_gë_p‹t_rx˙t
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
)

303 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

305  
pobj
->
rx_qid
;

306 
	}
}

312 
__ölöe__
 
uöt8_t


313 
	$wr_gë_p‹t_tx˙t
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
)

315 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

317  
pobj
->
tx_qid
;

318 
	}
}

324 
__ölöe__
 
uöt8_t


325 
	$wr_gë_p‹t_nb_lids
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
)

327 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

329  
pobj
->
nb_lids
;

330 
	}
}

336 
__ölöe__
 

337 
	$wr_£t_p‹t_¥iv©e
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
, *
±r
)

339 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

341 
pobj
->
¥iv©e
 = 
±r
;

342 
	}
}

348 
__ölöe__
 *

349 
	$wr_gë_p‹t_¥iv©e
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
)

351 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

353  
pobj
->
¥iv©e
;

354 
	}
}

360 
__ölöe__
 

361 
	$wr_£t_lc‹e_¥iv©e
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
, *
±r
)

363 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

365 
lobj
->
¥iv©e
 = 
±r
;

366 
	}
}

372 
__ölöe__
 *

373 
	$wr_gë_lc‹e_¥iv©e
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
)

375 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

377  
lobj
->
¥iv©e
;

378 
	}
}

384 
__ölöe__
 
uöt8_t


385 
	$wr_gë_rx_pid
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
, uöt8_à
idx
)

387 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

389  
lobj
->
pids
.
rx
[
idx
];

390 
	}
}

396 
__ölöe__
 
uöt8_t


397 
	$wr_gë_tx_pid
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
, uöt8_à
idx
)

399 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

401  
lobj
->
pids
.
tx
[
idx
];

402 
	}
}

408 
__ölöe__
 
uöt8_t


409 
	$wr_gë_p‹t_lid
(
l2p_t
 *
l2p
, 
uöt8_t
 
pid
, uöt8_à
qid
)

411 
pobj_t
 *
pobj
 = &
l2p
->
p‹ts
[
pid
];

413  
pobj
->
lids
[
qid
];

414 
	}
}

420 
__ölöe__
 
uöt16_t


421 
	$wr_gë_rxque
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
, uöt8_à
pid
)

423 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

425  
lobj
->
qids
.
rx
[
pid
];

426 
	}
}

432 
__ölöe__
 
uöt16_t


433 
	$wr_gë_txque
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
, uöt8_à
pid
)

435 
lobj_t
 *
lobj
 = &
l2p
->
lc‹es
[
lid
];

437  
lobj
->
qids
.
tx
[
pid
];

438 
	}
}

444 
__ölöe__
 

445 
	$wr_°›_lc‹e
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
)

447 
l2p
->
°›
[
lid
] = 1;

448 
	`πe_mb
();

449 
	}
}

455 
__ölöe__
 

456 
	$wr_°¨t_lc‹e
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
)

458 
l2p
->
°›
[
lid
] = 0;

459 
	`πe_mb
();

460 
	}
}

466 
__ölöe__
 
öt32_t


467 
	$wr_lc‹e_is_ru¬ög
(
l2p_t
 *
l2p
, 
uöt8_t
 
lid
)

469 
	`πe_mb
();

470  
l2p
->
°›
[
lid
] == 0;

471 
	}
}

479 
__ölöe__
 

480 
	$wr_dump_l2p
(
l2p_t
 *
l2p
)

482 
lobj_t
 *
lobj
;

483 
pobj_t
 *
pobj
;

484 
uöt8_t
 
lid
, 
pid
, 
i
;

485 c⁄° *
ty≥s
[] =

486 { "Unknown", "RX-O∆y", "TX-O∆y", "RX-TX ", 
NULL
 };

488 
	`¥ötf
("Lcore:\n");

489 
lid
 = 0;Üid < 
RTE_MAX_LCORE
;Üid++) {

490 
lobj
 = &
l2p
->
lc‹es
[
lid
];

492 i‡(
lobj
->
pids
.
rx_˙t
 ||Üobj->pids.
tx_˙t
) {

493 
	`¥ötf
(" %2d, %s\n",

494 
lobj
->
lid
, 
ty≥s
[lobj->
ty≥
]);

496 i‡(
lobj
->
pids
.
rx_˙t
) {

497 
	`¥ötf
(" RX(%2d): ",

498 
lobj
->
pids
.
rx_˙t
);

499 
i
 = 0; i < 
lobj
->
pids
.
rx_˙t
; i++)

500 
	`¥ötf
("(%2d:%2d) ",

501 
lobj
->
pids
.
rx
[
i
],

502 
lobj
->
qids
.
rx
[lobj->
pids
.rx[
i
]]);

505 
	`¥ötf
("\n");

507 i‡(
lobj
->
pids
.
tx_˙t
) {

508 
	`¥ötf
(" TX(%2d): ",

509 
lobj
->
pids
.
tx_˙t
);

510 
i
 = 0; i < 
lobj
->
pids
.
tx_˙t
; i++)

511 
	`¥ötf
("(%2d:%2d) ",

512 
lobj
->
pids
.
tx
[
i
],

513 
lobj
->
qids
.
tx
[lobj->
pids
.tx[
i
]]);

516 
	`¥ötf
("\n");

520 
	`¥ötf
("\n");

521 
	`¥ötf
("Port :\n");

522 
pid
 = 0;Öid < 
RTE_MAX_ETHPORTS
;Öid++) {

523 
pobj
 = &
l2p
->
p‹ts
[
pid
];

525 i‡(
pobj
->
nb_lids
) {

526 
	`¥ötf
(" %2d,Çb_lcores %2d,Örivate %p,",

527 
pobj
->
pid
,Öobj->
nb_lids
,Öobj->
¥iv©e
);

529 
	`¥ötf
("Ücores: ");

530 
i
 = 0; i < 
pobj
->
nb_lids
; i++)

531 
	`¥ötf
("%2d ", 
pobj
->
lids
[
i
]);

532 
	`¥ötf
("\n");

535 
	`¥ötf
("\n\n");

536 
	}
}

538 
wr_p‹t_m©rix_dump
(
l2p_t
 *
l2p
);

539 
wr_∑r£_m©rix
(
l2p_t
 *
l2p
, *
°r
);

540 
uöt32_t
 
wr_∑r£_p‹tmask
(c⁄° *
p‹tmask
);

	@lib/common/wr_lscpu.c

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<gë›t.h
>

41 
	~<°döt.h
>

43 
	~"wr_utûs.h
"

44 
	~"wr_ls˝u.h
"

46 
ls˝u_t
 *
	gls˝u
;

48 
__ölöe__
 

49 
num_˝us
(
__©åibuã__
((
unu£d
)Ë
a˘i⁄_t
 *
a˘
, *
löe
) {

50 
	gls˝u
->
	gnum_˝us
 = 
©oi
(
löe
);

53 
__ölöe__
 

54 
thªads_≥r_c‹e
(
__©åibuã__
((
unu£d
)Ë
a˘i⁄_t
 *
a˘
, *
löe
) {

55 
	gls˝u
->
	gthªads_≥r_c‹e
 = 
©oi
(
löe
);

58 
__ölöe__
 

59 
c‹es_≥r_sockë
(
__©åibuã__
((
unu£d
)Ë
a˘i⁄_t
 *
a˘
, *
löe
) {

60 
	gls˝u
->
	gc‹es_≥r_sockë
 = 
©oi
(
löe
);

63 
__ölöe__
 

64 
numa_nodes
(
__©åibuã__
((
unu£d
)Ë
a˘i⁄_t
 *
a˘
, *
löe
) {

65 
	gls˝u
->
	gnuma_nodes
 = 
©oi
(
löe
);

68 
__ölöe__
 

69 
	$˝u_mhz
(
a˘i⁄_t
 *
a˘
, *
löe
)

71 i‡–(
a˘
->
Êags
 & 
ONLY_ONCE_FLAG
) == 0) {

72 
ls˝u
->
˝u_mhz
 = 
	`wr_°rdupf
÷s˝u->˝u_mhz, 
löe
);

73 
a˘
->
Êags
 |
ONLY_ONCE_FLAG
;

75 
	}
}

78 
	$numa_nodeX_˝us
(
a˘i⁄_t
 *
a˘
, *
löe
)

80 
n
, 
i
;

81 *
¨r
[32], *
p
;

82 
fú°
, 
œ°
;

84 
	`mem£t
(
¨r
, 0, (arr));

86 
n
 = 
	`wr_°Ω¨£
(
löe
, ",", 
¨r
, ((arr) / (*)));

87 i‡(
n
 > 0)

88 
i
 = 0; i < 
n
; i++) {

89 i‡(
¨r
[
i
] =
NULL
)

91 i‡–(
p
 = 
	`°rchr
(
¨r
[
i
], '-')) )

92 
p
++;

94 
p
 = 
¨r
[
i
];

95 
fú°
 = 
	`©oi
(
¨r
[
i
]);

96 
œ°
 = 
	`©oi
(
p
);

97 
fú°
 <
œ°
)

98 
ls˝u
->
numa_˝us
[
a˘
->
¨g
][
fú°
++] = 1;

100 
	}
}

102 
__ölöe__
 

103 
	$ˇche_size
(
a˘i⁄_t
 *
a˘
, *
löe
)

105 i‡–(
a˘
->
Êags
 & 
ONLY_ONCE_FLAG
) == 0) {

106 
ls˝u
->
ˇche_size
 = 
	`wr_°rdupf
÷s˝u->ˇche_size, 
löe
);

107 
a˘
->
Êags
 |
ONLY_ONCE_FLAG
;

109 
	}
}

111 
__ölöe__
 

112 
	$modñ_«me
(
a˘i⁄_t
 *
a˘
, *
löe
)

114 i‡–(
a˘
->
Êags
 & 
ONLY_ONCE_FLAG
) == 0) {

115 
ls˝u
->
modñ_«me
 = 
	`wr_°rdupf
÷s˝u->modñ_«me, 
löe
);

116 
a˘
->
Êags
 |
ONLY_ONCE_FLAG
;

118 
	}
}

120 
__ölöe__
 

121 
	$˝u_Êags
(
a˘i⁄_t
 *
a˘
, *
löe
)

123 i‡–(
a˘
->
Êags
 & 
ONLY_ONCE_FLAG
) == 0) {

124 
ls˝u
->
˝u_Êags
 = 
	`wr_°rdupf
÷s˝u->˝u_Êags, 
löe
);

125 
a˘
->
Êags
 |
ONLY_ONCE_FLAG
;

127 
	}
}

129 
a˘i⁄_t
 *

130 
	$ls˝u_m©ch_a˘i⁄
(*
löe
)

132 
a˘i⁄_t
 
a˘i⁄s
[] = {

133 { "CPU(s)", 
num_˝us
, 0, 0 },

134 { "Thªad(sË≥∏c‹e", 
thªads_≥r_c‹e
, 0, 0 },

135 { "C‹e(sË≥∏sockë", 
c‹es_≥r_sockë
, 0, 0 },

136 { "NUMAÇode(s)", 
numa_nodes
, 0, 0 },

137 { "CPU MHz", 
˝u_mhz
, 0, 0 },

138 { "NUMAÇode0 CPU(s)", 
numa_nodeX_˝us
, 0, 0 },

139 { "NUMAÇode1 CPU(s)", 
numa_nodeX_˝us
, 1, 0 },

140 { "NUMAÇode2 CPU(s)", 
numa_nodeX_˝us
, 2, 0 },

141 { "NUMAÇode3 CPU(s)", 
numa_nodeX_˝us
, 3, 0 },

142 { 
NULL
, NULL, 0, 0 }

144 
a˘i⁄_t
 *
a˘
;

146 
a˘
 = 
a˘i⁄s
;á˘->
°r
 !
NULL
; ++act)

147 i‡(
	`°∫cmp
(
a˘
->
°r
, 
löe
, 
	`°æí
(act->str)) == 0)

150  
a˘
;

151 
	}
}

153 
a˘i⁄_t
 *

154 
	$˝u_¥oc_m©ch_a˘i⁄
(*
löe
)

156 
a˘i⁄_t
 
a˘i⁄s
[] = {

157 { "ˇchêsize", 
ˇche_size
, 0, 0 },

158 { "modñÇame", 
modñ_«me
, 0, 0 },

159 { "Êags", 
˝u_Êags
, 0, 0 },

160 { 
NULL
, NULL, 0, 0 }

162 
a˘i⁄_t
 *
a˘
;

164 
a˘
 = 
a˘i⁄s
;á˘->
°r
 !
NULL
; ++act)

165 i‡(
	`°∫cmp
(
a˘
->
°r
, 
löe
, 
	`°æí
(act->str)) == 0)

168  
a˘
;

169 
	}
}

172 
	$ls˝u_öfo_gë
(c⁄° *
ls˝u_∑th
)

174 
FILE
 *
f
 = 
	`p›í
(
ls˝u_∑th
, "r");

175 *
löe
 = 
NULL
, *
p
;

176 
a˘i⁄_t
 *
a˘
;

177 
size_t
 
löe_size
;

179 i‡(
f
 =
NULL
) {

180 
	`¥ötf
("UnableÅoÑun 'lscpu' command\n");

184 
löe_size
 = 0;

185 
	`gëlöe
(&
löe
, &
löe_size
, 
f
) > 0) {

186 
löe
[
	`°æí
(line) - 1] = '\0';

187 
a˘
 = 
	`ls˝u_m©ch_a˘i⁄
(
löe
);

188 i‡(
a˘
->
°r
) {

189 
p
 = 
	`°rchr
(
löe
, ':');

190 i‡(
p
)Ö++;

191 
a˘
->
	`func
◊˘, 
	`wr_°πrim
(
p
));

195 
	`f˛o£
(
f
);

196 
	`‰ì
(
löe
);

197 
	}
}

200 
	$˝u_¥oc_öfo
(c⁄° *
¥oc_∑th
)

202 
FILE
 *
f
 = 
	`p›í
(
¥oc_∑th
, "r");

203 *
löe
 = 
NULL
, *
p
;

204 
a˘i⁄_t
 *
a˘
;

205 
size_t
 
löe_size
;

207 i‡(
f
 =
NULL
) {

208 
	`¥ötf
("UnableÅoÑun 'CPUÖroc' command\n");

212 
löe_size
 = 0;

213 
	`gëlöe
(&
löe
, &
löe_size
, 
f
) > 0) {

214 
löe
[
	`°æí
(line) - 1] = '\0';

215 
a˘
 = 
	`˝u_¥oc_m©ch_a˘i⁄
(
löe
);

216 i‡(
a˘
->
°r
) {

217 
p
 = 
	`°rchr
(
löe
, ':');

218 i‡(
p
)Ö++;

219 
a˘
->
	`func
◊˘, 
	`wr_°πrim
(
p
));

223 
	`f˛o£
(
f
);

224 
	`‰ì
(
löe
);

225 
	}
}

227 
ls˝u_t
 *

228 
	$wr_ls˝u_öfo
(c⁄° *
ls˝u_∑th
, c⁄° *
¥oc_∑th
)

230 i‡(
ls˝u
 =
NULL
)

231 
ls˝u
 = 
	`ˇŒoc
(1, (
ls˝u_t
));

233 i‡(
ls˝u_∑th
 =
NULL
)

234 
ls˝u_∑th
 = 
LSCPU_PATH
;

235 i‡(
¥oc_∑th
 =
NULL
)

236 
¥oc_∑th
 = 
CPU_PROC_PATH
;

238 
	`ls˝u_öfo_gë
(
ls˝u_∑th
);

239 
	`˝u_¥oc_öfo
(
¥oc_∑th
);

241  
ls˝u
;

242 
	}
}

	@lib/common/wr_lscpu.h

68 #i‚de‡
__INC_LSCPU_H


69 
	#__INC_LSCPU_H


	)

71 
	sa˘i⁄_s
 {

72 c⁄° *
	m°r
;

73 (*
	mfunc
)(
a˘i⁄_s
 *
	ma˘i⁄
, *
	mlöe
);

74 
	m¨g
;

75 
	mÊags
;

76 } 
	ta˘i⁄_t
;

78 
	#ONLY_ONCE_FLAG
 0x0001

	)

80 
	#MAX_LINE_SIZE
 1024

	)

83 
	mnum_˝us
;

84 
	mthªads_≥r_c‹e
;

85 
	mc‹es_≥r_sockë
;

86 
	mnuma_nodes
;

87 *
	m˝u_mhz
;

88 *
	mmodñ_«me
;

89 *
	m˝u_Êags
;

90 *
	mˇche_size
;

92 
	mnuma_˝us
[
RTE_MAX_NUMA_NODES
][
RTE_MAX_LCORE
];

93 } 
	tls˝u_t
;

95 
	#LSCPU_PATH
 "/u§/bö/ls˝u"

	)

96 
	#CPU_PROC_PATH
 "ˇà/¥oc/˝uöfo"

	)

98 
ls˝u_t
 *
wr_ls˝u_öfo
(c⁄° *
ls˝u_∑th
, c⁄° *
¥oc_∑th
);

	@lib/common/wr_mbuf.h

35 #i‚de‡
_WR_MBUF_H_


36 
	#_WR_MBUF_H_


	)

38 #ifde‡
__˝lu•lus


42 
ölöe
 

43 
__pktmbuf_Æloc_n‹e£t
(
πe_mbuf
 *
m
)

45 
m
->
√xt
 = 
NULL
;

46 
m
->
nb_£gs
 = 1;

47 
m
->
p‹t
 = 0xff;

49 
m
->
d©a_off
 = (
RTE_PKTMBUF_HEADROOM
 <m->
buf_Àn
) ?

50 
RTE_PKTMBUF_HEADROOM
 : 
m
->
buf_Àn
;

51 
πe_mbuf_ªf˙t_£t
(
m
, 1);

54 
ölöe
 

55 
wr_pktmbuf_Æloc_bulk_n‹e£t
(
πe_mempoﬁ
 *
mp
,

56 
πe_mbuf
 *
m_li°
[], 
˙t
)

58 
ªt
;

59 
i
;

61 
ªt
 = 
πe_mempoﬁ_gë_bulk
(
mp
, (* *)
m_li°
, 
˙t
);

62 i‡(
ªt
 == 0) {

63 
i
 = 0; i < 
˙t
; i++)

64 
__pktmbuf_Æloc_n‹e£t
(*
m_li°
++);

65 
ªt
 = 
˙t
;

67  
ªt
;

70 #ifde‡
__˝lu•lus


	@lib/common/wr_pcap.c

68 
	~<°dio.h
>

69 
	~<°dlib.h
>

70 
	~<°döt.h
>

71 
	~<öây≥s.h
>

72 
	~<sys/ty≥s.h
>

73 
	~<uni°d.h
>

74 
	~<°rög.h
>

75 
	~<sys/queue.h
>

76 
	~<°d¨g.h
>

77 
	~<˘y≥.h
>

78 
	~<î∫o.h
>

79 
	~<gë›t.h
>

80 
	~<as£π.h
>

81 
	~<√töë/ö.h
>

83 
	~<πe_vîsi⁄.h
>

84 
	~<πe_c⁄fig.h
>

86 
	~<πe_log.h
>

87 
	~<πe_èûq.h
>

88 #i‡
deföed
(
RTE_VER_MAJOR
) && (RTE_VER_MAJOR < 2)

89 
	~<πe_èûq_ñem.h
>

91 
	~<πe_comm⁄.h
>

92 
	~<πe_mem‹y.h
>

93 
	~<πe_mem˝y.h
>

94 
	~<πe_memz⁄e.h
>

95 
	~<πe_mÆloc.h
>

96 
	~<πe_ól.h
>

97 
	~<πe_≥r_lc‹e.h
>

98 
	~<πe_œunch.h
>

99 
	~<πe_©omic.h
>

100 
	~<πe_cy˛es.h
>

101 
	~<πe_¥e„tch.h
>

102 
	~<πe_lc‹e.h
>

103 
	~<πe_≥r_lc‹e.h
>

104 
	~<πe_bønch_¥edi˘i⁄.h
>

105 
	~<πe_pci.h
>

106 
	~<πe_øndom.h
>

107 
	~<πe_timî.h
>

108 
	~<πe_debug.h
>

109 
	~<πe_ëhî.h
>

110 
	~<πe_ëhdev.h
>

111 
	~<πe_rög.h
>

112 
	~<πe_mempoﬁ.h
>

113 
	~<πe_mbuf.h
>

114 
	~<πe_hash.h
>

115 
	~<πe_Õm.h
>

116 
	~<πe_°rög_‚s.h
>

117 
	~<πe_byã‹dî.h
>

118 
	~<πe_î∫o.h
>

120 
	~"wr_s¸n.h
"

121 
	~"wr_pˇp.h
"

122 
	~"wr_öë.h
"

136 
pˇp_öfo_t
 *

137 
	$wr_pˇp_›í
(*
fûíame
, 
uöt16_t
 
p‹t
)

139 
pˇp_öfo_t
 *
pˇp
 = 
NULL
;

141 i‡(
fûíame
 =
NULL
) {

142 
	`¥ötf
("%s: fûíamêi†NULL\n", 
__FUNCTION__
);

143 
Àave
;

146 
pˇp
 = (
pˇp_öfo_t
 *)
	`πe_mÆloc
("PCAP info",

147 (
pˇp_öfo_t
),

148 
RTE_CACHE_LINE_SIZE
);

149 i‡(
pˇp
 =
NULL
) {

150 
	`¥ötf
("%s: malloc failed forÖcap_info_t structure\n",

151 
__FUNCTION__
);

152 
Àave
;

154 
	`mem£t
((*)
pˇp
, 0, (
pˇp_öfo_t
));

156 
pˇp
->
fd
 = 
	`f›í
((c⁄° *)
fûíame
, "r");

157 i‡(
pˇp
->
fd
 =
NULL
) {

158 
	`¥ötf
("%s: faûed f‹ (%s)\n", 
__FUNCTION__
, 
fûíame
);

159 
Àave
;

162 i‡(
	`‰ód
(&
pˇp
->
öfo
, 1, (
pˇp_hdr_t
),

163 
pˇp
->
fd
Ë!(
pˇp_hdr_t
) ) {

164 
	`¥ötf
("%s: faûedÅÿªadÅhêfûêhódî\n", 
__FUNCTION__
);

165 
Àave
;

169 
pˇp
->
ídün
 = 
LITTLE_ENDIAN
;

170 
pˇp
->
fûíame
 = 
	`°rdup
(filename);

173 i‡–(
pˇp
->
öfo
.
magic_numbî
 !
PCAP_MAGIC_NUMBER
) &&

174 (
pˇp
->
öfo
.
magic_numbî
 !
	`¡ohl
(
PCAP_MAGIC_NUMBER
)) ) {

175 
	`¥ötf
("%s: Magi¯Numbî d€†nŸ m©ch!\n", 
__FUNCTION__
);

176 
	`fÊush
(
°dout
);

177 
Àave
;

181 i‡(
pˇp
->
öfo
.
magic_numbî
 =
	`¡ohl
(
PCAP_MAGIC_NUMBER
) ) {

182 
	`¥ötf
(

184 
pˇp
->
ídün
 = 
BIG_ENDIAN
;

185 
pˇp
->
öfo
.
magic_numbî
 = 
	`¡ohl
(pcap->info.magic_number);

186 
pˇp
->
öfo
.
√tw‹k
 = 
	`¡ohl
(pcap->info.network);

187 
pˇp
->
öfo
.
sigfigs
 = 
	`¡ohl
(pcap->info.sigfigs);

188 
pˇp
->
öfo
.
¢≠Àn
 = 
	`¡ohl
(pcap->info.snaplen);

189 
pˇp
->
öfo
.
thisz⁄e
 = 
	`¡ohl
(pcap->info.thiszone);

190 
pˇp
->
öfo
.
vîsi⁄_maj‹
 = 
	`¡ohs
(pcap->info.version_major);

191 
pˇp
->
öfo
.
vîsi⁄_mö‹
 = 
	`¡ohs
(pcap->info.version_minor);

193 
	`wr_pˇp_öfo
(
pˇp
, 
p‹t
, 0);

195  
pˇp
;

197 
Àave
:

198 
	`wr_pˇp_˛o£
(
pˇp
);

199 
	`fÊush
(
°dout
);

201  
NULL
;

202 
	}
}

217 
	$wr_pˇp_öfo
(
pˇp_öfo_t
 *
pˇp
, 
uöt16_t
 
p‹t
, 
Êag
)

219 
	`¥ötf
("\nPCAP fûêf‹Ö‹à%d: %s\n", 
p‹t
, 
pˇp
->
fûíame
);

220 
	`¥ötf
(" magic: %08x,", 
pˇp
->
öfo
.
magic_numbî
);

221 
	`¥ötf
(" Version: %d.%d,",

222 
pˇp
->
öfo
.
vîsi⁄_maj‹
,

223 
pˇp
->
öfo
.
vîsi⁄_mö‹
);

224 
	`¥ötf
(" Z⁄e: %d,", 
pˇp
->
öfo
.
thisz⁄e
);

225 
	`¥ötf
(" s«∂í: %d,", 
pˇp
->
öfo
.
¢≠Àn
);

226 
	`¥ötf
(" sigfigs: %d,", 
pˇp
->
öfo
.
sigfigs
);

227 
	`¥ötf
("Çëw‹k: %d", 
pˇp
->
öfo
.
√tw‹k
);

228 
	`¥ötf
(" Endün: %s\n", 
pˇp
->
ídün
 =
BIG_ENDIAN
 ? "Big" : "Little");

229 i‡(
Êag
)

230 
	`¥ötf
(" Packë cou¡: %d\n", 
pˇp
->
pkt_cou¡
);

231 
	`¥ötf
("\n");

232 
	`fÊush
(
°dout
);

233 
	}
}

248 
	$wr_pˇp_ªwöd
(
pˇp_öfo_t
 *
pˇp
)

250 i‡(
pˇp
 =
NULL
)

254 
	`ªwöd
(
pˇp
->
fd
);

257 ()
	`f£ek
(
pˇp
->
fd
, (
pˇp_hdr_t
), 
SEEK_SET
);

258 
	}
}

273 
	$wr_pˇp_skù
(
pˇp_öfo_t
 *
pˇp
, 
uöt32_t
 
skù
)

275 
pˇ¥ec_hdr_t
 
hdr
, *
phdr
;

277 i‡(
pˇp
 =
NULL
)

281 
	`ªwöd
(
pˇp
->
fd
);

284 ()
	`f£ek
(
pˇp
->
fd
, (
pˇp_hdr_t
), 
SEEK_SET
);

286 
phdr
 = &
hdr
;

287 
skù
--) {

288 i‡(
	`‰ód
(
phdr
, 1, (
pˇ¥ec_hdr_t
),

289 
pˇp
->
fd
Ë!(
pˇ¥ec_hdr_t
) )

293 
	`wr_pˇp_c⁄vît
(
pˇp
, 
phdr
);

295 ()
	`f£ek
(
pˇp
->
fd
, 
phdr
->
ö˛_Àn
, 
SEEK_CUR
);

297 
	}
}

312 
	$wr_pˇp_˛o£
(
pˇp_öfo_t
 *
pˇp
)

314 i‡(
pˇp
 =
NULL
)

317 i‡(
pˇp
->
fd
)

318 
	`f˛o£
(
pˇp
->
fd
);

319 i‡(
pˇp
->
fûíame
)

320 
	`‰ì
(
pˇp
->
fûíame
);

321 
	`πe_‰ì
(
pˇp
);

322 
	}
}

337 
	$wr_∑ylﬂdOff£t
(c⁄° *
pkt_d©a
, *
off£t
,

338 *
Àngth
) {

339 c⁄° 
ùHdr_t
 *
ùh
 =

340 (c⁄° 
ùHdr_t
 *)(
pkt_d©a
 + (
ëhî_hdr
));

341 c⁄° 
t˝Hdr_t
 *
th
 = 
NULL
;

344 i‡–(
ùh
->
vl
 & 0xF0) != 0x40)

348 i‡(
ùh
->
f‰ag
 & 
	`ht⁄s
(
PG_OFF_MF
 | 
PG_OFF_MASK
))

352 
ihÀn
 = (
ùh
->
vl
 & 0x0F) * 4;

353 
thÀn
 = 0;

355 
ùh
->
¥Ÿo
) {

356 
PG_IPPROTO_TCP
:

357 
th
 = (c⁄° 
t˝Hdr_t
 *)((c⁄° *)
ùh
 + 
ihÀn
);

358 
thÀn
 = (
th
->
off£t
 >> 4) * 4;

360 
PG_IPPROTO_UDP
:

361 
thÀn
 = (
udpHdr_t
);

367 *
off£t
 = (
ëhî_hdr
Ë+ 
ihÀn
 + 
thÀn
;

368 *
Àngth
 = (
ëhî_hdr
Ë+ 
	`¡ohs
(
ùh
->
éí
Ë- *
off£t
;

370  *
Àngth
 != 0;

371 
	}
}

385 
size_t


386 
	$wr_pˇp_ªad
(
pˇp_öfo_t
 *
pˇp
,

387 
pˇ¥ec_hdr_t
 *
pHdr
,

388 *
pktBuff
,

389 
uöt32_t
 
bufLí
)

392 i‡(
	`‰ód
(
pHdr
, 1, (
pˇ¥ec_hdr_t
),

393 
pˇp
->
fd
Ë!(
pˇ¥ec_hdr_t
) )

397 
	`wr_pˇp_c⁄vît
(
pˇp
, 
pHdr
);

400 i‡(
pHdr
->
ö˛_Àn
 > 
bufLí
) {

401 ()
	`f£ek
(
pˇp
->
fd
, 
pHdr
->
ö˛_Àn
, 
SEEK_CUR
);

402  
pHdr
->
ö˛_Àn
;

405  
	`‰ód
(
pktBuff
, 1, 
pHdr
->
ö˛_Àn
, 
pˇp
->
fd
);

407 
	}
}

	@lib/common/wr_pcap.h

68 #i‚de‡
_WR_PCAP_H_


69 
	#_WR_PCAP_H_


	)

71 
	~<√töë/ö.h
>

73 
	~<πe_mem‹y.h
>

75 
	#PCAP_MAGIC_NUMBER
 0xa1b2c3d4

	)

76 
	#PCAP_MAJOR_VERSION
 2

	)

77 
	#PCAP_MINOR_VERSION
 4

	)

79 
	spˇp_hdr_s
 {

80 
uöt32_t
 
	mmagic_numbî
;

81 
uöt16_t
 
	mvîsi⁄_maj‹
;

82 
uöt16_t
 
	mvîsi⁄_mö‹
;

83 
öt32_t
 
	mthisz⁄e
;

84 
uöt32_t
 
	msigfigs
;

85 
uöt32_t
 
	m¢≠Àn
;

86 
uöt32_t
 
	m√tw‹k
;

87 } 
	tpˇp_hdr_t
;

89 
	spˇ¥ec_hdr_s
 {

90 
uöt32_t
 
	mts_£c
;

91 
uöt32_t
 
	mts_u£c
;

92 
uöt32_t
 
	mö˛_Àn
;

93 
uöt32_t
 
	m‹ig_Àn
;

94 } 
	tpˇ¥ec_hdr_t
;

96 
	spˇp_öfo_s
 {

97 
FILE
 *
	mfd
;

98 *
	mfûíame
;

99 
uöt32_t
 
	mídün
;

100 
uöt32_t
 
	mpkt_size
;

101 
uöt32_t
 
	mpkt_cou¡
;

102 
uöt32_t
 
	mpkt_idx
;

103 
pˇp_hdr_t
 
	möfo
;

104 } 
	tpˇp_öfo_t
;

106 #i‚de‡
BIG_ENDIAN


107 
	#BIG_ENDIAN
 0x4321

	)

109 #i‚de‡
LITTLE_ENDIAN


110 
	#LITTLE_ENDIAN
 0x1234

	)

113 
	spˇp_pkt_d©a_s
 {

114 
uöt8_t
 *
	mbuffAddr
;

115 
uöt8_t
 *
	mvútuÆAddr
;

116 
phys_addr_t
 
	mphysAddr
;

117 
uöt32_t
 
	msize
;

118 
pˇ¥ec_hdr_t
 
	mhdr
;

119 } 
	tpˇp_pkt_d©a_t
;

121 
__ölöe__
 

122 
	$wr_pˇp_c⁄vît
(
pˇp_öfo_t
 *
pˇp
, 
pˇ¥ec_hdr_t
 *
pHdr
)

124 i‡(
pˇp
->
ídün
 =
BIG_ENDIAN
) {

125 
pHdr
->
ö˛_Àn
 = 
	`¡ohl
(pHdr->incl_len);

126 
pHdr
->
‹ig_Àn
 = 
	`¡ohl
(pHdr->orig_len);

127 
pHdr
->
ts_£c
 = 
	`¡ohl
(pHdr->ts_sec);

128 
pHdr
->
ts_u£c
 = 
	`¡ohl
(pHdr->ts_usec);

130 
	}
}

132 
pˇp_öfo_t
 *
wr_pˇp_›í
(*
fûíame
, 
uöt16_t
 
p‹t
);

133 
wr_pˇp_vÆid
(*
fûíame
);

134 
wr_pˇp_˛o£
(
pˇp_öfo_t
 *
pˇp
);

135 
wr_pˇp_ªwöd
(
pˇp_öfo_t
 *
pˇp
);

136 
wr_pˇp_skù
(
pˇp_öfo_t
 *
pˇp
, 
uöt32_t
 
skù
);

137 
wr_pˇp_öfo
(
pˇp_öfo_t
 *
pˇp
, 
uöt16_t
 
p‹t
, 
Êag
);

138 
size_t
 
wr_pˇp_ªad
(
pˇp_öfo_t
 *
pˇp
,

139 
pˇ¥ec_hdr_t
 *
pHdr
,

140 *
pktBuff
,

141 
uöt32_t
 
bufLí
);

142 
wr_∑ylﬂdOff£t
(c⁄° *
pkt_d©a
, *
off£t
,

143 *
Àngth
);

	@lib/common/wr_port_config.c

68 
	~<°dio.h
>

69 
	~<°dlib.h
>

70 
	~<°döt.h
>

71 
	~<öây≥s.h
>

72 
	~<sys/ty≥s.h
>

73 
	~<uni°d.h
>

74 
	~<°rög.h
>

75 
	~<°d¨g.h
>

76 
	~<˘y≥.h
>

78 
	~<πe_vîsi⁄.h
>

79 
	~<πe_c⁄fig.h
>

80 
	~<πe_lc‹e.h
>

81 
	~<πe_©omic.h
>

82 
	~<πe_cy˛es.h
>

83 
	~<πe_pci.h
>

84 
	~<πe_dev¨gs.h
>

85 
	~<πe_debug.h
>

87 
	~"wr_s¸n.h
"

88 
	~"wr_p‹t_c⁄fig.h
"

89 
	~"wr_c‹e_öfo.h
"

91 
	#PORT_STRING_SIZE
 256

	)

105 
uöt32_t


106 
	$wr_gë_p‹tdesc
(
πe_pci_addr
 *
pciAddr
,

107 
uöt8_t
 **
p‹tdesc
,

108 
uöt32_t
 
num
,

109 
vîbo£
)

111 
FILE
 *
fd
;

112 
uöt32_t
 
idx
;

113 
buff
[
PORT_STRING_SIZE
], *
p
;

115 i‡–(
num
 <0Ë|| (
pciAddr
 =
NULL
Ë|| (
p‹tdesc
 == NULL) )

119 
fd
 = 
	`p›í
("lspci -D | grep Ethernet", "r");

120 i‡(
fd
 =
NULL
)

121 
	`πe_∑nic
("*** UnableÅo doÜspci mayÇeedÅo be installed");

123 i‡(
vîbo£
)

124 
	`Ârötf
(
°dout
, "\n** Bit Mask: AllÖorts in system\n");

126 
idx
 = 0;

127 
	`fgës
(
buff
, (buff), 
fd
) ) {

128 
p
 = &
buff
[0];

131 
p
[
	`°æí
(
buff
) - 1] = 0;

134 
pciAddr
[
idx
].
domaö
 = 
	`°πﬁ
(
p
, &p, 16);

135 
p
++;

136 
pciAddr
[
idx
].
bus
 = 
	`°πﬁ
(
p
, &p, 16);

137 
p
++;

138 
pciAddr
[
idx
].
devid
 = 
	`°πﬁ
(
p
, &p, 16);

139 
p
++;

140 
pciAddr
[
idx
].
fun˘i⁄
 = 
	`°πﬁ
(
p
, &p, 16);

142 i‡(
vîbo£
)

143 
	`Ârötf
(
°dout
, " 0x%016Œx: %s\n", (1ULL << 
idx
),

144 
buff
);

147 i‡(
p‹tdesc
)

148 
p‹tdesc
[
idx
] = (
uöt8_t
 *)
	`°rdup
(
buff
);

150 i‡(++
idx
 >
num
)

154 
	`p˛o£
(
fd
);

155 i‡(
vîbo£
)

156 
	`Ârötf
(
°dout
, "\nFound %dÖ‹ts\n", 
idx
);

158  
idx
;

159 
	}
}

174 
	$wr_‰ì_p‹tdesc
(
uöt8_t
 **
p‹tdesc
, 
uöt32_t
 
num
)

176 
uöt32_t
 
i
;

178 
i
 = 0; i < 
num
; i++) {

179 i‡(
p‹tdesc
[
i
])

180 
	`‰ì
((*)
p‹tdesc
[
i
]);

181 
p‹tdesc
[
i
] = 
NULL
;

183 
	}
}

197 
uöt32_t


198 
	$wr_¸óã_bœckli°
(
uöt64_t
 
p‹tmask
,

199 
πe_pci_addr
 *
p‹éi°
,

200 
uöt32_t
 
p‹t_˙t
,

201 
uöt8_t
 *
desc
[]) {

202 
uöt32_t
 
i
, 
idx
;

203 
pci_addr_°r
[32];

205 i‡–(
p‹tmask
 =0Ë|| (
p‹éi°
 =
NULL
Ë|| (
p‹t_˙t
 == 0) ||

206 (
desc
 =
NULL
) )

209 
	`Ârötf
(
°dout
,

211 
p‹tmask
);

212 
idx
 = 0;

213 
i
 = 0; i < 
p‹t_˙t
; i++) {

214 
	`mem£t
(
pci_addr_°r
, 0, (pci_addr_str));

215 i‡–(
p‹tmask
 & (1ULL << 
i
)) == 0) {

216 
	`Ârötf
(
°dout
, "-- %s\n", 
desc
[
i
]);

217 
	`°∫˝y
(
pci_addr_°r
, (*)
desc
[
i
], 12);

218 
	`πe_ól_dev¨gs_add
(
RTE_DEVTYPE_BLACKLISTED_PCI
,

219 
pci_addr_°r
);

220 
idx
++;

222 
	`°∫˝y
(
pci_addr_°r
, (*)
desc
[
i
], 12);

223 
	`πe_ól_dev¨gs_add
(
RTE_DEVTYPE_WHITELISTED_PCI
,

224 
pci_addr_°r
);

225 
	`Ârötf
(
°dout
, "++ %s\n", 
desc
[
i
]);

228 i‡(
desc
)

229 
	`Ârötf
(
°dout
, "\n");

231  
idx
;

232 
	}
}

	@lib/common/wr_port_config.h

68 #i‚de‡
_WR_PORT_CONFIG_H


69 
	#_WR_PORT_CONFIG_H


	)

71 
uöt32_t
 
wr_gë_p‹tdesc
(
πe_pci_addr
 *
pciAddr
,

72 
uöt8_t
 **
p‹tdesc
,

73 
uöt32_t
 
num
,

74 
vîbo£
);

75 
wr_‰ì_p‹tdesc
(
uöt8_t
 **
p‹tdesc
, 
uöt32_t
 
num
);

76 
uöt32_t
 
wr_¸óã_bœckli°
(
uöt64_t
 
p‹tmask
,

77 
πe_pci_addr
 *
p‹éi°
,

78 
uöt32_t
 
p‹t_˙t
,

79 
uöt8_t
 *
desc
[]);

	@lib/common/wr_scrn.c

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°döt.h
>

38 
	~<°rög.h
>

39 
	~<°d¨g.h
>

41 
	~<πe_c⁄fig.h
>

42 
	~<πe_©omic.h
>

43 
	~<πe_mÆloc.h
>

45 
	~"wr_s¸n.h
"

47 
wr_s¸n_t
 *
	g__s¸n
;

50 
	$wr_s¸n_˚¡î
(
öt16_t
 
r
, i¡16_à
ncﬁs
, c⁄° *
fmt
, ...)

52 
va_li°
 
vaLi°
;

53 
°r
[512];

55 i‡(
ncﬁs
 == -1)

56 
ncﬁs
 = 
__s¸n
->ncols;

57 
	`va_°¨t
(
vaLi°
, 
fmt
);

58 
	`v¢¥ötf
(
°r
, (°r), 
fmt
, 
vaLi°
);

59 
	`va_íd
(
vaLi°
);

60 
	`wr_s¸n_pos
(
r
, 
	`wr_s¸n_˚¡î_cﬁ
(
ncﬁs
, 
°r
));

61 
	`¥ötf
("%s", 
°r
);

62 
	`fÊush
(
°dout
);

63 
	}
}

66 
	$wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...)

68 
va_li°
 
vaLi°
;

70 i‡–(
r
 !0Ë&& (
c
 != 0) )

71 
	`wr_s¸n_pos
(
r
, 
c
);

72 
	`va_°¨t
(
vaLi°
, 
fmt
);

73 
	`v¥ötf
(
fmt
, 
vaLi°
);

74 
	`va_íd
(
vaLi°
);

75 
	`fÊush
(
°dout
);

76 
	}
}

79 
	$wr_s¸n_Ârötf
(
öt16_t
 
r
, i¡16_à
c
, 
FILE
 *
f
, c⁄° *
fmt
, ...)

81 
va_li°
 
vaLi°
;

83 i‡–(
r
 !0Ë&& (
c
 != 0) )

84 
	`wr_s¸n_pos
(
r
, 
c
);

85 
	`va_°¨t
(
vaLi°
, 
fmt
);

86 
	`vÂrötf
(
f
, 
fmt
, 
vaLi°
);

87 
	`va_íd
(
vaLi°
);

88 
	`fÊush
(
f
);

89 
	}
}

91 
wr_s¸n_t
 *

92 
	$wr_s¸n_öô
(
öt16_t
 
ƒows
, i¡16_à
ncﬁs
, 
theme
)

94 
wr_s¸n_t
 *
s¸n
;

96 i‡(
__s¸n
 !
NULL
) {

97 
	`‰ì
(
__s¸n
);

98 
__s¸n
 = 
NULL
;

101 
s¸n
 = 
	`mÆloc
((
wr_s¸n_t
));

102 i‡(
s¸n
) {

103 
	`πe_©omic32_£t
(&
s¸n
->
∑u£
, 
SCRN_PAUSED
);

105 
s¸n
->
ƒows
 =Çrows;

106 
s¸n
->
ncﬁs
 =Çcols;

107 
s¸n
->
theme
 =Åheme;

108 
	`wr_s¸n_cﬁ‹
(
DEFAULT_FG
, 
DEFAULT_BG
, 
OFF
);

110 
	`wr_s¸n_îa£
(
ƒows
);

114 
__s¸n
 = 
s¸n
;

116  
s¸n
;

117 
	}
}

	@lib/common/wr_scrn.h

34 #i‚de‡
__INCLUDE_WR_SCRN_H_


35 
	#__INCLUDE_WR_SCRN_H_


	)

37 #ifde‡
__˝lu•lus


47 
	~<°rög.h
>

48 
	~<°dio.h
>

50 
	~<πe_©omic.h
>

53 
	#SCRN_VERSION
 "1.3.0"

	)

56 
	swr_s¸n_s
 {

57 
πe_©omic32_t
 
∑u£
;

58 
πe_©omic32_t
 
°©e
;

59 
uöt16_t
 
ƒows
;

60 
uöt16_t
 
ncﬁs
;

61 
uöt16_t
 
theme
;

62 
uöt16_t
 
∑d0
;

63 } 
	twr_s¸n_t
;

65 
wr_s¸n_t
 *
__s¸n
;

68 íum { 
	gSCRN_RUNNING
 = 0, 
	gSCRN_PAUSED
 = 1 };

71 íum { 
	gTHEME_OFF
 = 0, 
	gTHEME_ON
 = 1 };

74 íum { 
	gBLACK
 = 0, 
	gRED
 = 1, 
	gGREEN
 = 2, 
	gYELLOW
 = 3, 
	gBLUE
 = 4, 
	gMAGENTA
 = 5,

75 
	gCYAN
 = 6, 
	gWHITE
 = 7,

76 
	gRGB
 = 8, 
	gDEFAULT_FG
 = 9, 
	gDEFAULT_BG
 = 9, 
	gNO_CHANGE
 = 98,

77 
	gUNKNOWN_COLOR
 = 99 } 
	tcﬁ‹_e
;

80 íum { 
	gOFF
 = 0, 
	gBOLD
 = 1, 
	gUNDERSCORE
 = 4, 
	gBLINK
 = 5, 
	gREVERSE
 = 7,

81 
	gCONCEALED
 = 8, 
	gNO_ATTR
 = 98, 
	gUNKNOWN_ATTR
 = 99 } 
	t©å_e
;

84 
uöt8_t
 
	trgb_t
;

87 
	#wr_s¸n_puts
(...Ë{ 
	`¥ötf
(
__VA_ARGS__
); 
	`fÊush
(
°dout
); }

	)

90 
__ölöe__
 

91 
wr_s¸n_pos
(
r
, 
c
Ë
wr_s¸n_puts
("\033[%d;%dH",Ñ, c)

92 
__ölöe__
 

93 
wr_s¸n_t›
(Ë
wr_s¸n_puts
("\033H")

95 
__ölöe__
 

96 
wr_s¸n_home
(Ë
wr_s¸n_puts
("\033H")

97 
__ölöe__
 

98 
wr_s¸n_coff
(Ë
wr_s¸n_puts
("\033[?25l")

99 
__ölöe__
 

100 
wr_s¸n_c⁄
(Ë
wr_s¸n_puts
("\033[?25h")

101 
__ölöe__
 

102 
wr_s¸n_tu∫_⁄
(Ë
wr_s¸n_puts
("\033[?25h")

103 
__ölöe__
 

104 
wr_s¸n_tu∫_off
(Ë
wr_s¸n_puts
("\033[?25l")

105 
__ölöe__
 

106 
wr_s¸n_ßve
(Ë
wr_s¸n_puts
("\0337")

107 
__ölöe__
 

108 
wr_s¸n_ª°‹e
(Ë
wr_s¸n_puts
("\0338")

109 
__ölöe__
 

110 
wr_s¸n_eﬁ
(Ë
wr_s¸n_puts
("\033[K")

111 
__ölöe__
 

112 
wr_s¸n_cbl
(Ë
wr_s¸n_puts
("\033[1K")

113 
__ölöe__
 

114 
wr_s¸n_˚l
(Ë
wr_s¸n_puts
("\033[2K")

115 
__ölöe__
 

116 
wr_s¸n_˛w
(Ë
wr_s¸n_puts
("\033[J")

117 
__ölöe__
 

118 
wr_s¸n_˛b
(Ë
wr_s¸n_puts
("\033[1J")

120 
__ölöe__
 

121 
wr_s¸n_˛s
(Ë
wr_s¸n_puts
("\033[2J")

122 
__ölöe__
 

123 
wr_s¸n_ªvî£
(Ë
wr_s¸n_puts
("\033[7m")

124 
__ölöe__
 

125 
wr_s¸n_n‹mÆ
(Ë
wr_s¸n_puts
("\033[0m")

127 
__ölöe__
 

128 
wr_s¸n_s¸ﬁl
(
r
Ë
wr_s¸n_puts
("\033[%d;r",Ñ)

130 
__ölöe__
 

131 
wr_s¸n_s¸ﬁl_up
(
r
Ë
wr_s¸n_puts
("\033[%dS",Ñ)

133 
__ölöe__
 

134 
wr_s¸n_s¸ﬁl_down
(
r
Ë
wr_s¸n_puts
("\033[%dT",Ñ)

136 
__ölöe__
 

137 
wr_s¸n_∆öes
(
r
Ë
wr_s¸n_puts
("\033[%dE",Ñ)

139 
__ölöe__
 

140 
wr_s¸n_£tw
(
t
Ë
wr_s¸n_puts
("\033[%d;r",Å)

142 
__ölöe__
 

143 
wr_s¸n_˝os
(Ë
wr_s¸n_puts
("\0336n")

146 
__ölöe__
 c⁄° *
wr_s¸n_vîsi⁄
() {

147  
	gSCRN_VERSION
;

151 
__ölöe__
 

152 
wr_s¸n_˛r_löe
(
r
) {

153 
wr_s¸n_pos
(
r
, 0);

154 
wr_s¸n_˚l
();

158 
__ölöe__
 

159 
wr_s¸n_eﬁ_pos
(
r
, 
c
) {

160 
wr_s¸n_pos
(
r
, 
c
);

161 
wr_s¸n_eﬁ
();

164 
__£t_¥om±
();

167 
__ölöe__
 

168 
wr_s¸n_∑u£
() {

169 
πe_©omic32_£t
(&
__s¸n
->
∑u£
, 
SCRN_PAUSED
);

170 
__£t_¥om±
();

174 
__ölöe__
 

175 
wr_s¸n_ªsume
() {

176 
πe_©omic32_£t
(&
__s¸n
->
∑u£
, 
SCRN_RUNNING
);

177 
__£t_¥om±
();

181 
__ölöe__
 

182 
wr_s¸n_is_∑u£d
() {

183  
πe_©omic32_ªad
(&
__s¸n
->
∑u£
Ë=
SCRN_PAUSED
;

187 
__ölöe__
 

188 
wr_s¸n_˚¡î_cﬁ
(
öt16_t
 
ncﬁs
, c⁄° *
msg
) {

189 
öt16_t
 
	gs
;

191 
	gs
 = ((
ncﬁs
 / 2Ë- (
°æí
(
msg
) / 2));

192  (
	gs
 <0Ë? 1 : 
s
;

196 
__ölöe__
 

197 
wr_s¸n_îa£
(
öt16_t
 
ƒows
) {

198 
öt16_t
 
	gi
, 
	g˙t
;

199 c⁄° *
	g∆
 = "\n\n\n\n\n\n\n\n";

201 
wr_s¸n_£tw
(1);

202 
wr_s¸n_pos
(
ƒows
 + 1, 1);

205 
	gi
 = 0, 
	g˙t
 = 0; i < (
	gƒows
 / (
	göt16_t
)
°æí
(
∆
));

206 
	gi
++, 
	g˙t
 +
°æí
(
∆
))

207 
¥ötf
("%s", 
∆
);

210 
	gi
 = 
˙t
; i < 
	gƒows
; i++)

211 
¥ötf
("\n");

213 
fÊush
(
°dout
);

217 
__ölöe__
 

218 
wr_s¸n_ª≥©
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
°r
, 
˙t
) {

219 
	gi
;

221 
wr_s¸n_pos
(
r
, 
c
);

222 
	gi
 = 0; i < 
	g˙t
; i++)

223 
¥ötf
("%s", 
°r
);

225 
fÊush
(
°dout
);

229 
__ölöe__
 

230 
wr_s¸n_cﬁ_ª≥©
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
°r
, 
˙t
) {

231 
	gi
;

233 
	gi
 = 0; i < 
	g˙t
; i++) {

234 
wr_s¸n_pos
(
r
++, 
c
);

235 
¥ötf
("%s", 
°r
);

240 
__ölöe__
 

241 
wr_s¸n_fgcﬁ‹
(
cﬁ‹_e
 
cﬁ‹
, 
©å_e
 
©å
) {

242 
wr_s¸n_puts
("\033[%d;%dm", 
©å
, 
cﬁ‹
 + 30);

246 
__ölöe__
 

247 
wr_s¸n_bgcﬁ‹
(
cﬁ‹_e
 
cﬁ‹
, 
©å_e
 
©å
) {

248 
wr_s¸n_puts
("\033[%d;%dm", 
©å
, 
cﬁ‹
 + 40);

252 
__ölöe__
 

253 
wr_s¸n_fgbgcﬁ‹
(
cﬁ‹_e
 
fg
, cﬁ‹_ê
bg
, 
©å_e
 
©å
) {

254 
wr_s¸n_puts
("\033[%d;%d;%dm", 
©å
, 
fg
 + 30, 
bg
 + 40);

258 
__ölöe__
 

259 
wr_s¸n_cﬁ‹
(
cﬁ‹_e
 
fg
, cﬁ‹_ê
bg
, 
©å_e
 
©å
) {

260 i‡–(
	gfg
 !
NO_CHANGE
Ë&& (
bg
 != NO_CHANGE) )

261 
wr_s¸n_fgbgcﬁ‹
(
fg
, 
bg
, 
©å
);

262 i‡(
	gfg
 =
NO_CHANGE
)

263 
wr_s¸n_bgcﬁ‹
(
bg
, 
©å
);

264 i‡(
	gbg
 =
NO_CHANGE
)

265 
wr_s¸n_fgcﬁ‹
(
fg
, 
©å
);

269 
__ölöe__
 

270 
wr_s¸n_rgb
(
uöt8_t
 
fg_bg
, 
rgb_t
 
r
,Ñgb_à
g
,Ñgb_à
b
) {

271 
wr_s¸n_puts
("\033[%d;2;%d;%d;%dm", 
fg_bg
, 
r
, 
g
, 
b
);

275 
wr_s¸n_t
 *
wr_s¸n_öô
(
öt16_t
 
ƒows
, i¡16_à
ncﬁs
, 
theme
);

277 
wr_s¸n_˚¡î
(
öt16_t
 
r
, i¡16_à
ncﬁs
, c⁄° *
fmt
, ...);

278 
wr_s¸n_¥ötf
(
öt16_t
 
r
, i¡16_à
c
, c⁄° *
fmt
, ...);

279 
wr_s¸n_Ârötf
(
öt16_t
 
r
, i¡16_à
c
, 
FILE
 *
f
, c⁄° *
fmt
,

282 
	#πe_¥ötf_°©us
(...Ë
	`wr_s¸n_Ârötf
(0, 0, 
°dout
, 
__VA_ARGS__
)

	)

284 #ifde‡
__˝lu•lus


	@lib/common/wr_utils.c

37 
	~<πe_c⁄fig.h
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°döt.h
>

42 
	~<öây≥s.h
>

43 
	~<sys/ty≥s.h
>

44 
	~<uni°d.h
>

45 
	~<°rög.h
>

46 
	~<sys/queue.h
>

47 
	~<√töë/ö.h
>

48 
	~<°d¨g.h
>

49 
	~<˘y≥.h
>

50 
	~<î∫o.h
>

51 
	~<gë›t.h
>

52 
	~<ãrmios.h
>

54 
	~"wr_utûs.h
"

56 
	#MAX_PARSE_SIZE
 256

	)

77 
	$wr_°πrim
(*
°r
)

79 *
p
;

80 
Àn
;

82 i‡–(
°r
 !
NULL
Ë&& (
Àn
 = 
	`°æí
(str)) ) {

84 ; *
°r
 != 0; str++)

85 i‡–(*
°r
 != ' ') && (*str != '\t') &&

86 (*
°r
 != '\r') && (*str != '\n') )

89 
Àn
 = 
	`°æí
(
°r
);

90 i‡(
Àn
 == 0)

91  
°r
;

94 
p
 = &
°r
[
Àn
 - 1];Ö > str;Ö--) {

95 i‡–(*
p
 != ' ') && (*p != '\t') && (*p != '\r') &&

96 (*
p
 != '\n') )

98 *
p
 = '\0';

101  
°r
;

102 
	}
}

104 
uöt32_t


105 
	$wr_°Ω¨£
(*
°r
, c⁄° *
dñim
, **
íåõs
, 
uöt32_t
 
max_íåõs
)

107 
uöt32_t
 
i
;

108 *
ßved
;

110 i‡–(
°r
 =
NULL
Ë|| (
dñim
 =NULLË|| (
íåõs
 == NULL) ||

111 (
max_íåõs
 == 0) )

114 
	`mem£t
(
íåõs
, '\0', ((*Ë* 
max_íåõs
));

116 
i
 = 0; i < 
max_íåõs
; i++) {

117 
íåõs
[
i
] = 
	`°πok_r
(
°r
, 
dñim
, &
ßved
);

118 
°r
 = 
NULL
;

119 i‡(
íåõs
[
i
] =
NULL
)

122 
íåõs
[
i
] = 
	`wr_°πrim
(entries[i]);

125  
i
;

126 
	}
}

128 
uöt32_t


129 
	$skù_l°
(
f
, c⁄° *
l°
)

131 ; *
l°
 != '\n';Üst++)

132 i‡(
f
 =*
l°
)

135 
	}
}

138 
	$wr_°rc˝y
(*
t
, *
f
, c⁄° *
l°
)

140 i‡–(
t
 =
NULL
Ë|| (
f
 == NULL) )

141  
NULL
;

143 *
t
 = '\0';

144 i‡(*
f
 == '\0')

145  
t
;

147 *
f
 != '\0') {

148 i‡(
	`skù_l°
(*
f
, 
l°
) )

149 
f
++;

151 *
t
++ = *
f
++;

153 *
t
 = '\0';

154  
t
;

155 
	}
}

	@lib/common/wr_utils.h

68 #i‚de‡
_UTILS_H_


69 
	#_UTILS_H_


	)

76 
__ölöe__
 *

77 
	$wr_°rdupf
(*
°r
, *
√w
) {

78 i‡(
°r
Ë
	`‰ì
(str);

79  (
√w
 =
NULL
Ë? NULL : 
	`°rdup
(new);

80 
	}
}

89 
__ölöe__
 *

90 
	$wr_°πrim£t
(*
°r
, c⁄° *
£t
)

92 
Àn
;

94 
Àn
 = 
	`°æí
(
£t
);

95 i‡–(
Àn
 == 0) || (len & 1) )

96  
NULL
;

98 ; 
£t
 && (set[0] != '\0'); set += 2) {

99 i‡(*
°r
 !*
£t
)

102 i‡(*
°r
 =*
£t
++)

103 
°r
++;

105 
Àn
 = 
	`°æí
(
°r
);

106 i‡(
Àn
 && (
°r
[À¿- 1] =*
£t
) )

107 
°r
[
Àn
 - 1] = '\0';

109  
°r
;

110 
	}
}

112 
uöt32_t
 
wr_°Ω¨£
(*
s
,

113 c⁄° *
dñim
,

114 **
íåõs
,

115 
uöt32_t
 
max_íåõs
);

116 *
wr_°πrim
(*
löe
);

117 *
wr_°rc˝y
(*
t
, *
f
, c⁄° *
°r
);

	@lib/lua/src/lapi.c

7 
	#œpi_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

29 
	~"lundump.h
"

30 
	~"lvm.h
"

34 c⁄° 
	glua_idít
[] =

35 "$LuaVîsi⁄: " 
LUA_COPYRIGHT
 " $"

36 "$LuaAuth‹s: " 
LUA_AUTHORS
 " $";

40 
	#NONVALIDVALUE
 
	`ˇ°
(
TVÆue
 *, 
luaO_nûobje˘
)

	)

43 
	#isvÆid
(
o
Ë((oË!
luaO_nûobje˘
)

	)

46 
	#i•£udo
(
i
Ë((iË<
LUA_REGISTRYINDEX
)

	)

49 
	#isupvÆue
(
i
Ë((iË< 
LUA_REGISTRYINDEX
)

	)

52 
	#is°acködex
(
i
, 
o
Ë(
	`isvÆid
(oË&& !
	`i•£udo
(i))

	)

54 
	#≠i_checkvÆidödex
(
l
,
o
Ë
	`≠i_check
÷, 
	`isvÆid
(o), "övÆid index")

	)

56 
	#≠i_check°acködex
(
l
, 
i
, 
o
) \

57 
	`≠i_check
(
l
, 
	`is°acködex
(
i
, 
o
), "ödexÇŸ i¿thê°ack")

	)

60 
TVÆue
 *
	$ödex2addr
 (
lua_Sèã
 *
L
, 
idx
) {

61 
CÆlInfo
 *
ci
 = 
L
->ci;

62 i‡(
idx
 > 0) {

63 
TVÆue
 *
o
 = 
ci
->
func
 + 
idx
;

64 
	`≠i_check
(
L
, 
idx
 <
ci
->
t›
 - (ci->
func
 + 1), "unacceptable index");

65 i‡(
o
 >
L
->
t›
Ë 
NONVALIDVALUE
;

66  
o
;

68 i‡(!
	`i•£udo
(
idx
)) {

69 
	`≠i_check
(
L
, 
idx
 !0 && -idx <L->
t›
 - (
ci
->
func
 + 1), "invalid index");

70  
L
->
t›
 + 
idx
;

72 i‡(
idx
 =
LUA_REGISTRYINDEX
)

73  &
	`G
(
L
)->
l_ªgi°ry
;

75 
idx
 = 
LUA_REGISTRYINDEX
 - idx;

76 
	`≠i_check
(
L
, 
idx
 <
MAXUPVAL
 + 1, "upvalue indexÅooÜarge");

77 i‡(
	`âi¶cf
(
ci
->
func
))

78  
NONVALIDVALUE
;

80 
CClosuª
 *
func
 = 
	`˛CvÆue
(
ci
->func);

81  (
idx
 <
func
->
nupvÆues
Ë? &func->
upvÆue
[idx-1] : 
NONVALIDVALUE
;

84 
	}
}

91 
	$grow°ack
 (
lua_Sèã
 *
L
, *
ud
) {

92 
size
 = *(*)
ud
;

93 
	`luaD_grow°ack
(
L
, 
size
);

94 
	}
}

97 
LUA_API
 
	$lua_check°ack
 (
lua_Sèã
 *
L
, 
n
) {

98 
ªs
;

99 
CÆlInfo
 *
ci
 = 
L
->ci;

100 
	`lua_lock
(
L
);

101 
	`≠i_check
(
L
, 
n
 >= 0, "negative 'n'");

102 i‡(
L
->
°ack_œ°
 - L->
t›
 > 
n
)

103 
ªs
 = 1;

105 
öu£
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
EXTRA_STACK
;

106 i‡(
öu£
 > 
LUAI_MAXSTACK
 - 
n
)

107 
ªs
 = 0;

109 
ªs
 = (
	`luaD_øwru≈rŸe˘ed
(
L
, &
grow°ack
, &
n
Ë=
LUA_OK
);

111 i‡(
ªs
 && 
ci
->
t›
 < 
L
->t› + 
n
)

112 
ci
->
t›
 = 
L
->t› + 
n
;

113 
	`lua_u∆ock
(
L
);

114  
ªs
;

115 
	}
}

118 
LUA_API
 
	$lua_xmove
 (
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
) {

119 
i
;

120 i‡(
‰om
 =
to
) ;

121 
	`lua_lock
(
to
);

122 
	`≠i_check√Àms
(
‰om
, 
n
);

123 
	`≠i_check
(
‰om
, 
	`G
(‰omË=G(
to
), "movingámong independent states");

124 
	`≠i_check
(
‰om
, 
to
->
ci
->
t›
 -Åo->t› >
n
, "stack overflow");

125 
‰om
->
t›
 -
n
;

126 
i
 = 0; i < 
n
; i++) {

127 
	`£tobj2s
(
to
,Åo->
t›
, 
‰om
->t› + 
i
);

128 
to
->
t›
++;

130 
	`lua_u∆ock
(
to
);

131 
	}
}

134 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_©∑nic
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
) {

135 
lua_CFun˘i⁄
 
ﬁd
;

136 
	`lua_lock
(
L
);

137 
ﬁd
 = 
	`G
(
L
)->
∑nic
;

138 
	`G
(
L
)->
∑nic
 = 
∑nicf
;

139 
	`lua_u∆ock
(
L
);

140  
ﬁd
;

141 
	}
}

144 
LUA_API
 c⁄° 
lua_Numbî
 *
	$lua_vîsi⁄
 (
lua_Sèã
 *
L
) {

145 c⁄° 
lua_Numbî
 
vîsi⁄
 = 
LUA_VERSION_NUM
;

146 i‡(
L
 =
NULL
Ë &
vîsi⁄
;

147  
	`G
(
L
)->
vîsi⁄
;

148 
	}
}

160 
LUA_API
 
	$lua_absödex
 (
lua_Sèã
 *
L
, 
idx
) {

161  (
idx
 > 0 || 
	`i•£udo
(idx))

162 ? 
idx


163 : 
	`ˇ°_öt
(
L
->
t›
 - L->
ci
->
func
Ë+ 
idx
;

164 
	}
}

167 
LUA_API
 
	$lua_gët›
 (
lua_Sèã
 *
L
) {

168  
	`ˇ°_öt
(
L
->
t›
 - (L->
ci
->
func
 + 1));

169 
	}
}

172 
LUA_API
 
	$lua_£â›
 (
lua_Sèã
 *
L
, 
idx
) {

173 
StkId
 
func
 = 
L
->
ci
->func;

174 
	`lua_lock
(
L
);

175 i‡(
idx
 >= 0) {

176 
	`≠i_check
(
L
, 
idx
 <L->
°ack_œ°
 - (
func
 + 1), "newÅopÅooÜarge");

177 
L
->
t›
 < (
func
 + 1Ë+ 
idx
)

178 
	`£äûvÆue
(
L
->
t›
++);

179 
L
->
t›
 = (
func
 + 1Ë+ 
idx
;

182 
	`≠i_check
(
L
, -(
idx
+1Ë<(L->
t›
 - (
func
 + 1)), "invalidÇewÅop");

183 
L
->
t›
 +
idx
+1;

185 
	`lua_u∆ock
(
L
);

186 
	}
}

193 
	$ªvî£
 (
lua_Sèã
 *
L
, 
StkId
 
‰om
, StkId 
to
) {

194 ; 
‰om
 < 
to
; from++,Åo--) {

195 
TVÆue
 
ãmp
;

196 
	`£tobj
(
L
, &
ãmp
, 
‰om
);

197 
	`£tobjs2s
(
L
, 
‰om
, 
to
);

198 
	`£tobj2s
(
L
, 
to
, &
ãmp
);

200 
	}
}

207 
LUA_API
 
	$lua_rŸ©e
 (
lua_Sèã
 *
L
, 
idx
, 
n
) {

208 
StkId
 
p
, 
t
, 
m
;

209 
	`lua_lock
(
L
);

210 
t
 = 
L
->
t›
 - 1;

211 
p
 = 
	`ödex2addr
(
L
, 
idx
);

212 
	`≠i_check°acködex
(
L
, 
idx
, 
p
);

213 
	`≠i_check
(
L
, (
n
 >0 ?Ç : -nË<(
t
 - 
p
 + 1), "invalid 'n'");

214 
m
 = (
n
 >0 ? 
t
 -Ç : 
p
 -Ç - 1);

215 
	`ªvî£
(
L
, 
p
, 
m
);

216 
	`ªvî£
(
L
, 
m
 + 1, 
t
);

217 
	`ªvî£
(
L
, 
p
, 
t
);

218 
	`lua_u∆ock
(
L
);

219 
	}
}

222 
LUA_API
 
	$lua_c›y
 (
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
) {

223 
TVÆue
 *
‰
, *
to
;

224 
	`lua_lock
(
L
);

225 
‰
 = 
	`ödex2addr
(
L
, 
‰omidx
);

226 
to
 = 
	`ödex2addr
(
L
, 
toidx
);

227 
	`≠i_checkvÆidödex
(
L
, 
to
);

228 
	`£tobj
(
L
, 
to
, 
‰
);

229 i‡(
	`isupvÆue
(
toidx
))

230 
	`luaC_b¨rõr
(
L
, 
	`˛CvÆue
(L->
ci
->
func
), 
‰
);

233 
	`lua_u∆ock
(
L
);

234 
	}
}

237 
LUA_API
 
	$lua_pushvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

238 
	`lua_lock
(
L
);

239 
	`£tobj2s
(
L
, L->
t›
, 
	`ödex2addr
(L, 
idx
));

240 
	`≠i_ö¸_t›
(
L
);

241 
	`lua_u∆ock
(
L
);

242 
	}
}

251 
LUA_API
 
	$lua_ty≥
 (
lua_Sèã
 *
L
, 
idx
) {

252 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

253  (
	`isvÆid
(
o
Ë? 
	`ânov
(oË: 
LUA_TNONE
);

254 
	}
}

257 
LUA_API
 c⁄° *
	$lua_ty≥«me
 (
lua_Sèã
 *
L
, 
t
) {

258 
	`UNUSED
(
L
);

259 
	`≠i_check
(
L
, 
LUA_TNONE
 <
t
 &&Å < 
LUA_NUMTAGS
, "invalidÅag");

260  
	`ây≥«me
(
t
);

261 
	}
}

264 
LUA_API
 
	$lua_iscfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

265 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

266  (
	`âi¶cf
(
o
Ë|| (
	`âisC˛osuª
(o)));

267 
	}
}

270 
LUA_API
 
	$lua_isöãgî
 (
lua_Sèã
 *
L
, 
idx
) {

271 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

272  
	`âisöãgî
(
o
);

273 
	}
}

276 
LUA_API
 
	$lua_i¢umbî
 (
lua_Sèã
 *
L
, 
idx
) {

277 
lua_Numbî
 
n
;

278 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

279  
	`t⁄umbî
(
o
, &
n
);

280 
	}
}

283 
LUA_API
 
	$lua_is°rög
 (
lua_Sèã
 *
L
, 
idx
) {

284 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

285  (
	`âis°rög
(
o
Ë|| 
	`cvt2°r
(o));

286 
	}
}

289 
LUA_API
 
	$lua_isu£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

290 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

291  (
	`âisfuŒu£rd©a
(
o
Ë|| 
	`âi¶ightu£rd©a
(o));

292 
	}
}

295 
LUA_API
 
	$lua_øwequÆ
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
) {

296 
StkId
 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

297 
StkId
 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

298  (
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)Ë? 
	`luaV_øwequÆobj
(o1, o2) : 0;

299 
	}
}

302 
LUA_API
 
	$lua_¨ôh
 (
lua_Sèã
 *
L
, 
›
) {

303 
	`lua_lock
(
L
);

304 i‡(
›
 !
LUA_OPUNM
 && o∞!
LUA_OPBNOT
)

305 
	`≠i_check√Àms
(
L
, 2);

307 
	`≠i_check√Àms
(
L
, 1);

308 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

309 
	`≠i_ö¸_t›
(
L
);

312 
	`luaO_¨ôh
(
L
, 
›
, L->
t›
 - 2, L->top - 1, L->top - 2);

313 
L
->
t›
--;

314 
	`lua_u∆ock
(
L
);

315 
	}
}

318 
LUA_API
 
	$lua_com∑ª
 (
lua_Sèã
 *
L
, 
ödex1
, 
ödex2
, 
›
) {

319 
StkId
 
o1
, 
o2
;

320 
i
 = 0;

321 
	`lua_lock
(
L
);

322 
o1
 = 
	`ödex2addr
(
L
, 
ödex1
);

323 
o2
 = 
	`ödex2addr
(
L
, 
ödex2
);

324 i‡(
	`isvÆid
(
o1
Ë&& isvÆid(
o2
)) {

325 
›
) {

326 
LUA_OPEQ
: 
i
 = 
	`luaV_equÆobj
(
L
, 
o1
, 
o2
); ;

327 
LUA_OPLT
: 
i
 = 
	`luaV_Às°h™
(
L
, 
o1
, 
o2
); ;

328 
LUA_OPLE
: 
i
 = 
	`luaV_Às£quÆ
(
L
, 
o1
, 
o2
); ;

329 : 
	`≠i_check
(
L
, 0, "invalid option");

332 
	`lua_u∆ock
(
L
);

333  
i
;

334 
	}
}

337 
LUA_API
 
size_t
 
	$lua_°rögt⁄umbî
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

338 
size_t
 
sz
 = 
	`luaO_°r2num
(
s
, 
L
->
t›
);

339 i‡(
sz
 != 0)

340 
	`≠i_ö¸_t›
(
L
);

341  
sz
;

342 
	}
}

345 
LUA_API
 
lua_Numbî
 
	$lua_t⁄umbîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

346 
lua_Numbî
 
n
;

347 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

348 
i¢um
 = 
	`t⁄umbî
(
o
, &
n
);

349 i‡(!
i¢um
)

350 
n
 = 0;

351 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

352  
n
;

353 
	}
}

356 
LUA_API
 
lua_I¡egî
 
	$lua_toöãgîx
 (
lua_Sèã
 *
L
, 
idx
, *
pi¢um
) {

357 
lua_I¡egî
 
ªs
;

358 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

359 
i¢um
 = 
	`toöãgî
(
o
, &
ªs
);

360 i‡(!
i¢um
)

361 
ªs
 = 0;

362 i‡(
pi¢um
Ë*pi¢um = 
i¢um
;

363  
ªs
;

364 
	}
}

367 
LUA_API
 
	$lua_toboﬁón
 (
lua_Sèã
 *
L
, 
idx
) {

368 c⁄° 
TVÆue
 *
o
 = 
	`ödex2addr
(
L
, 
idx
);

369  !
	`l_isÁl£
(
o
);

370 
	}
}

373 
LUA_API
 c⁄° *
	$lua_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

374 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

375 i‡(!
	`âis°rög
(
o
)) {

376 i‡(!
	`cvt2°r
(
o
)) {

377 i‡(
Àn
 !
NULL
) *len = 0;

378  
NULL
;

380 
	`lua_lock
(
L
);

381 
	`luaC_checkGC
(
L
);

382 
o
 = 
	`ödex2addr
(
L
, 
idx
);

383 
	`luaO_to°rög
(
L
, 
o
);

384 
	`lua_u∆ock
(
L
);

386 i‡(
Àn
 !
NULL
)

387 *
Àn
 = 
	`v¶í
(
o
);

388  
	`svÆue
(
o
);

389 
	}
}

392 
LUA_API
 
size_t
 
	$lua_øwÀn
 (
lua_Sèã
 *
L
, 
idx
) {

393 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

394 
	`ây≥
(
o
)) {

395 
LUA_TSHRSTR
:  
	`tsvÆue
(
o
)->
shæí
;

396 
LUA_TLNGSTR
:  
	`tsvÆue
(
o
)->
u
.
 gÀn
;

397 
LUA_TUSERDATA
:  
	`uvÆue
(
o
)->
Àn
;

398 
LUA_TTABLE
:  
	`luaH_gën
(
	`hvÆue
(
o
));

401 
	}
}

404 
LUA_API
 
lua_CFun˘i⁄
 
	$lua_tocfun˘i⁄
 (
lua_Sèã
 *
L
, 
idx
) {

405 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

406 i‡(
	`âi¶cf
(
o
)Ë 
	`fvÆue
(o);

407 i‡(
	`âisC˛osuª
(
o
))

408  
	`˛CvÆue
(
o
)->
f
;

409  
NULL
;

410 
	}
}

413 
LUA_API
 *
	$lua_tou£rd©a
 (
lua_Sèã
 *
L
, 
idx
) {

414 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

415 
	`ânov
(
o
)) {

416 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

417 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

418 :  
NULL
;

420 
	}
}

423 
LUA_API
 
lua_Sèã
 *
	$lua_tŸhªad
 (
lua_Sèã
 *
L
, 
idx
) {

424 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

425  (!
	`âi°hªad
(
o
)Ë? 
NULL
 : 
	`thvÆue
(o);

426 
	}
}

429 
LUA_API
 c⁄° *
	$lua_t›oöãr
 (
lua_Sèã
 *
L
, 
idx
) {

430 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
idx
);

431 
	`ây≥
(
o
)) {

432 
LUA_TTABLE
:  
	`hvÆue
(
o
);

433 
LUA_TLCL
:  
	`˛LvÆue
(
o
);

434 
LUA_TCCL
:  
	`˛CvÆue
(
o
);

435 
LUA_TLCF
:  
	`ˇ°
(*, ca°(
size_t
, 
	`fvÆue
(
o
)));

436 
LUA_TTHREAD
:  
	`thvÆue
(
o
);

437 
LUA_TUSERDATA
:  
	`gëud©amem
(
	`uvÆue
(
o
));

438 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
o
);

439 :  
NULL
;

441 
	}
}

450 
LUA_API
 
	$lua_pushnû
 (
lua_Sèã
 *
L
) {

451 
	`lua_lock
(
L
);

452 
	`£äûvÆue
(
L
->
t›
);

453 
	`≠i_ö¸_t›
(
L
);

454 
	`lua_u∆ock
(
L
);

455 
	}
}

458 
LUA_API
 
	$lua_pushnumbî
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
n
) {

459 
	`lua_lock
(
L
);

460 
	`£tÊtvÆue
(
L
->
t›
, 
n
);

461 
	`≠i_ö¸_t›
(
L
);

462 
	`lua_u∆ock
(
L
);

463 
	}
}

466 
LUA_API
 
	$lua_pushöãgî
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
) {

467 
	`lua_lock
(
L
);

468 
	`£tivÆue
(
L
->
t›
, 
n
);

469 
	`≠i_ö¸_t›
(
L
);

470 
	`lua_u∆ock
(
L
);

471 
	}
}

479 
LUA_API
 c⁄° *
	$lua_pushl°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
) {

480 
TSåög
 *
ts
;

481 
	`lua_lock
(
L
);

482 
	`luaC_checkGC
(
L
);

483 
ts
 = (
Àn
 =0Ë? 
	`luaS_√w
(
L
, ""Ë: 
	`luaS_√wl°r
(L, 
s
,Üen);

484 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

485 
	`≠i_ö¸_t›
(
L
);

486 
	`lua_u∆ock
(
L
);

487  
	`gë°r
(
ts
);

488 
	}
}

491 
LUA_API
 c⁄° *
	$lua_push°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

492 
	`lua_lock
(
L
);

493 i‡(
s
 =
NULL
)

494 
	`£äûvÆue
(
L
->
t›
);

496 
TSåög
 *
ts
;

497 
	`luaC_checkGC
(
L
);

498 
ts
 = 
	`luaS_√w
(
L
, 
s
);

499 
	`£tsvÆue2s
(
L
, L->
t›
, 
ts
);

500 
s
 = 
	`gë°r
(
ts
);

502 
	`≠i_ö¸_t›
(
L
);

503 
	`lua_u∆ock
(
L
);

504  
s
;

505 
	}
}

508 
LUA_API
 c⁄° *
	$lua_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

509 
va_li°
 
¨gp
) {

510 c⁄° *
ªt
;

511 
	`lua_lock
(
L
);

512 
	`luaC_checkGC
(
L
);

513 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

514 
	`lua_u∆ock
(
L
);

515  
ªt
;

516 
	}
}

519 
LUA_API
 c⁄° *
	$lua_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

520 c⁄° *
ªt
;

521 
va_li°
 
¨gp
;

522 
	`lua_lock
(
L
);

523 
	`luaC_checkGC
(
L
);

524 
	`va_°¨t
(
¨gp
, 
fmt
);

525 
ªt
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

526 
	`va_íd
(
¨gp
);

527 
	`lua_u∆ock
(
L
);

528  
ªt
;

529 
	}
}

532 
LUA_API
 
	$lua_pushc˛osuª
 (
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
) {

533 
	`lua_lock
(
L
);

534 i‡(
n
 == 0) {

535 
	`£tfvÆue
(
L
->
t›
, 
‚
);

538 
CClosuª
 *
˛
;

539 
	`≠i_check√Àms
(
L
, 
n
);

540 
	`≠i_check
(
L
, 
n
 <
MAXUPVAL
, "upvalue indexÅooÜarge");

541 
	`luaC_checkGC
(
L
);

542 
˛
 = 
	`luaF_√wC˛osuª
(
L
, 
n
);

543 
˛
->
f
 = 
‚
;

544 
L
->
t›
 -
n
;

545 
n
--) {

546 
	`£tobj2n
(
L
, &
˛
->
upvÆue
[
n
], L->
t›
 +Ç);

549 
	`£t˛CvÆue
(
L
, L->
t›
, 
˛
);

551 
	`≠i_ö¸_t›
(
L
);

552 
	`lua_u∆ock
(
L
);

553 
	}
}

556 
LUA_API
 
	$lua_pushboﬁón
 (
lua_Sèã
 *
L
, 
b
) {

557 
	`lua_lock
(
L
);

558 
	`£tbvÆue
(
L
->
t›
, (
b
 != 0));

559 
	`≠i_ö¸_t›
(
L
);

560 
	`lua_u∆ock
(
L
);

561 
	}
}

564 
LUA_API
 
	$lua_pushlightu£rd©a
 (
lua_Sèã
 *
L
, *
p
) {

565 
	`lua_lock
(
L
);

566 
	`£çvÆue
(
L
->
t›
, 
p
);

567 
	`≠i_ö¸_t›
(
L
);

568 
	`lua_u∆ock
(
L
);

569 
	}
}

572 
LUA_API
 
	$lua_pushthªad
 (
lua_Sèã
 *
L
) {

573 
	`lua_lock
(
L
);

574 
	`£âhvÆue
(
L
, L->
t›
, L);

575 
	`≠i_ö¸_t›
(
L
);

576 
	`lua_u∆ock
(
L
);

577  (
	`G
(
L
)->
maöthªad
 == L);

578 
	}
}

587 
	$auxgë°r
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, c⁄° *
k
) {

588 c⁄° 
TVÆue
 *
aux
;

589 
TSåög
 *
°r
 = 
	`luaS_√w
(
L
, 
k
);

590 i‡(
	`luaV_Á°gë
(
L
, 
t
, 
°r
, 
aux
, 
luaH_gë°r
)) {

591 
	`£tobj2s
(
L
, L->
t›
, 
aux
);

592 
	`≠i_ö¸_t›
(
L
);

595 
	`£tsvÆue2s
(
L
, L->
t›
, 
°r
);

596 
	`≠i_ö¸_t›
(
L
);

597 
	`luaV_föishgë
(
L
, 
t
, L->
t›
 - 1, L->t› - 1, 
aux
);

599 
	`lua_u∆ock
(
L
);

600  
	`ânov
(
L
->
t›
 - 1);

601 
	}
}

604 
LUA_API
 
	$lua_gëglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

605 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

606 
	`lua_lock
(
L
);

607  
	`auxgë°r
(
L
, 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
), 
«me
);

608 
	}
}

611 
LUA_API
 
	$lua_gëèbÀ
 (
lua_Sèã
 *
L
, 
idx
) {

612 
StkId
 
t
;

613 
	`lua_lock
(
L
);

614 
t
 = 
	`ödex2addr
(
L
, 
idx
);

615 
	`luaV_gëèbÀ
(
L
, 
t
, L->
t›
 - 1, L->top - 1);

616 
	`lua_u∆ock
(
L
);

617  
	`ânov
(
L
->
t›
 - 1);

618 
	}
}

621 
LUA_API
 
	$lua_gëfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

622 
	`lua_lock
(
L
);

623  
	`auxgë°r
(
L
, 
	`ödex2addr
(L, 
idx
), 
k
);

624 
	}
}

627 
LUA_API
 
	$lua_gëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

628 
StkId
 
t
;

629 c⁄° 
TVÆue
 *
aux
;

630 
	`lua_lock
(
L
);

631 
t
 = 
	`ödex2addr
(
L
, 
idx
);

632 i‡(
	`luaV_Á°gë
(
L
, 
t
, 
n
, 
aux
, 
luaH_gëöt
)) {

633 
	`£tobj2s
(
L
, L->
t›
, 
aux
);

634 
	`≠i_ö¸_t›
(
L
);

637 
	`£tivÆue
(
L
->
t›
, 
n
);

638 
	`≠i_ö¸_t›
(
L
);

639 
	`luaV_föishgë
(
L
, 
t
, L->
t›
 - 1, L->t› - 1, 
aux
);

641 
	`lua_u∆ock
(
L
);

642  
	`ânov
(
L
->
t›
 - 1);

643 
	}
}

646 
LUA_API
 
	$lua_øwgë
 (
lua_Sèã
 *
L
, 
idx
) {

647 
StkId
 
t
;

648 
	`lua_lock
(
L
);

649 
t
 = 
	`ödex2addr
(
L
, 
idx
);

650 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

651 
	`£tobj2s
(
L
, L->
t›
 - 1, 
	`luaH_gë
(
	`hvÆue
(
t
), L->top - 1));

652 
	`lua_u∆ock
(
L
);

653  
	`ânov
(
L
->
t›
 - 1);

654 
	}
}

657 
LUA_API
 
	$lua_øwgëi
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

658 
StkId
 
t
;

659 
	`lua_lock
(
L
);

660 
t
 = 
	`ödex2addr
(
L
, 
idx
);

661 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

662 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gëöt
(
	`hvÆue
(
t
), 
n
));

663 
	`≠i_ö¸_t›
(
L
);

664 
	`lua_u∆ock
(
L
);

665  
	`ânov
(
L
->
t›
 - 1);

666 
	}
}

669 
LUA_API
 
	$lua_øwgëp
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

670 
StkId
 
t
;

671 
TVÆue
 
k
;

672 
	`lua_lock
(
L
);

673 
t
 = 
	`ödex2addr
(
L
, 
idx
);

674 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

675 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

676 
	`£tobj2s
(
L
, L->
t›
, 
	`luaH_gë
(
	`hvÆue
(
t
), &
k
));

677 
	`≠i_ö¸_t›
(
L
);

678 
	`lua_u∆ock
(
L
);

679  
	`ânov
(
L
->
t›
 - 1);

680 
	}
}

683 
LUA_API
 
	$lua_¸óãèbÀ
 (
lua_Sèã
 *
L
, 
«ºay
, 
ƒec
) {

684 
TabÀ
 *
t
;

685 
	`lua_lock
(
L
);

686 
	`luaC_checkGC
(
L
);

687 
t
 = 
	`luaH_√w
(
L
);

688 
	`£thvÆue
(
L
, L->
t›
, 
t
);

689 
	`≠i_ö¸_t›
(
L
);

690 i‡(
«ºay
 > 0 || 
ƒec
 > 0)

691 
	`luaH_ªsize
(
L
, 
t
, 
«ºay
, 
ƒec
);

692 
	`lua_u∆ock
(
L
);

693 
	}
}

696 
LUA_API
 
	$lua_gëmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

697 c⁄° 
TVÆue
 *
obj
;

698 
TabÀ
 *
mt
;

699 
ªs
 = 0;

700 
	`lua_lock
(
L
);

701 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

702 
	`ânov
(
obj
)) {

703 
LUA_TTABLE
:

704 
mt
 = 
	`hvÆue
(
obj
)->
më©abÀ
;

706 
LUA_TUSERDATA
:

707 
mt
 = 
	`uvÆue
(
obj
)->
më©abÀ
;

710 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
obj
)];

713 i‡(
mt
 !
NULL
) {

714 
	`£thvÆue
(
L
, L->
t›
, 
mt
);

715 
	`≠i_ö¸_t›
(
L
);

716 
ªs
 = 1;

718 
	`lua_u∆ock
(
L
);

719  
ªs
;

720 
	}
}

723 
LUA_API
 
	$lua_gëu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

724 
StkId
 
o
;

725 
	`lua_lock
(
L
);

726 
o
 = 
	`ödex2addr
(
L
, 
idx
);

727 
	`≠i_check
(
L
, 
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

728 
	`gëu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
);

729 
	`≠i_ö¸_t›
(
L
);

730 
	`lua_u∆ock
(
L
);

731  
	`ânov
(
L
->
t›
 - 1);

732 
	}
}

742 
	$aux£t°r
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, c⁄° *
k
) {

743 c⁄° 
TVÆue
 *
aux
;

744 
TSåög
 *
°r
 = 
	`luaS_√w
(
L
, 
k
);

745 
	`≠i_check√Àms
(
L
, 1);

746 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
°r
, 
aux
, 
luaH_gë°r
, L->
t›
 - 1))

747 
L
->
t›
--;

749 
	`£tsvÆue2s
(
L
, L->
t›
, 
°r
);

750 
	`≠i_ö¸_t›
(
L
);

751 
	`luaV_föish£t
(
L
, 
t
, L->
t›
 - 1, L->t› - 2, 
aux
);

752 
L
->
t›
 -= 2;

754 
	`lua_u∆ock
(
L
);

755 
	}
}

758 
LUA_API
 
	$lua_£tglobÆ
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

759 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

760 
	`lua_lock
(
L
);

761 
	`aux£t°r
(
L
, 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
), 
«me
);

762 
	}
}

765 
LUA_API
 
	$lua_£âabÀ
 (
lua_Sèã
 *
L
, 
idx
) {

766 
StkId
 
t
;

767 
	`lua_lock
(
L
);

768 
	`≠i_check√Àms
(
L
, 2);

769 
t
 = 
	`ödex2addr
(
L
, 
idx
);

770 
	`luaV_£âabÀ
(
L
, 
t
, L->
t›
 - 2, L->top - 1);

771 
L
->
t›
 -= 2;

772 
	`lua_u∆ock
(
L
);

773 
	}
}

776 
LUA_API
 
	$lua_£tfõld
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
) {

777 
	`lua_lock
(
L
);

778 
	`aux£t°r
(
L
, 
	`ödex2addr
(L, 
idx
), 
k
);

779 
	}
}

782 
LUA_API
 
	$lua_£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

783 
StkId
 
t
;

784 c⁄° 
TVÆue
 *
aux
;

785 
	`lua_lock
(
L
);

786 
	`≠i_check√Àms
(
L
, 1);

787 
t
 = 
	`ödex2addr
(
L
, 
idx
);

788 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
n
, 
aux
, 
luaH_gëöt
, L->
t›
 - 1))

789 
L
->
t›
--;

791 
	`£tivÆue
(
L
->
t›
, 
n
);

792 
	`≠i_ö¸_t›
(
L
);

793 
	`luaV_föish£t
(
L
, 
t
, L->
t›
 - 1, L->t› - 2, 
aux
);

794 
L
->
t›
 -= 2;

796 
	`lua_u∆ock
(
L
);

797 
	}
}

800 
LUA_API
 
	$lua_øw£t
 (
lua_Sèã
 *
L
, 
idx
) {

801 
StkId
 
o
;

802 
TVÆue
 *
¶Ÿ
;

803 
	`lua_lock
(
L
);

804 
	`≠i_check√Àms
(
L
, 2);

805 
o
 = 
	`ödex2addr
(
L
, 
idx
);

806 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

807 
¶Ÿ
 = 
	`luaH_£t
(
L
, 
	`hvÆue
(
o
), L->
t›
 - 2);

808 
	`£tobj2t
(
L
, 
¶Ÿ
, L->
t›
 - 1);

809 
	`övÆid©eTMˇche
(
	`hvÆue
(
o
));

810 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
-1);

811 
L
->
t›
 -= 2;

812 
	`lua_u∆ock
(
L
);

813 
	}
}

816 
LUA_API
 
	$lua_øw£ti
 (
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
) {

817 
StkId
 
o
;

818 
	`lua_lock
(
L
);

819 
	`≠i_check√Àms
(
L
, 1);

820 
o
 = 
	`ödex2addr
(
L
, 
idx
);

821 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

822 
	`luaH_£töt
(
L
, 
	`hvÆue
(
o
), 
n
, L->
t›
 - 1);

823 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
-1);

824 
L
->
t›
--;

825 
	`lua_u∆ock
(
L
);

826 
	}
}

829 
LUA_API
 
	$lua_øw£ç
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
) {

830 
StkId
 
o
;

831 
TVÆue
 
k
, *
¶Ÿ
;

832 
	`lua_lock
(
L
);

833 
	`≠i_check√Àms
(
L
, 1);

834 
o
 = 
	`ödex2addr
(
L
, 
idx
);

835 
	`≠i_check
(
L
, 
	`âi°abÀ
(
o
), "tableÉxpected");

836 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, 
p
));

837 
¶Ÿ
 = 
	`luaH_£t
(
L
, 
	`hvÆue
(
o
), &
k
);

838 
	`£tobj2t
(
L
, 
¶Ÿ
, L->
t›
 - 1);

839 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
o
), L->
t›
 - 1);

840 
L
->
t›
--;

841 
	`lua_u∆ock
(
L
);

842 
	}
}

845 
LUA_API
 
	$lua_£tmë©abÀ
 (
lua_Sèã
 *
L
, 
objödex
) {

846 
TVÆue
 *
obj
;

847 
TabÀ
 *
mt
;

848 
	`lua_lock
(
L
);

849 
	`≠i_check√Àms
(
L
, 1);

850 
obj
 = 
	`ödex2addr
(
L
, 
objödex
);

851 i‡(
	`âi¢û
(
L
->
t›
 - 1))

852 
mt
 = 
NULL
;

854 
	`≠i_check
(
L
, 
	`âi°abÀ
(L->
t›
 - 1), "tableÉxpected");

855 
mt
 = 
	`hvÆue
(
L
->
t›
 - 1);

857 
	`ânov
(
obj
)) {

858 
LUA_TTABLE
: {

859 
	`hvÆue
(
obj
)->
më©abÀ
 = 
mt
;

860 i‡(
mt
) {

861 
	`luaC_objb¨rõr
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

862 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

866 
LUA_TUSERDATA
: {

867 
	`uvÆue
(
obj
)->
më©abÀ
 = 
mt
;

868 i‡(
mt
) {

869 
	`luaC_objb¨rõr
(
L
, 
	`uvÆue
(
obj
), 
mt
);

870 
	`luaC_checkföÆizî
(
L
, 
	`gcvÆue
(
obj
), 
mt
);

875 
	`G
(
L
)->
mt
[
	`ânov
(
obj
)] = mt;

879 
L
->
t›
--;

880 
	`lua_u∆ock
(
L
);

882 
	}
}

885 
LUA_API
 
	$lua_£tu£rvÆue
 (
lua_Sèã
 *
L
, 
idx
) {

886 
StkId
 
o
;

887 
	`lua_lock
(
L
);

888 
	`≠i_check√Àms
(
L
, 1);

889 
o
 = 
	`ödex2addr
(
L
, 
idx
);

890 
	`≠i_check
(
L
, 
	`âisfuŒu£rd©a
(
o
), "full userdataÉxpected");

891 
	`£tu£rvÆue
(
L
, 
	`uvÆue
(
o
), L->
t›
 - 1);

892 
	`luaC_b¨rõr
(
L
, 
	`gcvÆue
(
o
), L->
t›
 - 1);

893 
L
->
t›
--;

894 
	`lua_u∆ock
(
L
);

895 
	}
}

903 
	#checkªsu…s
(
L
,
«
,
ƒ
) \

904 
	`≠i_check
(
L
, (
ƒ
Ë=
LUA_MULTRET
 || (L->
ci
->
t›
 - L->t› >“rË- (
«
)), \

905 "ªsu…†‰om fun˘i⁄ ovîÊow cuºíà°ack size")

	)

908 
LUA_API
 
	$lua_ˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

909 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

910 
StkId
 
func
;

911 
	`lua_lock
(
L
);

912 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

914 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

915 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

916 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

917 
func
 = 
L
->
t›
 - (
«rgs
+1);

918 i‡(
k
 !
NULL
 && 
L
->
¬y
 == 0) {

919 
L
->
ci
->
u
.
c
.
k
 = k;

920 
L
->
ci
->
u
.
c
.
˘x
 = ctx;

921 
	`luaD_ˇŒ
(
L
, 
func
, 
ƒesu…s
);

924 
	`luaD_ˇŒnoyõld
(
L
, 
func
, 
ƒesu…s
);

925 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

926 
	`lua_u∆ock
(
L
);

927 
	}
}

934 
	sCÆlS
 {

935 
StkId
 
	mfunc
;

936 
	mƒesu…s
;

940 
	$f_ˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

941 
CÆlS
 *
c
 = 
	`ˇ°
(CÆlS *, 
ud
);

942 
	`luaD_ˇŒnoyõld
(
L
, 
c
->
func
, c->
ƒesu…s
);

943 
	}
}

947 
LUA_API
 
	$lua_pˇŒk
 (
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

948 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
) {

949 
CÆlS
 
c
;

950 
°©us
;

951 
±rdiff_t
 
func
;

952 
	`lua_lock
(
L
);

953 
	`≠i_check
(
L
, 
k
 =
NULL
 || !
	`isLua
(L->
ci
),

955 
	`≠i_check√Àms
(
L
, 
«rgs
+1);

956 
	`≠i_check
(
L
, L->
°©us
 =
LUA_OK
, "cannot do calls onÇon-normalÅhread");

957 
	`checkªsu…s
(
L
, 
«rgs
, 
ƒesu…s
);

958 i‡(
îrfunc
 == 0)

959 
func
 = 0;

961 
StkId
 
o
 = 
	`ödex2addr
(
L
, 
îrfunc
);

962 
	`≠i_check°acködex
(
L
, 
îrfunc
, 
o
);

963 
func
 = 
	`ßve°ack
(
L
, 
o
);

965 
c
.
func
 = 
L
->
t›
 - (
«rgs
+1);

966 i‡(
k
 =
NULL
 || 
L
->
¬y
 > 0) {

967 
c
.
ƒesu…s
 =Çresults;

968 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_ˇŒ
, &
c
, 
	`ßve°ack
(L, c.
func
), func);

971 
CÆlInfo
 *
ci
 = 
L
->ci;

972 
ci
->
u
.
c
.
k
 = k;

973 
ci
->
u
.
c
.
˘x
 = ctx;

975 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
c
.
func
);

976 
ci
->
u
.
c
.
ﬁd_îrfunc
 = 
L
->
îrfunc
;

977 
L
->
îrfunc
 = 
func
;

978 
	`£tﬂh
(
ci
->
ˇŒ°©us
, 
L
->
Ælowhook
);

979 
ci
->
ˇŒ°©us
 |
CIST_YPCALL
;

980 
	`luaD_ˇŒ
(
L
, 
c
.
func
, 
ƒesu…s
);

981 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

982 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

983 
°©us
 = 
LUA_OK
;

985 
	`adju°ªsu…s
(
L
, 
ƒesu…s
);

986 
	`lua_u∆ock
(
L
);

987  
°©us
;

988 
	}
}

991 
LUA_API
 
	$lua_lﬂd
 (
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
d©a
,

992 c⁄° *
chunk«me
, c⁄° *
mode
) {

993 
ZIO
 
z
;

994 
°©us
;

995 
	`lua_lock
(
L
);

996 i‡(!
chunk«me
) chunkname = "?";

997 
	`luaZ_öô
(
L
, &
z
, 
ªadî
, 
d©a
);

998 
°©us
 = 
	`luaD_¥Ÿe˘ed∑r£r
(
L
, &
z
, 
chunk«me
, 
mode
);

999 i‡(
°©us
 =
LUA_OK
) {

1000 
LClosuª
 *
f
 = 
	`˛LvÆue
(
L
->
t›
 - 1);

1001 i‡(
f
->
nupvÆues
 >= 1) {

1003 
TabÀ
 *
ªg
 = 
	`hvÆue
(&
	`G
(
L
)->
l_ªgi°ry
);

1004 c⁄° 
TVÆue
 *
gt
 = 
	`luaH_gëöt
(
ªg
, 
LUA_RIDX_GLOBALS
);

1006 
	`£tobj
(
L
, 
f
->
upvÆs
[0]->
v
, 
gt
);

1007 
	`luaC_upvÆb¨rõr
(
L
, 
f
->
upvÆs
[0]);

1010 
	`lua_u∆ock
(
L
);

1011  
°©us
;

1012 
	}
}

1015 
LUA_API
 
	$lua_dump
 (
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
) {

1016 
°©us
;

1017 
TVÆue
 *
o
;

1018 
	`lua_lock
(
L
);

1019 
	`≠i_check√Àms
(
L
, 1);

1020 
o
 = 
L
->
t›
 - 1;

1021 i‡(
	`isLfun˘i⁄
(
o
))

1022 
°©us
 = 
	`luaU_dump
(
L
, 
	`gë¥Ÿo
(
o
), 
wrôî
, 
d©a
, 
°rù
);

1024 
°©us
 = 1;

1025 
	`lua_u∆ock
(
L
);

1026  
°©us
;

1027 
	}
}

1030 
LUA_API
 
	$lua_°©us
 (
lua_Sèã
 *
L
) {

1031  
L
->
°©us
;

1032 
	}
}

1039 
LUA_API
 
	$lua_gc
 (
lua_Sèã
 *
L
, 
wh©
, 
d©a
) {

1040 
ªs
 = 0;

1041 
globÆ_Sèã
 *
g
;

1042 
	`lua_lock
(
L
);

1043 
g
 = 
	`G
(
L
);

1044 
wh©
) {

1045 
LUA_GCSTOP
: {

1046 
g
->
g¸u¬ög
 = 0;

1049 
LUA_GCRESTART
: {

1050 
	`luaE_£tdebt
(
g
, 0);

1051 
g
->
g¸u¬ög
 = 1;

1054 
LUA_GCCOLLECT
: {

1055 
	`luaC_fuŒgc
(
L
, 0);

1058 
LUA_GCCOUNT
: {

1060 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) >> 10);

1063 
LUA_GCCOUNTB
: {

1064 
ªs
 = 
	`ˇ°_öt
(
	`gëtŸÆbyãs
(
g
) & 0x3ff);

1067 
LUA_GCSTEP
: {

1068 
l_mem
 
debt
 = 1;

1069 
lu_byã
 
ﬁdru¬ög
 = 
g
->
g¸u¬ög
;

1070 
g
->
g¸u¬ög
 = 1;

1071 i‡(
d©a
 == 0) {

1072 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
);

1073 
	`luaC_°ï
(
L
);

1076 
debt
 = 
	`ˇ°
(
l_mem
, 
d©a
Ë* 1024 + 
g
->
GCdebt
;

1077 
	`luaE_£tdebt
(
g
, 
debt
);

1078 
	`luaC_checkGC
(
L
);

1080 
g
->
g¸u¬ög
 = 
ﬁdru¬ög
;

1081 i‡(
debt
 > 0 && 
g
->
gc°©e
 =
GCS∑u£
)

1082 
ªs
 = 1;

1085 
LUA_GCSETPAUSE
: {

1086 
ªs
 = 
g
->
g˝au£
;

1087 
g
->
g˝au£
 = 
d©a
;

1090 
LUA_GCSETSTEPMUL
: {

1091 
ªs
 = 
g
->
gc°ïmul
;

1092 i‡(
d©a
 < 40) data = 40;

1093 
g
->
gc°ïmul
 = 
d©a
;

1096 
LUA_GCISRUNNING
: {

1097 
ªs
 = 
g
->
g¸u¬ög
;

1100 : 
ªs
 = -1;

1102 
	`lua_u∆ock
(
L
);

1103  
ªs
;

1104 
	}
}

1113 
LUA_API
 
	$lua_îr‹
 (
lua_Sèã
 *
L
) {

1114 
	`lua_lock
(
L
);

1115 
	`≠i_check√Àms
(
L
, 1);

1116 
	`luaG_îr‹msg
(
L
);

1119 
	}
}

1122 
LUA_API
 
	$lua_√xt
 (
lua_Sèã
 *
L
, 
idx
) {

1123 
StkId
 
t
;

1124 
m‹e
;

1125 
	`lua_lock
(
L
);

1126 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1127 
	`≠i_check
(
L
, 
	`âi°abÀ
(
t
), "tableÉxpected");

1128 
m‹e
 = 
	`luaH_√xt
(
L
, 
	`hvÆue
(
t
), L->
t›
 - 1);

1129 i‡(
m‹e
) {

1130 
	`≠i_ö¸_t›
(
L
);

1133 
L
->
t›
 -= 1;

1134 
	`lua_u∆ock
(
L
);

1135  
m‹e
;

1136 
	}
}

1139 
LUA_API
 
	$lua_c⁄ˇt
 (
lua_Sèã
 *
L
, 
n
) {

1140 
	`lua_lock
(
L
);

1141 
	`≠i_check√Àms
(
L
, 
n
);

1142 i‡(
n
 >= 2) {

1143 
	`luaC_checkGC
(
L
);

1144 
	`luaV_c⁄ˇt
(
L
, 
n
);

1146 i‡(
n
 == 0) {

1147 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, "", 0));

1148 
	`≠i_ö¸_t›
(
L
);

1151 
	`lua_u∆ock
(
L
);

1152 
	}
}

1155 
LUA_API
 
	$lua_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

1156 
StkId
 
t
;

1157 
	`lua_lock
(
L
);

1158 
t
 = 
	`ödex2addr
(
L
, 
idx
);

1159 
	`luaV_objÀn
(
L
, L->
t›
, 
t
);

1160 
	`≠i_ö¸_t›
(
L
);

1161 
	`lua_u∆ock
(
L
);

1162 
	}
}

1165 
LUA_API
 
lua_AŒoc
 
	$lua_gëÆlocf
 (
lua_Sèã
 *
L
, **
ud
) {

1166 
lua_AŒoc
 
f
;

1167 
	`lua_lock
(
L
);

1168 i‡(
ud
Ë*ud = 
	`G
(
L
)->ud;

1169 
f
 = 
	`G
(
L
)->
‰óŒoc
;

1170 
	`lua_u∆ock
(
L
);

1171  
f
;

1172 
	}
}

1175 
LUA_API
 
	$lua_£èŒocf
 (
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
) {

1176 
	`lua_lock
(
L
);

1177 
	`G
(
L
)->
ud
 = ud;

1178 
	`G
(
L
)->
‰óŒoc
 = 
f
;

1179 
	`lua_u∆ock
(
L
);

1180 
	}
}

1183 
LUA_API
 *
	$lua_√wu£rd©a
 (
lua_Sèã
 *
L
, 
size_t
 
size
) {

1184 
Ud©a
 *
u
;

1185 
	`lua_lock
(
L
);

1186 
	`luaC_checkGC
(
L
);

1187 
u
 = 
	`luaS_√wud©a
(
L
, 
size
);

1188 
	`£tuvÆue
(
L
, L->
t›
, 
u
);

1189 
	`≠i_ö¸_t›
(
L
);

1190 
	`lua_u∆ock
(
L
);

1191  
	`gëud©amem
(
u
);

1192 
	}
}

1196 c⁄° *
	$aux_upvÆue
 (
StkId
 
fi
, 
n
, 
TVÆue
 **
vÆ
,

1197 
CClosuª
 **
ow√r
, 
UpVÆ
 **
uv
) {

1198 
	`ây≥
(
fi
)) {

1199 
LUA_TCCL
: {

1200 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1201 i‡(!(1 <
n
 &&Ç <
f
->
nupvÆues
)Ë 
NULL
;

1202 *
vÆ
 = &
f
->
upvÆue
[
n
-1];

1203 i‡(
ow√r
Ë*ow√∏
f
;

1206 
LUA_TLCL
: {

1207 
LClosuª
 *
f
 = 
	`˛LvÆue
(
fi
);

1208 
TSåög
 *
«me
;

1209 
PrŸo
 *
p
 = 
f
->p;

1210 i‡(!(1 <
n
 &&Ç <
p
->
sizeupvÆues
)Ë 
NULL
;

1211 *
vÆ
 = 
f
->
upvÆs
[
n
-1]->
v
;

1212 i‡(
uv
Ë*uv = 
f
->
upvÆs
[
n
 - 1];

1213 
«me
 = 
p
->
upvÆues
[
n
-1].name;

1214  (
«me
 =
NULL
Ë? "(*nÿ«me)" : 
	`gë°r
(name);

1216 :  
NULL
;

1218 
	}
}

1221 
LUA_API
 c⁄° *
	$lua_gëupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1222 c⁄° *
«me
;

1223 
TVÆue
 *
vÆ
 = 
NULL
;

1224 
	`lua_lock
(
L
);

1225 
«me
 = 
	`aux_upvÆue
(
	`ödex2addr
(
L
, 
funcödex
), 
n
, &
vÆ
, 
NULL
, NULL);

1226 i‡(
«me
) {

1227 
	`£tobj2s
(
L
, L->
t›
, 
vÆ
);

1228 
	`≠i_ö¸_t›
(
L
);

1230 
	`lua_u∆ock
(
L
);

1231  
«me
;

1232 
	}
}

1235 
LUA_API
 c⁄° *
	$lua_£tupvÆue
 (
lua_Sèã
 *
L
, 
funcödex
, 
n
) {

1236 c⁄° *
«me
;

1237 
TVÆue
 *
vÆ
 = 
NULL
;

1238 
CClosuª
 *
ow√r
 = 
NULL
;

1239 
UpVÆ
 *
uv
 = 
NULL
;

1240 
StkId
 
fi
;

1241 
	`lua_lock
(
L
);

1242 
fi
 = 
	`ödex2addr
(
L
, 
funcödex
);

1243 
	`≠i_check√Àms
(
L
, 1);

1244 
«me
 = 
	`aux_upvÆue
(
fi
, 
n
, &
vÆ
, &
ow√r
, &
uv
);

1245 i‡(
«me
) {

1246 
L
->
t›
--;

1247 
	`£tobj
(
L
, 
vÆ
, L->
t›
);

1248 i‡(
ow√r
Ë{ 
	`luaC_b¨rõr
(
L
, ow√r, L->
t›
); }

1249 i‡(
uv
Ë{ 
	`luaC_upvÆb¨rõr
(
L
, uv); }

1251 
	`lua_u∆ock
(
L
);

1252  
«me
;

1253 
	}
}

1256 
UpVÆ
 **
	$gëupvÆªf
 (
lua_Sèã
 *
L
, 
fidx
, 
n
, 
LClosuª
 **
pf
) {

1257 
LClosuª
 *
f
;

1258 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1259 
	`≠i_check
(
L
, 
	`âisL˛osuª
(
fi
), "Lua functionÉxpected");

1260 
f
 = 
	`˛LvÆue
(
fi
);

1261 
	`≠i_check
(
L
, (1 <
n
 &&Ç <
f
->
p
->
sizeupvÆues
), "invalid upvalue index");

1262 i‡(
pf
Ë*p‡
f
;

1263  &
f
->
upvÆs
[
n
 - 1];

1264 
	}
}

1267 
LUA_API
 *
	$lua_upvÆueid
 (
lua_Sèã
 *
L
, 
fidx
, 
n
) {

1268 
StkId
 
fi
 = 
	`ödex2addr
(
L
, 
fidx
);

1269 
	`ây≥
(
fi
)) {

1270 
LUA_TLCL
: {

1271  *
	`gëupvÆªf
(
L
, 
fidx
, 
n
, 
NULL
);

1273 
LUA_TCCL
: {

1274 
CClosuª
 *
f
 = 
	`˛CvÆue
(
fi
);

1275 
	`≠i_check
(
L
, 1 <
n
 &&Ç <
f
->
nupvÆues
, "invalid upvalue index");

1276  &
f
->
upvÆue
[
n
 - 1];

1279 
	`≠i_check
(
L
, 0, "closureÉxpected");

1280  
NULL
;

1283 
	}
}

1286 
LUA_API
 
	$lua_upvÆuejoö
 (
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

1287 
fidx2
, 
n2
) {

1288 
LClosuª
 *
f1
;

1289 
UpVÆ
 **
up1
 = 
	`gëupvÆªf
(
L
, 
fidx1
, 
n1
, &
f1
);

1290 
UpVÆ
 **
up2
 = 
	`gëupvÆªf
(
L
, 
fidx2
, 
n2
, 
NULL
);

1291 
	`luaC_upvdeccou¡
(
L
, *
up1
);

1292 *
up1
 = *
up2
;

1293 (*
up1
)->
ªfcou¡
++;

1294 i‡(
	`upis›í
(*
up1
)Ë(*up1)->
u
.
›í
.
touched
 = 1;

1295 
	`luaC_upvÆb¨rõr
(
L
, *
up1
);

1296 
	}
}

	@lib/lua/src/lapi.h

7 #i‚de‡
œpi_h


8 
	#œpi_h


	)

11 
	~"Œimôs.h
"

12 
	~"l°©e.h
"

14 
	#≠i_ö¸_t›
(
L
Ë{L->
t›
++; 
	`≠i_check
(L, L->t› <L->
ci
->top, \

15 "°ack ovîÊow");}

	)

17 
	#adju°ªsu…s
(
L
,
ƒes
) \

18 { i‡((
ƒes
Ë=
LUA_MULTRET
 && 
L
->
ci
->
t›
 < L->t›ËL->ci->t› = L->t›; }

	)

20 
	#≠i_check√Àms
(
L
,
n
Ë
	`≠i_check
(L, (nË< (L->
t›
 - L->
ci
->
func
), \

21 "nŸÉnoughÉÀmít†öÅhê°ack")

	)

	@lib/lua/src/lauxlib.c

7 
	#œuxlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<°d¨g.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

24 
	~"lua.h
"

26 
	~"œuxlib.h
"

36 
	#LEVELS1
 10

	)

37 
	#LEVELS2
 11

	)

45 
	$födfõld
 (
lua_Sèã
 *
L
, 
objidx
, 
Àvñ
) {

46 i‡(
Àvñ
 =0 || !
	`lua_i°abÀ
(
L
, -1))

48 
	`lua_pushnû
(
L
);

49 
	`lua_√xt
(
L
, -2)) {

50 i‡(
	`lua_ty≥
(
L
, -2Ë=
LUA_TSTRING
) {

51 i‡(
	`lua_øwequÆ
(
L
, 
objidx
, -1)) {

52 
	`lua_p›
(
L
, 1);

55 i‡(
	`födfõld
(
L
, 
objidx
, 
Àvñ
 - 1)) {

56 
	`lua_ªmove
(
L
, -2);

57 
	`lua_pushlôîÆ
(
L
, ".");

58 
	`lua_ö£π
(
L
, -2);

59 
	`lua_c⁄ˇt
(
L
, 3);

63 
	`lua_p›
(
L
, 1);

66 
	}
}

73 
	$pushglobÆfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

74 
t›
 = 
	`lua_gët›
(
L
);

75 
	`lua_gëöfo
(
L
, "f", 
¨
);

76 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

77 i‡(
	`födfõld
(
L
, 
t›
 + 1, 2)) {

78 c⁄° *
«me
 = 
	`lua_to°rög
(
L
, -1);

79 i‡(
	`°∫cmp
(
«me
, "_G.", 3) == 0) {

80 
	`lua_push°rög
(
L
, 
«me
 + 3);

81 
	`lua_ªmove
(
L
, -2);

83 
	`lua_c›y
(
L
, -1, 
t›
 + 1);

84 
	`lua_p›
(
L
, 2);

88 
	`lua_£â›
(
L
, 
t›
);

91 
	}
}

94 
	$pushfun˙ame
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

95 i‡(
	`pushglobÆfun˙ame
(
L
, 
¨
)) {

96 
	`lua_pushf°rög
(
L
, "fun˘i⁄ '%s'", 
	`lua_to°rög
(L, -1));

97 
	`lua_ªmove
(
L
, -2);

99 i‡(*
¨
->
«mewh©
 != '\0')

100 
	`lua_pushf°rög
(
L
, "%†'%s'", 
¨
->
«mewh©
,ár->
«me
);

101 i‡(*
¨
->
wh©
 == 'm')

102 
	`lua_pushlôîÆ
(
L
, "main chunk");

103 i‡(*
¨
->
wh©
 != 'C')

104 
	`lua_pushf°rög
(
L
, "fun˘i⁄ <%s:%d>", 
¨
->
sh‹t_§c
,ár->
löedeföed
);

106 
	`lua_pushlôîÆ
(
L
, "?");

107 
	}
}

110 
	$œ°Àvñ
 (
lua_Sèã
 *
L
) {

111 
lua_Debug
 
¨
;

112 
li
 = 1, 
À
 = 1;

114 
	`lua_gë°ack
(
L
, 
À
, &
¨
)Ë{ 
li
 =Üe;Üe *= 2; }

116 
li
 < 
À
) {

117 
m
 = (
li
 + 
À
)/2;

118 i‡(
	`lua_gë°ack
(
L
, 
m
, &
¨
)Ë
li
 = m + 1;

119 
À
 = 
m
;

121  
À
 - 1;

122 
	}
}

125 
LUALIB_API
 
	$luaL_åa˚back
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

126 c⁄° *
msg
, 
Àvñ
) {

127 
lua_Debug
 
¨
;

128 
t›
 = 
	`lua_gët›
(
L
);

129 
œ°
 = 
	`œ°Àvñ
(
L1
);

130 
n1
 = (
œ°
 - 
Àvñ
 > 
LEVELS1
 + 
LEVELS2
) ? LEVELS1 : -1;

131 i‡(
msg
)

132 
	`lua_pushf°rög
(
L
, "%s\n", 
msg
);

133 
	`luaL_check°ack
(
L
, 10, 
NULL
);

134 
	`lua_pushlôîÆ
(
L
, "stackÅraceback:");

135 
	`lua_gë°ack
(
L1
, 
Àvñ
++, &
¨
)) {

136 i‡(
n1
-- == 0) {

137 
	`lua_pushlôîÆ
(
L
, "\n\t...");

138 
Àvñ
 = 
œ°
 - 
LEVELS2
 + 1;

141 
	`lua_gëöfo
(
L1
, "S t", &
¨
);

142 
	`lua_pushf°rög
(
L
, "\n\t%s:", 
¨
.
sh‹t_§c
);

143 i‡(
¨
.
cuºíéöe
 > 0)

144 
	`lua_pushf°rög
(
L
, "%d:", 
¨
.
cuºíéöe
);

145 
	`lua_pushlôîÆ
(
L
, " in ");

146 
	`pushfun˙ame
(
L
, &
¨
);

147 i‡(
¨
.
i°aûˇŒ
)

148 
	`lua_pushlôîÆ
(
L
, "\n\t(...tail calls...)");

149 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

152 
	`lua_c⁄ˇt
(
L
, 
	`lua_gët›
(LË- 
t›
);

153 
	}
}

164 
LUALIB_API
 
	$luaL_¨gîr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
) {

165 
lua_Debug
 
¨
;

166 i‡(!
	`lua_gë°ack
(
L
, 0, &
¨
))

167  
	`luaL_îr‹
(
L
, "badárgumíà#%d (%s)", 
¨g
, 
exåamsg
);

168 
	`lua_gëöfo
(
L
, "n", &
¨
);

169 i‡(
	`°rcmp
(
¨
.
«mewh©
, "method") == 0) {

170 
¨g
--;

171 i‡(
¨g
 == 0)

172  
	`luaL_îr‹
(
L
, "calling '%s' on bad self (%s)",

173 
¨
.
«me
, 
exåamsg
);

175 i‡(
¨
.
«me
 =
NULL
)

176 
¨
.
«me
 = (
	`pushglobÆfun˙ame
(
L
, &¨)Ë? 
	`lua_to°rög
(L, -1) : "?";

177  
	`luaL_îr‹
(
L
, "badárgument #%dÅo '%s' (%s)",

178 
¨g
, 
¨
.
«me
, 
exåamsg
);

179 
	}
}

182 
	$ty≥îr‹
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
äame
) {

183 c⁄° *
msg
;

184 c⁄° *
ty≥¨g
;

185 i‡(
	`luaL_gëmëafõld
(
L
, 
¨g
, "__«me"Ë=
LUA_TSTRING
)

186 
ty≥¨g
 = 
	`lua_to°rög
(
L
, -1);

187 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TLIGHTUSERDATA
)

188 
ty≥¨g
 = "light userdata";

190 
ty≥¨g
 = 
	`luaL_ty≥«me
(
L
, 
¨g
);

191 
msg
 = 
	`lua_pushf°rög
(
L
, "%†ex≥˘ed, gŸ %s", 
äame
, 
ty≥¨g
);

192  
	`luaL_¨gîr‹
(
L
, 
¨g
, 
msg
);

193 
	}
}

196 
	$èg_îr‹
 (
lua_Sèã
 *
L
, 
¨g
, 
èg
) {

197 
	`ty≥îr‹
(
L
, 
¨g
, 
	`lua_ty≥«me
(L, 
èg
));

198 
	}
}

201 
LUALIB_API
 
	$luaL_whîe
 (
lua_Sèã
 *
L
, 
Àvñ
) {

202 
lua_Debug
 
¨
;

203 i‡(
	`lua_gë°ack
(
L
, 
Àvñ
, &
¨
)) {

204 
	`lua_gëöfo
(
L
, "Sl", &
¨
);

205 i‡(
¨
.
cuºíéöe
 > 0) {

206 
	`lua_pushf°rög
(
L
, "%s:%d: ", 
¨
.
sh‹t_§c
,ár.
cuºíéöe
);

210 
	`lua_pushlôîÆ
(
L
, "");

211 
	}
}

214 
LUALIB_API
 
	$luaL_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

215 
va_li°
 
¨gp
;

216 
	`va_°¨t
(
¨gp
, 
fmt
);

217 
	`luaL_whîe
(
L
, 1);

218 
	`lua_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

219 
	`va_íd
(
¨gp
);

220 
	`lua_c⁄ˇt
(
L
, 2);

221  
	`lua_îr‹
(
L
);

222 
	}
}

225 
LUALIB_API
 
	$luaL_fûîesu…
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
) {

226 
í
 = 
î∫o
;

227 i‡(
°©
) {

228 
	`lua_pushboﬁón
(
L
, 1);

232 
	`lua_pushnû
(
L
);

233 i‡(
‚ame
)

234 
	`lua_pushf°rög
(
L
, "%s: %s", 
‚ame
, 
	`°ªº‹
(
í
));

236 
	`lua_push°rög
(
L
, 
	`°ªº‹
(
í
));

237 
	`lua_pushöãgî
(
L
, 
í
);

240 
	}
}

243 #i‡!
deföed
(
l_ö•e˘°©
)

245 #i‡
deföed
(
LUA_USE_POSIX
)

247 
	~<sys/waô.h
>

252 
	#l_ö•e˘°©
(
°©
,
wh©
) \

253 i‡(
	`WIFEXITED
(
°©
)Ë{ sèà
	`WEXITSTATUS
(stat); } \

254 i‡(
	`WIFSIGNALED
(
°©
)Ë{ sèà
	`WTERMSIG
(°©); 
wh©
 = "sig«l"; }

	)

258 
	#l_ö•e˘°©
(
°©
,
wh©
Ë

	)

265 
LUALIB_API
 
	$luaL_exe¸esu…
 (
lua_Sèã
 *
L
, 
°©
) {

266 c⁄° *
wh©
 = "exit";

267 i‡(
°©
 == -1)

268  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

270 
	`l_ö•e˘°©
(
°©
, 
wh©
);

271 i‡(*
wh©
 ='e' && 
°©
 == 0)

272 
	`lua_pushboﬁón
(
L
, 1);

274 
	`lua_pushnû
(
L
);

275 
	`lua_push°rög
(
L
, 
wh©
);

276 
	`lua_pushöãgî
(
L
, 
°©
);

279 
	}
}

290 
LUALIB_API
 
	$luaL_√wmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

291 i‡(
	`luaL_gëmë©abÀ
(
L
, 
äame
Ë!
LUA_TNIL
)

293 
	`lua_p›
(
L
, 1);

294 
	`lua_¸óãèbÀ
(
L
, 0, 2);

295 
	`lua_push°rög
(
L
, 
äame
);

296 
	`lua_£tfõld
(
L
, -2, "__name");

297 
	`lua_pushvÆue
(
L
, -1);

298 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
äame
);

300 
	}
}

303 
LUALIB_API
 
	$luaL_£tmë©abÀ
 (
lua_Sèã
 *
L
, c⁄° *
äame
) {

304 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

305 
	`lua_£tmë©abÀ
(
L
, -2);

306 
	}
}

309 
LUALIB_API
 *
	$luaL_ã°ud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

310 *
p
 = 
	`lua_tou£rd©a
(
L
, 
ud
);

311 i‡(
p
 !
NULL
) {

312 i‡(
	`lua_gëmë©abÀ
(
L
, 
ud
)) {

313 
	`luaL_gëmë©abÀ
(
L
, 
äame
);

314 i‡(!
	`lua_øwequÆ
(
L
, -1, -2))

315 
p
 = 
NULL
;

316 
	`lua_p›
(
L
, 2);

317  
p
;

320  
NULL
;

321 
	}
}

324 
LUALIB_API
 *
	$luaL_checkud©a
 (
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
) {

325 *
p
 = 
	`luaL_ã°ud©a
(
L
, 
ud
, 
äame
);

326 i‡(
p
 =
NULL
Ë
	`ty≥îr‹
(
L
, 
ud
, 
äame
);

327  
p
;

328 
	}
}

339 
LUALIB_API
 
	$luaL_check›ti⁄
 (
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

340 c⁄° *c⁄° 
l°
[]) {

341 c⁄° *
«me
 = (
def
Ë? 
	`luaL_›t°rög
(
L
, 
¨g
, def) :

342 
	`luaL_check°rög
(
L
, 
¨g
);

343 
i
;

344 
i
=0; 
l°
[i]; i++)

345 i‡(
	`°rcmp
(
l°
[
i
], 
«me
) == 0)

346  
i
;

347  
	`luaL_¨gîr‹
(
L
, 
¨g
,

348 
	`lua_pushf°rög
(
L
, "övÆid o±i⁄ '%s'", 
«me
));

349 
	}
}

352 
LUALIB_API
 
	$luaL_check°ack
 (
lua_Sèã
 *
L
, 
•a˚
, c⁄° *
msg
) {

354 c⁄° 
exåa
 = 
LUA_MINSTACK
;

355 i‡(!
	`lua_check°ack
(
L
, 
•a˚
 + 
exåa
)) {

356 i‡(
msg
)

357 
	`luaL_îr‹
(
L
, "°ack ovîÊow (%s)", 
msg
);

359 
	`luaL_îr‹
(
L
, "stack overflow");

361 
	}
}

364 
LUALIB_API
 
	$luaL_checkty≥
 (
lua_Sèã
 *
L
, 
¨g
, 
t
) {

365 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
t
)

366 
	`èg_îr‹
(
L
, 
¨g
, 
t
);

367 
	}
}

370 
LUALIB_API
 
	$luaL_check™y
 (
lua_Sèã
 *
L
, 
¨g
) {

371 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNONE
)

372 
	`luaL_¨gîr‹
(
L
, 
¨g
, "valueÉxpected");

373 
	}
}

376 
LUALIB_API
 c⁄° *
	$luaL_checkl°rög
 (
lua_Sèã
 *
L
, 
¨g
, 
size_t
 *
Àn
) {

377 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 
¨g
, 
Àn
);

378 i‡(!
s
Ë
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TSTRING
);

379  
s
;

380 
	}
}

383 
LUALIB_API
 c⁄° *
	$luaL_›é°rög
 (
lua_Sèã
 *
L
, 
¨g
,

384 c⁄° *
def
, 
size_t
 *
Àn
) {

385 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
)) {

386 i‡(
Àn
)

387 *
Àn
 = (
def
 ? 
	`°æí
(def) : 0);

388  
def
;

390  
	`luaL_checkl°rög
(
L
, 
¨g
, 
Àn
);

391 
	}
}

394 
LUALIB_API
 
lua_Numbî
 
	$luaL_checknumbî
 (
lua_Sèã
 *
L
, 
¨g
) {

395 
i¢um
;

396 
lua_Numbî
 
d
 = 
	`lua_t⁄umbîx
(
L
, 
¨g
, &
i¢um
);

397 i‡(!
i¢um
)

398 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

399  
d
;

400 
	}
}

403 
LUALIB_API
 
lua_Numbî
 
	$luaL_›äumbî
 (
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
) {

404  
	`luaL_›t
(
L
, 
luaL_checknumbî
, 
¨g
, 
def
);

405 
	}
}

408 
	$öãº‹
 (
lua_Sèã
 *
L
, 
¨g
) {

409 i‡(
	`lua_i¢umbî
(
L
, 
¨g
))

410 
	`luaL_¨gîr‹
(
L
, 
¨g
, "number hasÇo integerÑepresentation");

412 
	`èg_îr‹
(
L
, 
¨g
, 
LUA_TNUMBER
);

413 
	}
}

416 
LUALIB_API
 
lua_I¡egî
 
	$luaL_checköãgî
 (
lua_Sèã
 *
L
, 
¨g
) {

417 
i¢um
;

418 
lua_I¡egî
 
d
 = 
	`lua_toöãgîx
(
L
, 
¨g
, &
i¢um
);

419 i‡(!
i¢um
) {

420 
	`öãº‹
(
L
, 
¨g
);

422  
d
;

423 
	}
}

426 
LUALIB_API
 
lua_I¡egî
 
	$luaL_›töãgî
 (
lua_Sèã
 *
L
, 
¨g
,

427 
lua_I¡egî
 
def
) {

428  
	`luaL_›t
(
L
, 
luaL_checköãgî
, 
¨g
, 
def
);

429 
	}
}

441 
	sUBox
 {

442 *
	mbox
;

443 
size_t
 
	mbsize
;

444 } 
	tUBox
;

447 *
	$ªsizebox
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 
√wsize
) {

448 *
ud
;

449 
lua_AŒoc
 
Ælocf
 = 
	`lua_gëÆlocf
(
L
, &
ud
);

450 
UBox
 *
box
 = (UBox *)
	`lua_tou£rd©a
(
L
, 
idx
);

451 *
ãmp
 = 
	`Ælocf
(
ud
, 
box
->box, box->
bsize
, 
√wsize
);

452 i‡(
ãmp
 =
NULL
 && 
√wsize
 > 0) {

453 
	`ªsizebox
(
L
, 
idx
, 0);

454 
	`luaL_îr‹
(
L
, "notÉnough memory for bufferállocation");

456 
box
->box = 
ãmp
;

457 
box
->
bsize
 = 
√wsize
;

458  
ãmp
;

459 
	}
}

462 
	$boxgc
 (
lua_Sèã
 *
L
) {

463 
	`ªsizebox
(
L
, 1, 0);

465 
	}
}

468 *
	$√wbox
 (
lua_Sèã
 *
L
, 
size_t
 
√wsize
) {

469 
UBox
 *
box
 = (UBox *)
	`lua_√wu£rd©a
(
L
, (UBox));

470 
box
->box = 
NULL
;

471 
box
->
bsize
 = 0;

472 i‡(
	`luaL_√wmë©abÀ
(
L
, "LUABOX")) {

473 
	`lua_pushcfun˘i⁄
(
L
, 
boxgc
);

474 
	`lua_£tfõld
(
L
, -2, "__gc");

476 
	`lua_£tmë©abÀ
(
L
, -2);

477  
	`ªsizebox
(
L
, -1, 
√wsize
);

478 
	}
}

485 
	#buff⁄°ack
(
B
Ë((B)->
b
 !(B)->
öôb
)

	)

491 
LUALIB_API
 *
	$luaL_¥ïbuffsize
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

492 
lua_Sèã
 *
L
 = 
B
->L;

493 i‡(
B
->
size
 - B->
n
 < 
sz
) {

494 *
√wbuff
;

495 
size_t
 
√wsize
 = 
B
->
size
 * 2;

496 i‡(
√wsize
 - 
B
->
n
 < 
sz
)

497 
√wsize
 = 
B
->
n
 + 
sz
;

498 i‡(
√wsize
 < 
B
->
n
 ||Çewsizê- B->¿< 
sz
)

499 
	`luaL_îr‹
(
L
, "bufferÅooÜarge");

501 i‡(
	`buff⁄°ack
(
B
))

502 
√wbuff
 = (*)
	`ªsizebox
(
L
, -1, 
√wsize
);

504 
√wbuff
 = (*)
	`√wbox
(
L
, 
√wsize
);

505 
	`mem˝y
(
√wbuff
, 
B
->
b
, B->
n
 * ());

507 
B
->
b
 = 
√wbuff
;

508 
B
->
size
 = 
√wsize
;

510  &
B
->
b
[B->
n
];

511 
	}
}

514 
LUALIB_API
 
	$luaL_addl°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
) {

515 i‡(
l
 > 0) {

516 *
b
 = 
	`luaL_¥ïbuffsize
(
B
, 
l
);

517 
	`mem˝y
(
b
, 
s
, 
l
 * ());

518 
	`luaL_addsize
(
B
, 
l
);

520 
	}
}

523 
LUALIB_API
 
	$luaL_add°rög
 (
luaL_Buf„r
 *
B
, c⁄° *
s
) {

524 
	`luaL_addl°rög
(
B
, 
s
, 
	`°æí
(s));

525 
	}
}

528 
LUALIB_API
 
	$luaL_pushªsu…
 (
luaL_Buf„r
 *
B
) {

529 
lua_Sèã
 *
L
 = 
B
->L;

530 
	`lua_pushl°rög
(
L
, 
B
->
b
, B->
n
);

531 i‡(
	`buff⁄°ack
(
B
)) {

532 
	`ªsizebox
(
L
, -2, 0);

533 
	`lua_ªmove
(
L
, -2);

535 
	}
}

538 
LUALIB_API
 
	$luaL_pushªsu…size
 (
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

539 
	`luaL_addsize
(
B
, 
sz
);

540 
	`luaL_pushªsu…
(
B
);

541 
	}
}

544 
LUALIB_API
 
	$luaL_addvÆue
 (
luaL_Buf„r
 *
B
) {

545 
lua_Sèã
 *
L
 = 
B
->L;

546 
size_t
 
l
;

547 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

548 i‡(
	`buff⁄°ack
(
B
))

549 
	`lua_ö£π
(
L
, -2);

550 
	`luaL_addl°rög
(
B
, 
s
, 
l
);

551 
	`lua_ªmove
(
L
, (
	`buff⁄°ack
(
B
)) ? -2 : -1);

552 
	}
}

555 
LUALIB_API
 
	$luaL_bufföô
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
) {

556 
B
->
L
 = L;

557 
B
->
b
 = B->
öôb
;

558 
B
->
n
 = 0;

559 
B
->
size
 = 
LUAL_BUFFERSIZE
;

560 
	}
}

563 
LUALIB_API
 *
	$luaL_bufföôsize
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
) {

564 
	`luaL_bufföô
(
L
, 
B
);

565  
	`luaL_¥ïbuffsize
(
B
, 
sz
);

566 
	}
}

578 
	#‰ìli°
 0

	)

581 
LUALIB_API
 
	$luaL_ªf
 (
lua_Sèã
 *
L
, 
t
) {

582 
ªf
;

583 i‡(
	`lua_i¢û
(
L
, -1)) {

584 
	`lua_p›
(
L
, 1);

585  
LUA_REFNIL
;

587 
t
 = 
	`lua_absödex
(
L
,Å);

588 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

589 
ªf
 = ()
	`lua_toöãgî
(
L
, -1);

590 
	`lua_p›
(
L
, 1);

591 i‡(
ªf
 != 0) {

592 
	`lua_øwgëi
(
L
, 
t
, 
ªf
);

593 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

596 
ªf
 = ()
	`lua_øwÀn
(
L
, 
t
) + 1;

597 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

598  
ªf
;

599 
	}
}

602 
LUALIB_API
 
	$luaL_uƒef
 (
lua_Sèã
 *
L
, 
t
, 
ªf
) {

603 i‡(
ªf
 >= 0) {

604 
t
 = 
	`lua_absödex
(
L
,Å);

605 
	`lua_øwgëi
(
L
, 
t
, 
‰ìli°
);

606 
	`lua_øw£ti
(
L
, 
t
, 
ªf
);

607 
	`lua_pushöãgî
(
L
, 
ªf
);

608 
	`lua_øw£ti
(
L
, 
t
, 
‰ìli°
);

610 
	}
}

621 
	sLﬂdF
 {

622 
	mn
;

623 
FILE
 *
	mf
;

624 
	mbuff
[
BUFSIZ
];

625 } 
	tLﬂdF
;

628 c⁄° *
	$gëF
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

629 
LﬂdF
 *
lf
 = (LﬂdF *)
ud
;

630 ()
L
;

631 i‡(
lf
->
n
 > 0) {

632 *
size
 = 
lf
->
n
;

633 
lf
->
n
 = 0;

639 i‡(
	`„of
(
lf
->
f
)Ë 
NULL
;

640 *
size
 = 
	`‰ód
(
lf
->
buff
, 1, ÷f->buff),Üf->
f
);

642  
lf
->
buff
;

643 
	}
}

646 
	$îrfûe
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
‚ameödex
) {

647 c⁄° *
£º
 = 
	`°ªº‹
(
î∫o
);

648 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 
‚ameödex
) + 1;

649 
	`lua_pushf°rög
(
L
, "ˇ¬Ÿ %†%s: %s", 
wh©
, 
fûíame
, 
£º
);

650 
	`lua_ªmove
(
L
, 
‚ameödex
);

651  
LUA_ERRFILE
;

652 
	}
}

655 
	$skùBOM
 (
LﬂdF
 *
lf
) {

656 c⁄° *
p
 = "\xEF\xBB\xBF";

657 
c
;

658 
lf
->
n
 = 0;

660 
c
 = 
	`gëc
(
lf
->
f
);

661 i‡(
c
 =
EOF
 || c !*(c⁄° *)
p
++)  c;

662 
lf
->
buff
[lf->
n
++] = 
c
;

663 } *
p
 != '\0');

664 
lf
->
n
 = 0;

665  
	`gëc
(
lf
->
f
);

666 
	}
}

676 
	$skùcommít
 (
LﬂdF
 *
lf
, *
˝
) {

677 
c
 = *
˝
 = 
	`skùBOM
(
lf
);

678 i‡(
c
 == '#') {

680 
c
 = 
	`gëc
(
lf
->
f
);

681 } 
c
 !
EOF
 && c != '\n') ;

682 *
˝
 = 
	`gëc
(
lf
->
f
);

686 
	}
}

689 
LUALIB_API
 
	$luaL_lﬂdfûex
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
,

690 c⁄° *
mode
) {

691 
LﬂdF
 
lf
;

692 
°©us
, 
ªad°©us
;

693 
c
;

694 
‚ameödex
 = 
	`lua_gët›
(
L
) + 1;

695 i‡(
fûíame
 =
NULL
) {

696 
	`lua_pushlôîÆ
(
L
, "=stdin");

697 
lf
.
f
 = 
°dö
;

700 
	`lua_pushf°rög
(
L
, "@%s", 
fûíame
);

701 
lf
.
f
 = 
	`f›í
(
fûíame
, "r");

702 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "›í", 
‚ameödex
);

704 i‡(
	`skùcommít
(&
lf
, &
c
))

705 
lf
.
buff
[lf.
n
++] = '\n';

706 i‡(
c
 =
LUA_SIGNATURE
[0] && 
fûíame
) {

707 
lf
.
f
 = 
	`‰e›í
(
fûíame
, "rb",Üf.f);

708 i‡(
lf
.
f
 =
NULL
Ë 
	`îrfûe
(
L
, "ª›í", 
‚ameödex
);

709 
	`skùcommít
(&
lf
, &
c
);

711 i‡(
c
 !
EOF
)

712 
lf
.
buff
[lf.
n
++] = 
c
;

713 
°©us
 = 
	`lua_lﬂd
(
L
, 
gëF
, &
lf
, 
	`lua_to°rög
(L, -1), 
mode
);

714 
ªad°©us
 = 
	`„º‹
(
lf
.
f
);

715 i‡(
fûíame
Ë
	`f˛o£
(
lf
.
f
);

716 i‡(
ªad°©us
) {

717 
	`lua_£â›
(
L
, 
‚ameödex
);

718  
	`îrfûe
(
L
, "ªad", 
‚ameödex
);

720 
	`lua_ªmove
(
L
, 
‚ameödex
);

721  
°©us
;

722 
	}
}

725 
	sLﬂdS
 {

726 c⁄° *
	ms
;

727 
size_t
 
	msize
;

728 } 
	tLﬂdS
;

731 c⁄° *
	$gëS
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

732 
LﬂdS
 *
ls
 = (LﬂdS *)
ud
;

733 ()
L
;

734 i‡(
ls
->
size
 =0Ë 
NULL
;

735 *
size
 = 
ls
->size;

736 
ls
->
size
 = 0;

737  
ls
->
s
;

738 
	}
}

741 
LUALIB_API
 
	$luaL_lﬂdbuf„rx
 (
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
size
,

742 c⁄° *
«me
, c⁄° *
mode
) {

743 
LﬂdS
 
ls
;

744 
ls
.
s
 = 
buff
;

745 
ls
.
size
 = size;

746  
	`lua_lﬂd
(
L
, 
gëS
, &
ls
, 
«me
, 
mode
);

747 
	}
}

750 
LUALIB_API
 
	$luaL_lﬂd°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
) {

751  
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), s);

752 
	}
}

758 
LUALIB_API
 
	$luaL_gëmëafõld
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

759 i‡(!
	`lua_gëmë©abÀ
(
L
, 
obj
))

760  
LUA_TNIL
;

762 
â
;

763 
	`lua_push°rög
(
L
, 
evít
);

764 
â
 = 
	`lua_øwgë
(
L
, -2);

765 i‡(
â
 =
LUA_TNIL
)

766 
	`lua_p›
(
L
, 2);

768 
	`lua_ªmove
(
L
, -2);

769  
â
;

771 
	}
}

774 
LUALIB_API
 
	$luaL_ˇŒmëa
 (
lua_Sèã
 *
L
, 
obj
, c⁄° *
evít
) {

775 
obj
 = 
	`lua_absödex
(
L
, obj);

776 i‡(
	`luaL_gëmëafõld
(
L
, 
obj
, 
evít
Ë=
LUA_TNIL
)

778 
	`lua_pushvÆue
(
L
, 
obj
);

779 
	`lua_ˇŒ
(
L
, 1, 1);

781 
	}
}

784 
LUALIB_API
 
lua_I¡egî
 
	$luaL_Àn
 (
lua_Sèã
 *
L
, 
idx
) {

785 
lua_I¡egî
 
l
;

786 
i¢um
;

787 
	`lua_Àn
(
L
, 
idx
);

788 
l
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

789 i‡(!
i¢um
)

790 
	`luaL_îr‹
(
L
, "objectÜength isÇotán integer");

791 
	`lua_p›
(
L
, 1);

792  
l
;

793 
	}
}

796 
LUALIB_API
 c⁄° *
	$luaL_tﬁ°rög
 (
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
) {

797 i‡(!
	`luaL_ˇŒmëa
(
L
, 
idx
, "__tostring")) {

798 
	`lua_ty≥
(
L
, 
idx
)) {

799 
LUA_TNUMBER
: {

800 i‡(
	`lua_isöãgî
(
L
, 
idx
))

801 
	`lua_pushf°rög
(
L
, "%I", 
	`lua_toöãgî
(L, 
idx
));

803 
	`lua_pushf°rög
(
L
, "%f", 
	`lua_t⁄umbî
(L, 
idx
));

806 
LUA_TSTRING
:

807 
	`lua_pushvÆue
(
L
, 
idx
);

809 
LUA_TBOOLEAN
:

810 
	`lua_push°rög
(
L
, (
	`lua_toboﬁón
(L, 
idx
) ? "true" : "false"));

812 
LUA_TNIL
:

813 
	`lua_pushlôîÆ
(
L
, "nil");

816 
	`lua_pushf°rög
(
L
, "%s: %p", 
	`luaL_ty≥«me
(L, 
idx
),

817 
	`lua_t›oöãr
(
L
, 
idx
));

821  
	`lua_tﬁ°rög
(
L
, -1, 
Àn
);

822 
	}
}

830 #i‡
deföed
(
LUA_COMPAT_MODULE
)

832 c⁄° *
	$luaL_födèbÀ
 (
lua_Sèã
 *
L
, 
idx
,

833 c⁄° *
‚ame
, 
szhöt
) {

834 c⁄° *
e
;

835 i‡(
idx
Ë
	`lua_pushvÆue
(
L
, idx);

837 
e
 = 
	`°rchr
(
‚ame
, '.');

838 i‡(
e
 =
NULL
Ëê
‚ame
 + 
	`°æí
(fname);

839 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

840 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TNIL
) {

841 
	`lua_p›
(
L
, 1);

842 
	`lua_¸óãèbÀ
(
L
, 0, (*
e
 ='.' ? 1 : 
szhöt
));

843 
	`lua_pushl°rög
(
L
, 
‚ame
, 
e
 - fname);

844 
	`lua_pushvÆue
(
L
, -2);

845 
	`lua_£âabÀ
(
L
, -4);

847 i‡(!
	`lua_i°abÀ
(
L
, -1)) {

848 
	`lua_p›
(
L
, 2);

849  
‚ame
;

851 
	`lua_ªmove
(
L
, -2);

852 
‚ame
 = 
e
 + 1;

853 } *
e
 == '.');

854  
NULL
;

855 
	}
}

861 
	$libsize
 (c⁄° 
luaL_Reg
 *
l
) {

862 
size
 = 0;

863 ; 
l
 &&Ü->
«me
;Ü++Ë
size
++;

864  
size
;

865 
	}
}

874 
LUALIB_API
 
	$luaL_pushmoduÀ
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

875 
sizehöt
) {

876 
	`luaL_födèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED", 1);

877 i‡(
	`lua_gëfõld
(
L
, -1, 
mod«me
Ë!
LUA_TTABLE
) {

878 
	`lua_p›
(
L
, 1);

880 
	`lua_pushglobÆèbÀ
(
L
);

881 i‡(
	`luaL_födèbÀ
(
L
, 0, 
mod«me
, 
sizehöt
Ë!
NULL
)

882 
	`luaL_îr‹
(
L
, "«mêc⁄Êi˘ f‹ moduÀ '%s'", 
mod«me
);

883 
	`lua_pushvÆue
(
L
, -1);

884 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

886 
	`lua_ªmove
(
L
, -2);

887 
	}
}

890 
LUALIB_API
 
	$luaL_›ílib
 (
lua_Sèã
 *
L
, c⁄° *
lib«me
,

891 c⁄° 
luaL_Reg
 *
l
, 
nup
) {

892 
	`luaL_checkvîsi⁄
(
L
);

893 i‡(
lib«me
) {

894 
	`luaL_pushmoduÀ
(
L
, 
lib«me
, 
	`libsize
(
l
));

895 
	`lua_ö£π
(
L
, -(
nup
 + 1));

897 i‡(
l
)

898 
	`luaL_£tfuncs
(
L
, 
l
, 
nup
);

900 
	`lua_p›
(
L
, 
nup
);

901 
	}
}

911 
LUALIB_API
 
	$luaL_£tfuncs
 (
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
) {

912 
	`luaL_check°ack
(
L
, 
nup
, "too many upvalues");

913 ; 
l
->
«me
 !
NULL
;Ü++) {

914 
i
;

915 
i
 = 0; i < 
nup
; i++)

916 
	`lua_pushvÆue
(
L
, -
nup
);

917 
	`lua_pushc˛osuª
(
L
, 
l
->
func
, 
nup
);

918 
	`lua_£tfõld
(
L
, -(
nup
 + 2), 
l
->
«me
);

920 
	`lua_p›
(
L
, 
nup
);

921 
	}
}

928 
LUALIB_API
 
	$luaL_gësubèbÀ
 (
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
) {

929 i‡(
	`lua_gëfõld
(
L
, 
idx
, 
‚ame
Ë=
LUA_TTABLE
)

932 
	`lua_p›
(
L
, 1);

933 
idx
 = 
	`lua_absödex
(
L
, idx);

934 
	`lua_√wèbÀ
(
L
);

935 
	`lua_pushvÆue
(
L
, -1);

936 
	`lua_£tfõld
(
L
, 
idx
, 
‚ame
);

939 
	}
}

948 
LUALIB_API
 
	$luaL_ªquúef
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
,

949 
lua_CFun˘i⁄
 
›íf
, 
glb
) {

950 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

951 
	`lua_gëfõld
(
L
, -1, 
mod«me
);

952 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

953 
	`lua_p›
(
L
, 1);

954 
	`lua_pushcfun˘i⁄
(
L
, 
›íf
);

955 
	`lua_push°rög
(
L
, 
mod«me
);

956 
	`lua_ˇŒ
(
L
, 1, 1);

957 
	`lua_pushvÆue
(
L
, -1);

958 
	`lua_£tfõld
(
L
, -3, 
mod«me
);

960 
	`lua_ªmove
(
L
, -2);

961 i‡(
glb
) {

962 
	`lua_pushvÆue
(
L
, -1);

963 
	`lua_£tglobÆ
(
L
, 
mod«me
);

965 
	}
}

968 
LUALIB_API
 c⁄° *
	$luaL_gsub
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

969 c⁄° *
r
) {

970 c⁄° *
wûd
;

971 
size_t
 
l
 = 
	`°æí
(
p
);

972 
luaL_Buf„r
 
b
;

973 
	`luaL_bufföô
(
L
, &
b
);

974 (
wûd
 = 
	`°r°r
(
s
, 
p
)Ë!
NULL
) {

975 
	`luaL_addl°rög
(&
b
, 
s
, 
wûd
 - s);

976 
	`luaL_add°rög
(&
b
, 
r
);

977 
s
 = 
wûd
 + 
l
;

979 
	`luaL_add°rög
(&
b
, 
s
);

980 
	`luaL_pushªsu…
(&
b
);

981  
	`lua_to°rög
(
L
, -1);

982 
	}
}

985 *
	$l_Æloc
 (*
ud
, *
±r
, 
size_t
 
osize
, size_à
nsize
) {

986 ()
ud
; ()
osize
;

987 i‡(
nsize
 == 0) {

988 
	`‰ì
(
±r
);

989  
NULL
;

992  
	`ªÆloc
(
±r
, 
nsize
);

993 
	}
}

996 
	$∑nic
 (
lua_Sèã
 *
L
) {

997 
	`lua_wrôe°rögîr‹
("PANIC: unprotectedÉrror in callÅo Lua API (%s)\n",

998 
	`lua_to°rög
(
L
, -1));

1000 
	}
}

1003 
LUALIB_API
 
lua_Sèã
 *
	$luaL_√w°©e
 () {

1004 
lua_Sèã
 *
L
 = 
	`lua_√w°©e
(
l_Æloc
, 
NULL
);

1005 i‡(
L
Ë
	`lua_©∑nic
(L, &
∑nic
);

1006  
L
;

1007 
	}
}

1010 
LUALIB_API
 
	$luaL_checkvîsi⁄_
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
) {

1011 c⁄° 
lua_Numbî
 *
v
 = 
	`lua_vîsi⁄
(
L
);

1012 i‡(
sz
 !
LUAL_NUMSIZES
)

1013 
	`luaL_îr‹
(
L
, "coreándÜibrary have incompatibleÇumericÅypes");

1014 i‡(
v
 !
	`lua_vîsi⁄
(
NULL
))

1015 
	`luaL_îr‹
(
L
, "multiple Lua VMs detected");

1016 i‡(*
v
 !
vî
)

1017 
	`luaL_îr‹
(
L
, "version mismatch:ápp.Çeeds %f, Lua coreÖrovides %f",

1018 
vî
, *
v
);

1019 
	}
}

	@lib/lua/src/lauxlib.h

8 #i‚de‡
œuxlib_h


9 
	#œuxlib_h


	)

12 
	~<°ddef.h
>

13 
	~<°dio.h
>

15 
	~"lua.h
"

20 
	#LUA_ERRFILE
 (
LUA_ERRERR
+1)

	)

23 
	sluaL_Reg
 {

24 c⁄° *
	m«me
;

25 
lua_CFun˘i⁄
 
	mfunc
;

26 } 
	tluaL_Reg
;

29 
	#LUAL_NUMSIZES
 ((
lua_I¡egî
)*16 + (
lua_Numbî
))

	)

31 
LUALIB_API
 (
luaL_checkvîsi⁄_
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
vî
, 
size_t
 
sz
);

32 
	#luaL_checkvîsi⁄
(
L
) \

33 
	`luaL_checkvîsi⁄_
(
L
, 
LUA_VERSION_NUM
, 
LUAL_NUMSIZES
)

	)

35 
LUALIB_API
 (
luaL_gëmëafõld
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

36 
LUALIB_API
 (
luaL_ˇŒmëa
Ë(
lua_Sèã
 *
L
, 
obj
, c⁄° *
e
);

37 
LUALIB_API
 c⁄° *(
luaL_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

38 
LUALIB_API
 (
luaL_¨gîr‹
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
exåamsg
);

39 
LUALIB_API
 c⁄° *(
luaL_checkl°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

40 
size_t
 *
l
);

41 
LUALIB_API
 c⁄° *(
luaL_›é°rög
Ë(
lua_Sèã
 *
L
, 
¨g
,

42 c⁄° *
def
, 
size_t
 *
l
);

43 
LUALIB_API
 
	$lua_Numbî
 (
luaL_checknumbî
Ë(
lua_Sèã
 *
L
, 
¨g
);

44 
LUALIB_API
 
	$lua_Numbî
 (
luaL_›äumbî
Ë(
lua_Sèã
 *
L
, 
¨g
, 
lua_Numbî
 
def
);

46 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_checköãgî
Ë(
lua_Sèã
 *
L
, 
¨g
);

47 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_›töãgî
Ë(
lua_Sèã
 *
L
, 
¨g
,

48 
lua_I¡egî
 
def
);

50 
LUALIB_API
 (
luaL_check°ack
Ë(
lua_Sèã
 *
L
, 
sz
, c⁄° *
msg
);

51 
LUALIB_API
 (
luaL_checkty≥
Ë(
lua_Sèã
 *
L
, 
¨g
, 
t
);

52 
LUALIB_API
 (
luaL_check™y
Ë(
lua_Sèã
 *
L
, 
¨g
);

54 
LUALIB_API
 (
luaL_√wmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

55 
LUALIB_API
 (
luaL_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
äame
);

56 
LUALIB_API
 *(
luaL_ã°ud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

57 
LUALIB_API
 *(
luaL_checkud©a
Ë(
lua_Sèã
 *
L
, 
ud
, c⁄° *
äame
);

59 
LUALIB_API
 (
luaL_whîe
Ë(
lua_Sèã
 *
L
, 
lvl
);

60 
LUALIB_API
 (
luaL_îr‹
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

62 
LUALIB_API
 (
luaL_check›ti⁄
Ë(
lua_Sèã
 *
L
, 
¨g
, c⁄° *
def
,

63 c⁄° *c⁄° 
l°
[]);

65 
LUALIB_API
 (
luaL_fûîesu…
Ë(
lua_Sèã
 *
L
, 
°©
, c⁄° *
‚ame
);

66 
LUALIB_API
 (
luaL_exe¸esu…
Ë(
lua_Sèã
 *
L
, 
°©
);

69 
	#LUA_NOREF
 (-2)

	)

70 
	#LUA_REFNIL
 (-1)

	)

72 
LUALIB_API
 (
luaL_ªf
Ë(
lua_Sèã
 *
L
, 
t
);

73 
LUALIB_API
 (
luaL_uƒef
Ë(
lua_Sèã
 *
L
, 
t
, 
ªf
);

75 
LUALIB_API
 (
luaL_lﬂdfûex
Ë(
lua_Sèã
 *
L
, c⁄° *
fûíame
,

76 c⁄° *
mode
);

78 
	#luaL_lﬂdfûe
(
L
,
f
Ë
	`luaL_lﬂdfûex
(L,f,
NULL
)

	)

80 
LUALIB_API
 (
luaL_lﬂdbuf„rx
Ë(
lua_Sèã
 *
L
, c⁄° *
buff
, 
size_t
 
sz
,

81 c⁄° *
«me
, c⁄° *
mode
);

82 
LUALIB_API
 (
luaL_lﬂd°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

84 
LUALIB_API
 
lua_Sèã
 *(
luaL_√w°©e
) ();

86 
LUALIB_API
 
	$lua_I¡egî
 (
luaL_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

88 
LUALIB_API
 c⁄° *(
luaL_gsub
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
p
,

89 c⁄° *
r
);

91 
LUALIB_API
 (
luaL_£tfuncs
Ë(
lua_Sèã
 *
L
, c⁄° 
luaL_Reg
 *
l
, 
nup
);

93 
LUALIB_API
 (
luaL_gësubèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
‚ame
);

95 
LUALIB_API
 (
luaL_åa˚back
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
L1
,

96 c⁄° *
msg
, 
Àvñ
);

98 
LUALIB_API
 (
luaL_ªquúef
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

99 
lua_CFun˘i⁄
 
›íf
, 
glb
);

108 
	#luaL_√wlibèbÀ
(
L
,
l
) \

109 
	`lua_¸óãèbÀ
(
L
, 0, (
l
)/(÷)[0]Ë- 1)

	)

111 
	#luaL_√wlib
(
L
,
l
) \

112 (
	`luaL_checkvîsi⁄
(
L
), 
	`luaL_√wlibèbÀ
(L,
l
), 
	`luaL_£tfuncs
(L,l,0))

	)

114 
	#luaL_¨gcheck
(
L
, 
c⁄d
,
¨g
,
exåamsg
) \

115 (()((
c⁄d
Ë|| 
	`luaL_¨gîr‹
(
L
, (
¨g
), (
exåamsg
))))

	)

116 
	#luaL_check°rög
(
L
,
n
Ë(
	`luaL_checkl°rög
(L, (n), 
NULL
))

	)

117 
	#luaL_›t°rög
(
L
,
n
,
d
Ë(
	`luaL_›é°rög
(L, (n), (d), 
NULL
))

	)

119 
	#luaL_ty≥«me
(
L
,
i
Ë
	`lua_ty≥«me
(L, 
	`lua_ty≥
(L,(i)))

	)

121 
	#luaL_dofûe
(
L
, 
‚
) \

122 (
	`luaL_lﬂdfûe
(
L
, 
‚
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

124 
	#luaL_do°rög
(
L
, 
s
) \

125 (
	`luaL_lﬂd°rög
(
L
, 
s
Ë|| 
	`lua_pˇŒ
(L, 0, 
LUA_MULTRET
, 0))

	)

127 
	#luaL_gëmë©abÀ
(
L
,
n
Ë(
	`lua_gëfõld
(L, 
LUA_REGISTRYINDEX
, (n)))

	)

129 
	#luaL_›t
(
L
,
f
,
n
,
d
Ë(
	`lua_i¢⁄e‹nû
(L,“)Ë? (dË: 
	`f
(L,“)))

	)

131 
	#luaL_lﬂdbuf„r
(
L
,
s
,
sz
,
n
Ë
	`luaL_lﬂdbuf„rx
(L,s,sz,n,
NULL
)

	)

140 
	sluaL_Buf„r
 {

141 *
b
;

142 
size_t
 
size
;

143 
size_t
 
n
;

144 
lua_Sèã
 *
L
;

145 
öôb
[
LUAL_BUFFERSIZE
];

146 } 
	tluaL_Buf„r
;

149 
	#luaL_addch¨
(
B
,
c
) \

150 (()((
B
)->
n
 < (B)->
size
 || 
	`luaL_¥ïbuffsize
((B), 1)), \

151 ((
B
)->
b
[(B)->
n
++] = (
c
)))

	)

153 
	#luaL_addsize
(
B
,
s
Ë((B)->
n
 +(s))

	)

155 
LUALIB_API
 (
luaL_bufföô
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
);

156 
LUALIB_API
 *(
luaL_¥ïbuffsize
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

157 
LUALIB_API
 (
luaL_addl°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
, 
size_t
 
l
);

158 
LUALIB_API
 (
luaL_add°rög
Ë(
luaL_Buf„r
 *
B
, c⁄° *
s
);

159 
LUALIB_API
 (
luaL_addvÆue
Ë(
luaL_Buf„r
 *
B
);

160 
LUALIB_API
 (
luaL_pushªsu…
Ë(
luaL_Buf„r
 *
B
);

161 
LUALIB_API
 (
luaL_pushªsu…size
Ë(
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

162 
LUALIB_API
 *(
luaL_bufföôsize
Ë(
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
B
, 
size_t
 
sz
);

164 
	#luaL_¥ïbuf„r
(
B
Ë
	`luaL_¥ïbuffsize
(B, 
LUAL_BUFFERSIZE
)

	)

182 
	#LUA_FILEHANDLE
 "FILE*"

	)

185 
	sluaL_Såóm
 {

186 
FILE
 *
f
;

187 
lua_CFun˘i⁄
 
˛o£f
;

188 } 
	tluaL_Såóm
;

195 #i‡
	`deföed
(
LUA_COMPAT_MODULE
)

197 
LUALIB_API
 (
luaL_pushmoduÀ
Ë(
lua_Sèã
 *
L
, c⁄° *
mod«me
,

198 
sizehöt
);

199 
LUALIB_API
 (
luaL_›ílib
Ë(
lua_Sèã
 *
L
, c⁄° *
lib«me
,

200 c⁄° 
luaL_Reg
 *
l
, 
nup
);

202 
	#luaL_ªgi°î
(
L
,
n
,
l
Ë(
	`luaL_›ílib
(L,“),÷),0))

	)

214 #i‡!
	`deföed
(
lua_wrôe°rög
)

215 
	#lua_wrôe°rög
(
s
,
l
Ë
	`fwrôe
((s), (), (l), 
°dout
)

	)

219 #i‡!
	`deföed
(
lua_wrôñöe
)

220 
	#lua_wrôñöe
(Ë(
	`lua_wrôe°rög
("\n", 1), 
	`fÊush
(
°dout
))

	)

224 #i‡!
	`deföed
(
lua_wrôe°rögîr‹
)

225 
	#lua_wrôe°rögîr‹
(
s
,
p
) \

226 (
	`Ârötf
(
°dîr
, (
s
), (
p
)), 
	`fÊush
(°dîr))

	)

237 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

239 
	#luaL_checkunsig√d
(
L
,
a
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,a))

	)

240 
	#luaL_›tunsig√d
(
L
,
a
,
d
) \

241 ((
lua_Unsig√d
)
	`luaL_›töãgî
(
L
,
a
,(
lua_I¡egî
)(
d
)))

	)

243 
	#luaL_checköt
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

244 
	#luaL_›töt
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

246 
	#luaL_checkl⁄g
(
L
,
n
Ë(()
	`luaL_checköãgî
(L, (n)))

	)

247 
	#luaL_›é⁄g
(
L
,
n
,
d
Ë(()
	`luaL_›töãgî
(L, (n), (d)))

	)

	@lib/lua/src/lbaselib.c

7 
	#lba£lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

24 
	$luaB_¥öt
 (
lua_Sèã
 *
L
) {

25 
n
 = 
	`lua_gët›
(
L
);

26 
i
;

27 
	`lua_gëglobÆ
(
L
, "tostring");

28 
i
=1; i<=
n
; i++) {

29 c⁄° *
s
;

30 
size_t
 
l
;

31 
	`lua_pushvÆue
(
L
, -1);

32 
	`lua_pushvÆue
(
L
, 
i
);

33 
	`lua_ˇŒ
(
L
, 1, 1);

34 
s
 = 
	`lua_tﬁ°rög
(
L
, -1, &
l
);

35 i‡(
s
 =
NULL
)

36  
	`luaL_îr‹
(
L
, "'tostring' mustÑeturná stringÅo 'print'");

37 i‡(
i
>1Ë
	`lua_wrôe°rög
("\t", 1);

38 
	`lua_wrôe°rög
(
s
, 
l
);

39 
	`lua_p›
(
L
, 1);

41 
	`lua_wrôñöe
();

43 
	}
}

46 
	#SPACECHARS
 " \f\n\r\t\v"

	)

48 c⁄° *
	$b_°r2öt
 (c⁄° *
s
, 
ba£
, 
lua_I¡egî
 *
≤
) {

49 
lua_Unsig√d
 
n
 = 0;

50 
√g
 = 0;

51 
s
 +
	`°r•n
(s, 
SPACECHARS
);

52 i‡(*
s
 ='-'Ë{ s++; 
√g
 = 1; }

53 i‡(*
s
 == '+') s++;

54 i‡(!
	`iß um
(()*
s
))

55  
NULL
;

57 
digô
 = (
	`isdigô
(()*
s
)) ? *s - '0'

58 : (
	`touµî
(()*
s
) - 'A') + 10;

59 i‡(
digô
 >
ba£
Ë 
NULL
;

60 
n
 =Ç * 
ba£
 + 
digô
;

61 
s
++;

62 } 
	`iß um
(()*
s
));

63 
s
 +
	`°r•n
(s, 
SPACECHARS
);

64 *
≤
 = (
lua_I¡egî
)((
√g
Ë? (0u - 
n
) :Ç);

65  
s
;

66 
	}
}

69 
	$luaB_t⁄umbî
 (
lua_Sèã
 *
L
) {

70 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2)) {

71 
	`luaL_check™y
(
L
, 1);

72 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

73 
	`lua_£â›
(
L
, 1);

77 
size_t
 
l
;

78 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

79 i‡(
s
 !
NULL
 && 
	`lua_°rögt⁄umbî
(
L
, sË=
l
 + 1)

85 
size_t
 
l
;

86 c⁄° *
s
;

87 
lua_I¡egî
 
n
 = 0;

88 
lua_I¡egî
 
ba£
 = 
	`luaL_checköãgî
(
L
, 2);

89 
	`luaL_checkty≥
(
L
, 1, 
LUA_TSTRING
);

90 
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

91 
	`luaL_¨gcheck
(
L
, 2 <
ba£
 && base <= 36, 2, "base out ofÑange");

92 i‡(
	`b_°r2öt
(
s
, ()
ba£
, &
n
Ë=†+ 
l
) {

93 
	`lua_pushöãgî
(
L
, 
n
);

97 
	`lua_pushnû
(
L
);

99 
	}
}

102 
	$luaB_îr‹
 (
lua_Sèã
 *
L
) {

103 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 2, 1);

104 
	`lua_£â›
(
L
, 1);

105 i‡(
	`lua_is°rög
(
L
, 1Ë&& 
Àvñ
 > 0) {

106 
	`luaL_whîe
(
L
, 
Àvñ
);

107 
	`lua_pushvÆue
(
L
, 1);

108 
	`lua_c⁄ˇt
(
L
, 2);

110  
	`lua_îr‹
(
L
);

111 
	}
}

114 
	$luaB_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

115 
	`luaL_check™y
(
L
, 1);

116 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

117 
	`lua_pushnû
(
L
);

120 
	`luaL_gëmëafõld
(
L
, 1, "__metatable");

122 
	}
}

125 
	$luaB_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

126 
t
 = 
	`lua_ty≥
(
L
, 2);

127 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

128 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

130 i‡(
	`luaL_gëmëafõld
(
L
, 1, "__më©abÀ"Ë!
LUA_TNIL
)

131  
	`luaL_îr‹
(
L
, "cannot changeáÖrotected metatable");

132 
	`lua_£â›
(
L
, 2);

133 
	`lua_£tmë©abÀ
(
L
, 1);

135 
	}
}

138 
	$luaB_øwequÆ
 (
lua_Sèã
 *
L
) {

139 
	`luaL_check™y
(
L
, 1);

140 
	`luaL_check™y
(
L
, 2);

141 
	`lua_pushboﬁón
(
L
, 
	`lua_øwequÆ
(L, 1, 2));

143 
	}
}

146 
	$luaB_øwÀn
 (
lua_Sèã
 *
L
) {

147 
t
 = 
	`lua_ty≥
(
L
, 1);

148 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TTABLE
 ||Å =
LUA_TSTRING
, 1,

150 
	`lua_pushöãgî
(
L
, 
	`lua_øwÀn
(L, 1));

152 
	}
}

155 
	$luaB_øwgë
 (
lua_Sèã
 *
L
) {

156 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

157 
	`luaL_check™y
(
L
, 2);

158 
	`lua_£â›
(
L
, 2);

159 
	`lua_øwgë
(
L
, 1);

161 
	}
}

163 
	$luaB_øw£t
 (
lua_Sèã
 *
L
) {

164 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

165 
	`luaL_check™y
(
L
, 2);

166 
	`luaL_check™y
(
L
, 3);

167 
	`lua_£â›
(
L
, 3);

168 
	`lua_øw£t
(
L
, 1);

170 
	}
}

173 
	$luaB_cﬁÀ˘g¨bage
 (
lua_Sèã
 *
L
) {

174 c⁄° *c⁄° 
›ts
[] = {"stop", "restart", "collect",

176 "i§u¬ög", 
NULL
};

177 c⁄° 
›t¢um
[] = {
LUA_GCSTOP
, 
LUA_GCRESTART
, 
LUA_GCCOLLECT
,

178 
LUA_GCCOUNT
, 
LUA_GCSTEP
, 
LUA_GCSETPAUSE
, 
LUA_GCSETSTEPMUL
,

179 
LUA_GCISRUNNING
};

180 
o
 = 
›t¢um
[
	`luaL_check›ti⁄
(
L
, 1, "cﬁÀ˘", 
›ts
)];

181 
ex
 = ()
	`luaL_›töãgî
(
L
, 2, 0);

182 
ªs
 = 
	`lua_gc
(
L
, 
o
, 
ex
);

183 
o
) {

184 
LUA_GCCOUNT
: {

185 
b
 = 
	`lua_gc
(
L
, 
LUA_GCCOUNTB
, 0);

186 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
ªs
 + (÷ua_Numbî)
b
/1024));

189 
LUA_GCSTEP
: 
LUA_GCISRUNNING
: {

190 
	`lua_pushboﬁón
(
L
, 
ªs
);

194 
	`lua_pushöãgî
(
L
, 
ªs
);

198 
	}
}

201 
	$luaB_ty≥
 (
lua_Sèã
 *
L
) {

202 
t
 = 
	`lua_ty≥
(
L
, 1);

203 
	`luaL_¨gcheck
(
L
, 
t
 !
LUA_TNONE
, 1, "valueÉxpected");

204 
	`lua_push°rög
(
L
, 
	`lua_ty≥«me
(L, 
t
));

206 
	}
}

209 
	$∑úsmëa
 (
lua_Sèã
 *
L
, c⁄° *
mëhod
, 
iszîo
,

210 
lua_CFun˘i⁄
 
ôî
) {

211 i‡(
	`luaL_gëmëafõld
(
L
, 1, 
mëhod
Ë=
LUA_TNIL
) {

212 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

213 
	`lua_pushcfun˘i⁄
(
L
, 
ôî
);

214 
	`lua_pushvÆue
(
L
, 1);

215 i‡(
iszîo
Ë
	`lua_pushöãgî
(
L
, 0);

216 
	`lua_pushnû
(
L
);

219 
	`lua_pushvÆue
(
L
, 1);

220 
	`lua_ˇŒ
(
L
, 1, 3);

223 
	}
}

226 
	$luaB_√xt
 (
lua_Sèã
 *
L
) {

227 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

228 
	`lua_£â›
(
L
, 2);

229 i‡(
	`lua_√xt
(
L
, 1))

232 
	`lua_pushnû
(
L
);

235 
	}
}

238 
	$luaB_∑ús
 (
lua_Sèã
 *
L
) {

239  
	`∑úsmëa
(
L
, "__∑ús", 0, 
luaB_√xt
);

240 
	}
}

246 
	$ùaúßux
 (
lua_Sèã
 *
L
) {

247 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2) + 1;

248 
	`lua_pushöãgî
(
L
, 
i
);

249  (
	`lua_gëi
(
L
, 1, 
i
Ë=
LUA_TNIL
) ? 1 : 2;

250 
	}
}

258 
	$luaB_ùaús
 (
lua_Sèã
 *
L
) {

259 #i‡
	`deföed
(
LUA_COMPAT_IPAIRS
)

260  
	`∑úsmëa
(
L
, "__ùaús", 1, 
ùaúßux
);

262 
	`luaL_check™y
(
L
, 1);

263 
	`lua_pushcfun˘i⁄
(
L
, 
ùaúßux
);

264 
	`lua_pushvÆue
(
L
, 1);

265 
	`lua_pushöãgî
(
L
, 0);

268 
	}
}

271 
	$lﬂd_aux
 (
lua_Sèã
 *
L
, 
°©us
, 
ívidx
) {

272 i‡(
°©us
 =
LUA_OK
) {

273 i‡(
ívidx
 != 0) {

274 
	`lua_pushvÆue
(
L
, 
ívidx
);

275 i‡(!
	`lua_£tupvÆue
(
L
, -2, 1))

276 
	`lua_p›
(
L
, 1);

281 
	`lua_pushnû
(
L
);

282 
	`lua_ö£π
(
L
, -2);

285 
	}
}

288 
	$luaB_lﬂdfûe
 (
lua_Sèã
 *
L
) {

289 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

290 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, 
NULL
);

291 
ív
 = (!
	`lua_i¢⁄e
(
L
, 3) ? 3 : 0);

292 
°©us
 = 
	`luaL_lﬂdfûex
(
L
, 
‚ame
, 
mode
);

293  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

294 
	}
}

309 
	#RESERVEDSLOT
 5

	)

318 c⁄° *
	$gíîic_ªadî
 (
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
) {

319 ()(
ud
);

320 
	`luaL_check°ack
(
L
, 2, "too manyÇested functions");

321 
	`lua_pushvÆue
(
L
, 1);

322 
	`lua_ˇŒ
(
L
, 0, 1);

323 i‡(
	`lua_i¢û
(
L
, -1)) {

324 
	`lua_p›
(
L
, 1);

325 *
size
 = 0;

326  
NULL
;

328 i‡(!
	`lua_is°rög
(
L
, -1))

329 
	`luaL_îr‹
(
L
, "reader function mustÑeturná string");

330 
	`lua_ª∂a˚
(
L
, 
RESERVEDSLOT
);

331  
	`lua_tﬁ°rög
(
L
, 
RESERVEDSLOT
, 
size
);

332 
	}
}

335 
	$luaB_lﬂd
 (
lua_Sèã
 *
L
) {

336 
°©us
;

337 
size_t
 
l
;

338 c⁄° *
s
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

339 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 3, "bt");

340 
ív
 = (!
	`lua_i¢⁄e
(
L
, 4) ? 4 : 0);

341 i‡(
s
 !
NULL
) {

342 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, 
s
);

343 
°©us
 = 
	`luaL_lﬂdbuf„rx
(
L
, 
s
, 
l
, 
chunk«me
, 
mode
);

346 c⁄° *
chunk«me
 = 
	`luaL_›t°rög
(
L
, 2, "=(load)");

347 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

348 
	`lua_£â›
(
L
, 
RESERVEDSLOT
);

349 
°©us
 = 
	`lua_lﬂd
(
L
, 
gíîic_ªadî
, 
NULL
, 
chunk«me
, 
mode
);

351  
	`lﬂd_aux
(
L
, 
°©us
, 
ív
);

352 
	}
}

357 
	$dofûec⁄t
 (
lua_Sèã
 *
L
, 
d1
, 
lua_KC⁄ãxt
 
d2
) {

358 ()
d1
; ()
d2
;

359  
	`lua_gët›
(
L
) - 1;

360 
	}
}

363 
	$luaB_dofûe
 (
lua_Sèã
 *
L
) {

364 c⁄° *
‚ame
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

365 
	`lua_£â›
(
L
, 1);

366 i‡(
	`luaL_lﬂdfûe
(
L
, 
‚ame
Ë!
LUA_OK
)

367  
	`lua_îr‹
(
L
);

368 
	`lua_ˇŒk
(
L
, 0, 
LUA_MULTRET
, 0, 
dofûec⁄t
);

369  
	`dofûec⁄t
(
L
, 0, 0);

370 
	}
}

373 
	$luaB_as£π
 (
lua_Sèã
 *
L
) {

374 i‡(
	`lua_toboﬁón
(
L
, 1))

375  
	`lua_gët›
(
L
);

377 
	`luaL_check™y
(
L
, 1);

378 
	`lua_ªmove
(
L
, 1);

379 
	`lua_pushlôîÆ
(
L
, "assertion failed!");

380 
	`lua_£â›
(
L
, 1);

381  
	`luaB_îr‹
(
L
);

383 
	}
}

386 
	$luaB_£À˘
 (
lua_Sèã
 *
L
) {

387 
n
 = 
	`lua_gët›
(
L
);

388 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TSTRING
 && *
	`lua_to°rög
(L, 1) == '#') {

389 
	`lua_pushöãgî
(
L
, 
n
-1);

393 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 1);

394 i‡(
i
 < 0Ëò
n
 + i;

395 i‡(
i
 > 
n
) i =Ç;

396 
	`luaL_¨gcheck
(
L
, 1 <
i
, 1, "index out ofÑange");

397  
n
 - ()
i
;

399 
	}
}

409 
	$föishpˇŒ
 (
lua_Sèã
 *
L
, 
°©us
, 
lua_KC⁄ãxt
 
exåa
) {

410 i‡(
°©us
 !
LUA_OK
 && sètu†!
LUA_YIELD
) {

411 
	`lua_pushboﬁón
(
L
, 0);

412 
	`lua_pushvÆue
(
L
, -2);

416  
	`lua_gët›
(
L
Ë- ()
exåa
;

417 
	}
}

420 
	$luaB_pˇŒ
 (
lua_Sèã
 *
L
) {

421 
°©us
;

422 
	`luaL_check™y
(
L
, 1);

423 
	`lua_pushboﬁón
(
L
, 1);

424 
	`lua_ö£π
(
L
, 1);

425 
°©us
 = 
	`lua_pˇŒk
(
L
, 
	`lua_gët›
(LË- 2, 
LUA_MULTRET
, 0, 0, 
föishpˇŒ
);

426  
	`föishpˇŒ
(
L
, 
°©us
, 0);

427 
	}
}

435 
	$luaB_xpˇŒ
 (
lua_Sèã
 *
L
) {

436 
°©us
;

437 
n
 = 
	`lua_gët›
(
L
);

438 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

439 
	`lua_pushboﬁón
(
L
, 1);

440 
	`lua_pushvÆue
(
L
, 1);

441 
	`lua_rŸ©e
(
L
, 3, 2);

442 
°©us
 = 
	`lua_pˇŒk
(
L
, 
n
 - 2, 
LUA_MULTRET
, 2, 2, 
föishpˇŒ
);

443  
	`föishpˇŒ
(
L
, 
°©us
, 2);

444 
	}
}

447 
	$luaB_to°rög
 (
lua_Sèã
 *
L
) {

448 
	`luaL_check™y
(
L
, 1);

449 
	`luaL_tﬁ°rög
(
L
, 1, 
NULL
);

451 
	}
}

454 c⁄° 
luaL_Reg
 
	gba£_funcs
[] = {

455 {"as£π", 
luaB_as£π
},

456 {"cﬁÀ˘g¨bage", 
luaB_cﬁÀ˘g¨bage
},

457 {"dofûe", 
luaB_dofûe
},

458 {"îr‹", 
luaB_îr‹
},

459 {"gëmë©abÀ", 
luaB_gëmë©abÀ
},

460 {"ùaús", 
luaB_ùaús
},

461 {"lﬂdfûe", 
luaB_lﬂdfûe
},

462 {"lﬂd", 
luaB_lﬂd
},

463 #i‡
deföed
(
LUA_COMPAT_LOADSTRING
)

464 {"lﬂd°rög", 
luaB_lﬂd
},

466 {"√xt", 
luaB_√xt
},

467 {"∑ús", 
luaB_∑ús
},

468 {"pˇŒ", 
luaB_pˇŒ
},

469 {"¥öt", 
luaB_¥öt
},

470 {"øwequÆ", 
luaB_øwequÆ
},

471 {"øwÀn", 
luaB_øwÀn
},

472 {"øwgë", 
luaB_øwgë
},

473 {"øw£t", 
luaB_øw£t
},

474 {"£À˘", 
luaB_£À˘
},

475 {"£tmë©abÀ", 
luaB_£tmë©abÀ
},

476 {"t⁄umbî", 
luaB_t⁄umbî
},

477 {"to°rög", 
luaB_to°rög
},

478 {"ty≥", 
luaB_ty≥
},

479 {"xpˇŒ", 
luaB_xpˇŒ
},

481 {"_G", 
NULL
},

482 {"_VERSION", 
NULL
},

483 {
NULL
, NULL}

487 
LUAMOD_API
 
	$lua›í_ba£
 (
lua_Sèã
 *
L
) {

489 
	`lua_pushglobÆèbÀ
(
L
);

490 
	`luaL_£tfuncs
(
L
, 
ba£_funcs
, 0);

492 
	`lua_pushvÆue
(
L
, -1);

493 
	`lua_£tfõld
(
L
, -2, "_G");

495 
	`lua_pushlôîÆ
(
L
, 
LUA_VERSION
);

496 
	`lua_£tfõld
(
L
, -2, "_VERSION");

498 
	}
}

	@lib/lua/src/lbitlib.c

7 
	#lbôlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~"lua.h
"

15 
	~"œuxlib.h
"

16 
	~"luÆib.h
"

19 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

22 
	#pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

23 
	#checkunsig√d
(
L
,
i
Ë((
lua_Unsig√d
)
	`luaL_checköãgî
(L,i))

	)

27 #i‡!
deföed
(
LUA_NBITS
)

28 
	#LUA_NBITS
 32

	)

37 
	#ALLONES
 (~(((~(
lua_Unsig√d
)0Ë<< (
LUA_NBITS
 - 1)Ë<< 1))

	)

41 
	#åim
(
x
Ë((xË& 
ALLONES
)

	)

45 
	#mask
(
n
Ë(~((
ALLONES
 << 1Ë<< (“Ë- 1)))

	)

49 
lua_Unsig√d
 
	$™daux
 (
lua_Sèã
 *
L
) {

50 
i
, 
n
 = 
	`lua_gët›
(
L
);

51 
lua_Unsig√d
 
r
 = ~(lua_Unsigned)0;

52 
i
 = 1; i <
n
; i++)

53 
r
 &
	`checkunsig√d
(
L
, 
i
);

54  
	`åim
(
r
);

55 
	}
}

58 
	$b_™d
 (
lua_Sèã
 *
L
) {

59 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

60 
	`pushunsig√d
(
L
, 
r
);

62 
	}
}

65 
	$b_ã°
 (
lua_Sèã
 *
L
) {

66 
lua_Unsig√d
 
r
 = 
	`™daux
(
L
);

67 
	`lua_pushboﬁón
(
L
, 
r
 != 0);

69 
	}
}

72 
	$b_‹
 (
lua_Sèã
 *
L
) {

73 
i
, 
n
 = 
	`lua_gët›
(
L
);

74 
lua_Unsig√d
 
r
 = 0;

75 
i
 = 1; i <
n
; i++)

76 
r
 |
	`checkunsig√d
(
L
, 
i
);

77 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

79 
	}
}

82 
	$b_x‹
 (
lua_Sèã
 *
L
) {

83 
i
, 
n
 = 
	`lua_gët›
(
L
);

84 
lua_Unsig√d
 
r
 = 0;

85 
i
 = 1; i <
n
; i++)

86 
r
 ^
	`checkunsig√d
(
L
, 
i
);

87 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

89 
	}
}

92 
	$b_nŸ
 (
lua_Sèã
 *
L
) {

93 
lua_Unsig√d
 
r
 = ~
	`checkunsig√d
(
L
, 1);

94 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

96 
	}
}

99 
	$b_shi·
 (
lua_Sèã
 *
L
, 
lua_Unsig√d
 
r
, 
lua_I¡egî
 
i
) {

100 i‡(
i
 < 0) {

101 
i
 = -i;

102 
r
 = 
	`åim
(r);

103 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

104 
r
 >>
i
;

107 i‡(
i
 >
LUA_NBITS
Ë
r
 = 0;

108 
r
 <<
i
;

109 
r
 = 
	`åim
(r);

111 
	`pushunsig√d
(
L
, 
r
);

113 
	}
}

116 
	$b_lshi·
 (
lua_Sèã
 *
L
) {

117  
	`b_shi·
(
L
, 
	`checkunsig√d
(L, 1), 
	`luaL_checköãgî
(L, 2));

118 
	}
}

121 
	$b_rshi·
 (
lua_Sèã
 *
L
) {

122  
	`b_shi·
(
L
, 
	`checkunsig√d
(L, 1), -
	`luaL_checköãgî
(L, 2));

123 
	}
}

126 
	$b_¨shi·
 (
lua_Sèã
 *
L
) {

127 
lua_Unsig√d
 
r
 = 
	`checkunsig√d
(
L
, 1);

128 
lua_I¡egî
 
i
 = 
	`luaL_checköãgî
(
L
, 2);

129 i‡(
i
 < 0 || !(
r
 & ((
lua_Unsig√d
)1 << (
LUA_NBITS
 - 1))))

130  
	`b_shi·
(
L
, 
r
, -
i
);

132 i‡(
i
 >
LUA_NBITS
Ë
r
 = 
ALLONES
;

134 
r
 = 
	`åim
(‘ >> 
i
Ë| ~—rim(~(
lua_Unsig√d
)0) >> i));

135 
	`pushunsig√d
(
L
, 
r
);

138 
	}
}

141 
	$b_rŸ
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
d
) {

142 
lua_Unsig√d
 
r
 = 
	`checkunsig√d
(
L
, 1);

143 
i
 = 
d
 & (
LUA_NBITS
 - 1);

144 
r
 = 
	`åim
(r);

145 i‡(
i
 != 0)

146 
r
 = (∏<< 
i
Ë| (∏>> (
LUA_NBITS
 - i));

147 
	`pushunsig√d
(
L
, 
	`åim
(
r
));

149 
	}
}

152 
	$b_ÃŸ
 (
lua_Sèã
 *
L
) {

153  
	`b_rŸ
(
L
, 
	`luaL_checköãgî
(L, 2));

154 
	}
}

157 
	$b_ºŸ
 (
lua_Sèã
 *
L
) {

158  
	`b_rŸ
(
L
, -
	`luaL_checköãgî
(L, 2));

159 
	}
}

168 
	$fõld¨gs
 (
lua_Sèã
 *
L
, 
Árg
, *
width
) {

169 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 
Árg
);

170 
lua_I¡egî
 
w
 = 
	`luaL_›töãgî
(
L
, 
Árg
 + 1, 1);

171 
	`luaL_¨gcheck
(
L
, 0 <
f
, 
Árg
, "field cannot beÇegative");

172 
	`luaL_¨gcheck
(
L
, 0 < 
w
, 
Árg
 + 1, "width must beÖositive");

173 i‡(
f
 + 
w
 > 
LUA_NBITS
)

174 
	`luaL_îr‹
(
L
, "tryingÅoáccessÇon-existent bits");

175 *
width
 = ()
w
;

176  ()
f
;

177 
	}
}

180 
	$b_exåa˘
 (
lua_Sèã
 *
L
) {

181 
w
;

182 
lua_Unsig√d
 
r
 = 
	`åim
(
	`checkunsig√d
(
L
, 1));

183 
f
 = 
	`fõld¨gs
(
L
, 2, &
w
);

184 
r
 = (∏>> 
f
Ë& 
	`mask
(
w
);

185 
	`pushunsig√d
(
L
, 
r
);

187 
	}
}

190 
	$b_ª∂a˚
 (
lua_Sèã
 *
L
) {

191 
w
;

192 
lua_Unsig√d
 
r
 = 
	`åim
(
	`checkunsig√d
(
L
, 1));

193 
lua_Unsig√d
 
v
 = 
	`åim
(
	`checkunsig√d
(
L
, 2));

194 
f
 = 
	`fõld¨gs
(
L
, 3, &
w
);

195 
lua_Unsig√d
 
m
 = 
	`mask
(
w
);

196 
r
 = (∏& ~(
m
 << 
f
)Ë| ((
v
 & m) << f);

197 
	`pushunsig√d
(
L
, 
r
);

199 
	}
}

202 c⁄° 
luaL_Reg
 
	gbôlib
[] = {

203 {"¨shi·", 
b_¨shi·
},

204 {"b™d", 
b_™d
},

205 {"bnŸ", 
b_nŸ
},

206 {"b‹", 
b_‹
},

207 {"bx‹", 
b_x‹
},

208 {"bã°", 
b_ã°
},

209 {"exåa˘", 
b_exåa˘
},

210 {"ÃŸ©e", 
b_ÃŸ
},

211 {"lshi·", 
b_lshi·
},

212 {"ª∂a˚", 
b_ª∂a˚
},

213 {"ºŸ©e", 
b_ºŸ
},

214 {"rshi·", 
b_rshi·
},

215 {
NULL
, NULL}

220 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

221 
	`luaL_√wlib
(
L
, 
bôlib
);

223 
	}
}

229 
LUAMOD_API
 
	$lua›í_bô32
 (
lua_Sèã
 *
L
) {

230  
	`luaL_îr‹
(
L
, "library 'bit32' has been deprecated");

231 
	}
}

	@lib/lua/src/lcode.c

7 
	#lcode_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<m©h.h
>

14 
	~<°dlib.h
>

16 
	~"lua.h
"

18 
	~"lcode.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lmem.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"Õ¨£r.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"lvm.h
"

33 
	#MAXREGS
 255

	)

36 
	#hasjumps
(
e
Ë(”)->
t
 !”)->
f
)

	)

39 
	$t⁄umîÆ
(
expdesc
 *
e
, 
TVÆue
 *
v
) {

40 i‡(
	`hasjumps
(
e
))

42 
e
->
k
) {

43 
VKINT
:

44 i‡(
v
Ë
	`£tivÆue
(v, 
e
->
u
.
ivÆ
);

46 
VKFLT
:

47 i‡(
v
Ë
	`£tÊtvÆue
(v, 
e
->
u
.
nvÆ
);

51 
	}
}

54 
	$luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
) {

55 
In°ru˘i⁄
 *
¥evious
;

56 
l
 = 
‰om
 + 
n
 - 1;

57 i‡(
fs
->
pc
 > fs->
œ°èrgë
) {

58 
¥evious
 = &
fs
->
f
->
code
[fs->
pc
-1];

59 i‡(
	`GET_OPCODE
(*
¥evious
Ë=
OP_LOADNIL
) {

60 
p‰om
 = 
	`GETARG_A
(*
¥evious
);

61 
∂
 = 
p‰om
 + 
	`GETARG_B
(*
¥evious
);

62 i‡((
p‰om
 <
‰om
 && from <
∂
 + 1) ||

63 (
‰om
 <
p‰om
 &&Ö‰om <
l
 + 1)) {

64 i‡(
p‰om
 < 
‰om
) from =Öfrom;

65 i‡(
∂
 > 
l
)Ü =Öl;

66 
	`SETARG_A
(*
¥evious
, 
‰om
);

67 
	`SETARG_B
(*
¥evious
, 
l
 - 
‰om
);

72 
	`luaK_codeABC
(
fs
, 
OP_LOADNIL
, 
‰om
, 
n
 - 1, 0);

73 
	}
}

76 
	$luaK_jump
 (
FuncSèã
 *
fs
) {

77 
jpc
 = 
fs
->jpc;

78 
j
;

79 
fs
->
jpc
 = 
NO_JUMP
;

80 
j
 = 
	`luaK_codeAsBx
(
fs
, 
OP_JMP
, 0, 
NO_JUMP
);

81 
	`luaK_c⁄ˇt
(
fs
, &
j
, 
jpc
);

82  
j
;

83 
	}
}

86 
	$luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
) {

87 
	`luaK_codeABC
(
fs
, 
OP_RETURN
, 
fú°
, 
ƒë
+1, 0);

88 
	}
}

91 
	$c⁄djump
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
A
, 
B
, 
C
) {

92 
	`luaK_codeABC
(
fs
, 
›
, 
A
, 
B
, 
C
);

93  
	`luaK_jump
(
fs
);

94 
	}
}

97 
	$fixjump
 (
FuncSèã
 *
fs
, 
pc
, 
de°
) {

98 
In°ru˘i⁄
 *
jmp
 = &
fs
->
f
->
code
[
pc
];

99 
off£t
 = 
de°
-(
pc
+1);

100 
	`lua_as£π
(
de°
 !
NO_JUMP
);

101 i‡(
	`abs
(
off£t
Ë> 
MAXARG_sBx
)

102 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "control structureÅooÜong");

103 
	`SETARG_sBx
(*
jmp
, 
off£t
);

104 
	}
}

111 
	$luaK_gëœbñ
 (
FuncSèã
 *
fs
) {

112 
fs
->
œ°èrgë
 = fs->
pc
;

113  
fs
->
pc
;

114 
	}
}

117 
	$gëjump
 (
FuncSèã
 *
fs
, 
pc
) {

118 
off£t
 = 
	`GETARG_sBx
(
fs
->
f
->
code
[
pc
]);

119 i‡(
off£t
 =
NO_JUMP
)

120  
NO_JUMP
;

122  (
pc
+1)+
off£t
;

123 
	}
}

126 
In°ru˘i⁄
 *
	$gëjumpc⁄åﬁ
 (
FuncSèã
 *
fs
, 
pc
) {

127 
In°ru˘i⁄
 *
pi
 = &
fs
->
f
->
code
[
pc
];

128 i‡(
pc
 >1 && 
	`ã°TMode
(
	`GET_OPCODE
(*(
pi
-1))))

129  
pi
-1;

131  
pi
;

132 
	}
}

139 
	$√ed_vÆue
 (
FuncSèã
 *
fs
, 
li°
) {

140 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist)) {

141 
In°ru˘i⁄
 
i
 = *
	`gëjumpc⁄åﬁ
(
fs
, 
li°
);

142 i‡(
	`GET_OPCODE
(
i
Ë!
OP_TESTSET
)  1;

145 
	}
}

148 
	$∑tchã°ªg
 (
FuncSèã
 *
fs
, 
node
, 
ªg
) {

149 
In°ru˘i⁄
 *
i
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
node
);

150 i‡(
	`GET_OPCODE
(*
i
Ë!
OP_TESTSET
)

152 i‡(
ªg
 !
NO_REG
 &&Ñeg !
	`GETARG_B
(*
i
))

153 
	`SETARG_A
(*
i
, 
ªg
);

155 *
i
 = 
	`CREATE_ABC
(
OP_TEST
, 
	`GETARG_B
(*i), 0, 
	`GETARG_C
(*i));

158 
	}
}

161 
	$ªmovevÆues
 (
FuncSèã
 *
fs
, 
li°
) {

162 ; 
li°
 !
NO_JUMP
;Üi° = 
	`gëjump
(
fs
,Üist))

163 
	`∑tchã°ªg
(
fs
, 
li°
, 
NO_REG
);

164 
	}
}

167 
	$∑tchli°aux
 (
FuncSèã
 *
fs
, 
li°
, 
vèrgë
, 
ªg
,

168 
dèrgë
) {

169 
li°
 !
NO_JUMP
) {

170 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

171 i‡(
	`∑tchã°ªg
(
fs
, 
li°
, 
ªg
))

172 
	`fixjump
(
fs
, 
li°
, 
vèrgë
);

174 
	`fixjump
(
fs
, 
li°
, 
dèrgë
);

175 
li°
 = 
√xt
;

177 
	}
}

180 
	$disch¨gejpc
 (
FuncSèã
 *
fs
) {

181 
	`∑tchli°aux
(
fs
, fs->
jpc
, fs->
pc
, 
NO_REG
, fs->pc);

182 
fs
->
jpc
 = 
NO_JUMP
;

183 
	}
}

186 
	$luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
) {

187 i‡(
èrgë
 =
fs
->
pc
)

188 
	`luaK_∑tchtohîe
(
fs
, 
li°
);

190 
	`lua_as£π
(
èrgë
 < 
fs
->
pc
);

191 
	`∑tchli°aux
(
fs
, 
li°
, 
èrgë
, 
NO_REG
,Åarget);

193 
	}
}

196 
	$luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
) {

197 
Àvñ
++;

198 
li°
 !
NO_JUMP
) {

199 
√xt
 = 
	`gëjump
(
fs
, 
li°
);

200 
	`lua_as£π
(
	`GET_OPCODE
(
fs
->
f
->
code
[
li°
]Ë=
OP_JMP
 &&

201 (
	`GETARG_A
(
fs
->
f
->
code
[
li°
]) == 0 ||

202 
	`GETARG_A
(
fs
->
f
->
code
[
li°
]Ë>
Àvñ
));

203 
	`SETARG_A
(
fs
->
f
->
code
[
li°
], 
Àvñ
);

204 
li°
 = 
√xt
;

206 
	}
}

209 
	$luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
) {

210 
	`luaK_gëœbñ
(
fs
);

211 
	`luaK_c⁄ˇt
(
fs
, &fs->
jpc
, 
li°
);

212 
	}
}

215 
	$luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
) {

216 i‡(
l2
 =
NO_JUMP
) ;

217 i‡(*
l1
 =
NO_JUMP
)

218 *
l1
 = 
l2
;

220 
li°
 = *
l1
;

221 
√xt
;

222 (
√xt
 = 
	`gëjump
(
fs
, 
li°
)Ë!
NO_JUMP
)

223 
li°
 = 
√xt
;

224 
	`fixjump
(
fs
, 
li°
, 
l2
);

226 
	}
}

229 
	$luaK_code
 (
FuncSèã
 *
fs
, 
In°ru˘i⁄
 
i
) {

230 
PrŸo
 *
f
 = 
fs
->f;

231 
	`disch¨gejpc
(
fs
);

233 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
code
, fs->
pc
, f->
sizecode
, 
In°ru˘i⁄
,

234 
MAX_INT
, "opcodes");

235 
f
->
code
[
fs
->
pc
] = 
i
;

237 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
löeöfo
, fs->
pc
, f->
sizñöeöfo
, ,

238 
MAX_INT
, "opcodes");

239 
f
->
löeöfo
[
fs
->
pc
] = fs->
ls
->
œ°löe
;

240  
fs
->
pc
++;

241 
	}
}

244 
	$luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
b
, 
c
) {

245 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABC
);

246 
	`lua_as£π
(
	`gëBMode
(
o
Ë!
OpArgN
 || 
b
 == 0);

247 
	`lua_as£π
(
	`gëCMode
(
o
Ë!
OpArgN
 || 
c
 == 0);

248 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
b
 <
MAXARG_B
 && 
c
 <
MAXARG_C
);

249  
	`luaK_code
(
fs
, 
	`CREATE_ABC
(
o
, 
a
, 
b
, 
c
));

250 
	}
}

253 
	$luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
a
, 
bc
) {

254 
	`lua_as£π
(
	`gëOpMode
(
o
Ë=
iABx
 || gëOpMode(oË=
iAsBx
);

255 
	`lua_as£π
(
	`gëCMode
(
o
Ë=
OpArgN
);

256 
	`lua_as£π
(
a
 <
MAXARG_A
 && 
bc
 <
MAXARG_Bx
);

257  
	`luaK_code
(
fs
, 
	`CREATE_ABx
(
o
, 
a
, 
bc
));

258 
	}
}

261 
	$codìxåØrg
 (
FuncSèã
 *
fs
, 
a
) {

262 
	`lua_as£π
(
a
 <
MAXARG_Ax
);

263  
	`luaK_code
(
fs
, 
	`CREATE_Ax
(
OP_EXTRAARG
, 
a
));

264 
	}
}

267 
	$luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
) {

268 i‡(
k
 <
MAXARG_Bx
)

269  
	`luaK_codeABx
(
fs
, 
OP_LOADK
, 
ªg
, 
k
);

271 
p
 = 
	`luaK_codeABx
(
fs
, 
OP_LOADKX
, 
ªg
, 0);

272 
	`codìxåØrg
(
fs
, 
k
);

273  
p
;

275 
	}
}

278 
	$luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
) {

279 
√w°ack
 = 
fs
->
‰ìªg
 + 
n
;

280 i‡(
√w°ack
 > 
fs
->
f
->
max°acksize
) {

281 i‡(
√w°ack
 >
MAXREGS
)

282 
	`luaX_sy¡axîr‹
(
fs
->
ls
,

284 
fs
->
f
->
max°acksize
 = 
	`ˇ°_byã
(
√w°ack
);

286 
	}
}

289 
	$luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
) {

290 
	`luaK_check°ack
(
fs
, 
n
);

291 
fs
->
‰ìªg
 +
n
;

292 
	}
}

295 
	$‰ìªg
 (
FuncSèã
 *
fs
, 
ªg
) {

296 i‡(!
	`ISK
(
ªg
Ë&&Ñeg >
fs
->
«˘v¨
) {

297 
fs
->
‰ìªg
--;

298 
	`lua_as£π
(
ªg
 =
fs
->
‰ìªg
);

300 
	}
}

303 
	$‰ìexp
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

304 i‡(
e
->
k
 =
VNONRELOC
)

305 
	`‰ìªg
(
fs
, 
e
->
u
.
öfo
);

306 
	}
}

313 
	$addk
 (
FuncSèã
 *
fs
, 
TVÆue
 *
key
, TVÆuê*
v
) {

314 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

315 
PrŸo
 *
f
 = 
fs
->f;

316 
TVÆue
 *
idx
 = 
	`luaH_£t
(
L
, 
fs
->
ls
->
h
, 
key
);

317 
k
, 
ﬁdsize
;

318 i‡(
	`âisöãgî
(
idx
)) {

319 
k
 = 
	`ˇ°_öt
(
	`ivÆue
(
idx
));

321 i‡(
k
 < 
fs
->
nk
 && 
	`ây≥
(&
f
->k[k]Ë=ây≥(
v
) &&

322 
	`luaV_øwequÆobj
(&
f
->
k
[k], 
v
))

323  
k
;

326 
ﬁdsize
 = 
f
->
sizek
;

327 
k
 = 
fs
->
nk
;

330 
	`£tivÆue
(
idx
, 
k
);

331 
	`luaM_growve˘‹
(
L
, 
f
->
k
, k, f->
sizek
, 
TVÆue
, 
MAXARG_Ax
, "constants");

332 
ﬁdsize
 < 
f
->
sizek
Ë
	`£äûvÆue
(&f->
k
[oldsize++]);

333 
	`£tobj
(
L
, &
f
->
k
[k], 
v
);

334 
fs
->
nk
++;

335 
	`luaC_b¨rõr
(
L
, 
f
, 
v
);

336  
k
;

337 
	}
}

340 
	$luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
) {

341 
TVÆue
 
o
;

342 
	`£tsvÆue
(
fs
->
ls
->
L
, &
o
, 
s
);

343  
	`addk
(
fs
, &
o
, &o);

344 
	}
}

352 
	$luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
) {

353 
TVÆue
 
k
, 
o
;

354 
	`£çvÆue
(&
k
, 
	`ˇ°
(*, ca°(
size_t
, 
n
)));

355 
	`£tivÆue
(&
o
, 
n
);

356  
	`addk
(
fs
, &
k
, &
o
);

357 
	}
}

360 
	$luaK_numbîK
 (
FuncSèã
 *
fs
, 
lua_Numbî
 
r
) {

361 
TVÆue
 
o
;

362 
	`£tÊtvÆue
(&
o
, 
r
);

363  
	`addk
(
fs
, &
o
, &o);

364 
	}
}

367 
	$boﬁK
 (
FuncSèã
 *
fs
, 
b
) {

368 
TVÆue
 
o
;

369 
	`£tbvÆue
(&
o
, 
b
);

370  
	`addk
(
fs
, &
o
, &o);

371 
	}
}

374 
	$nûK
 (
FuncSèã
 *
fs
) {

375 
TVÆue
 
k
, 
v
;

376 
	`£äûvÆue
(&
v
);

378 
	`£thvÆue
(
fs
->
ls
->
L
, &
k
, fs->ls->
h
);

379  
	`addk
(
fs
, &
k
, &
v
);

380 
	}
}

383 
	$luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
) {

384 i‡(
e
->
k
 =
VCALL
) {

385 
	`SETARG_C
(
	`gëcode
(
fs
, 
e
), 
ƒesu…s
+1);

387 i‡(
e
->
k
 =
VVARARG
) {

388 
	`SETARG_B
(
	`gëcode
(
fs
, 
e
), 
ƒesu…s
+1);

389 
	`SETARG_A
(
	`gëcode
(
fs
, 
e
), fs->
‰ìªg
);

390 
	`luaK_ª£rvîegs
(
fs
, 1);

392 
	}
}

395 
	$luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

396 i‡(
e
->
k
 =
VCALL
) {

397 
e
->
k
 = 
VNONRELOC
;

398 
e
->
u
.
öfo
 = 
	`GETARG_A
(
	`gëcode
(
fs
,É));

400 i‡(
e
->
k
 =
VVARARG
) {

401 
	`SETARG_B
(
	`gëcode
(
fs
, 
e
), 2);

402 
e
->
k
 = 
VRELOCABLE
;

404 
	}
}

407 
	$luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

408 
e
->
k
) {

409 
VLOCAL
: {

410 
e
->
k
 = 
VNONRELOC
;

413 
VUPVAL
: {

414 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_GETUPVAL
, 0,É->u.info, 0);

415 
e
->
k
 = 
VRELOCABLE
;

418 
VINDEXED
: {

419 
OpCode
 
›
 = 
OP_GETTABUP
;

420 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
idx
);

421 i‡(
e
->
u
.
öd
.
vt
 =
VLOCAL
) {

422 
	`‰ìªg
(
fs
, 
e
->
u
.
öd
.
t
);

423 
›
 = 
OP_GETTABLE
;

425 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0,É->u.
öd
.
t
,É->u.öd.
idx
);

426 
e
->
k
 = 
VRELOCABLE
;

429 
VVARARG
:

430 
VCALL
: {

431 
	`luaK_£t⁄îë
(
fs
, 
e
);

436 
	}
}

439 
	$code_œbñ
 (
FuncSèã
 *
fs
, 
A
, 
b
, 
jump
) {

440 
	`luaK_gëœbñ
(
fs
);

441  
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
A
, 
b
, 
jump
);

442 
	}
}

445 
	$disch¨ge2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

446 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

447 
e
->
k
) {

448 
VNIL
: {

449 
	`luaK_nû
(
fs
, 
ªg
, 1);

452 
VFALSE
: 
VTRUE
: {

453 
	`luaK_codeABC
(
fs
, 
OP_LOADBOOL
, 
ªg
, 
e
->
k
 =
VTRUE
, 0);

456 
VK
: {

457 
	`luaK_codek
(
fs
, 
ªg
, 
e
->
u
.
öfo
);

460 
VKFLT
: {

461 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_numbîK
(fs, 
e
->
u
.
nvÆ
));

464 
VKINT
: {

465 
	`luaK_codek
(
fs
, 
ªg
, 
	`luaK_ötK
(fs, 
e
->
u
.
ivÆ
));

468 
VRELOCABLE
: {

469 
In°ru˘i⁄
 *
pc
 = &
	`gëcode
(
fs
, 
e
);

470 
	`SETARG_A
(*
pc
, 
ªg
);

473 
VNONRELOC
: {

474 i‡(
ªg
 !
e
->
u
.
öfo
)

475 
	`luaK_codeABC
(
fs
, 
OP_MOVE
, 
ªg
, 
e
->
u
.
öfo
, 0);

479 
	`lua_as£π
(
e
->
k
 =
VVOID
 ||É->k =
VJMP
);

483 
e
->
u
.
öfo
 = 
ªg
;

484 
e
->
k
 = 
VNONRELOC
;

485 
	}
}

488 
	$disch¨ge2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

489 i‡(
e
->
k
 !
VNONRELOC
) {

490 
	`luaK_ª£rvîegs
(
fs
, 1);

491 
	`disch¨ge2ªg
(
fs
, 
e
, fs->
‰ìªg
-1);

493 
	}
}

496 
	$exp2ªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ªg
) {

497 
	`disch¨ge2ªg
(
fs
, 
e
, 
ªg
);

498 i‡(
e
->
k
 =
VJMP
)

499 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
,É->
u
.
öfo
);

500 i‡(
	`hasjumps
(
e
)) {

501 
föÆ
;

502 
p_f
 = 
NO_JUMP
;

503 
p_t
 = 
NO_JUMP
;

504 i‡(
	`√ed_vÆue
(
fs
, 
e
->
t
Ë||Çìd_vÆue(fs,É->
f
)) {

505 
fj
 = (
e
->
k
 =
VJMP
Ë? 
NO_JUMP
 : 
	`luaK_jump
(
fs
);

506 
p_f
 = 
	`code_œbñ
(
fs
, 
ªg
, 0, 1);

507 
p_t
 = 
	`code_œbñ
(
fs
, 
ªg
, 1, 0);

508 
	`luaK_∑tchtohîe
(
fs
, 
fj
);

510 
föÆ
 = 
	`luaK_gëœbñ
(
fs
);

511 
	`∑tchli°aux
(
fs
, 
e
->
f
, 
föÆ
, 
ªg
, 
p_f
);

512 
	`∑tchli°aux
(
fs
, 
e
->
t
, 
föÆ
, 
ªg
, 
p_t
);

514 
e
->
f
 =É->
t
 = 
NO_JUMP
;

515 
e
->
u
.
öfo
 = 
ªg
;

516 
e
->
k
 = 
VNONRELOC
;

517 
	}
}

520 
	$luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

521 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

522 
	`‰ìexp
(
fs
, 
e
);

523 
	`luaK_ª£rvîegs
(
fs
, 1);

524 
	`exp2ªg
(
fs
, 
e
, fs->
‰ìªg
 - 1);

525 
	}
}

528 
	$luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

529 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

530 i‡(
e
->
k
 =
VNONRELOC
) {

531 i‡(!
	`hasjumps
(
e
)ËÉ->
u
.
öfo
;

532 i‡(
e
->
u
.
öfo
 >
fs
->
«˘v¨
) {

533 
	`exp2ªg
(
fs
, 
e
,É->
u
.
öfo
);

534  
e
->
u
.
öfo
;

537 
	`luaK_exp2√xåeg
(
fs
, 
e
);

538  
e
->
u
.
öfo
;

539 
	}
}

542 
	$luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

543 i‡(
e
->
k
 !
VUPVAL
 || 
	`hasjumps
(e))

544 
	`luaK_exp2™yªg
(
fs
, 
e
);

545 
	}
}

548 
	$luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

549 i‡(
	`hasjumps
(
e
))

550 
	`luaK_exp2™yªg
(
fs
, 
e
);

552 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

553 
	}
}

556 
	$luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

557 
	`luaK_exp2vÆ
(
fs
, 
e
);

558 
e
->
k
) {

559 
VTRUE
:

560 
VFALSE
:

561 
VNIL
: {

562 i‡(
fs
->
nk
 <
MAXINDEXRK
) {

563 
e
->
u
.
öfo
 = (e->
k
 =
VNIL
Ë? 
	`nûK
(
fs
Ë: 
	`boﬁK
(fs, (e->k =
VTRUE
));

564 
e
->
k
 = 
VK
;

565  
	`RKASK
(
e
->
u
.
öfo
);

569 
VKINT
: {

570 
e
->
u
.
öfo
 = 
	`luaK_ötK
(
fs
,É->u.
ivÆ
);

571 
e
->
k
 = 
VK
;

572 
vk
;

574 
VKFLT
: {

575 
e
->
u
.
öfo
 = 
	`luaK_numbîK
(
fs
,É->u.
nvÆ
);

576 
e
->
k
 = 
VK
;

579 
VK
: {

580 
vk
:

581 i‡(
e
->
u
.
öfo
 <
MAXINDEXRK
)

582  
	`RKASK
(
e
->
u
.
öfo
);

588  
	`luaK_exp2™yªg
(
fs
, 
e
);

589 
	}
}

592 
	$luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
ex
) {

593 
v¨
->
k
) {

594 
VLOCAL
: {

595 
	`‰ìexp
(
fs
, 
ex
);

596 
	`exp2ªg
(
fs
, 
ex
, 
v¨
->
u
.
öfo
);

599 
VUPVAL
: {

600 
e
 = 
	`luaK_exp2™yªg
(
fs
, 
ex
);

601 
	`luaK_codeABC
(
fs
, 
OP_SETUPVAL
, 
e
, 
v¨
->
u
.
öfo
, 0);

604 
VINDEXED
: {

605 
OpCode
 
›
 = (
v¨
->
u
.
öd
.
vt
 =
VLOCAL
Ë? 
OP_SETTABLE
 : 
OP_SETTABUP
;

606 
e
 = 
	`luaK_exp2RK
(
fs
, 
ex
);

607 
	`luaK_codeABC
(
fs
, 
›
, 
v¨
->
u
.
öd
.
t
, v¨->u.öd.
idx
, 
e
);

611 
	`lua_as£π
(0);

615 
	`‰ìexp
(
fs
, 
ex
);

616 
	}
}

619 
	$luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
) {

620 
îeg
;

621 
	`luaK_exp2™yªg
(
fs
, 
e
);

622 
îeg
 = 
e
->
u
.
öfo
;

623 
	`‰ìexp
(
fs
, 
e
);

624 
e
->
u
.
öfo
 = 
fs
->
‰ìªg
;

625 
e
->
k
 = 
VNONRELOC
;

626 
	`luaK_ª£rvîegs
(
fs
, 2);

627 
	`luaK_codeABC
(
fs
, 
OP_SELF
, 
e
->
u
.
öfo
, 
îeg
, 
	`luaK_exp2RK
(fs, 
key
));

628 
	`‰ìexp
(
fs
, 
key
);

629 
	}
}

632 
	$övîtjump
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

633 
In°ru˘i⁄
 *
pc
 = 
	`gëjumpc⁄åﬁ
(
fs
, 
e
->
u
.
öfo
);

634 
	`lua_as£π
(
	`ã°TMode
(
	`GET_OPCODE
(*
pc
)Ë&& GET_OPCODE(*pcË!
OP_TESTSET
 &&

635 
	`GET_OPCODE
(*
pc
Ë!
OP_TEST
);

636 
	`SETARG_A
(*
pc
, !(
	`GETARG_A
(*pc)));

637 
	}
}

640 
	$jump⁄c⁄d
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
c⁄d
) {

641 i‡(
e
->
k
 =
VRELOCABLE
) {

642 
In°ru˘i⁄
 
õ
 = 
	`gëcode
(
fs
, 
e
);

643 i‡(
	`GET_OPCODE
(
õ
Ë=
OP_NOT
) {

644 
fs
->
pc
--;

645  
	`c⁄djump
(
fs
, 
OP_TEST
, 
	`GETARG_B
(
õ
), 0, !
c⁄d
);

649 
	`disch¨ge2™yªg
(
fs
, 
e
);

650 
	`‰ìexp
(
fs
, 
e
);

651  
	`c⁄djump
(
fs
, 
OP_TESTSET
, 
NO_REG
, 
e
->
u
.
öfo
, 
c⁄d
);

652 
	}
}

655 
	$luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

656 
pc
;

657 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

658 
e
->
k
) {

659 
VJMP
: {

660 
	`övîtjump
(
fs
, 
e
);

661 
pc
 = 
e
->
u
.
öfo
;

664 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

665 
pc
 = 
NO_JUMP
;

669 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 0);

673 
	`luaK_c⁄ˇt
(
fs
, &
e
->
f
, 
pc
);

674 
	`luaK_∑tchtohîe
(
fs
, 
e
->
t
);

675 
e
->
t
 = 
NO_JUMP
;

676 
	}
}

679 
	$luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

680 
pc
;

681 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

682 
e
->
k
) {

683 
VJMP
: {

684 
pc
 = 
e
->
u
.
öfo
;

687 
VNIL
: 
VFALSE
: {

688 
pc
 = 
NO_JUMP
;

692 
pc
 = 
	`jump⁄c⁄d
(
fs
, 
e
, 1);

696 
	`luaK_c⁄ˇt
(
fs
, &
e
->
t
, 
pc
);

697 
	`luaK_∑tchtohîe
(
fs
, 
e
->
f
);

698 
e
->
f
 = 
NO_JUMP
;

699 
	}
}

702 
	$codíŸ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
) {

703 
	`luaK_disch¨gev¨s
(
fs
, 
e
);

704 
e
->
k
) {

705 
VNIL
: 
VFALSE
: {

706 
e
->
k
 = 
VTRUE
;

709 
VK
: 
VKFLT
: 
VKINT
: 
VTRUE
: {

710 
e
->
k
 = 
VFALSE
;

713 
VJMP
: {

714 
	`övîtjump
(
fs
, 
e
);

717 
VRELOCABLE
:

718 
VNONRELOC
: {

719 
	`disch¨ge2™yªg
(
fs
, 
e
);

720 
	`‰ìexp
(
fs
, 
e
);

721 
e
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
OP_NOT
, 0,É->u.info, 0);

722 
e
->
k
 = 
VRELOCABLE
;

726 
	`lua_as£π
(0);

731 { 
ãmp
 = 
e
->
f
;É->‡e->
t
;É->t =Åemp; }

732 
	`ªmovevÆues
(
fs
, 
e
->
f
);

733 
	`ªmovevÆues
(
fs
, 
e
->
t
);

734 
	}
}

737 
	$luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
) {

738 
	`lua_as£π
(!
	`hasjumps
(
t
));

739 
t
->
u
.
öd
.àt->u.
öfo
;

740 
t
->
u
.
öd
.
idx
 = 
	`luaK_exp2RK
(
fs
, 
k
);

741 
t
->
u
.
öd
.
vt
 = (t->
k
 =
VUPVAL
) ? VUPVAL

742 : 
	`check_exp
(
	`vkisöªg
(
t
->
k
), 
VLOCAL
);

743 
t
->
k
 = 
VINDEXED
;

744 
	}
}

750 
	$vÆid›
 (
›
, 
TVÆue
 *
v1
, TVÆuê*
v2
) {

751 
›
) {

752 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

753 
LUA_OPSHL
: 
LUA_OPSHR
: 
LUA_OPBNOT
: {

754 
lua_I¡egî
 
i
;

755  (
	`toöãgî
(
v1
, &
i
Ë&&Åoöãgî(
v2
, &i));

757 
LUA_OPDIV
: 
LUA_OPIDIV
: 
LUA_OPMOD
:

758  (
	`nvÆue
(
v2
) != 0);

761 
	}
}

767 
	$c⁄°fﬁdög
 (
FuncSèã
 *
fs
, 
›
, 
expdesc
 *
e1
,Éxpdes¯*
e2
) {

768 
TVÆue
 
v1
, 
v2
, 
ªs
;

769 i‡(!
	`t⁄umîÆ
(
e1
, &
v1
Ë|| !t⁄umîÆ(
e2
, &
v2
Ë|| !
	`vÆid›
(
›
, &v1, &v2))

771 
	`luaO_¨ôh
(
fs
->
ls
->
L
, 
›
, &
v1
, &
v2
, &
ªs
);

772 i‡(
	`âisöãgî
(&
ªs
)) {

773 
e1
->
k
 = 
VKINT
;

774 
e1
->
u
.
ivÆ
 = 
	`ivÆue
(&
ªs
);

777 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(&
ªs
);

778 i‡(
	`luai_numi¢™
(
n
) ||Ç == 0)

780 
e1
->
k
 = 
VKFLT
;

781 
e1
->
u
.
nvÆ
 = 
n
;

784 
	}
}

794 
	$codìxpvÆ
 (
FuncSèã
 *
fs
, 
OpCode
 
›
,

795 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

796 
	`lua_as£π
(
›
 >
OP_ADD
);

797 i‡(
›
 <
OP_BNOT
 && 
	`c⁄°fﬁdög
(
fs
, (› - 
OP_ADD
Ë+ 
LUA_OPADD
, 
e1
, 
e2
))

800 
o1
, 
o2
;

802 i‡(
›
 =
OP_UNM
 || o∞=
OP_BNOT
 || o∞=
OP_LEN
) {

803 
o2
 = 0;

804 
o1
 = 
	`luaK_exp2™yªg
(
fs
, 
e1
);

807 
o2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

808 
o1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

810 i‡(
o1
 > 
o2
) {

811 
	`‰ìexp
(
fs
, 
e1
);

812 
	`‰ìexp
(
fs
, 
e2
);

815 
	`‰ìexp
(
fs
, 
e2
);

816 
	`‰ìexp
(
fs
, 
e1
);

818 
e1
->
u
.
öfo
 = 
	`luaK_codeABC
(
fs
, 
›
, 0, 
o1
, 
o2
);

819 
e1
->
k
 = 
VRELOCABLE
;

820 
	`luaK_fixlöe
(
fs
, 
löe
);

822 
	}
}

825 
	$codecomp
 (
FuncSèã
 *
fs
, 
OpCode
 
›
, 
c⁄d
, 
expdesc
 *
e1
,

826 
expdesc
 *
e2
) {

827 
o1
 = 
	`luaK_exp2RK
(
fs
, 
e1
);

828 
o2
 = 
	`luaK_exp2RK
(
fs
, 
e2
);

829 
	`‰ìexp
(
fs
, 
e2
);

830 
	`‰ìexp
(
fs
, 
e1
);

831 i‡(
c⁄d
 =0 && 
›
 !
OP_EQ
) {

832 
ãmp
;

833 
ãmp
 = 
o1
; o1 = 
o2
; o2 =Åemp;

834 
c⁄d
 = 1;

836 
e1
->
u
.
öfo
 = 
	`c⁄djump
(
fs
, 
›
, 
c⁄d
, 
o1
, 
o2
);

837 
e1
->
k
 = 
VJMP
;

838 
	}
}

841 
	$luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
e
, 
löe
) {

842 
expdesc
 
e2
;

843 
e2
.
t
 =É2.
f
 = 
NO_JUMP
;É2.
k
 = 
VKINT
;É2.
u
.
ivÆ
 = 0;

844 
›
) {

845 
OPR_MINUS
: 
OPR_BNOT
: 
OPR_LEN
: {

846 
	`codìxpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, (
›
 - 
OPR_MINUS
Ë+ 
OP_UNM
), 
e
, &
e2
, 
löe
);

849 
OPR_NOT
: 
	`codíŸ
(
fs
, 
e
); ;

850 : 
	`lua_as£π
(0);

852 
	}
}

855 
	$luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
) {

856 
›
) {

857 
OPR_AND
: {

858 
	`luaK_goi·rue
(
fs
, 
v
);

861 
OPR_OR
: {

862 
	`luaK_goifÁl£
(
fs
, 
v
);

865 
OPR_CONCAT
: {

866 
	`luaK_exp2√xåeg
(
fs
, 
v
);

869 
OPR_ADD
: 
OPR_SUB
:

870 
OPR_MUL
: 
OPR_DIV
: 
OPR_IDIV
:

871 
OPR_MOD
: 
OPR_POW
:

872 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

873 
OPR_SHL
: 
OPR_SHR
: {

874 i‡(!
	`t⁄umîÆ
(
v
, 
NULL
)Ë
	`luaK_exp2RK
(
fs
, v);

878 
	`luaK_exp2RK
(
fs
, 
v
);

882 
	}
}

885 
	$luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
,

886 
expdesc
 *
e1
,Éxpdes¯*
e2
, 
löe
) {

887 
›
) {

888 
OPR_AND
: {

889 
	`lua_as£π
(
e1
->
t
 =
NO_JUMP
);

890 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

891 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
f
, 
e1
->f);

892 *
e1
 = *
e2
;

895 
OPR_OR
: {

896 
	`lua_as£π
(
e1
->
f
 =
NO_JUMP
);

897 
	`luaK_disch¨gev¨s
(
fs
, 
e2
);

898 
	`luaK_c⁄ˇt
(
fs
, &
e2
->
t
, 
e1
->t);

899 *
e1
 = *
e2
;

902 
OPR_CONCAT
: {

903 
	`luaK_exp2vÆ
(
fs
, 
e2
);

904 i‡(
e2
->
k
 =
VRELOCABLE
 && 
	`GET_OPCODE
(
	`gëcode
(
fs
,É2)Ë=
OP_CONCAT
) {

905 
	`lua_as£π
(
e1
->
u
.
öfo
 =
	`GETARG_B
(
	`gëcode
(
fs
, 
e2
))-1);

906 
	`‰ìexp
(
fs
, 
e1
);

907 
	`SETARG_B
(
	`gëcode
(
fs
, 
e2
), 
e1
->
u
.
öfo
);

908 
e1
->
k
 = 
VRELOCABLE
;É1->
u
.
öfo
 = 
e2
->u.info;

911 
	`luaK_exp2√xåeg
(
fs
, 
e2
);

912 
	`codìxpvÆ
(
fs
, 
OP_CONCAT
, 
e1
, 
e2
, 
löe
);

916 
OPR_ADD
: 
OPR_SUB
: 
OPR_MUL
: 
OPR_DIV
:

917 
OPR_IDIV
: 
OPR_MOD
: 
OPR_POW
:

918 
OPR_BAND
: 
OPR_BOR
: 
OPR_BXOR
:

919 
OPR_SHL
: 
OPR_SHR
: {

920 
	`codìxpvÆ
(
fs
, 
	`ˇ°
(
OpCode
, (
›
 - 
OPR_ADD
Ë+ 
OP_ADD
), 
e1
, 
e2
, 
löe
);

923 
OPR_EQ
: 
OPR_LT
: 
OPR_LE
: {

924 
	`codecomp
(
fs
, 
	`ˇ°
(
OpCode
, (
›
 - 
OPR_EQ
Ë+ 
OP_EQ
), 1, 
e1
, 
e2
);

927 
OPR_NE
: 
OPR_GT
: 
OPR_GE
: {

928 
	`codecomp
(
fs
, 
	`ˇ°
(
OpCode
, (
›
 - 
OPR_NE
Ë+ 
OP_EQ
), 0, 
e1
, 
e2
);

931 : 
	`lua_as£π
(0);

933 
	}
}

936 
	$luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
) {

937 
fs
->
f
->
löeöfo
[fs->
pc
 - 1] = 
löe
;

938 
	}
}

941 
	$luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
) {

942 
c
 = (
√Àms
 - 1)/
LFIELDS_PER_FLUSH
 + 1;

943 
b
 = (
to°‹e
 =
LUA_MULTRET
) ? 0 :Åostore;

944 
	`lua_as£π
(
to°‹e
 != 0);

945 i‡(
c
 <
MAXARG_C
)

946 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 
c
);

947 i‡(
c
 <
MAXARG_Ax
) {

948 
	`luaK_codeABC
(
fs
, 
OP_SETLIST
, 
ba£
, 
b
, 0);

949 
	`codìxåØrg
(
fs
, 
c
);

952 
	`luaX_sy¡axîr‹
(
fs
->
ls
, "constructorÅooÜong");

953 
fs
->
‰ìªg
 = 
ba£
 + 1;

954 
	}
}

	@lib/lua/src/lcode.h

7 #i‚de‡
lcode_h


8 
	#lcode_h


	)

10 
	~"Œex.h
"

11 
	~"lobje˘.h
"

12 
	~"l›codes.h
"

13 
	~"Õ¨£r.h
"

20 
	#NO_JUMP
 (-1)

	)

26 
	eBöO¥
 {

27 
	mOPR_ADD
, 
	mOPR_SUB
, 
	mOPR_MUL
, 
	mOPR_MOD
, 
	mOPR_POW
,

28 
	mOPR_DIV
,

29 
	mOPR_IDIV
,

30 
	mOPR_BAND
, 
	mOPR_BOR
, 
	mOPR_BXOR
,

31 
	mOPR_SHL
, 
	mOPR_SHR
,

32 
	mOPR_CONCAT
,

33 
	mOPR_EQ
, 
	mOPR_LT
, 
	mOPR_LE
,

34 
	mOPR_NE
, 
	mOPR_GT
, 
	mOPR_GE
,

35 
	mOPR_AND
, 
	mOPR_OR
,

36 
	mOPR_NOBINOPR


37 } 
	tBöO¥
;

40 
	eUnO¥
 { 
	mOPR_MINUS
, 
	mOPR_BNOT
, 
	mOPR_NOT
, 
	mOPR_LEN
, 
	mOPR_NOUNOPR
 } 
	tUnO¥
;

43 
	#gëcode
(
fs
,
e
Ë((fs)->
f
->
code
[”)->
u
.
öfo
])

	)

45 
	#luaK_codeAsBx
(
fs
,
o
,
A
,
sBx
Ë
	`luaK_codeABx
(fs,o,A,(sBx)+
MAXARG_sBx
)

	)

47 
	#luaK_£tmu…ªt
(
fs
,
e
Ë
	`luaK_£åëu∫s
(fs,É, 
LUA_MULTRET
)

	)

49 
	#luaK_jum±o
(
fs
,
t
Ë
	`luaK_∑tchli°
(fs, 
	`luaK_jump
(fs),Å)

	)

51 
LUAI_FUNC
 
luaK_codeABx
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
Bx
);

52 
LUAI_FUNC
 
luaK_codeABC
 (
FuncSèã
 *
fs
, 
OpCode
 
o
, 
A
, 
B
, 
C
);

53 
LUAI_FUNC
 
luaK_codek
 (
FuncSèã
 *
fs
, 
ªg
, 
k
);

54 
LUAI_FUNC
 
luaK_fixlöe
 (
FuncSèã
 *
fs
, 
löe
);

55 
LUAI_FUNC
 
luaK_nû
 (
FuncSèã
 *
fs
, 
‰om
, 
n
);

56 
LUAI_FUNC
 
luaK_ª£rvîegs
 (
FuncSèã
 *
fs
, 
n
);

57 
LUAI_FUNC
 
luaK_check°ack
 (
FuncSèã
 *
fs
, 
n
);

58 
LUAI_FUNC
 
luaK_°rögK
 (
FuncSèã
 *
fs
, 
TSåög
 *
s
);

59 
LUAI_FUNC
 
luaK_ötK
 (
FuncSèã
 *
fs
, 
lua_I¡egî
 
n
);

60 
LUAI_FUNC
 
luaK_disch¨gev¨s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

61 
LUAI_FUNC
 
luaK_exp2™yªg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

62 
LUAI_FUNC
 
luaK_exp2™yªgup
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

63 
LUAI_FUNC
 
luaK_exp2√xåeg
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

64 
LUAI_FUNC
 
luaK_exp2vÆ
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

65 
LUAI_FUNC
 
luaK_exp2RK
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

66 
LUAI_FUNC
 
luaK_£lf
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
,Éxpdes¯*
key
);

67 
LUAI_FUNC
 
luaK_ödexed
 (
FuncSèã
 *
fs
, 
expdesc
 *
t
,Éxpdes¯*
k
);

68 
LUAI_FUNC
 
luaK_goi·rue
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

69 
LUAI_FUNC
 
luaK_goifÁl£
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

70 
LUAI_FUNC
 
luaK_°‹ev¨
 (
FuncSèã
 *
fs
, 
expdesc
 *
v¨
,Éxpdes¯*
e
);

71 
LUAI_FUNC
 
luaK_£åëu∫s
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
, 
ƒesu…s
);

72 
LUAI_FUNC
 
luaK_£t⁄îë
 (
FuncSèã
 *
fs
, 
expdesc
 *
e
);

73 
LUAI_FUNC
 
luaK_jump
 (
FuncSèã
 *
fs
);

74 
LUAI_FUNC
 
luaK_ªt
 (
FuncSèã
 *
fs
, 
fú°
, 
ƒë
);

75 
LUAI_FUNC
 
luaK_∑tchli°
 (
FuncSèã
 *
fs
, 
li°
, 
èrgë
);

76 
LUAI_FUNC
 
luaK_∑tchtohîe
 (
FuncSèã
 *
fs
, 
li°
);

77 
LUAI_FUNC
 
luaK_∑tch˛o£
 (
FuncSèã
 *
fs
, 
li°
, 
Àvñ
);

78 
LUAI_FUNC
 
luaK_c⁄ˇt
 (
FuncSèã
 *
fs
, *
l1
, 
l2
);

79 
LUAI_FUNC
 
luaK_gëœbñ
 (
FuncSèã
 *
fs
);

80 
LUAI_FUNC
 
luaK_¥efix
 (
FuncSèã
 *
fs
, 
UnO¥
 
›
, 
expdesc
 *
v
, 
löe
);

81 
LUAI_FUNC
 
luaK_öfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v
);

82 
LUAI_FUNC
 
luaK_posfix
 (
FuncSèã
 *
fs
, 
BöO¥
 
›
, 
expdesc
 *
v1
,

83 
expdesc
 *
v2
, 
löe
);

84 
LUAI_FUNC
 
luaK_£éi°
 (
FuncSèã
 *
fs
, 
ba£
, 
√Àms
, 
to°‹e
);

	@lib/lua/src/lcorolib.c

7 
	#lc‹ﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

15 
	~"lua.h
"

17 
	~"œuxlib.h
"

18 
	~"luÆib.h
"

21 
lua_Sèã
 *
	$gëco
 (
lua_Sèã
 *
L
) {

22 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 1);

23 
	`luaL_¨gcheck
(
L
, 
co
, 1, "threadÉxpected");

24  
co
;

25 
	}
}

28 
	$auxªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
co
, 
«rg
) {

29 
°©us
;

30 i‡(!
	`lua_check°ack
(
co
, 
«rg
)) {

31 
	`lua_pushlôîÆ
(
L
, "too manyárgumentsÅoÑesume");

34 i‡(
	`lua_°©us
(
co
Ë=
LUA_OK
 && 
	`lua_gët›
(co) == 0) {

35 
	`lua_pushlôîÆ
(
L
, "cannotÑesume dead coroutine");

38 
	`lua_xmove
(
L
, 
co
, 
«rg
);

39 
°©us
 = 
	`lua_ªsume
(
co
, 
L
, 
«rg
);

40 i‡(
°©us
 =
LUA_OK
 || sètu†=
LUA_YIELD
) {

41 
ƒes
 = 
	`lua_gët›
(
co
);

42 i‡(!
	`lua_check°ack
(
L
, 
ƒes
 + 1)) {

43 
	`lua_p›
(
co
, 
ƒes
);

44 
	`lua_pushlôîÆ
(
L
, "too manyÑesultsÅoÑesume");

47 
	`lua_xmove
(
co
, 
L
, 
ƒes
);

48  
ƒes
;

51 
	`lua_xmove
(
co
, 
L
, 1);

54 
	}
}

57 
	$luaB_c‹esume
 (
lua_Sèã
 *
L
) {

58 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

59 
r
;

60 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L) - 1);

61 i‡(
r
 < 0) {

62 
	`lua_pushboﬁón
(
L
, 0);

63 
	`lua_ö£π
(
L
, -2);

67 
	`lua_pushboﬁón
(
L
, 1);

68 
	`lua_ö£π
(
L
, -(
r
 + 1));

69  
r
 + 1;

71 
	}
}

74 
	$luaB_auxwøp
 (
lua_Sèã
 *
L
) {

75 
lua_Sèã
 *
co
 = 
	`lua_tŸhªad
(
L
, 
	`lua_upvÆueödex
(1));

76 
r
 = 
	`auxªsume
(
L
, 
co
, 
	`lua_gët›
(L));

77 i‡(
r
 < 0) {

78 i‡(
	`lua_is°rög
(
L
, -1)) {

79 
	`luaL_whîe
(
L
, 1);

80 
	`lua_ö£π
(
L
, -2);

81 
	`lua_c⁄ˇt
(
L
, 2);

83  
	`lua_îr‹
(
L
);

85  
r
;

86 
	}
}

89 
	$luaB_co¸óã
 (
lua_Sèã
 *
L
) {

90 
lua_Sèã
 *
NL
;

91 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

92 
NL
 = 
	`lua_√wthªad
(
L
);

93 
	`lua_pushvÆue
(
L
, 1);

94 
	`lua_xmove
(
L
, 
NL
, 1);

96 
	}
}

99 
	$luaB_cowøp
 (
lua_Sèã
 *
L
) {

100 
	`luaB_co¸óã
(
L
);

101 
	`lua_pushc˛osuª
(
L
, 
luaB_auxwøp
, 1);

103 
	}
}

106 
	$luaB_yõld
 (
lua_Sèã
 *
L
) {

107  
	`lua_yõld
(
L
, 
	`lua_gët›
(L));

108 
	}
}

111 
	$luaB_co°©us
 (
lua_Sèã
 *
L
) {

112 
lua_Sèã
 *
co
 = 
	`gëco
(
L
);

113 i‡(
L
 =
co
Ë
	`lua_pushlôîÆ
(L, "running");

115 
	`lua_°©us
(
co
)) {

116 
LUA_YIELD
:

117 
	`lua_pushlôîÆ
(
L
, "suspended");

119 
LUA_OK
: {

120 
lua_Debug
 
¨
;

121 i‡(
	`lua_gë°ack
(
co
, 0, &
¨
) > 0)

122 
	`lua_pushlôîÆ
(
L
, "normal");

123 i‡(
	`lua_gët›
(
co
) == 0)

124 
	`lua_pushlôîÆ
(
L
, "dead");

126 
	`lua_pushlôîÆ
(
L
, "suspended");

130 
	`lua_pushlôîÆ
(
L
, "dead");

135 
	}
}

138 
	$luaB_yõldabÀ
 (
lua_Sèã
 *
L
) {

139 
	`lua_pushboﬁón
(
L
, 
	`lua_isyõldabÀ
(L));

141 
	}
}

144 
	$luaB_c‹u¬ög
 (
lua_Sèã
 *
L
) {

145 
ismaö
 = 
	`lua_pushthªad
(
L
);

146 
	`lua_pushboﬁón
(
L
, 
ismaö
);

148 
	}
}

151 c⁄° 
luaL_Reg
 
	gco_funcs
[] = {

152 {"¸óã", 
luaB_co¸óã
},

153 {"ªsume", 
luaB_c‹esume
},

154 {"ru¬ög", 
luaB_c‹u¬ög
},

155 {"°©us", 
luaB_co°©us
},

156 {"wøp", 
luaB_cowøp
},

157 {"yõld", 
luaB_yõld
},

158 {"isyõldabÀ", 
luaB_yõldabÀ
},

159 {
NULL
, NULL}

164 
LUAMOD_API
 
	$lua›í_c‹outöe
 (
lua_Sèã
 *
L
) {

165 
	`luaL_√wlib
(
L
, 
co_funcs
);

167 
	}
}

	@lib/lua/src/lctype.c

7 
	#l˘y≥_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~"l˘y≥.h
"

15 #i‡!
LUA_USE_CTYPE


17 
	~<limôs.h
>

19 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2] = {

	@lib/lua/src/lctype.h

7 #i‚de‡
l˘y≥_h


8 
	#l˘y≥_h


	)

10 
	~"lua.h
"

19 #i‡!
deföed
(
LUA_USE_CTYPE
)

23 
	#LUA_USE_CTYPE
 0

	)

26 
	#LUA_USE_CTYPE
 1

	)

32 #i‡!
LUA_USE_CTYPE


34 
	~<limôs.h
>

36 
	~"Œimôs.h
"

39 
	#ALPHABIT
 0

	)

40 
	#DIGITBIT
 1

	)

41 
	#PRINTBIT
 2

	)

42 
	#SPACEBIT
 3

	)

43 
	#XDIGITBIT
 4

	)

46 
	#MASK
(
B
Ë(1 << (B))

	)

52 
	#ã°¥›
(
c
,
p
Ë(
luai_˘y≥_
[(c)+1] & (p))

	)

57 
	#li¶Æpha
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
ALPHABIT
))

	)

58 
	#li¶Ænum
(
c
Ë
	`ã°¥›
(c, (
	`MASK
(
ALPHABIT
Ë| MASK(
DIGITBIT
)))

	)

59 
	#lisdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
DIGITBIT
))

	)

60 
	#lis•a˚
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
SPACEBIT
))

	)

61 
	#li•röt
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
PRINTBIT
))

	)

62 
	#lisxdigô
(
c
Ë
	`ã°¥›
(c, 
	`MASK
(
XDIGITBIT
))

	)

67 
	#…ﬁowî
(
c
Ë((cË| ('A' ^ 'a'))

	)

71 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluai_˘y≥_
[
UCHAR_MAX
 + 2];

80 
	~<˘y≥.h
>

83 
	#li¶Æpha
(
c
Ë(
	`ißÕha
(cË|| (cË='_')

	)

84 
	#li¶Ænum
(
c
Ë(
	`iß um
(cË|| (cË='_')

	)

85 
	#lisdigô
(
c
Ë(
	`isdigô
(c))

	)

86 
	#lis•a˚
(
c
Ë(
	`is•a˚
(c))

	)

87 
	#li•röt
(
c
Ë(
	`i•röt
(c))

	)

88 
	#lisxdigô
(
c
Ë(
	`isxdigô
(c))

	)

90 
	#…ﬁowî
(
c
Ë(
	`tﬁowî
(c))

	)

	@lib/lua/src/ldblib.c

7 
	#ldblib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 c⁄° 
	gHOOKKEY
 = 0;

35 
	$check°ack
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, 
n
) {

36 i‡(
L
 !
L1
 && !
	`lua_check°ack
(L1, 
n
))

37 
	`luaL_îr‹
(
L
, "stack overflow");

38 
	}
}

41 
	$db_gëªgi°ry
 (
lua_Sèã
 *
L
) {

42 
	`lua_pushvÆue
(
L
, 
LUA_REGISTRYINDEX
);

44 
	}
}

47 
	$db_gëmë©abÀ
 (
lua_Sèã
 *
L
) {

48 
	`luaL_check™y
(
L
, 1);

49 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

50 
	`lua_pushnû
(
L
);

53 
	}
}

56 
	$db_£tmë©abÀ
 (
lua_Sèã
 *
L
) {

57 
t
 = 
	`lua_ty≥
(
L
, 2);

58 
	`luaL_¨gcheck
(
L
, 
t
 =
LUA_TNIL
 ||Å =
LUA_TTABLE
, 2,

60 
	`lua_£â›
(
L
, 2);

61 
	`lua_£tmë©abÀ
(
L
, 1);

63 
	}
}

66 
	$db_gëu£rvÆue
 (
lua_Sèã
 *
L
) {

67 i‡(
	`lua_ty≥
(
L
, 1Ë!
LUA_TUSERDATA
)

68 
	`lua_pushnû
(
L
);

70 
	`lua_gëu£rvÆue
(
L
, 1);

72 
	}
}

75 
	$db_£tu£rvÆue
 (
lua_Sèã
 *
L
) {

76 
	`luaL_checkty≥
(
L
, 1, 
LUA_TUSERDATA
);

77 
	`luaL_check™y
(
L
, 2);

78 
	`lua_£â›
(
L
, 2);

79 
	`lua_£tu£rvÆue
(
L
, 1);

81 
	}
}

90 
lua_Sèã
 *
	$gëthªad
 (
lua_Sèã
 *
L
, *
¨g
) {

91 i‡(
	`lua_i°hªad
(
L
, 1)) {

92 *
¨g
 = 1;

93  
	`lua_tŸhªad
(
L
, 1);

96 *
¨g
 = 0;

97  
L
;

99 
	}
}

107 
	$£âabss
 (
lua_Sèã
 *
L
, c⁄° *
k
, c⁄° *
v
) {

108 
	`lua_push°rög
(
L
, 
v
);

109 
	`lua_£tfõld
(
L
, -2, 
k
);

110 
	}
}

112 
	$£âabsi
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

113 
	`lua_pushöãgî
(
L
, 
v
);

114 
	`lua_£tfõld
(
L
, -2, 
k
);

115 
	}
}

117 
	$£âabsb
 (
lua_Sèã
 *
L
, c⁄° *
k
, 
v
) {

118 
	`lua_pushboﬁón
(
L
, 
v
);

119 
	`lua_£tfõld
(
L
, -2, 
k
);

120 
	}
}

130 
	$åót°ack›ti⁄
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
, c⁄° *
‚ame
) {

131 i‡(
L
 =
L1
)

132 
	`lua_rŸ©e
(
L
, -2, 1);

134 
	`lua_xmove
(
L1
, 
L
, 1);

135 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

136 
	}
}

145 
	$db_gëöfo
 (
lua_Sèã
 *
L
) {

146 
lua_Debug
 
¨
;

147 
¨g
;

148 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

149 c⁄° *
›ti⁄s
 = 
	`luaL_›t°rög
(
L
, 
¨g
+2, "flnStu");

150 
	`check°ack
(
L
, 
L1
, 3);

151 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

152 
›ti⁄s
 = 
	`lua_pushf°rög
(
L
, ">%s", options);

153 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

154 
	`lua_xmove
(
L
, 
L1
, 1);

157 i‡(!
	`lua_gë°ack
(
L1
, ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1), &
¨
)) {

158 
	`lua_pushnû
(
L
);

162 i‡(!
	`lua_gëöfo
(
L1
, 
›ti⁄s
, &
¨
))

163  
	`luaL_¨gîr‹
(
L
, 
¨g
+2, "invalid option");

164 
	`lua_√wèbÀ
(
L
);

165 i‡(
	`°rchr
(
›ti⁄s
, 'S')) {

166 
	`£âabss
(
L
, "sour˚", 
¨
.
sour˚
);

167 
	`£âabss
(
L
, "sh‹t_§c", 
¨
.
sh‹t_§c
);

168 
	`£âabsi
(
L
, "löedeföed", 
¨
.
löedeföed
);

169 
	`£âabsi
(
L
, "œ°löedeföed", 
¨
.
œ°löedeföed
);

170 
	`£âabss
(
L
, "wh©", 
¨
.
wh©
);

172 i‡(
	`°rchr
(
›ti⁄s
, 'l'))

173 
	`£âabsi
(
L
, "cuºíéöe", 
¨
.
cuºíéöe
);

174 i‡(
	`°rchr
(
›ti⁄s
, 'u')) {

175 
	`£âabsi
(
L
, "nups", 
¨
.
nups
);

176 
	`£âabsi
(
L
, "≈¨ams", 
¨
.
≈¨ams
);

177 
	`£âabsb
(
L
, "isv¨¨g", 
¨
.
isv¨¨g
);

179 i‡(
	`°rchr
(
›ti⁄s
, 'n')) {

180 
	`£âabss
(
L
, "«me", 
¨
.
«me
);

181 
	`£âabss
(
L
, "«mewh©", 
¨
.
«mewh©
);

183 i‡(
	`°rchr
(
›ti⁄s
, 't'))

184 
	`£âabsb
(
L
, "i°aûˇŒ", 
¨
.
i°aûˇŒ
);

185 i‡(
	`°rchr
(
›ti⁄s
, 'L'))

186 
	`åót°ack›ti⁄
(
L
, 
L1
, "activelines");

187 i‡(
	`°rchr
(
›ti⁄s
, 'f'))

188 
	`åót°ack›ti⁄
(
L
, 
L1
, "func");

190 
	}
}

193 
	$db_gëloˇl
 (
lua_Sèã
 *
L
) {

194 
¨g
;

195 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

196 
lua_Debug
 
¨
;

197 c⁄° *
«me
;

198 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

199 i‡(
	`lua_isfun˘i⁄
(
L
, 
¨g
 + 1)) {

200 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

201 
	`lua_push°rög
(
L
, 
	`lua_gëloˇl
(L, 
NULL
, 
nv¨
));

205 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

206 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

207  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

208 
	`check°ack
(
L
, 
L1
, 1);

209 
«me
 = 
	`lua_gëloˇl
(
L1
, &
¨
, 
nv¨
);

210 i‡(
«me
) {

211 
	`lua_xmove
(
L1
, 
L
, 1);

212 
	`lua_push°rög
(
L
, 
«me
);

213 
	`lua_rŸ©e
(
L
, -2, 1);

217 
	`lua_pushnû
(
L
);

221 
	}
}

224 
	$db_£éoˇl
 (
lua_Sèã
 *
L
) {

225 
¨g
;

226 c⁄° *
«me
;

227 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

228 
lua_Debug
 
¨
;

229 
Àvñ
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 1);

230 
nv¨
 = ()
	`luaL_checköãgî
(
L
, 
¨g
 + 2);

231 i‡(!
	`lua_gë°ack
(
L1
, 
Àvñ
, &
¨
))

232  
	`luaL_¨gîr‹
(
L
, 
¨g
+1, "level out ofÑange");

233 
	`luaL_check™y
(
L
, 
¨g
+3);

234 
	`lua_£â›
(
L
, 
¨g
+3);

235 
	`check°ack
(
L
, 
L1
, 1);

236 
	`lua_xmove
(
L
, 
L1
, 1);

237 
«me
 = 
	`lua_£éoˇl
(
L1
, &
¨
, 
nv¨
);

238 i‡(
«me
 =
NULL
)

239 
	`lua_p›
(
L1
, 1);

240 
	`lua_push°rög
(
L
, 
«me
);

242 
	}
}

248 
	$auxupvÆue
 (
lua_Sèã
 *
L
, 
gë
) {

249 c⁄° *
«me
;

250 
n
 = ()
	`luaL_checköãgî
(
L
, 2);

251 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

252 
«me
 = 
gë
 ? 
	`lua_gëupvÆue
(
L
, 1, 
n
Ë: 
	`lua_£tupvÆue
(L, 1,Ç);

253 i‡(
«me
 =
NULL
)  0;

254 
	`lua_push°rög
(
L
, 
«me
);

255 
	`lua_ö£π
(
L
, -(
gë
+1));

256  
gë
 + 1;

257 
	}
}

260 
	$db_gëupvÆue
 (
lua_Sèã
 *
L
) {

261  
	`auxupvÆue
(
L
, 1);

262 
	}
}

265 
	$db_£tupvÆue
 (
lua_Sèã
 *
L
) {

266 
	`luaL_check™y
(
L
, 3);

267  
	`auxupvÆue
(
L
, 0);

268 
	}
}

275 
	$checkupvÆ
 (
lua_Sèã
 *
L
, 
¨gf
, 
¨gnup
) {

276 
nup
 = ()
	`luaL_checköãgî
(
L
, 
¨gnup
);

277 
	`luaL_checkty≥
(
L
, 
¨gf
, 
LUA_TFUNCTION
);

278 
	`luaL_¨gcheck
(
L
, (
	`lua_gëupvÆue
(L, 
¨gf
, 
nup
Ë!
NULL
), 
¨gnup
,

280  
nup
;

281 
	}
}

284 
	$db_upvÆueid
 (
lua_Sèã
 *
L
) {

285 
n
 = 
	`checkupvÆ
(
L
, 1, 2);

286 
	`lua_pushlightu£rd©a
(
L
, 
	`lua_upvÆueid
(L, 1, 
n
));

288 
	}
}

291 
	$db_upvÆuejoö
 (
lua_Sèã
 *
L
) {

292 
n1
 = 
	`checkupvÆ
(
L
, 1, 2);

293 
n2
 = 
	`checkupvÆ
(
L
, 3, 4);

294 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 1), 1, "Lua functionÉxpected");

295 
	`luaL_¨gcheck
(
L
, !
	`lua_iscfun˘i⁄
(L, 3), 3, "Lua functionÉxpected");

296 
	`lua_upvÆuejoö
(
L
, 1, 
n1
, 3, 
n2
);

298 
	}
}

305 
	$hookf
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

306 c⁄° *c⁄° 
hook«mes
[] =

308 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

309 
	`lua_pushthªad
(
L
);

310 i‡(
	`lua_øwgë
(
L
, -2Ë=
LUA_TFUNCTION
) {

311 
	`lua_push°rög
(
L
, 
hook«mes
[()
¨
->
evít
]);

312 i‡(
¨
->
cuºíéöe
 >= 0)

313 
	`lua_pushöãgî
(
L
, 
¨
->
cuºíéöe
);

314 
	`lua_pushnû
(
L
);

315 
	`lua_as£π
(
	`lua_gëöfo
(
L
, "lS", 
¨
));

316 
	`lua_ˇŒ
(
L
, 2, 0);

318 
	}
}

324 
	$makemask
 (c⁄° *
smask
, 
cou¡
) {

325 
mask
 = 0;

326 i‡(
	`°rchr
(
smask
, 'c')Ë
mask
 |
LUA_MASKCALL
;

327 i‡(
	`°rchr
(
smask
, 'r')Ë
mask
 |
LUA_MASKRET
;

328 i‡(
	`°rchr
(
smask
, 'l')Ë
mask
 |
LUA_MASKLINE
;

329 i‡(
cou¡
 > 0Ë
mask
 |
LUA_MASKCOUNT
;

330  
mask
;

331 
	}
}

337 *
	$unmakemask
 (
mask
, *
smask
) {

338 
i
 = 0;

339 i‡(
mask
 & 
LUA_MASKCALL
Ë
smask
[
i
++] = 'c';

340 i‡(
mask
 & 
LUA_MASKRET
Ë
smask
[
i
++] = 'r';

341 i‡(
mask
 & 
LUA_MASKLINE
Ë
smask
[
i
++] = 'l';

342 
smask
[
i
] = '\0';

343  
smask
;

344 
	}
}

347 
	$db_£thook
 (
lua_Sèã
 *
L
) {

348 
¨g
, 
mask
, 
cou¡
;

349 
lua_Hook
 
func
;

350 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

351 i‡(
	`lua_i¢⁄e‹nû
(
L
, 
¨g
+1)) {

352 
	`lua_£â›
(
L
, 
¨g
+1);

353 
func
 = 
NULL
; 
mask
 = 0; 
cou¡
 = 0;

356 c⁄° *
smask
 = 
	`luaL_check°rög
(
L
, 
¨g
+2);

357 
	`luaL_checkty≥
(
L
, 
¨g
+1, 
LUA_TFUNCTION
);

358 
cou¡
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 3, 0);

359 
func
 = 
hookf
; 
mask
 = 
	`makemask
(
smask
, 
cou¡
);

361 i‡(
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
Ë=
LUA_TNIL
) {

362 
	`lua_¸óãèbÀ
(
L
, 0, 2);

363 
	`lua_pushvÆue
(
L
, -1);

364 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

365 
	`lua_push°rög
(
L
, "k");

366 
	`lua_£tfõld
(
L
, -2, "__mode");

367 
	`lua_pushvÆue
(
L
, -1);

368 
	`lua_£tmë©abÀ
(
L
, -2);

370 
	`check°ack
(
L
, 
L1
, 1);

371 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

372 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

373 
	`lua_øw£t
(
L
, -3);

374 
	`lua_£thook
(
L1
, 
func
, 
mask
, 
cou¡
);

376 
	}
}

379 
	$db_gëhook
 (
lua_Sèã
 *
L
) {

380 
¨g
;

381 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

382 
buff
[5];

383 
mask
 = 
	`lua_gëhookmask
(
L1
);

384 
lua_Hook
 
hook
 = 
	`lua_gëhook
(
L1
);

385 i‡(
hook
 =
NULL
)

386 
	`lua_pushnû
(
L
);

387 i‡(
hook
 !
hookf
)

388 
	`lua_pushlôîÆ
(
L
, "external hook");

390 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
HOOKKEY
);

391 
	`check°ack
(
L
, 
L1
, 1);

392 
	`lua_pushthªad
(
L1
); 
	`lua_xmove
(L1, 
L
, 1);

393 
	`lua_øwgë
(
L
, -2);

394 
	`lua_ªmove
(
L
, -2);

396 
	`lua_push°rög
(
L
, 
	`unmakemask
(
mask
, 
buff
));

397 
	`lua_pushöãgî
(
L
, 
	`lua_gëhookcou¡
(
L1
));

399 
	}
}

402 
	$db_debug
 (
lua_Sèã
 *
L
) {

404 
buf„r
[250];

405 
	`lua_wrôe°rögîr‹
("%s", "lua_debug> ");

406 i‡(
	`fgës
(
buf„r
, (buf„r), 
°dö
) == 0 ||

407 
	`°rcmp
(
buf„r
, "cont\n") == 0)

409 i‡(
	`luaL_lﬂdbuf„r
(
L
, 
buf„r
, 
	`°æí
(buffer), "=(debug command)") ||

410 
	`lua_pˇŒ
(
L
, 0, 0, 0))

411 
	`lua_wrôe°rögîr‹
("%s\n", 
	`lua_to°rög
(
L
, -1));

412 
	`lua_£â›
(
L
, 0);

414 
	}
}

417 
	$db_åa˚back
 (
lua_Sèã
 *
L
) {

418 
¨g
;

419 
lua_Sèã
 *
L1
 = 
	`gëthªad
(
L
, &
¨g
);

420 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 
¨g
 + 1);

421 i‡(
msg
 =
NULL
 && !
	`lua_i¢⁄e‹nû
(
L
, 
¨g
 + 1))

422 
	`lua_pushvÆue
(
L
, 
¨g
 + 1);

424 
Àvñ
 = ()
	`luaL_›töãgî
(
L
, 
¨g
 + 2, (L =
L1
) ? 1 : 0);

425 
	`luaL_åa˚back
(
L
, 
L1
, 
msg
, 
Àvñ
);

428 
	}
}

431 c⁄° 
luaL_Reg
 
	gdblib
[] = {

432 {"debug", 
db_debug
},

433 {"gëu£rvÆue", 
db_gëu£rvÆue
},

434 {"gëhook", 
db_gëhook
},

435 {"gëöfo", 
db_gëöfo
},

436 {"gëloˇl", 
db_gëloˇl
},

437 {"gëªgi°ry", 
db_gëªgi°ry
},

438 {"gëmë©abÀ", 
db_gëmë©abÀ
},

439 {"gëupvÆue", 
db_gëupvÆue
},

440 {"upvÆuejoö", 
db_upvÆuejoö
},

441 {"upvÆueid", 
db_upvÆueid
},

442 {"£tu£rvÆue", 
db_£tu£rvÆue
},

443 {"£thook", 
db_£thook
},

444 {"£éoˇl", 
db_£éoˇl
},

445 {"£tmë©abÀ", 
db_£tmë©abÀ
},

446 {"£tupvÆue", 
db_£tupvÆue
},

447 {"åa˚back", 
db_åa˚back
},

448 {
NULL
, NULL}

452 
LUAMOD_API
 
	$lua›í_debug
 (
lua_Sèã
 *
L
) {

453 
	`luaL_√wlib
(
L
, 
dblib
);

455 
	}
}

	@lib/lua/src/ldebug.c

7 
	#ldebug_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°d¨g.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"lcode.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lobje˘.h
"

25 
	~"l›codes.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

29 
	~"…m.h
"

30 
	~"lvm.h
"

34 
	#noLuaClosuª
(
f
Ë((fË=
NULL
 || (f)->
c
.
â
 =
LUA_TCCL
)

	)

38 
	#ci_func
(
ci
Ë(
	`˛LvÆue
((ci)->
func
))

	)

41 c⁄° *
gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
);

44 
	$cuºíçc
 (
CÆlInfo
 *
ci
) {

45 
	`lua_as£π
(
	`isLua
(
ci
));

46  
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
	`ci_func
(ci)->
p
);

47 
	}
}

50 
	$cuºíéöe
 (
CÆlInfo
 *
ci
) {

51  
	`gëfun˛öe
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci));

52 
	}
}

61 
	$sw≠exåa
 (
lua_Sèã
 *
L
) {

62 i‡(
L
->
°©us
 =
LUA_YIELD
) {

63 
CÆlInfo
 *
ci
 = 
L
->ci;

64 
StkId
 
ãmp
 = 
ci
->
func
;

65 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

66 
ci
->
exåa
 = 
	`ßve°ack
(
L
, 
ãmp
);

68 
	}
}

74 
LUA_API
 
	$lua_£thook
 (
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
) {

75 i‡(
func
 =
NULL
 || 
mask
 == 0) {

76 
mask
 = 0;

77 
func
 = 
NULL
;

79 i‡(
	`isLua
(
L
->
ci
))

80 
L
->
ﬁdpc
 = L->
ci
->
u
.
l
.
ßvedpc
;

81 
L
->
hook
 = 
func
;

82 
L
->
ba£hookcou¡
 = 
cou¡
;

83 
	`ª£thookcou¡
(
L
);

84 
L
->
hookmask
 = 
	`ˇ°_byã
(
mask
);

85 
	}
}

88 
LUA_API
 
lua_Hook
 
	$lua_gëhook
 (
lua_Sèã
 *
L
) {

89  
L
->
hook
;

90 
	}
}

93 
LUA_API
 
	$lua_gëhookmask
 (
lua_Sèã
 *
L
) {

94  
L
->
hookmask
;

95 
	}
}

98 
LUA_API
 
	$lua_gëhookcou¡
 (
lua_Sèã
 *
L
) {

99  
L
->
ba£hookcou¡
;

100 
	}
}

103 
LUA_API
 
	$lua_gë°ack
 (
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
) {

104 
°©us
;

105 
CÆlInfo
 *
ci
;

106 i‡(
Àvñ
 < 0)  0;

107 
	`lua_lock
(
L
);

108 
ci
 = 
L
->ci; 
Àvñ
 > 0 && cò!&L->
ba£_ci
; còci->
¥evious
)

109 
Àvñ
--;

110 i‡(
Àvñ
 =0 && 
ci
 !&
L
->
ba£_ci
) {

111 
°©us
 = 1;

112 
¨
->
i_ci
 = 
ci
;

114 
°©us
 = 0;

115 
	`lua_u∆ock
(
L
);

116  
°©us
;

117 
	}
}

120 c⁄° *
	$upvÆ«me
 (
PrŸo
 *
p
, 
uv
) {

121 
TSåög
 *
s
 = 
	`check_exp
(
uv
 < 
p
->
sizeupvÆues
,Ö->
upvÆues
[uv].
«me
);

122 i‡(
s
 =
NULL
)  "?";

123  
	`gë°r
(
s
);

124 
	}
}

127 c⁄° *
	$födv¨¨g
 (
CÆlInfo
 *
ci
, 
n
, 
StkId
 *
pos
) {

128 
≈¨ams
 = 
	`˛LvÆue
(
ci
->
func
)->
p
->
num∑øms
;

129 i‡(
n
 >
	`ˇ°_öt
(
ci
->
u
.
l
.
ba£
 - ci->
func
Ë- 
≈¨ams
)

130  
NULL
;

132 *
pos
 = 
ci
->
func
 + 
≈¨ams
 + 
n
;

135 
	}
}

138 c⁄° *
	$födloˇl
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
n
,

139 
StkId
 *
pos
) {

140 c⁄° *
«me
 = 
NULL
;

141 
StkId
 
ba£
;

142 i‡(
	`isLua
(
ci
)) {

143 i‡(
n
 < 0)

144  
	`födv¨¨g
(
ci
, -
n
, 
pos
);

146 
ba£
 = 
ci
->
u
.
l
.base;

147 
«me
 = 
	`luaF_gëloˇ ame
(
	`ci_func
(
ci
)->
p
, 
n
, 
	`cuºíçc
(ci));

151 
ba£
 = 
ci
->
func
 + 1;

152 i‡(
«me
 =
NULL
) {

153 
StkId
 
limô
 = (
ci
 =
L
->ciË? L->
t›
 : ci->
√xt
->
func
;

154 i‡(
limô
 - 
ba£
 >
n
 &&Ç > 0)

155 
«me
 = "(*temporary)";

157  
NULL
;

159 *
pos
 = 
ba£
 + (
n
 - 1);

160  
«me
;

161 
	}
}

164 
LUA_API
 c⁄° *
	$lua_gëloˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

165 c⁄° *
«me
;

166 
	`lua_lock
(
L
);

167 
	`sw≠exåa
(
L
);

168 i‡(
¨
 =
NULL
) {

169 i‡(!
	`isLfun˘i⁄
(
L
->
t›
 - 1))

170 
«me
 = 
NULL
;

172 
«me
 = 
	`luaF_gëloˇ ame
(
	`˛LvÆue
(
L
->
t›
 - 1)->
p
, 
n
, 0);

175 
StkId
 
pos
 = 
NULL
;

176 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

177 i‡(
«me
) {

178 
	`£tobj2s
(
L
, L->
t›
, 
pos
);

179 
	`≠i_ö¸_t›
(
L
);

182 
	`sw≠exåa
(
L
);

183 
	`lua_u∆ock
(
L
);

184  
«me
;

185 
	}
}

188 
LUA_API
 c⁄° *
	$lua_£éoˇl
 (
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
) {

189 
StkId
 
pos
 = 
NULL
;

190 c⁄° *
«me
;

191 
	`lua_lock
(
L
);

192 
	`sw≠exåa
(
L
);

193 
«me
 = 
	`födloˇl
(
L
, 
¨
->
i_ci
, 
n
, &
pos
);

194 i‡(
«me
) {

195 
	`£tobjs2s
(
L
, 
pos
, L->
t›
 - 1);

196 
L
->
t›
--;

198 
	`sw≠exåa
(
L
);

199 
	`lua_u∆ock
(
L
);

200  
«me
;

201 
	}
}

204 
	$funcöfo
 (
lua_Debug
 *
¨
, 
Closuª
 *
˛
) {

205 i‡(
	`noLuaClosuª
(
˛
)) {

206 
¨
->
sour˚
 = "=[C]";

207 
¨
->
löedeföed
 = -1;

208 
¨
->
œ°löedeföed
 = -1;

209 
¨
->
wh©
 = "C";

212 
PrŸo
 *
p
 = 
˛
->
l
.p;

213 
¨
->
sour˚
 = 
p
->sour˚ ? 
	`gë°r
(p->source) : "=?";

214 
¨
->
löedeföed
 = 
p
->linedefined;

215 
¨
->
œ°löedeföed
 = 
p
->lastlinedefined;

216 
¨
->
wh©
 = (¨->
löedeföed
 == 0) ? "main" : "Lua";

218 
	`luaO_chunkid
(
¨
->
sh‹t_§c
,ár->
sour˚
, 
LUA_IDSIZE
);

219 
	}
}

222 
	$cﬁÀ˘vÆidlöes
 (
lua_Sèã
 *
L
, 
Closuª
 *
f
) {

223 i‡(
	`noLuaClosuª
(
f
)) {

224 
	`£äûvÆue
(
L
->
t›
);

225 
	`≠i_ö¸_t›
(
L
);

228 
i
;

229 
TVÆue
 
v
;

230 *
löeöfo
 = 
f
->
l
.
p
->lineinfo;

231 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

232 
	`£thvÆue
(
L
, L->
t›
, 
t
);

233 
	`≠i_ö¸_t›
(
L
);

234 
	`£tbvÆue
(&
v
, 1);

235 
i
 = 0; i < 
f
->
l
.
p
->
sizñöeöfo
; i++)

236 
	`luaH_£töt
(
L
, 
t
, 
löeöfo
[
i
], &
v
);

238 
	}
}

241 
	$auxgëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
,

242 
Closuª
 *
f
, 
CÆlInfo
 *
ci
) {

243 
°©us
 = 1;

244 ; *
wh©
; what++) {

245 *
wh©
) {

247 
	`funcöfo
(
¨
, 
f
);

251 
¨
->
cuºíéöe
 = (
ci
 && 
	`isLua
(ci)Ë? 
	`cuºíéöe
(ci) : -1;

255 
¨
->
nups
 = (
f
 =
NULL
Ë? 0 : f->
c
.
nupvÆues
;

256 i‡(
	`noLuaClosuª
(
f
)) {

257 
¨
->
isv¨¨g
 = 1;

258 
¨
->
≈¨ams
 = 0;

261 
¨
->
isv¨¨g
 = 
f
->
l
.
p
->
is_v¨¨g
;

262 
¨
->
≈¨ams
 = 
f
->
l
.
p
->
num∑øms
;

267 
¨
->
i°aûˇŒ
 = (
ci
Ë? ci->
ˇŒ°©us
 & 
CIST_TAIL
 : 0;

272 i‡(
ci
 && !(ci->
ˇŒ°©us
 & 
CIST_TAIL
Ë&& 
	`isLua
(ci->
¥evious
))

273 
¨
->
«mewh©
 = 
	`gëfun˙ame
(
L
, 
ci
->
¥evious
, &¨->
«me
);

275 
¨
->
«mewh©
 = 
NULL
;

276 i‡(
¨
->
«mewh©
 =
NULL
) {

277 
¨
->
«mewh©
 = "";

278 
¨
->
«me
 = 
NULL
;

285 : 
°©us
 = 0;

288  
°©us
;

289 
	}
}

292 
LUA_API
 
	$lua_gëöfo
 (
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
) {

293 
°©us
;

294 
Closuª
 *
˛
;

295 
CÆlInfo
 *
ci
;

296 
StkId
 
func
;

297 
	`lua_lock
(
L
);

298 
	`sw≠exåa
(
L
);

299 i‡(*
wh©
 == '>') {

300 
ci
 = 
NULL
;

301 
func
 = 
L
->
t›
 - 1;

302 
	`≠i_check
(
L
, 
	`âisfun˘i⁄
(
func
), "functionÉxpected");

303 
wh©
++;

304 
L
->
t›
--;

307 
ci
 = 
¨
->
i_ci
;

308 
func
 = 
ci
->func;

309 
	`lua_as£π
(
	`âisfun˘i⁄
(
ci
->
func
));

311 
˛
 = 
	`âis˛osuª
(
func
Ë? 
	`˛vÆue
(funcË: 
NULL
;

312 
°©us
 = 
	`auxgëöfo
(
L
, 
wh©
, 
¨
, 
˛
, 
ci
);

313 i‡(
	`°rchr
(
wh©
, 'f')) {

314 
	`£tobjs2s
(
L
, L->
t›
, 
func
);

315 
	`≠i_ö¸_t›
(
L
);

317 
	`sw≠exåa
(
L
);

318 i‡(
	`°rchr
(
wh©
, 'L'))

319 
	`cﬁÀ˘vÆidlöes
(
L
, 
˛
);

320 
	`lua_u∆ock
(
L
);

321  
°©us
;

322 
	}
}

331 c⁄° *
gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

332 c⁄° **
«me
);

338 
	$k«me
 (
PrŸo
 *
p
, 
pc
, 
c
, c⁄° **
«me
) {

339 i‡(
	`ISK
(
c
)) {

340 
TVÆue
 *
kvÆue
 = &
p
->
k
[
	`INDEXK
(
c
)];

341 i‡(
	`âis°rög
(
kvÆue
)) {

342 *
«me
 = 
	`svÆue
(
kvÆue
);

348 c⁄° *
wh©
 = 
	`gëobj«me
(
p
, 
pc
, 
c
, 
«me
);

349 i‡(
wh©
 && *what == 'c') {

354 *
«me
 = "?";

355 
	}
}

358 
	$fûãΩc
 (
pc
, 
jm±¨gë
) {

359 i‡(
pc
 < 
jm±¨gë
)

361  
pc
;

362 
	}
}

368 
	$föd£åeg
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
) {

369 
pc
;

370 
£åeg
 = -1;

371 
jm±¨gë
 = 0;

372 
pc
 = 0;Ö¯< 
œ°pc
;Öc++) {

373 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

374 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

375 
a
 = 
	`GETARG_A
(
i
);

376 
›
) {

377 
OP_LOADNIL
: {

378 
b
 = 
	`GETARG_B
(
i
);

379 i‡(
a
 <
ªg
 &&Ñeg <®+ 
b
)

380 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

383 
OP_TFORCALL
: {

384 i‡(
ªg
 >
a
 + 2)

385 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

388 
OP_CALL
:

389 
OP_TAILCALL
: {

390 i‡(
ªg
 >
a
)

391 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

394 
OP_JMP
: {

395 
b
 = 
	`GETARG_sBx
(
i
);

396 
de°
 = 
pc
 + 1 + 
b
;

398 i‡(
pc
 < 
de°
 && de° <
œ°pc
) {

399 i‡(
de°
 > 
jm±¨gë
)

400 
jm±¨gë
 = 
de°
;

405 i‡(
	`ã°AMode
(
›
Ë&& 
ªg
 =
a
)

406 
£åeg
 = 
	`fûãΩc
(
pc
, 
jm±¨gë
);

410  
£åeg
;

411 
	}
}

414 c⁄° *
	$gëobj«me
 (
PrŸo
 *
p
, 
œ°pc
, 
ªg
,

415 c⁄° **
«me
) {

416 
pc
;

417 *
«me
 = 
	`luaF_gëloˇ ame
(
p
, 
ªg
 + 1, 
œ°pc
);

418 i‡(*
«me
)

421 
pc
 = 
	`föd£åeg
(
p
, 
œ°pc
, 
ªg
);

422 i‡(
pc
 != -1) {

423 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

424 
OpCode
 
›
 = 
	`GET_OPCODE
(
i
);

425 
›
) {

426 
OP_MOVE
: {

427 
b
 = 
	`GETARG_B
(
i
);

428 i‡(
b
 < 
	`GETARG_A
(
i
))

429  
	`gëobj«me
(
p
, 
pc
, 
b
, 
«me
);

432 
OP_GETTABUP
:

433 
OP_GETTABLE
: {

434 
k
 = 
	`GETARG_C
(
i
);

435 
t
 = 
	`GETARG_B
(
i
);

436 c⁄° *
vn
 = (
›
 =
OP_GETTABLE
)

437 ? 
	`luaF_gëloˇ ame
(
p
, 
t
 + 1, 
pc
)

438 : 
	`upvÆ«me
(
p
, 
t
);

439 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

440  (
vn
 && 
	`°rcmp
(vn, 
LUA_ENV
) == 0) ? "global" : "field";

442 
OP_GETUPVAL
: {

443 *
«me
 = 
	`upvÆ«me
(
p
, 
	`GETARG_B
(
i
));

446 
OP_LOADK
:

447 
OP_LOADKX
: {

448 
b
 = (
›
 =
OP_LOADK
Ë? 
	`GETARG_Bx
(
i
)

449 : 
	`GETARG_Ax
(
p
->
code
[
pc
 + 1]);

450 i‡(
	`âis°rög
(&
p
->
k
[
b
])) {

451 *
«me
 = 
	`svÆue
(&
p
->
k
[
b
]);

456 
OP_SELF
: {

457 
k
 = 
	`GETARG_C
(
i
);

458 
	`k«me
(
p
, 
pc
, 
k
, 
«me
);

464  
NULL
;

465 
	}
}

468 c⁄° *
	$gëfun˙ame
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, c⁄° **
«me
) {

469 
TMS
 
tm
 = (TMS)0;

470 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

471 
pc
 = 
	`cuºíçc
(
ci
);

472 
In°ru˘i⁄
 
i
 = 
p
->
code
[
pc
];

473 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
) {

474 *
«me
 = "?";

477 
	`GET_OPCODE
(
i
)) {

478 
OP_CALL
:

479 
OP_TAILCALL
:

480  
	`gëobj«me
(
p
, 
pc
, 
	`GETARG_A
(
i
), 
«me
);

481 
OP_TFORCALL
: {

482 *
«me
 = "for iterator";

486 
OP_SELF
: 
OP_GETTABUP
: 
OP_GETTABLE
:

487 
tm
 = 
TM_INDEX
;

489 
OP_SETTABUP
: 
OP_SETTABLE
:

490 
tm
 = 
TM_NEWINDEX
;

492 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_MOD
:

493 
OP_POW
: 
OP_DIV
: 
OP_IDIV
: 
OP_BAND
:

494 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
: {

495 
off£t
 = 
	`ˇ°_öt
(
	`GET_OPCODE
(
i
)Ë- ca°_öt(
OP_ADD
);

496 
tm
 = 
	`ˇ°
(
TMS
, 
off£t
 + 
	`ˇ°_öt
(
TM_ADD
));

499 
OP_UNM
: 
tm
 = 
TM_UNM
; ;

500 
OP_BNOT
: 
tm
 = 
TM_BNOT
; ;

501 
OP_LEN
: 
tm
 = 
TM_LEN
; ;

502 
OP_CONCAT
: 
tm
 = 
TM_CONCAT
; ;

503 
OP_EQ
: 
tm
 = 
TM_EQ
; ;

504 
OP_LT
: 
tm
 = 
TM_LT
; ;

505 
OP_LE
: 
tm
 = 
TM_LE
; ;

506 : 
	`lua_as£π
(0);

508 *
«me
 = 
	`gë°r
(
	`G
(
L
)->
tm«me
[
tm
]);

510 
	}
}

521 
	$isö°ack
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
) {

522 
±rdiff_t
 
i
 = 
o
 - 
ci
->
u
.
l
.
ba£
;

523  (0 <
i
 && i < (
ci
->
t›
 - ci->
u
.
l
.
ba£
Ë&& ci->u.l.ba£ + i =
o
);

524 
	}
}

532 c⁄° *
	$gëupvÆ«me
 (
CÆlInfo
 *
ci
, c⁄° 
TVÆue
 *
o
,

533 c⁄° **
«me
) {

534 
LClosuª
 *
c
 = 
	`ci_func
(
ci
);

535 
i
;

536 
i
 = 0; i < 
c
->
nupvÆues
; i++) {

537 i‡(
c
->
upvÆs
[
i
]->
v
 =
o
) {

538 *
«me
 = 
	`upvÆ«me
(
c
->
p
, 
i
);

542  
NULL
;

543 
	}
}

546 c⁄° *
	$v¨öfo
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
) {

547 c⁄° *
«me
 = 
NULL
;

548 
CÆlInfo
 *
ci
 = 
L
->ci;

549 c⁄° *
köd
 = 
NULL
;

550 i‡(
	`isLua
(
ci
)) {

551 
köd
 = 
	`gëupvÆ«me
(
ci
, 
o
, &
«me
);

552 i‡(!
köd
 && 
	`isö°ack
(
ci
, 
o
))

553 
köd
 = 
	`gëobj«me
(
	`ci_func
(
ci
)->
p
, 
	`cuºíçc
(ci),

554 
	`ˇ°_öt
(
o
 - 
ci
->
u
.
l
.
ba£
), &
«me
);

556  (
köd
Ë? 
	`luaO_pushf°rög
(
L
, " (%†'%s')", köd, 
«me
) : "";

557 
	}
}

560 
l_n‹ë
 
	$luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, c⁄° *
›
) {

561 c⁄° *
t
 = 
	`objty≥«me
(
o
);

562 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿ%†®%†vÆue%s", 
›
, 
t
, 
	`v¨öfo
(L, 
o
));

563 
	}
}

566 
l_n‹ë
 
	$luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

567 i‡(
	`âis°rög
(
p1
Ë|| 
	`cvt2°r
’1)Ëp1 = 
p2
;

568 
	`luaG_ty≥îr‹
(
L
, 
p1
, "concatenate");

569 
	}
}

572 
l_n‹ë
 
	$luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

573 c⁄° 
TVÆue
 *
p2
, c⁄° *
msg
) {

574 
lua_Numbî
 
ãmp
;

575 i‡(!
	`t⁄umbî
(
p1
, &
ãmp
))

576 
p2
 = 
p1
;

577 
	`luaG_ty≥îr‹
(
L
, 
p2
, 
msg
);

578 
	}
}

584 
l_n‹ë
 
	$luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

585 
lua_I¡egî
 
ãmp
;

586 i‡(!
	`toöãgî
(
p1
, &
ãmp
))

587 
p2
 = 
p1
;

588 
	`luaG_ru√º‹
(
L
, "numbî%†ha†nÿöãgîÑïª£¡©i⁄", 
	`v¨öfo
(L, 
p2
));

589 
	}
}

592 
l_n‹ë
 
	$luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
) {

593 c⁄° *
t1
 = 
	`objty≥«me
(
p1
);

594 c⁄° *
t2
 = 
	`objty≥«me
(
p2
);

595 i‡(
t1
 =
t2
)

596 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ªÅwÿ%†vÆues", 
t1
);

598 
	`luaG_ru√º‹
(
L
, "©ãm±Åÿcom∑ª %†wôh %s", 
t1
, 
t2
);

599 
	}
}

603 c⁄° *
	$luaG_addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
TSåög
 *
§c
,

604 
löe
) {

605 
buff
[
LUA_IDSIZE
];

606 i‡(
§c
)

607 
	`luaO_chunkid
(
buff
, 
	`gë°r
(
§c
), 
LUA_IDSIZE
);

609 
buff
[0] = '?'; buff[1] = '\0';

611  
	`luaO_pushf°rög
(
L
, "%s:%d: %s", 
buff
, 
löe
, 
msg
);

612 
	}
}

615 
l_n‹ë
 
	$luaG_îr‹msg
 (
lua_Sèã
 *
L
) {

616 i‡(
L
->
îrfunc
 != 0) {

617 
StkId
 
îrfunc
 = 
	`ª°‹e°ack
(
L
, L->errfunc);

618 
	`£tobjs2s
(
L
, L->
t›
, L->top - 1);

619 
	`£tobjs2s
(
L
, L->
t›
 - 1, 
îrfunc
);

620 
L
->
t›
++;

621 
	`luaD_ˇŒnoyõld
(
L
, L->
t›
 - 2, 1);

623 
	`luaD_throw
(
L
, 
LUA_ERRRUN
);

624 
	}
}

627 
l_n‹ë
 
	$luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

628 
CÆlInfo
 *
ci
 = 
L
->ci;

629 c⁄° *
msg
;

630 
va_li°
 
¨gp
;

631 
	`va_°¨t
(
¨gp
, 
fmt
);

632 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

633 
	`va_íd
(
¨gp
);

634 i‡(
	`isLua
(
ci
))

635 
	`luaG_addöfo
(
L
, 
msg
, 
	`ci_func
(
ci
)->
p
->
sour˚
, 
	`cuºíéöe
(ci));

636 
	`luaG_îr‹msg
(
L
);

637 
	}
}

640 
	$luaG_åa˚exec
 (
lua_Sèã
 *
L
) {

641 
CÆlInfo
 *
ci
 = 
L
->ci;

642 
lu_byã
 
mask
 = 
L
->
hookmask
;

643 
cou¡hook
 = (--
L
->
hookcou¡
 =0 && (
mask
 & 
LUA_MASKCOUNT
));

644 i‡(
cou¡hook
)

645 
	`ª£thookcou¡
(
L
);

646 i‡(!(
mask
 & 
LUA_MASKLINE
))

648 i‡(
ci
->
ˇŒ°©us
 & 
CIST_HOOKYIELD
) {

649 
ci
->
ˇŒ°©us
 &~
CIST_HOOKYIELD
;

652 i‡(
cou¡hook
)

653 
	`luaD_hook
(
L
, 
LUA_HOOKCOUNT
, -1);

654 i‡(
mask
 & 
LUA_MASKLINE
) {

655 
PrŸo
 *
p
 = 
	`ci_func
(
ci
)->p;

656 
≈c
 = 
	`pcRñ
(
ci
->
u
.
l
.
ßvedpc
, 
p
);

657 
√wlöe
 = 
	`gëfun˛öe
(
p
, 
≈c
);

658 i‡(
≈c
 == 0 ||

659 
ci
->
u
.
l
.
ßvedpc
 <
L
->
ﬁdpc
 ||

660 
√wlöe
 !
	`gëfun˛öe
(
p
, 
	`pcRñ
(
L
->
ﬁdpc
,Ö)))

661 
	`luaD_hook
(
L
, 
LUA_HOOKLINE
, 
√wlöe
);

663 
L
->
ﬁdpc
 = 
ci
->
u
.
l
.
ßvedpc
;

664 i‡(
L
->
°©us
 =
LUA_YIELD
) {

665 i‡(
cou¡hook
)

666 
L
->
hookcou¡
 = 1;

667 
ci
->
u
.
l
.
ßvedpc
--;

668 
ci
->
ˇŒ°©us
 |
CIST_HOOKYIELD
;

669 
ci
->
func
 = 
L
->
t›
 - 1;

670 
	`luaD_throw
(
L
, 
LUA_YIELD
);

672 
	}
}

	@lib/lua/src/ldebug.h

7 #i‚de‡
ldebug_h


8 
	#ldebug_h


	)

11 
	~"l°©e.h
"

14 
	#pcRñ
(
pc
, 
p
Ë(
	`ˇ°
(, (pcË- (p)->
code
Ë- 1)

	)

16 
	#gëfun˛öe
(
f
,
pc
Ë(((f)->
löeöfo
Ë? (f)->löeöfo[pc] : -1)

	)

18 
	#ª£thookcou¡
(
L
Ë(L->
hookcou¡
 = L->
ba£hookcou¡
)

	)

21 
LUAI_FUNC
 
l_n‹ë
 
luaG_ty≥îr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
,

22 c⁄° *
›«me
);

23 
LUAI_FUNC
 
l_n‹ë
 
luaG_c⁄ˇãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

24 c⁄° 
TVÆue
 *
p2
);

25 
LUAI_FUNC
 
l_n‹ë
 
luaG_›öãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

26 c⁄° 
TVÆue
 *
p2
,

27 c⁄° *
msg
);

28 
LUAI_FUNC
 
l_n‹ë
 
luaG_toöãº‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

29 c⁄° 
TVÆue
 *
p2
);

30 
LUAI_FUNC
 
l_n‹ë
 
luaG_‹dîîr‹
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

31 c⁄° 
TVÆue
 *
p2
);

32 
LUAI_FUNC
 
l_n‹ë
 
luaG_ru√º‹
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

33 
LUAI_FUNC
 c⁄° *
luaG_addöfo
 (
lua_Sèã
 *
L
, c⁄° *
msg
,

34 
TSåög
 *
§c
, 
löe
);

35 
LUAI_FUNC
 
l_n‹ë
 
luaG_îr‹msg
 (
lua_Sèã
 *
L
);

36 
LUAI_FUNC
 
luaG_åa˚exec
 (
lua_Sèã
 *
L
);

	@lib/lua/src/ldo.c

7 
	#ldo_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<£tjmp.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œpi.h
"

20 
	~"ldebug.h
"

21 
	~"ldo.h
"

22 
	~"lfunc.h
"

23 
	~"lgc.h
"

24 
	~"lmem.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"Õ¨£r.h
"

28 
	~"l°©e.h
"

29 
	~"l°rög.h
"

30 
	~"…abÀ.h
"

31 
	~"…m.h
"

32 
	~"lundump.h
"

33 
	~"lvm.h
"

34 
	~"lzio.h
"

38 
	#îr‹°©us
(
s
Ë((sË> 
LUA_YIELD
)

	)

53 #i‡!
deföed
(
LUAI_THROW
)

55 #i‡
deföed
(
__˝lu•lus
Ë&& !deföed(
LUA_USE_LONGJMP
)

58 
	#LUAI_THROW
(
L
,
c
Ë
	`throw
(c)

	)

59 
	#LUAI_TRY
(
L
,
c
,
a
) \

60 
åy
 { 
a
 } 
	`ˇtch
(...Ë{ i‡((
c
)->
°©us
 =0Ë(c)->°©u†-1; }

	)

61 
	#luai_jmpbuf
 

	)

63 #ñi‡
deföed
(
LUA_USE_POSIX
)

66 
	#LUAI_THROW
(
L
,
c
Ë
	`_l⁄gjmp
((c)->
b
, 1)

	)

67 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`_£tjmp
((c)->
b
Ë=0Ë{á }

	)

68 
	#luai_jmpbuf
 
jmp_buf


	)

73 
	#LUAI_THROW
(
L
,
c
Ë
	`l⁄gjmp
((c)->
b
, 1)

	)

74 
	#LUAI_TRY
(
L
,
c
,
a
Ëi‡(
	`£tjmp
((c)->
b
Ë=0Ë{á }

	)

75 
	#luai_jmpbuf
 
jmp_buf


	)

84 
	slua_l⁄gjmp
 {

85 
lua_l⁄gjmp
 *
	m¥evious
;

86 
luai_jmpbuf
 
	mb
;

87 vﬁ©ûê
	m°©us
;

91 
	$£ãº‹obj
 (
lua_Sèã
 *
L
, 
îrcode
, 
StkId
 
ﬁdt›
) {

92 
îrcode
) {

93 
LUA_ERRMEM
: {

94 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`G
(L)->
memîrmsg
);

97 
LUA_ERRERR
: {

98 
	`£tsvÆue2s
(
L
, 
ﬁdt›
, 
	`luaS_√wlôîÆ
(L, "error inÉrror handling"));

102 
	`£tobjs2s
(
L
, 
ﬁdt›
, L->
t›
 - 1);

106 
L
->
t›
 = 
ﬁdt›
 + 1;

107 
	}
}

110 
l_n‹ë
 
	$luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
) {

111 i‡(
L
->
îr‹Jmp
) {

112 
L
->
îr‹Jmp
->
°©us
 = 
îrcode
;

113 
	`LUAI_THROW
(
L
, L->
îr‹Jmp
);

116 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

117 
L
->
°©us
 = 
	`ˇ°_byã
(
îrcode
);

118 i‡(
g
->
maöthªad
->
îr‹Jmp
) {

119 
	`£tobjs2s
(
L
, 
g
->
maöthªad
->
t›
++, L->top - 1);

120 
	`luaD_throw
(
g
->
maöthªad
, 
îrcode
);

123 i‡(
g
->
∑nic
) {

124 
	`£ãº‹obj
(
L
, 
îrcode
, L->
t›
);

125 i‡(
L
->
ci
->
t›
 < L->top)

126 
L
->
ci
->
t›
 = L->top;

127 
	`lua_u∆ock
(
L
);

128 
g
->
	`∑nic
(
L
);

130 
	`ab‹t
();

133 
	}
}

136 
	$luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
) {

137 
ﬁdnCˇŒs
 = 
L
->
nCˇŒs
;

138 
lua_l⁄gjmp
 
lj
;

139 
lj
.
°©us
 = 
LUA_OK
;

140 
lj
.
¥evious
 = 
L
->
îr‹Jmp
;

141 
L
->
îr‹Jmp
 = &
lj
;

142 
	`LUAI_TRY
(
L
, &
lj
,

143 (*
f
)(
L
, 
ud
);

145 
L
->
îr‹Jmp
 = 
lj
.
¥evious
;

146 
L
->
nCˇŒs
 = 
ﬁdnCˇŒs
;

147  
lj
.
°©us
;

148 
	}
}

158 
	$c‹ª˘°ack
 (
lua_Sèã
 *
L
, 
TVÆue
 *
ﬁd°ack
) {

159 
CÆlInfo
 *
ci
;

160 
UpVÆ
 *
up
;

161 
L
->
t›
 = (L->t› - 
ﬁd°ack
Ë+ L->
°ack
;

162 
up
 = 
L
->
›íupvÆ
; u∞!
NULL
; u∞up->
u
.
›í
.
√xt
)

163 
up
->
v
 = (up->v - 
ﬁd°ack
Ë+ 
L
->
°ack
;

164 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

165 
ci
->
t›
 = (ci->t› - 
ﬁd°ack
Ë+ 
L
->
°ack
;

166 
ci
->
func
 = (ci->fun¯- 
ﬁd°ack
Ë+ 
L
->
°ack
;

167 i‡(
	`isLua
(
ci
))

168 
ci
->
u
.
l
.
ba£
 = (ci->u.l.ba£ - 
ﬁd°ack
Ë+ 
L
->
°ack
;

170 
	}
}

174 
	#ERRORSTACKSIZE
 (
LUAI_MAXSTACK
 + 200)

	)

177 
	$luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
) {

178 
TVÆue
 *
ﬁd°ack
 = 
L
->
°ack
;

179 
lim
 = 
L
->
°acksize
;

180 
	`lua_as£π
(
√wsize
 <
LUAI_MAXSTACK
 ||Çewsizê=
ERRORSTACKSIZE
);

181 
	`lua_as£π
(
L
->
°ack_œ°
 - L->
°ack
 =L->
°acksize
 - 
EXTRA_STACK
);

182 
	`luaM_ªÆlocve˘‹
(
L
, L->
°ack
, L->
°acksize
, 
√wsize
, 
TVÆue
);

183 ; 
lim
 < 
√wsize
;Üim++)

184 
	`£äûvÆue
(
L
->
°ack
 + 
lim
);

185 
L
->
°acksize
 = 
√wsize
;

186 
L
->
°ack_œ°
 = L->
°ack
 + 
√wsize
 - 
EXTRA_STACK
;

187 
	`c‹ª˘°ack
(
L
, 
ﬁd°ack
);

188 
	}
}

191 
	$luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
) {

192 
size
 = 
L
->
°acksize
;

193 i‡(
size
 > 
LUAI_MAXSTACK
)

194 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

196 
√eded
 = 
	`ˇ°_öt
(
L
->
t›
 - L->
°ack
Ë+ 
n
 + 
EXTRA_STACK
;

197 
√wsize
 = 2 * 
size
;

198 i‡(
√wsize
 > 
LUAI_MAXSTACK
)Çewsize = LUAI_MAXSTACK;

199 i‡(
√wsize
 < 
√eded
)Çewsize =Çeeded;

200 i‡(
√wsize
 > 
LUAI_MAXSTACK
) {

201 
	`luaD_ªÆloc°ack
(
L
, 
ERRORSTACKSIZE
);

202 
	`luaG_ru√º‹
(
L
, "stack overflow");

205 
	`luaD_ªÆloc°ack
(
L
, 
√wsize
);

207 
	}
}

210 
	$°acköu£
 (
lua_Sèã
 *
L
) {

211 
CÆlInfo
 *
ci
;

212 
StkId
 
lim
 = 
L
->
t›
;

213 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

214 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

215 i‡(
lim
 < 
ci
->
t›
)Üim = ci->top;

217  
	`ˇ°_öt
(
lim
 - 
L
->
°ack
) + 1;

218 
	}
}

221 
	$luaD_shrök°ack
 (
lua_Sèã
 *
L
) {

222 
öu£
 = 
	`°acköu£
(
L
);

223 
goodsize
 = 
öu£
 + (öu£ / 8Ë+ 2*
EXTRA_STACK
;

224 i‡(
goodsize
 > 
LUAI_MAXSTACK
) goodsize = LUAI_MAXSTACK;

225 i‡(
L
->
°acksize
 > 
LUAI_MAXSTACK
)

226 
	`luaE_‰ìCI
(
L
);

228 
	`luaE_shrökCI
(
L
);

229 i‡(
öu£
 <
LUAI_MAXSTACK
 &&

230 
goodsize
 < 
L
->
°acksize
)

231 
	`luaD_ªÆloc°ack
(
L
, 
goodsize
);

233 
	`c⁄dmove°ack
(
L
,,);

234 
	}
}

237 
	$luaD_ö˘›
 (
lua_Sèã
 *
L
) {

238 
	`luaD_check°ack
(
L
, 1);

239 
L
->
t›
++;

240 
	}
}

245 
	$luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
) {

246 
lua_Hook
 
hook
 = 
L
->hook;

247 i‡(
hook
 && 
L
->
Ælowhook
) {

248 
CÆlInfo
 *
ci
 = 
L
->ci;

249 
±rdiff_t
 
t›
 = 
	`ßve°ack
(
L
, L->top);

250 
±rdiff_t
 
ci_t›
 = 
	`ßve°ack
(
L
, 
ci
->
t›
);

251 
lua_Debug
 
¨
;

252 
¨
.
evít
 =Évent;

253 
¨
.
cuºíéöe
 = 
löe
;

254 
¨
.
i_ci
 = 
ci
;

255 
	`luaD_check°ack
(
L
, 
LUA_MINSTACK
);

256 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

257 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

258 
L
->
Ælowhook
 = 0;

259 
ci
->
ˇŒ°©us
 |
CIST_HOOKED
;

260 
	`lua_u∆ock
(
L
);

261 (*
hook
)(
L
, &
¨
);

262 
	`lua_lock
(
L
);

263 
	`lua_as£π
(!
L
->
Ælowhook
);

264 
L
->
Ælowhook
 = 1;

265 
ci
->
t›
 = 
	`ª°‹e°ack
(
L
, 
ci_t›
);

266 
L
->
t›
 = 
	`ª°‹e°ack
(L,Åop);

267 
ci
->
ˇŒ°©us
 &~
CIST_HOOKED
;

269 
	}
}

272 
	$ˇŒhook
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
) {

273 
hook
 = 
LUA_HOOKCALL
;

274 
ci
->
u
.
l
.
ßvedpc
++;

275 i‡(
	`isLua
(
ci
->
¥evious
) &&

276 
	`GET_OPCODE
(*(
ci
->
¥evious
->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_TAILCALL
) {

277 
ci
->
ˇŒ°©us
 |
CIST_TAIL
;

278 
hook
 = 
LUA_HOOKTAILCALL
;

280 
	`luaD_hook
(
L
, 
hook
, -1);

281 
ci
->
u
.
l
.
ßvedpc
--;

282 
	}
}

285 
StkId
 
	$adju°_v¨¨gs
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
a˘uÆ
) {

286 
i
;

287 
nfix¨gs
 = 
p
->
num∑øms
;

288 
StkId
 
ba£
, 
fixed
;

290 
fixed
 = 
L
->
t›
 - 
a˘uÆ
;

291 
ba£
 = 
L
->
t›
;

292 
i
 = 0; i < 
nfix¨gs
 && i < 
a˘uÆ
; i++) {

293 
	`£tobjs2s
(
L
, L->
t›
++, 
fixed
 + 
i
);

294 
	`£äûvÆue
(
fixed
 + 
i
);

296 ; 
i
 < 
nfix¨gs
; i++)

297 
	`£äûvÆue
(
L
->
t›
++);

298  
ba£
;

299 
	}
}

307 
	$åyfuncTM
 (
lua_Sèã
 *
L
, 
StkId
 
func
) {

308 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
func
, 
TM_CALL
);

309 
StkId
 
p
;

310 i‡(!
	`âisfun˘i⁄
(
tm
))

311 
	`luaG_ty≥îr‹
(
L
, 
func
, "call");

313 
p
 = 
L
->
t›
;Ö > 
func
;Ö--)

314 
	`£tobjs2s
(
L
, 
p
,Ö-1);

315 
L
->
t›
++;

316 
	`£tobj2s
(
L
, 
func
, 
tm
);

317 
	}
}

321 
	#√xt_ci
(
L
Ë(L->
ci
 = (L->ci->
√xt
 ? L->ci->√xà: 
	`luaE_exãndCI
(L)))

	)

325 
	#check°ackp
(
L
,
n
,
p
) \

326 
	`luaD_check°ackaux
(
L
, 
n
, \

327 
±rdiff_t
 
t__
 = 
	`ßve°ack
(
L
, 
p
); \

328 
	`luaC_checkGC
(
L
), \

329 
p
 = 
	`ª°‹e°ack
(
L
, 
t__
)Ë

	)

339 
	$luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
) {

340 
lua_CFun˘i⁄
 
f
;

341 
CÆlInfo
 *
ci
;

342 
	`ây≥
(
func
)) {

343 
LUA_TCCL
:

344 
f
 = 
	`˛CvÆue
(
func
)->f;

345 
Cfunc
;

346 
LUA_TLCF
:

347 
f
 = 
	`fvÆue
(
func
);

348 
Cfunc
: {

349 
n
;

350 
	`check°ackp
(
L
, 
LUA_MINSTACK
, 
func
);

351 
ci
 = 
	`√xt_ci
(
L
);

352 
ci
->
ƒesu…s
 =Çresults;

353 
ci
->
func
 = func;

354 
ci
->
t›
 = 
L
->t› + 
LUA_MINSTACK
;

355 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

356 
ci
->
ˇŒ°©us
 = 0;

357 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

358 
	`luaD_hook
(
L
, 
LUA_HOOKCALL
, -1);

359 
	`lua_u∆ock
(
L
);

360 
n
 = (*
f
)(
L
);

361 
	`lua_lock
(
L
);

362 
	`≠i_check√Àms
(
L
, 
n
);

363 
	`luaD_posˇŒ
(
L
, 
ci
, L->
t›
 - 
n
,Ç);

366 
LUA_TLCL
: {

367 
StkId
 
ba£
;

368 
PrŸo
 *
p
 = 
	`˛LvÆue
(
func
)->p;

369 
n
 = 
	`ˇ°_öt
(
L
->
t›
 - 
func
) - 1;

370 
fsize
 = 
p
->
max°acksize
;

371 
	`check°ackp
(
L
, 
fsize
, 
func
);

372 i‡(
p
->
is_v¨¨g
 != 1) {

373 ; 
n
 < 
p
->
num∑øms
;Ç++)

374 
	`£äûvÆue
(
L
->
t›
++);

375 
ba£
 = 
func
 + 1;

378 
ba£
 = 
	`adju°_v¨¨gs
(
L
, 
p
, 
n
);

379 
ci
 = 
	`√xt_ci
(
L
);

380 
ci
->
ƒesu…s
 =Çresults;

381 
ci
->
func
 = func;

382 
ci
->
u
.
l
.
ba£
 = base;

383 
L
->
t›
 = 
ci
->t› = 
ba£
 + 
fsize
;

384 
	`lua_as£π
(
ci
->
t›
 <
L
->
°ack_œ°
);

385 
ci
->
u
.
l
.
ßvedpc
 = 
p
->
code
;

386 
ci
->
ˇŒ°©us
 = 
CIST_LUA
;

387 i‡(
L
->
hookmask
 & 
LUA_MASKCALL
)

388 
	`ˇŒhook
(
L
, 
ci
);

392 
	`check°ackp
(
L
, 1, 
func
);

393 
	`åyfuncTM
(
L
, 
func
);

394  
	`luaD_¥eˇŒ
(
L
, 
func
, 
ƒesu…s
);

397 
	}
}

406 
	$movîesu…s
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
fú°Resu…
, 
StkId
 
ªs
,

407 
ƒes
, 
w™ãd
) {

408 
w™ãd
) {

411 i‡(
ƒes
 == 0)

412 
fú°Resu…
 = 
luaO_nûobje˘
;

413 
	`£tobjs2s
(
L
, 
ªs
, 
fú°Resu…
);

416 
LUA_MULTRET
: {

417 
i
;

418 
i
 = 0; i < 
ƒes
; i++)

419 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

420 
L
->
t›
 = 
ªs
 + 
ƒes
;

424 
i
;

425 i‡(
w™ãd
 <
ƒes
) {

426 
i
 = 0; i < 
w™ãd
; i++)

427 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

430 
i
 = 0; i < 
ƒes
; i++)

431 
	`£tobjs2s
(
L
, 
ªs
 + 
i
, 
fú°Resu…
 + i);

432 ; 
i
 < 
w™ãd
; i++)

433 
	`£äûvÆue
(
ªs
 + 
i
);

438 
L
->
t›
 = 
ªs
 + 
w™ãd
;

440 
	}
}

448 
	$luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
StkId
 
fú°Resu…
, 
ƒes
) {

449 
StkId
 
ªs
;

450 
w™ãd
 = 
ci
->
ƒesu…s
;

451 i‡(
L
->
hookmask
 & (
LUA_MASKRET
 | 
LUA_MASKLINE
)) {

452 i‡(
L
->
hookmask
 & 
LUA_MASKRET
) {

453 
±rdiff_t
 
‰
 = 
	`ßve°ack
(
L
, 
fú°Resu…
);

454 
	`luaD_hook
(
L
, 
LUA_HOOKRET
, -1);

455 
fú°Resu…
 = 
	`ª°‹e°ack
(
L
, 
‰
);

457 
L
->
ﬁdpc
 = 
ci
->
¥evious
->
u
.
l
.
ßvedpc
;

459 
ªs
 = 
ci
->
func
;

460 
L
->
ci
 = ci->
¥evious
;

462  
	`movîesu…s
(
L
, 
fú°Resu…
, 
ªs
, 
ƒes
, 
w™ãd
);

463 
	}
}

473 
	$°ackîr‹
 (
lua_Sèã
 *
L
) {

474 i‡(
L
->
nCˇŒs
 =
LUAI_MAXCCALLS
)

475 
	`luaG_ru√º‹
(
L
, "C stack overflow");

476 i‡(
L
->
nCˇŒs
 >(
LUAI_MAXCCALLS
 + (LUAI_MAXCCALLS>>3)))

477 
	`luaD_throw
(
L
, 
LUA_ERRERR
);

478 
	}
}

487 
	$luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
) {

488 i‡(++
L
->
nCˇŒs
 >
LUAI_MAXCCALLS
)

489 
	`°ackîr‹
(
L
);

490 i‡(!
	`luaD_¥eˇŒ
(
L
, 
func
, 
nResu…s
))

491 
	`luaV_execuã
(
L
);

492 
L
->
nCˇŒs
--;

493 
	}
}

499 
	$luaD_ˇŒnoyõld
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
) {

500 
L
->
¬y
++;

501 
	`luaD_ˇŒ
(
L
, 
func
, 
nResu…s
);

502 
L
->
¬y
--;

503 
	}
}

510 
	$föishCˇŒ
 (
lua_Sèã
 *
L
, 
°©us
) {

511 
CÆlInfo
 *
ci
 = 
L
->ci;

512 
n
;

514 
	`lua_as£π
(
ci
->
u
.
c
.
k
 !
NULL
 && 
L
->
¬y
 == 0);

516 
	`lua_as£π
((
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
Ë|| 
°©us
 =
LUA_YIELD
);

517 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
) {

518 
ci
->
ˇŒ°©us
 &~
CIST_YPCALL
;

519 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

523 
	`adju°ªsu…s
(
L
, 
ci
->
ƒesu…s
);

525 
	`lua_u∆ock
(
L
);

526 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
°©us
, ci->u.c.
˘x
);

527 
	`lua_lock
(
L
);

528 
	`≠i_check√Àms
(
L
, 
n
);

530 
	`luaD_posˇŒ
(
L
, 
ci
, L->
t›
 - 
n
,Ç);

531 
	}
}

542 
	$uƒﬁl
 (
lua_Sèã
 *
L
, *
ud
) {

543 i‡(
ud
 !
NULL
)

544 
	`föishCˇŒ
(
L
, *(*)
ud
);

545 
L
->
ci
 !&L->
ba£_ci
) {

546 i‡(!
	`isLua
(
L
->
ci
))

547 
	`föishCˇŒ
(
L
, 
LUA_YIELD
);

549 
	`luaV_föishOp
(
L
);

550 
	`luaV_execuã
(
L
);

553 
	}
}

560 
CÆlInfo
 *
	$födpˇŒ
 (
lua_Sèã
 *
L
) {

561 
CÆlInfo
 *
ci
;

562 
ci
 = 
L
->ci; cò!
NULL
; còci->
¥evious
) {

563 i‡(
ci
->
ˇŒ°©us
 & 
CIST_YPCALL
)

564  
ci
;

566  
NULL
;

567 
	}
}

575 
	$ªcovî
 (
lua_Sèã
 *
L
, 
°©us
) {

576 
StkId
 
ﬁdt›
;

577 
CÆlInfo
 *
ci
 = 
	`födpˇŒ
(
L
);

578 i‡(
ci
 =
NULL
)  0;

580 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ci
->
exåa
);

581 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

582 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

583 
L
->
ci
 = ci;

584 
L
->
Ælowhook
 = 
	`gëﬂh
(
ci
->
ˇŒ°©us
);

585 
L
->
¬y
 = 0;

586 
	`luaD_shrök°ack
(
L
);

587 
L
->
îrfunc
 = 
ci
->
u
.
c
.
ﬁd_îrfunc
;

589 
	}
}

597 
l_n‹ë
 
	$ªsume_îr‹
 (
lua_Sèã
 *
L
, c⁄° *
msg
, 
StkId
 
fú°Arg
) {

598 
L
->
t›
 = 
fú°Arg
;

599 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√w
(L, 
msg
));

600 
	`≠i_ö¸_t›
(
L
);

601 
	`luaD_throw
(
L
, -1);

602 
	}
}

612 
	$ªsume
 (
lua_Sèã
 *
L
, *
ud
) {

613 
nCˇŒs
 = 
L
->nCcalls;

614 
n
 = *(
	`ˇ°
(*, 
ud
));

615 
StkId
 
fú°Arg
 = 
L
->
t›
 - 
n
;

616 
CÆlInfo
 *
ci
 = 
L
->ci;

617 i‡(
nCˇŒs
 >
LUAI_MAXCCALLS
)

618 
	`ªsume_îr‹
(
L
, "C sèck ovîÊow", 
fú°Arg
);

619 i‡(
L
->
°©us
 =
LUA_OK
) {

620 i‡(
ci
 !&
L
->
ba£_ci
)

621 
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumên⁄-su•íded c‹outöe", 
fú°Arg
);

623 i‡(!
	`luaD_¥eˇŒ
(
L
, 
fú°Arg
 - 1, 
LUA_MULTRET
))

624 
	`luaV_execuã
(
L
);

626 i‡(
L
->
°©us
 !
LUA_YIELD
)

627 
	`ªsume_îr‹
(
L
, "ˇ¬ŸÑesumêdód c‹outöe", 
fú°Arg
);

629 
L
->
°©us
 = 
LUA_OK
;

630 
ci
->
func
 = 
	`ª°‹e°ack
(
L
, ci->
exåa
);

631 i‡(
	`isLua
(
ci
))

632 
	`luaV_execuã
(
L
);

634 i‡(
ci
->
u
.
c
.
k
 !
NULL
) {

635 
	`lua_u∆ock
(
L
);

636 
n
 = (*
ci
->
u
.
c
.
k
)(
L
, 
LUA_YIELD
, ci->u.c.
˘x
);

637 
	`lua_lock
(
L
);

638 
	`≠i_check√Àms
(
L
, 
n
);

639 
fú°Arg
 = 
L
->
t›
 - 
n
;

641 
	`luaD_posˇŒ
(
L
, 
ci
, 
fú°Arg
, 
n
);

643 
	`uƒﬁl
(
L
, 
NULL
);

645 
	`lua_as£π
(
nCˇŒs
 =
L
->nCcalls);

646 
	}
}

649 
LUA_API
 
	$lua_ªsume
 (
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rgs
) {

650 
°©us
;

651 
ﬁd¬y
 = 
L
->
¬y
;

652 
	`lua_lock
(
L
);

653 
	`luai_u£r°©îesume
(
L
, 
«rgs
);

654 
L
->
nCˇŒs
 = (
‰om
) ? from->nCcalls + 1 : 1;

655 
L
->
¬y
 = 0;

656 
	`≠i_check√Àms
(
L
, (L->
°©us
 =
LUA_OK
Ë? 
«rgs
 + 1 :Çargs);

657 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
ªsume
, &
«rgs
);

658 i‡(
°©us
 == -1)

659 
°©us
 = 
LUA_ERRRUN
;

661 
	`îr‹°©us
(
°©us
Ë&& 
	`ªcovî
(
L
, status)) {

663 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
uƒﬁl
, &status);

665 i‡(
	`îr‹°©us
(
°©us
)) {

666 
L
->
°©us
 = 
	`ˇ°_byã
(status);

667 
	`£ãº‹obj
(
L
, 
°©us
, L->
t›
);

668 
L
->
ci
->
t›
 = L->top;

670 
	`lua_as£π
(
°©us
 =
L
->status);

672 
L
->
¬y
 = 
ﬁd¬y
;

673 
L
->
nCˇŒs
--;

674 
	`lua_as£π
(
L
->
nCˇŒs
 =((
‰om
) ? from->nCcalls : 0));

675 
	`lua_u∆ock
(
L
);

676  
°©us
;

677 
	}
}

680 
LUA_API
 
	$lua_isyõldabÀ
 (
lua_Sèã
 *
L
) {

681  (
L
->
¬y
 == 0);

682 
	}
}

685 
LUA_API
 
	$lua_yõldk
 (
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

686 
lua_KFun˘i⁄
 
k
) {

687 
CÆlInfo
 *
ci
 = 
L
->ci;

688 
	`luai_u£r°©eyõld
(
L
, 
ƒesu…s
);

689 
	`lua_lock
(
L
);

690 
	`≠i_check√Àms
(
L
, 
ƒesu…s
);

691 i‡(
L
->
¬y
 > 0) {

692 i‡(
L
 !
	`G
(L)->
maöthªad
)

693 
	`luaG_ru√º‹
(
L
, "attemptÅo yieldácrossá C-call boundary");

695 
	`luaG_ru√º‹
(
L
, "attemptÅo yield from outsideá coroutine");

697 
L
->
°©us
 = 
LUA_YIELD
;

698 
ci
->
exåa
 = 
	`ßve°ack
(
L
, ci->
func
);

699 i‡(
	`isLua
(
ci
)) {

700 
	`≠i_check
(
L
, 
k
 =
NULL
, "hooks cannot continueáfter yielding");

703 i‡((
ci
->
u
.
c
.
k
 = kË!
NULL
)

704 
ci
->
u
.
c
.
˘x
 = ctx;

705 
ci
->
func
 = 
L
->
t›
 - 
ƒesu…s
 - 1;

706 
	`luaD_throw
(
L
, 
LUA_YIELD
);

708 
	`lua_as£π
(
ci
->
ˇŒ°©us
 & 
CIST_HOOKED
);

709 
	`lua_u∆ock
(
L
);

711 
	}
}

714 
	$luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

715 
±rdiff_t
 
ﬁd_t›
,Öådiff_à
ef
) {

716 
°©us
;

717 
CÆlInfo
 *
ﬁd_ci
 = 
L
->
ci
;

718 
lu_byã
 
ﬁd_Ælowhooks
 = 
L
->
Ælowhook
;

719 
ﬁd_¬y
 = 
L
->
¬y
;

720 
±rdiff_t
 
ﬁd_îrfunc
 = 
L
->
îrfunc
;

721 
L
->
îrfunc
 = 
ef
;

722 
°©us
 = 
	`luaD_øwru≈rŸe˘ed
(
L
, 
func
, 
u
);

723 i‡(
°©us
 !
LUA_OK
) {

724 
StkId
 
ﬁdt›
 = 
	`ª°‹e°ack
(
L
, 
ﬁd_t›
);

725 
	`luaF_˛o£
(
L
, 
ﬁdt›
);

726 
	`£ãº‹obj
(
L
, 
°©us
, 
ﬁdt›
);

727 
L
->
ci
 = 
ﬁd_ci
;

728 
L
->
Ælowhook
 = 
ﬁd_Ælowhooks
;

729 
L
->
¬y
 = 
ﬁd_¬y
;

730 
	`luaD_shrök°ack
(
L
);

732 
L
->
îrfunc
 = 
ﬁd_îrfunc
;

733  
°©us
;

734 
	}
}

741 
	sSP¨£r
 {

742 
ZIO
 *
	mz
;

743 
Mbuf„r
 
	mbuff
;

744 
Dynd©a
 
	mdyd
;

745 c⁄° *
	mmode
;

746 c⁄° *
	m«me
;

750 
	$checkmode
 (
lua_Sèã
 *
L
, c⁄° *
mode
, c⁄° *
x
) {

751 i‡(
mode
 && 
	`°rchr
(mode, 
x
[0]Ë=
NULL
) {

752 
	`luaO_pushf°rög
(
L
,

753 "©ãm±Åÿlﬂdá %†chunk (modêi†'%s')", 
x
, 
mode
);

754 
	`luaD_throw
(
L
, 
LUA_ERRSYNTAX
);

756 
	}
}

759 
	$f_∑r£r
 (
lua_Sèã
 *
L
, *
ud
) {

760 
LClosuª
 *
˛
;

761 
SP¨£r
 *
p
 = 
	`ˇ°
(SP¨£∏*, 
ud
);

762 
c
 = 
	`zgëc
(
p
->
z
);

763 i‡(
c
 =
LUA_SIGNATURE
[0]) {

764 
	`checkmode
(
L
, 
p
->
mode
, "binary");

765 
˛
 = 
	`luaU_undump
(
L
, 
p
->
z
,Ö->
«me
);

768 
	`checkmode
(
L
, 
p
->
mode
, "text");

769 
˛
 = 
	`luaY_∑r£r
(
L
, 
p
->
z
, &p->
buff
, &p->
dyd
,Ö->
«me
, 
c
);

771 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

772 
	`luaF_öôupvÆs
(
L
, 
˛
);

773 
	}
}

776 
	$luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

777 c⁄° *
mode
) {

778 
SP¨£r
 
p
;

779 
°©us
;

780 
L
->
¬y
++;

781 
p
.
z
 = z;Ö.
«me
 =Çame;Ö.
mode
 = mode;

782 
p
.
dyd
.
a˘v¨
.
¨r
 = 
NULL
;Ö.dyd.a˘v¨.
size
 = 0;

783 
p
.
dyd
.
gt
.
¨r
 = 
NULL
;Ö.dyd.gt.
size
 = 0;

784 
p
.
dyd
.
œbñ
.
¨r
 = 
NULL
;Ö.dyd.œbñ.
size
 = 0;

785 
	`luaZ_öôbuf„r
(
L
, &
p
.
buff
);

786 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
f_∑r£r
, &
p
, 
	`ßve°ack
(L, L->
t›
), L->
îrfunc
);

787 
	`luaZ_‰ìbuf„r
(
L
, &
p
.
buff
);

788 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
a˘v¨
.
¨r
,Ö.dyd.a˘v¨.
size
);

789 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
gt
.
¨r
,Ö.dyd.gt.
size
);

790 
	`luaM_‰ì¨øy
(
L
, 
p
.
dyd
.
œbñ
.
¨r
,Ö.dyd.œbñ.
size
);

791 
L
->
¬y
--;

792  
°©us
;

793 
	}
}

	@lib/lua/src/ldo.h

7 #i‚de‡
ldo_h


8 
	#ldo_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

13 
	~"lzio.h
"

23 
	#luaD_check°ackaux
(
L
,
n
,
¥e
,
pos
) \

24 i‡(
L
->
°ack_œ°
 - L->
t›
 <(
n
)) \

25 { 
¥e
; 
	`luaD_grow°ack
(
L
, 
n
); 
pos
; } { 
	`c⁄dmove°ack
(L,¥e,pos); }

	)

28 
	#luaD_check°ack
(
L
,
n
Ë
	`luaD_check°ackaux
(L,n,,)

	)

32 
	#ßve°ack
(
L
,
p
Ë((*)’Ë- (*)L->
°ack
)

	)

33 
	#ª°‹e°ack
(
L
,
n
Ë((
TVÆue
 *)((*)L->
°ack
 + (n)))

	)

37 (*
	tPfunc
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
);

39 
LUAI_FUNC
 
	`luaD_¥Ÿe˘ed∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, c⁄° *
«me
,

40 c⁄° *
mode
);

41 
LUAI_FUNC
 
	`luaD_hook
 (
lua_Sèã
 *
L
, 
evít
, 
löe
);

42 
LUAI_FUNC
 
	`luaD_¥eˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
ƒesu…s
);

43 
LUAI_FUNC
 
	`luaD_ˇŒ
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
);

44 
LUAI_FUNC
 
	`luaD_ˇŒnoyõld
 (
lua_Sèã
 *
L
, 
StkId
 
func
, 
nResu…s
);

45 
LUAI_FUNC
 
	`luaD_pˇŒ
 (
lua_Sèã
 *
L
, 
Pfunc
 
func
, *
u
,

46 
±rdiff_t
 
ﬁdt›
,Öådiff_à
ef
);

47 
LUAI_FUNC
 
	`luaD_posˇŒ
 (
lua_Sèã
 *
L
, 
CÆlInfo
 *
ci
, 
StkId
 
fú°Resu…
,

48 
ƒes
);

49 
LUAI_FUNC
 
	`luaD_ªÆloc°ack
 (
lua_Sèã
 *
L
, 
√wsize
);

50 
LUAI_FUNC
 
	`luaD_grow°ack
 (
lua_Sèã
 *
L
, 
n
);

51 
LUAI_FUNC
 
	`luaD_shrök°ack
 (
lua_Sèã
 *
L
);

52 
LUAI_FUNC
 
	`luaD_ö˘›
 (
lua_Sèã
 *
L
);

54 
LUAI_FUNC
 
l_n‹ë
 
	`luaD_throw
 (
lua_Sèã
 *
L
, 
îrcode
);

55 
LUAI_FUNC
 
	`luaD_øwru≈rŸe˘ed
 (
lua_Sèã
 *
L
, 
Pfunc
 
f
, *
ud
);

	@lib/lua/src/ldump.c

7 
	#ldump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lobje˘.h
"

18 
	~"l°©e.h
"

19 
	~"lundump.h
"

23 
lua_Sèã
 *
	mL
;

24 
lua_Wrôî
 
	mwrôî
;

25 *
	md©a
;

26 
	m°rù
;

27 
	m°©us
;

28 } 
	tDumpSèã
;

35 
	#DumpVe˘‹
(
v
,
n
,
D
Ë
	`DumpBlock
(v,“)*((v)[0]),D)

	)

37 
	#DumpLôîÆ
(
s
,
D
Ë
	`DumpBlock
(s, (sË- (), D)

	)

40 
	$DumpBlock
 (c⁄° *
b
, 
size_t
 
size
, 
DumpSèã
 *
D
) {

41 i‡(
D
->
°©us
 =0 && 
size
 > 0) {

42 
	`lua_u∆ock
(
D
->
L
);

43 
D
->
°©us
 = (*D->
wrôî
)(D->
L
, 
b
, 
size
, D->
d©a
);

44 
	`lua_lock
(
D
->
L
);

46 
	}
}

49 
	#DumpV¨
(
x
,
D
Ë
	`DumpVe˘‹
(&x,1,D)

	)

52 
	$DumpByã
 (
y
, 
DumpSèã
 *
D
) {

53 
lu_byã
 
x
 = (lu_byã)
y
;

54 
	`DumpV¨
(
x
, 
D
);

55 
	}
}

58 
	$DumpI¡
 (
x
, 
DumpSèã
 *
D
) {

59 
	`DumpV¨
(
x
, 
D
);

60 
	}
}

63 
	$DumpNumbî
 (
lua_Numbî
 
x
, 
DumpSèã
 *
D
) {

64 
	`DumpV¨
(
x
, 
D
);

65 
	}
}

68 
	$DumpI¡egî
 (
lua_I¡egî
 
x
, 
DumpSèã
 *
D
) {

69 
	`DumpV¨
(
x
, 
D
);

70 
	}
}

73 
	$DumpSåög
 (c⁄° 
TSåög
 *
s
, 
DumpSèã
 *
D
) {

74 i‡(
s
 =
NULL
)

75 
	`DumpByã
(0, 
D
);

77 
size_t
 
size
 = 
	`ts¶í
(
s
) + 1;

78 c⁄° *
°r
 = 
	`gë°r
(
s
);

79 i‡(
size
 < 0xFF)

80 
	`DumpByã
(
	`ˇ°_öt
(
size
), 
D
);

82 
	`DumpByã
(0xFF, 
D
);

83 
	`DumpV¨
(
size
, 
D
);

85 
	`DumpVe˘‹
(
°r
, 
size
 - 1, 
D
);

87 
	}
}

90 
	$DumpCode
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

91 
	`DumpI¡
(
f
->
sizecode
, 
D
);

92 
	`DumpVe˘‹
(
f
->
code
, f->
sizecode
, 
D
);

93 
	}
}

96 
DumpFun˘i⁄
(c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
);

98 
	$DumpC⁄°™ts
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

99 
i
;

100 
n
 = 
f
->
sizek
;

101 
	`DumpI¡
(
n
, 
D
);

102 
i
 = 0; i < 
n
; i++) {

103 c⁄° 
TVÆue
 *
o
 = &
f
->
k
[
i
];

104 
	`DumpByã
(
	`ây≥
(
o
), 
D
);

105 
	`ây≥
(
o
)) {

106 
LUA_TNIL
:

108 
LUA_TBOOLEAN
:

109 
	`DumpByã
(
	`bvÆue
(
o
), 
D
);

111 
LUA_TNUMFLT
:

112 
	`DumpNumbî
(
	`ÊtvÆue
(
o
), 
D
);

114 
LUA_TNUMINT
:

115 
	`DumpI¡egî
(
	`ivÆue
(
o
), 
D
);

117 
LUA_TSHRSTR
:

118 
LUA_TLNGSTR
:

119 
	`DumpSåög
(
	`tsvÆue
(
o
), 
D
);

122 
	`lua_as£π
(0);

125 
	}
}

128 
	$DumpPrŸos
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

129 
i
;

130 
n
 = 
f
->
sizï
;

131 
	`DumpI¡
(
n
, 
D
);

132 
i
 = 0; i < 
n
; i++)

133 
	`DumpFun˘i⁄
(
f
->
p
[
i
], f->
sour˚
, 
D
);

134 
	}
}

137 
	$DumpUpvÆues
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

138 
i
, 
n
 = 
f
->
sizeupvÆues
;

139 
	`DumpI¡
(
n
, 
D
);

140 
i
 = 0; i < 
n
; i++) {

141 
	`DumpByã
(
f
->
upvÆues
[
i
].
ö°ack
, 
D
);

142 
	`DumpByã
(
f
->
upvÆues
[
i
].
idx
, 
D
);

144 
	}
}

147 
	$DumpDebug
 (c⁄° 
PrŸo
 *
f
, 
DumpSèã
 *
D
) {

148 
i
, 
n
;

149 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñöeöfo
;

150 
	`DumpI¡
(
n
, 
D
);

151 
	`DumpVe˘‹
(
f
->
löeöfo
, 
n
, 
D
);

152 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizñocv¨s
;

153 
	`DumpI¡
(
n
, 
D
);

154 
i
 = 0; i < 
n
; i++) {

155 
	`DumpSåög
(
f
->
locv¨s
[
i
].
v¨«me
, 
D
);

156 
	`DumpI¡
(
f
->
locv¨s
[
i
].
°¨çc
, 
D
);

157 
	`DumpI¡
(
f
->
locv¨s
[
i
].
ídpc
, 
D
);

159 
n
 = (
D
->
°rù
Ë? 0 : 
f
->
sizeupvÆues
;

160 
	`DumpI¡
(
n
, 
D
);

161 
i
 = 0; i < 
n
; i++)

162 
	`DumpSåög
(
f
->
upvÆues
[
i
].
«me
, 
D
);

163 
	}
}

166 
	$DumpFun˘i⁄
 (c⁄° 
PrŸo
 *
f
, 
TSåög
 *
psour˚
, 
DumpSèã
 *
D
) {

167 i‡(
D
->
°rù
 || 
f
->
sour˚
 =
psour˚
)

168 
	`DumpSåög
(
NULL
, 
D
);

170 
	`DumpSåög
(
f
->
sour˚
, 
D
);

171 
	`DumpI¡
(
f
->
löedeföed
, 
D
);

172 
	`DumpI¡
(
f
->
œ°löedeföed
, 
D
);

173 
	`DumpByã
(
f
->
num∑øms
, 
D
);

174 
	`DumpByã
(
f
->
is_v¨¨g
, 
D
);

175 
	`DumpByã
(
f
->
max°acksize
, 
D
);

176 
	`DumpCode
(
f
, 
D
);

177 
	`DumpC⁄°™ts
(
f
, 
D
);

178 
	`DumpUpvÆues
(
f
, 
D
);

179 
	`DumpPrŸos
(
f
, 
D
);

180 
	`DumpDebug
(
f
, 
D
);

181 
	}
}

184 
	$DumpHódî
 (
DumpSèã
 *
D
) {

185 
	`DumpLôîÆ
(
LUA_SIGNATURE
, 
D
);

186 
	`DumpByã
(
LUAC_VERSION
, 
D
);

187 
	`DumpByã
(
LUAC_FORMAT
, 
D
);

188 
	`DumpLôîÆ
(
LUAC_DATA
, 
D
);

189 
	`DumpByã
((), 
D
);

190 
	`DumpByã
((
size_t
), 
D
);

191 
	`DumpByã
((
In°ru˘i⁄
), 
D
);

192 
	`DumpByã
((
lua_I¡egî
), 
D
);

193 
	`DumpByã
((
lua_Numbî
), 
D
);

194 
	`DumpI¡egî
(
LUAC_INT
, 
D
);

195 
	`DumpNumbî
(
LUAC_NUM
, 
D
);

196 
	}
}

202 
	$luaU_dump
(
lua_Sèã
 *
L
, c⁄° 
PrŸo
 *
f
, 
lua_Wrôî
 
w
, *
d©a
,

203 
°rù
) {

204 
DumpSèã
 
D
;

205 
D
.
L
 = L;

206 
D
.
wrôî
 = 
w
;

207 
D
.
d©a
 = data;

208 
D
.
°rù
 = strip;

209 
D
.
°©us
 = 0;

210 
	`DumpHódî
(&
D
);

211 
	`DumpByã
(
f
->
sizeupvÆues
, &
D
);

212 
	`DumpFun˘i⁄
(
f
, 
NULL
, &
D
);

213  
D
.
°©us
;

214 
	}
}

	@lib/lua/src/lfunc.c

7 
	#lfunc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"lfunc.h
"

18 
	~"lgc.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

25 
CClosuª
 *
	$luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

26 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TCCL
, 
	`sizeC˛osuª
(
n
));

27 
CClosuª
 *
c
 = 
	`gco2c˛
(
o
);

28 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

29  
c
;

30 
	}
}

33 
LClosuª
 *
	$luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
n
) {

34 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TLCL
, 
	`sizeL˛osuª
(
n
));

35 
LClosuª
 *
c
 = 
	`gco2l˛
(
o
);

36 
c
->
p
 = 
NULL
;

37 
c
->
nupvÆues
 = 
	`ˇ°_byã
(
n
);

38 
n
--Ë
c
->
upvÆs
[n] = 
NULL
;

39  
c
;

40 
	}
}

45 
	$luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

46 
i
;

47 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

48 
UpVÆ
 *
uv
 = 
	`luaM_√w
(
L
, UpVal);

49 
uv
->
ªfcou¡
 = 1;

50 
uv
->
v
 = &uv->
u
.
vÆue
;

51 
	`£äûvÆue
(
uv
->
v
);

52 
˛
->
upvÆs
[
i
] = 
uv
;

54 
	}
}

57 
UpVÆ
 *
	$luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

58 
UpVÆ
 **
µ
 = &
L
->
›íupvÆ
;

59 
UpVÆ
 *
p
;

60 
UpVÆ
 *
uv
;

61 
	`lua_as£π
(
	`isötwups
(
L
Ë|| L->
›íupvÆ
 =
NULL
);

62 *
µ
 !
NULL
 && (
p
 = *µ)->
v
 >
Àvñ
) {

63 
	`lua_as£π
(
	`upis›í
(
p
));

64 i‡(
p
->
v
 =
Àvñ
)

65  
p
;

66 
µ
 = &
p
->
u
.
›í
.
√xt
;

69 
uv
 = 
	`luaM_√w
(
L
, 
UpVÆ
);

70 
uv
->
ªfcou¡
 = 0;

71 
uv
->
u
.
›í
.
√xt
 = *
µ
;

72 
uv
->
u
.
›í
.
touched
 = 1;

73 *
µ
 = 
uv
;

74 
uv
->
v
 = 
Àvñ
;

75 i‡(!
	`isötwups
(
L
)) {

76 
L
->
twups
 = 
	`G
(L)->twups;

77 
	`G
(
L
)->
twups
 = L;

79  
uv
;

80 
	}
}

83 
	$luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
) {

84 
UpVÆ
 *
uv
;

85 
L
->
›íupvÆ
 !
NULL
 && (
uv
 = L->›íupvÆ)->
v
 >
Àvñ
) {

86 
	`lua_as£π
(
	`upis›í
(
uv
));

87 
L
->
›íupvÆ
 = 
uv
->
u
.
›í
.
√xt
;

88 i‡(
uv
->
ªfcou¡
 == 0)

89 
	`luaM_‰ì
(
L
, 
uv
);

91 
	`£tobj
(
L
, &
uv
->
u
.
vÆue
, uv->
v
);

92 
uv
->
v
 = &uv->
u
.
vÆue
;

93 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

96 
	}
}

99 
PrŸo
 *
	$luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
) {

100 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TPROTO
, (
PrŸo
));

101 
PrŸo
 *
f
 = 
	`gco2p
(
o
);

102 
f
->
k
 = 
NULL
;

103 
f
->
sizek
 = 0;

104 
f
->
p
 = 
NULL
;

105 
f
->
sizï
 = 0;

106 
f
->
code
 = 
NULL
;

107 
f
->
ˇche
 = 
NULL
;

108 
f
->
sizecode
 = 0;

109 
f
->
löeöfo
 = 
NULL
;

110 
f
->
sizñöeöfo
 = 0;

111 
f
->
upvÆues
 = 
NULL
;

112 
f
->
sizeupvÆues
 = 0;

113 
f
->
num∑øms
 = 0;

114 
f
->
is_v¨¨g
 = 0;

115 
f
->
max°acksize
 = 0;

116 
f
->
locv¨s
 = 
NULL
;

117 
f
->
sizñocv¨s
 = 0;

118 
f
->
löedeföed
 = 0;

119 
f
->
œ°löedeföed
 = 0;

120 
f
->
sour˚
 = 
NULL
;

121  
f
;

122 
	}
}

125 
	$luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
) {

126 
	`luaM_‰ì¨øy
(
L
, 
f
->
code
, f->
sizecode
);

127 
	`luaM_‰ì¨øy
(
L
, 
f
->
p
, f->
sizï
);

128 
	`luaM_‰ì¨øy
(
L
, 
f
->
k
, f->
sizek
);

129 
	`luaM_‰ì¨øy
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
);

130 
	`luaM_‰ì¨øy
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
);

131 
	`luaM_‰ì¨øy
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
);

132 
	`luaM_‰ì
(
L
, 
f
);

133 
	}
}

140 c⁄° *
	$luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
f
, 
loˇl_numbî
, 
pc
) {

141 
i
;

142 
i
 = 0; i<
f
->
sizñocv¨s
 && f->
locv¨s
[i].
°¨çc
 <
pc
; i++) {

143 i‡(
pc
 < 
f
->
locv¨s
[
i
].
ídpc
) {

144 
loˇl_numbî
--;

145 i‡(
loˇl_numbî
 == 0)

146  
	`gë°r
(
f
->
locv¨s
[
i
].
v¨«me
);

149  
NULL
;

150 
	}
}

	@lib/lua/src/lfunc.h

7 #i‚de‡
lfunc_h


8 
	#lfunc_h


	)

11 
	~"lobje˘.h
"

14 
	#sizeC˛osuª
(
n
Ë(
	`ˇ°
(, (
CClosuª
)) + \

15 
	`ˇ°
(, (
TVÆue
)*((
n
)-1)))

	)

17 
	#sizeL˛osuª
(
n
Ë(
	`ˇ°
(, (
LClosuª
)) + \

18 
	`ˇ°
(, (
TVÆue
 *)*((
n
)-1)))

	)

22 
	#isötwups
(
L
Ë(L->
twups
 !L)

	)

29 
	#MAXUPVAL
 255

	)

35 
	sUpVÆ
 {

36 
TVÆue
 *
	mv
;

37 
lu_mem
 
	mªfcou¡
;

40 
UpVÆ
 *
	m√xt
;

41 
	mtouched
;

42 } 
	m›í
;

43 
TVÆue
 
	mvÆue
;

44 } 
	mu
;

47 
	#upis›í
(
up
Ë((up)->
v
 !&(up)->
u
.
vÆue
)

	)

50 
LUAI_FUNC
 
PrŸo
 *
luaF_√w¥Ÿo
 (
lua_Sèã
 *
L
);

51 
LUAI_FUNC
 
CClosuª
 *
luaF_√wC˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

52 
LUAI_FUNC
 
LClosuª
 *
luaF_√wL˛osuª
 (
lua_Sèã
 *
L
, 
√Àms
);

53 
LUAI_FUNC
 
luaF_öôupvÆs
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
);

54 
LUAI_FUNC
 
UpVÆ
 *
luaF_födupvÆ
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

55 
LUAI_FUNC
 
luaF_˛o£
 (
lua_Sèã
 *
L
, 
StkId
 
Àvñ
);

56 
LUAI_FUNC
 
luaF_‰ì¥Ÿo
 (
lua_Sèã
 *
L
, 
PrŸo
 *
f
);

57 
LUAI_FUNC
 c⁄° *
luaF_gëloˇ ame
 (c⁄° 
PrŸo
 *
func
, 
loˇl_numbî
,

58 
pc
);

	@lib/lua/src/lgc.c

7 
	#lgc_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lgc.h
"

21 
	~"lmem.h
"

22 
	~"lobje˘.h
"

23 
	~"l°©e.h
"

24 
	~"l°rög.h
"

25 
	~"…abÀ.h
"

26 
	~"…m.h
"

33 
	#GCSösidótomic
 (
GCS∑u£
 + 1)

	)

39 
	#GCSWEEPCOST
 (((
TSåög
Ë+ 4Ë/ 4)

	)

42 
	#GCSWEEPMAX
 (
	`ˇ°_öt
((
GCSTEPSIZE
 / 
GCSWEEPCOST
Ë/ 4))

	)

45 
	#GCFINALIZECOST
 
GCSWEEPCOST


	)

52 
	#STEPMULADJ
 200

	)

59 
	#PAUSEADJ
 100

	)

66 
	#maskcﬁ‹s
 (~(
	`bômask
(
BLACKBIT
Ë| 
WHITEBITS
))

	)

67 
	#makewhôe
(
g
,
x
) \

68 (
x
->
m¨ked
 = 
	`ˇ°_byã
((x->m¨ked & 
maskcﬁ‹s
Ë| 
	`luaC_whôe
(
g
)))

	)

70 
	#whôe2gøy
(
x
Ë
	`ª£tbôs
(x->
m¨ked
, 
WHITEBITS
)

	)

71 
	#bœck2gøy
(
x
Ë
	`ª£tbô
(x->
m¨ked
, 
BLACKBIT
)

	)

74 
	#vÆiswhôe
(
x
Ë(
	`iscﬁÀ˘abÀ
(xË&& 
	`iswhôe
(
	`gcvÆue
(x)))

	)

76 
	#checkdódkey
(
n
Ë
	`lua_as£π
(!
	`âisdódkey
(
	`gkey
“)Ë|| 
	`âi¢û
(
	`gvÆ
“)))

	)

79 
	#checkc⁄si°ícy
(
obj
) \

80 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
Ë|| 
	`righât
(obj))

	)

83 
	#m¨kvÆue
(
g
,
o
Ë{ 
	`checkc⁄si°ícy
(o); \

84 i‡(
	`vÆiswhôe
(
o
)Ë
	`ªÆlym¨kobje˘
(
g
,
	`gcvÆue
(o)); }

	)

86 
	#m¨kobje˘
(
g
,
t
Ë{ i‡(
	`iswhôe
—)Ë
	`ªÆlym¨kobje˘
(g, 
	`obj2gco
—)); }

	)

92 
	#m¨kobje˘N
(
g
,
t
Ë{ i‡—Ë
	`m¨kobje˘
(g,t); }

	)

94 
ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
);

107 
	#gnodña°
(
h
Ë
	`gnode
(h, 
	`ˇ°
(
size_t
, 
	`sizíode
(h)))

	)

113 
	#lökg˛i°
(
o
,
p
Ë((o)->
g˛i°
 = (p), (pË
	`obj2gco
(o))

	)

125 
	$ªmovì¡ry
 (
Node
 *
n
) {

126 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
n
)));

127 i‡(
	`vÆiswhôe
(
	`gkey
(
n
)))

128 
	`£tdódvÆue
(
	`wgkey
(
n
));

129 
	}
}

139 
	$is˛óªd
 (
globÆ_Sèã
 *
g
, c⁄° 
TVÆue
 *
o
) {

140 i‡(!
	`iscﬁÀ˘abÀ
(
o
))  0;

141 i‡(
	`âis°rög
(
o
)) {

142 
	`m¨kobje˘
(
g
, 
	`tsvÆue
(
o
));

145  
	`iswhôe
(
	`gcvÆue
(
o
));

146 
	}
}

155 
	$luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
) {

156 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

157 
	`lua_as£π
(
	`isbœck
(
o
Ë&& 
	`iswhôe
(
v
Ë&& !
	`isdód
(
g
, v) && !isdead(g, o));

158 i‡(
	`kìpöv¨ü¡
(
g
))

159 
	`ªÆlym¨kobje˘
(
g
, 
v
);

161 
	`lua_as£π
(
	`isswìµha£
(
g
));

162 
	`makewhôe
(
g
, 
o
);

164 
	}
}

171 
	$luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

172 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

173 
	`lua_as£π
(
	`isbœck
(
t
Ë&& !
	`isdód
(
g
,Å));

174 
	`bœck2gøy
(
t
);

175 
	`lökg˛i°
(
t
, 
g
->
gøyagaö
);

176 
	}
}

185 
	$luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

186 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

187 
GCObje˘
 *
o
 = 
	`gcvÆue
(
uv
->
v
);

188 
	`lua_as£π
(!
	`upis›í
(
uv
));

189 i‡(
	`kìpöv¨ü¡
(
g
))

190 
	`m¨kobje˘
(
g
, 
o
);

191 
	}
}

194 
	$luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

195 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

196 
	`lua_as£π
(
g
->
Ælgc
 =
o
);

197 
	`whôe2gøy
(
o
);

198 
g
->
Ælgc
 = 
o
->
√xt
;

199 
o
->
√xt
 = 
g
->
fixedgc
;

200 
g
->
fixedgc
 = 
o
;

201 
	}
}

208 
GCObje˘
 *
	$luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
) {

209 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

210 
GCObje˘
 *
o
 = 
	`ˇ°
(GCObje˘ *, 
	`luaM_√wobje˘
(
L
, 
	`nov¨ü¡
(
â
), 
sz
));

211 
o
->
m¨ked
 = 
	`luaC_whôe
(
g
);

212 
o
->
â
 =Åt;

213 
o
->
√xt
 = 
g
->
Ælgc
;

214 
g
->
Ælgc
 = 
o
;

215  
o
;

216 
	}
}

235 
	$ªÆlym¨kobje˘
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
o
) {

236 
ªíåy
:

237 
	`whôe2gøy
(
o
);

238 
o
->
â
) {

239 
LUA_TSHRSTR
: {

240 
	`gøy2bœck
(
o
);

241 
g
->
GCmemåav
 +
	`sizñ°rög
(
	`gco2ts
(
o
)->
shæí
);

244 
LUA_TLNGSTR
: {

245 
	`gøy2bœck
(
o
);

246 
g
->
GCmemåav
 +
	`sizñ°rög
(
	`gco2ts
(
o
)->
u
.
 gÀn
);

249 
LUA_TUSERDATA
: {

250 
TVÆue
 
uvÆue
;

251 
	`m¨kobje˘N
(
g
, 
	`gco2u
(
o
)->
më©abÀ
);

252 
	`gøy2bœck
(
o
);

253 
g
->
GCmemåav
 +
	`sizeud©a
(
	`gco2u
(
o
));

254 
	`gëu£rvÆue
(
g
->
maöthªad
, 
	`gco2u
(
o
), &
uvÆue
);

255 i‡(
	`vÆiswhôe
(&
uvÆue
)) {

256 
o
 = 
	`gcvÆue
(&
uvÆue
);

257 
ªíåy
;

261 
LUA_TLCL
: {

262 
	`lökg˛i°
(
	`gco2l˛
(
o
), 
g
->
gøy
);

265 
LUA_TCCL
: {

266 
	`lökg˛i°
(
	`gco2c˛
(
o
), 
g
->
gøy
);

269 
LUA_TTABLE
: {

270 
	`lökg˛i°
(
	`gco2t
(
o
), 
g
->
gøy
);

273 
LUA_TTHREAD
: {

274 
	`lökg˛i°
(
	`gco2th
(
o
), 
g
->
gøy
);

277 
LUA_TPROTO
: {

278 
	`lökg˛i°
(
	`gco2p
(
o
), 
g
->
gøy
);

281 : 
	`lua_as£π
(0); ;

283 
	}
}

289 
	$m¨kmt
 (
globÆ_Sèã
 *
g
) {

290 
i
;

291 
i
=0; i < 
LUA_NUMTAGS
; i++)

292 
	`m¨kobje˘N
(
g
, g->
mt
[
i
]);

293 
	}
}

299 
	$m¨kbeög‚z
 (
globÆ_Sèã
 *
g
) {

300 
GCObje˘
 *
o
;

301 
o
 = 
g
->
tobe‚z
; o !
NULL
; o = o->
√xt
)

302 
	`m¨kobje˘
(
g
, 
o
);

303 
	}
}

312 
	$ªm¨kupvÆs
 (
globÆ_Sèã
 *
g
) {

313 
lua_Sèã
 *
thªad
;

314 
lua_Sèã
 **
p
 = &
g
->
twups
;

315 (
thªad
 = *
p
Ë!
NULL
) {

316 
	`lua_as£π
(!
	`isbœck
(
thªad
));

317 i‡(
	`isgøy
(
thªad
Ë&&Åhªad->
›íupvÆ
 !
NULL
)

318 
p
 = &
thªad
->
twups
;

320 
UpVÆ
 *
uv
;

321 *
p
 = 
thªad
->
twups
;

322 
thªad
->
twups
 =Åhread;

323 
uv
 = 
thªad
->
›íupvÆ
; uv !
NULL
; uv = uv->
u
.
›í
.
√xt
) {

324 i‡(
uv
->
u
.
›í
.
touched
) {

325 
	`m¨kvÆue
(
g
, 
uv
->
v
);

326 
uv
->
u
.
›í
.
touched
 = 0;

331 
	}
}

337 
	$ª°¨tcﬁÀ˘i⁄
 (
globÆ_Sèã
 *
g
) {

338 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

339 
g
->
wók
 = g->
Ælwók
 = g->
ïhemî⁄
 = 
NULL
;

340 
	`m¨kobje˘
(
g
, g->
maöthªad
);

341 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

342 
	`m¨kmt
(
g
);

343 
	`m¨kbeög‚z
(
g
);

344 
	}
}

361 
	$åavî£wókvÆue
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

362 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

365 
has˛órs
 = (
h
->
sizóºay
 > 0);

366 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

367 
	`checkdódkey
(
n
);

368 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

369 
	`ªmovì¡ry
(
n
);

371 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

372 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

373 i‡(!
has˛órs
 && 
	`is˛óªd
(
g
, 
	`gvÆ
(
n
)))

374 
has˛órs
 = 1;

377 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

378 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

379 i‡(
has˛órs
)

380 
	`lökg˛i°
(
h
, 
g
->
wók
);

381 
	}
}

394 
	$åavî£ïhemî⁄
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

395 
m¨ked
 = 0;

396 
has˛órs
 = 0;

397 
hasww
 = 0;

398 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

399 
i
;

401 
i
 = 0; i < 
h
->
sizóºay
; i++) {

402 i‡(
	`vÆiswhôe
(&
h
->
¨øy
[
i
])) {

403 
m¨ked
 = 1;

404 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(&
h
->
¨øy
[
i
]));

408 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

409 
	`checkdódkey
(
n
);

410 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

411 
	`ªmovì¡ry
(
n
);

412 i‡(
	`is˛óªd
(
g
, 
	`gkey
(
n
))) {

413 
has˛órs
 = 1;

414 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
)))

415 
hasww
 = 1;

417 i‡(
	`vÆiswhôe
(
	`gvÆ
(
n
))) {

418 
m¨ked
 = 1;

419 
	`ªÆlym¨kobje˘
(
g
, 
	`gcvÆue
(
	`gvÆ
(
n
)));

423 i‡(
g
->
gc°©e
 =
GCS¥›ag©e
)

424 
	`lökg˛i°
(
h
, 
g
->
gøyagaö
);

425 i‡(
hasww
)

426 
	`lökg˛i°
(
h
, 
g
->
ïhemî⁄
);

427 i‡(
has˛órs
)

428 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

429  
m¨ked
;

430 
	}
}

433 
	$åavî£°r⁄gèbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

434 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

435 
i
;

436 
i
 = 0; i < 
h
->
sizóºay
; i++)

437 
	`m¨kvÆue
(
g
, &
h
->
¨øy
[
i
]);

438 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

439 
	`checkdódkey
(
n
);

440 i‡(
	`âi¢û
(
	`gvÆ
(
n
)))

441 
	`ªmovì¡ry
(
n
);

443 
	`lua_as£π
(!
	`âi¢û
(
	`gkey
(
n
)));

444 
	`m¨kvÆue
(
g
, 
	`gkey
(
n
));

445 
	`m¨kvÆue
(
g
, 
	`gvÆ
(
n
));

448 
	}
}

451 
lu_mem
 
	$åavî£èbÀ
 (
globÆ_Sèã
 *
g
, 
TabÀ
 *
h
) {

452 c⁄° *
wókkey
, *
wókvÆue
;

453 c⁄° 
TVÆue
 *
mode
 = 
	`gÁ°tm
(
g
, 
h
->
më©abÀ
, 
TM_MODE
);

454 
	`m¨kobje˘N
(
g
, 
h
->
më©abÀ
);

455 i‡(
mode
 && 
	`âis°rög
(mode) &&

456 ((
wókkey
 = 
	`°rchr
(
	`svÆue
(
mode
), 'k')),

457 (
wókvÆue
 = 
	`°rchr
(
	`svÆue
(
mode
), 'v')),

458 (
wókkey
 || 
wókvÆue
))) {

459 
	`bœck2gøy
(
h
);

460 i‡(!
wókkey
)

461 
	`åavî£wókvÆue
(
g
, 
h
);

462 i‡(!
wókvÆue
)

463 
	`åavî£ïhemî⁄
(
g
, 
h
);

465 
	`lökg˛i°
(
h
, 
g
->
Ælwók
);

468 
	`åavî£°r⁄gèbÀ
(
g
, 
h
);

469  (
TabÀ
Ë+ (
TVÆue
Ë* 
h
->
sizóºay
 +

470 (
Node
Ë* 
	`ˇ°
(
size_t
, 
	`sizíode
(
h
));

471 
	}
}

479 
	$åavî£¥Ÿo
 (
globÆ_Sèã
 *
g
, 
PrŸo
 *
f
) {

480 
i
;

481 i‡(
f
->
ˇche
 && 
	`iswhôe
(f->cache))

482 
f
->
ˇche
 = 
NULL
;

483 
	`m¨kobje˘N
(
g
, 
f
->
sour˚
);

484 
i
 = 0; i < 
f
->
sizek
; i++)

485 
	`m¨kvÆue
(
g
, &
f
->
k
[
i
]);

486 
i
 = 0; i < 
f
->
sizeupvÆues
; i++)

487 
	`m¨kobje˘N
(
g
, 
f
->
upvÆues
[
i
].
«me
);

488 
i
 = 0; i < 
f
->
sizï
; i++)

489 
	`m¨kobje˘N
(
g
, 
f
->
p
[
i
]);

490 
i
 = 0; i < 
f
->
sizñocv¨s
; i++)

491 
	`m¨kobje˘N
(
g
, 
f
->
locv¨s
[
i
].
v¨«me
);

492  (
PrŸo
Ë+ (
In°ru˘i⁄
Ë* 
f
->
sizecode
 +

493 (
PrŸo
 *Ë* 
f
->
sizï
 +

494 (
TVÆue
Ë* 
f
->
sizek
 +

495 (Ë* 
f
->
sizñöeöfo
 +

496 (
LocV¨
Ë* 
f
->
sizñocv¨s
 +

497 (
UpvÆdesc
Ë* 
f
->
sizeupvÆues
;

498 
	}
}

501 
lu_mem
 
	$åavî£C˛osuª
 (
globÆ_Sèã
 *
g
, 
CClosuª
 *
˛
) {

502 
i
;

503 
i
 = 0; i < 
˛
->
nupvÆues
; i++)

504 
	`m¨kvÆue
(
g
, &
˛
->
upvÆue
[
i
]);

505  
	`sizeC˛osuª
(
˛
->
nupvÆues
);

506 
	}
}

514 
lu_mem
 
	$åavî£L˛osuª
 (
globÆ_Sèã
 *
g
, 
LClosuª
 *
˛
) {

515 
i
;

516 
	`m¨kobje˘N
(
g
, 
˛
->
p
);

517 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

518 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

519 i‡(
uv
 !
NULL
) {

520 i‡(
	`upis›í
(
uv
Ë&& 
g
->
gc°©e
 !
GCSösidótomic
)

521 
uv
->
u
.
›í
.
touched
 = 1;

523 
	`m¨kvÆue
(
g
, 
uv
->
v
);

526  
	`sizeL˛osuª
(
˛
->
nupvÆues
);

527 
	}
}

530 
lu_mem
 
	$åavî£thªad
 (
globÆ_Sèã
 *
g
, 
lua_Sèã
 *
th
) {

531 
StkId
 
o
 = 
th
->
°ack
;

532 i‡(
o
 =
NULL
)

534 
	`lua_as£π
(
g
->
gc°©e
 =
GCSösidótomic
 ||

535 
th
->
›íupvÆ
 =
NULL
 || 
	`isötwups
(th));

536 ; 
o
 < 
th
->
t›
; o++)

537 
	`m¨kvÆue
(
g
, 
o
);

538 i‡(
g
->
gc°©e
 =
GCSösidótomic
) {

539 
StkId
 
lim
 = 
th
->
°ack
 +Åh->
°acksize
;

540 ; 
o
 < 
lim
; o++)

541 
	`£äûvÆue
(
o
);

543 i‡(!
	`isötwups
(
th
Ë&&Åh->
›íupvÆ
 !
NULL
) {

544 
th
->
twups
 = 
g
->twups;

545 
g
->
twups
 = 
th
;

548 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
)

549 
	`luaD_shrök°ack
(
th
);

550  ((
lua_Sèã
Ë+ (
TVÆue
Ë* 
th
->
°acksize
 +

551 (
CÆlInfo
Ë* 
th
->
nci
);

552 
	}
}

559 
	$¥›ag©em¨k
 (
globÆ_Sèã
 *
g
) {

560 
lu_mem
 
size
;

561 
GCObje˘
 *
o
 = 
g
->
gøy
;

562 
	`lua_as£π
(
	`isgøy
(
o
));

563 
	`gøy2bœck
(
o
);

564 
o
->
â
) {

565 
LUA_TTABLE
: {

566 
TabÀ
 *
h
 = 
	`gco2t
(
o
);

567 
g
->
gøy
 = 
h
->
g˛i°
;

568 
size
 = 
	`åavî£èbÀ
(
g
, 
h
);

571 
LUA_TLCL
: {

572 
LClosuª
 *
˛
 = 
	`gco2l˛
(
o
);

573 
g
->
gøy
 = 
˛
->
g˛i°
;

574 
size
 = 
	`åavî£L˛osuª
(
g
, 
˛
);

577 
LUA_TCCL
: {

578 
CClosuª
 *
˛
 = 
	`gco2c˛
(
o
);

579 
g
->
gøy
 = 
˛
->
g˛i°
;

580 
size
 = 
	`åavî£C˛osuª
(
g
, 
˛
);

583 
LUA_TTHREAD
: {

584 
lua_Sèã
 *
th
 = 
	`gco2th
(
o
);

585 
g
->
gøy
 = 
th
->
g˛i°
;

586 
	`lökg˛i°
(
th
, 
g
->
gøyagaö
);

587 
	`bœck2gøy
(
o
);

588 
size
 = 
	`åavî£thªad
(
g
, 
th
);

591 
LUA_TPROTO
: {

592 
PrŸo
 *
p
 = 
	`gco2p
(
o
);

593 
g
->
gøy
 = 
p
->
g˛i°
;

594 
size
 = 
	`åavî£¥Ÿo
(
g
, 
p
);

597 : 
	`lua_as£π
(0); ;

599 
g
->
GCmemåav
 +
size
;

600 
	}
}

603 
	$¥›ag©óŒ
 (
globÆ_Sèã
 *
g
) {

604 
g
->
gøy
Ë
	`¥›ag©em¨k
(g);

605 
	}
}

608 
	$c⁄vîgìphemî⁄s
 (
globÆ_Sèã
 *
g
) {

609 
ch™ged
;

611 
GCObje˘
 *
w
;

612 
GCObje˘
 *
√xt
 = 
g
->
ïhemî⁄
;

613 
g
->
ïhemî⁄
 = 
NULL
;

614 
ch™ged
 = 0;

615 (
w
 = 
√xt
Ë!
NULL
) {

616 
√xt
 = 
	`gco2t
(
w
)->
g˛i°
;

617 i‡(
	`åavî£ïhemî⁄
(
g
, 
	`gco2t
(
w
))) {

618 
	`¥›ag©óŒ
(
g
);

619 
ch™ged
 = 1;

622 } 
ch™ged
);

623 
	}
}

639 
	$˛órkeys
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

640 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

641 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

642 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

643 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

644 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& (
	`is˛óªd
(
g
, 
	`gkey
(n)))) {

645 
	`£äûvÆue
(
	`gvÆ
(
n
));

646 
	`ªmovì¡ry
(
n
);

650 
	}
}

657 
	$˛órvÆues
 (
globÆ_Sèã
 *
g
, 
GCObje˘
 *
l
, GCObje˘ *
f
) {

658 ; 
l
 !
f
;Ü = 
	`gco2t
÷)->
g˛i°
) {

659 
TabÀ
 *
h
 = 
	`gco2t
(
l
);

660 
Node
 *
n
, *
limô
 = 
	`gnodña°
(
h
);

661 
i
;

662 
i
 = 0; i < 
h
->
sizóºay
; i++) {

663 
TVÆue
 *
o
 = &
h
->
¨øy
[
i
];

664 i‡(
	`is˛óªd
(
g
, 
o
))

665 
	`£äûvÆue
(
o
);

667 
n
 = 
	`gnode
(
h
, 0);Ç < 
limô
;Ç++) {

668 i‡(!
	`âi¢û
(
	`gvÆ
(
n
)Ë&& 
	`is˛óªd
(
g
, gval(n))) {

669 
	`£äûvÆue
(
	`gvÆ
(
n
));

670 
	`ªmovì¡ry
(
n
);

674 
	}
}

677 
	$luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
) {

678 
	`lua_as£π
(
uv
->
ªfcou¡
 > 0);

679 
uv
->
ªfcou¡
--;

680 i‡(
uv
->
ªfcou¡
 =0 && !
	`upis›í
(uv))

681 
	`luaM_‰ì
(
L
, 
uv
);

682 
	}
}

685 
	$‰ìL˛osuª
 (
lua_Sèã
 *
L
, 
LClosuª
 *
˛
) {

686 
i
;

687 
i
 = 0; i < 
˛
->
nupvÆues
; i++) {

688 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
i
];

689 i‡(
uv
)

690 
	`luaC_upvdeccou¡
(
L
, 
uv
);

692 
	`luaM_‰ìmem
(
L
, 
˛
, 
	`sizeL˛osuª
(˛->
nupvÆues
));

693 
	}
}

696 
	$‰ìobj
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
) {

697 
o
->
â
) {

698 
LUA_TPROTO
: 
	`luaF_‰ì¥Ÿo
(
L
, 
	`gco2p
(
o
)); ;

699 
LUA_TLCL
: {

700 
	`‰ìL˛osuª
(
L
, 
	`gco2l˛
(
o
));

703 
LUA_TCCL
: {

704 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeC˛osuª
(
	`gco2c˛
(o)->
nupvÆues
));

707 
LUA_TTABLE
: 
	`luaH_‰ì
(
L
, 
	`gco2t
(
o
)); ;

708 
LUA_TTHREAD
: 
	`luaE_‰ìthªad
(
L
, 
	`gco2th
(
o
)); ;

709 
LUA_TUSERDATA
: 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizeud©a
(
	`gco2u
(o))); ;

710 
LUA_TSHRSTR
:

711 
	`luaS_ªmove
(
L
, 
	`gco2ts
(
o
));

712 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizñ°rög
(
	`gco2ts
(o)->
shæí
));

714 
LUA_TLNGSTR
: {

715 
	`luaM_‰ìmem
(
L
, 
o
, 
	`sizñ°rög
(
	`gco2ts
(o)->
u
.
 gÀn
));

718 : 
	`lua_as£π
(0);

720 
	}
}

723 
	#swìpwhﬁñi°
(
L
,
p
Ë
	`swì∂i°
(L,p,
MAX_LUMEM
)

	)

724 
GCObje˘
 **
swì∂i°
 (
lua_Sèã
 *
L
, GCObje˘ **
p
, 
lu_mem
 
cou¡
);

734 
GCObje˘
 **
	$swì∂i°
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, 
lu_mem
 
cou¡
) {

735 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

736 
ow
 = 
	`Ÿhîwhôe
(
g
);

737 
whôe
 = 
	`luaC_whôe
(
g
);

738 *
p
 !
NULL
 && 
cou¡
-- > 0) {

739 
GCObje˘
 *
cuº
 = *
p
;

740 
m¨ked
 = 
cuº
->marked;

741 i‡(
	`isdódm
(
ow
, 
m¨ked
)) {

742 *
p
 = 
cuº
->
√xt
;

743 
	`‰ìobj
(
L
, 
cuº
);

746 
cuº
->
m¨ked
 = 
	`ˇ°_byã
((m¨ked & 
maskcﬁ‹s
Ë| 
whôe
);

747 
p
 = &
cuº
->
√xt
;

750  (*
p
 =
NULL
) ? NULL :Ö;

751 
	}
}

757 
GCObje˘
 **
	$swì±ﬁive
 (
lua_Sèã
 *
L
, 
GCObje˘
 **
p
, *
n
) {

758 
GCObje˘
 **
ﬁd
 = 
p
;

759 
i
 = 0;

761 
i
++;

762 
p
 = 
	`swì∂i°
(
L
,Ö, 1);

763 } 
p
 =
ﬁd
);

764 i‡(
n
Ë*¿+
i
;

765  
p
;

766 
	}
}

780 
	$checkSizes
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

781 i‡(
g
->
gcköd
 !
KGC_EMERGENCY
) {

782 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

783 i‡(
g
->
°π
.
nu£
 < g->°π.
size
 / 4)

784 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 / 2);

785 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

787 
	}
}

790 
GCObje˘
 *
	$ud©a2föÆize
 (
globÆ_Sèã
 *
g
) {

791 
GCObje˘
 *
o
 = 
g
->
tobe‚z
;

792 
	`lua_as£π
(
	`toföÆize
(
o
));

793 
g
->
tobe‚z
 = 
o
->
√xt
;

794 
o
->
√xt
 = 
g
->
Ælgc
;

795 
g
->
Ælgc
 = 
o
;

796 
	`ª£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

797 i‡(
	`isswìµha£
(
g
))

798 
	`makewhôe
(
g
, 
o
);

799  
o
;

800 
	}
}

803 
	$dŸheˇŒ
 (
lua_Sèã
 *
L
, *
ud
) {

804 
	`UNUSED
(
ud
);

805 
	`luaD_ˇŒnoyõld
(
L
, L->
t›
 - 2, 0);

806 
	}
}

809 
	$GCTM
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

810 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

811 c⁄° 
TVÆue
 *
tm
;

812 
TVÆue
 
v
;

813 
	`£tgcovÆue
(
L
, &
v
, 
	`ud©a2föÆize
(
g
));

814 
tm
 = 
	`luaT_gëtmbyobj
(
L
, &
v
, 
TM_GC
);

815 i‡(
tm
 !
NULL
 && 
	`âisfun˘i⁄
(tm)) {

816 
°©us
;

817 
lu_byã
 
ﬁdah
 = 
L
->
Ælowhook
;

818 
ru¬ög
 = 
g
->
g¸u¬ög
;

819 
L
->
Ælowhook
 = 0;

820 
g
->
g¸u¬ög
 = 0;

821 
	`£tobj2s
(
L
, L->
t›
, 
tm
);

822 
	`£tobj2s
(
L
, L->
t›
 + 1, &
v
);

823 
L
->
t›
 += 2;

824 
°©us
 = 
	`luaD_pˇŒ
(
L
, 
dŸheˇŒ
, 
NULL
, 
	`ßve°ack
(L, L->
t›
 - 2), 0);

825 
L
->
Ælowhook
 = 
ﬁdah
;

826 
g
->
g¸u¬ög
 = 
ru¬ög
;

827 i‡(
°©us
 !
LUA_OK
 && 
¥›ag©ìº‹s
) {

828 i‡(
°©us
 =
LUA_ERRRUN
) {

829 c⁄° *
msg
 = (
	`âis°rög
(
L
->
t›
 - 1))

830 ? 
	`svÆue
(
L
->
t›
 - 1)

832 
	`luaO_pushf°rög
(
L
, "îr‹ i¿__g¯mëamëhod (%s)", 
msg
);

833 
°©us
 = 
LUA_ERRGCMM
;

835 
	`luaD_throw
(
L
, 
°©us
);

838 
	}
}

844 
	$ru«„wföÆizîs
 (
lua_Sèã
 *
L
) {

845 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

846 
i
;

847 
	`lua_as£π
(!
g
->
tobe‚z
 || g->
gcfönum
 > 0);

848 
i
 = 0; 
g
->
tobe‚z
 && i < g->
gcfönum
; i++)

849 
	`GCTM
(
L
, 1);

850 
g
->
gcfönum
 = (!g->
tobe‚z
) ? 0

851 : 
g
->
gcfönum
 * 2;

852  
i
;

853 
	}
}

859 
	$ˇŒÆÕídögföÆizîs
 (
lua_Sèã
 *
L
, 
¥›ag©ìº‹s
) {

860 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

861 
g
->
tobe‚z
)

862 
	`GCTM
(
L
, 
¥›ag©ìº‹s
);

863 
	}
}

869 
GCObje˘
 **
	$födœ°
 (
GCObje˘
 **
p
) {

870 *
p
 !
NULL
)

871 
p
 = &(*p)->
√xt
;

872  
p
;

873 
	}
}

880 
	$£∑øãtobe‚z
 (
globÆ_Sèã
 *
g
, 
Æl
) {

881 
GCObje˘
 *
cuº
;

882 
GCObje˘
 **
p
 = &
g
->
föobj
;

883 
GCObje˘
 **
œ°√xt
 = 
	`födœ°
(&
g
->
tobe‚z
);

884 (
cuº
 = *
p
Ë!
NULL
) {

885 
	`lua_as£π
(
	`toföÆize
(
cuº
));

886 i‡(!(
	`iswhôe
(
cuº
Ë|| 
Æl
))

887 
p
 = &
cuº
->
√xt
;

889 *
p
 = 
cuº
->
√xt
;

890 
cuº
->
√xt
 = *
œ°√xt
;

891 *
œ°√xt
 = 
cuº
;

892 
œ°√xt
 = &
cuº
->
√xt
;

895 
	}
}

902 
	$luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
) {

903 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

904 i‡(
	`toföÆize
(
o
) ||

905 
	`gÁ°tm
(
g
, 
mt
, 
TM_GC
Ë=
NULL
)

908 
GCObje˘
 **
p
;

909 i‡(
	`isswìµha£
(
g
)) {

910 
	`makewhôe
(
g
, 
o
);

911 i‡(
g
->
swìpgc
 =&
o
->
√xt
)

912 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, g->swìpgc, 
NULL
);

915 
p
 = &
g
->
Ælgc
; *∞!
o
;Ö = &(*p)->
√xt
) { }

916 *
p
 = 
o
->
√xt
;

917 
o
->
√xt
 = 
g
->
föobj
;

918 
g
->
föobj
 = 
o
;

919 
	`l_£tbô
(
o
->
m¨ked
, 
FINALIZEDBIT
);

921 
	}
}

940 
	$£çau£
 (
globÆ_Sèã
 *
g
) {

941 
l_mem
 
thªshﬁd
, 
debt
;

942 
l_mem
 
e°im©e
 = 
g
->
GCe°im©e
 / 
PAUSEADJ
;

943 
	`lua_as£π
(
e°im©e
 > 0);

944 
thªshﬁd
 = (
g
->
g˝au£
 < 
MAX_LMEM
 / 
e°im©e
)

945 ? 
e°im©e
 * 
g
->
g˝au£


946 : 
MAX_LMEM
;

947 
debt
 = 
	`gëtŸÆbyãs
(
g
Ë- 
thªshﬁd
;

948 
	`luaE_£tdebt
(
g
, 
debt
);

949 
	}
}

960 
	$íãrswìp
 (
lua_Sèã
 *
L
) {

961 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

962 
n
 = 0;

963 
g
->
gc°©e
 = 
GCSsw∑Œgc
;

964 
	`lua_as£π
(
g
->
swìpgc
 =
NULL
);

965 
g
->
swìpgc
 = 
	`swì±ﬁive
(
L
, &g->
Ælgc
, &
n
);

966  
n
;

967 
	}
}

970 
	$luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
) {

971 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

972 
	`£∑øãtobe‚z
(
g
, 1);

973 
	`lua_as£π
(
g
->
föobj
 =
NULL
);

974 
	`ˇŒÆÕídögföÆizîs
(
L
, 0);

975 
	`lua_as£π
(
g
->
tobe‚z
 =
NULL
);

976 
g
->
cuºítwhôe
 = 
WHITEBITS
;

977 
g
->
gcköd
 = 
KGC_NORMAL
;

978 
	`swìpwhﬁñi°
(
L
, &
g
->
föobj
);

979 
	`swìpwhﬁñi°
(
L
, &
g
->
Ælgc
);

980 
	`swìpwhﬁñi°
(
L
, &
g
->
fixedgc
);

981 
	`lua_as£π
(
g
->
°π
.
nu£
 == 0);

982 
	}
}

985 
l_mem
 
	$©omic
 (
lua_Sèã
 *
L
) {

986 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

987 
l_mem
 
w‹k
;

988 
GCObje˘
 *
‹igwók
, *
‹igÆl
;

989 
GCObje˘
 *
gøyagaö
 = 
g
->grayagain;

990 
	`lua_as£π
(
g
->
ïhemî⁄
 =
NULL
 && g->
wók
 == NULL);

991 
	`lua_as£π
(!
	`iswhôe
(
g
->
maöthªad
));

992 
g
->
gc°©e
 = 
GCSösidótomic
;

993 
g
->
GCmemåav
 = 0;

994 
	`m¨kobje˘
(
g
, 
L
);

996 
	`m¨kvÆue
(
g
, &g->
l_ªgi°ry
);

997 
	`m¨kmt
(
g
);

999 
	`ªm¨kupvÆs
(
g
);

1000 
	`¥›ag©óŒ
(
g
);

1001 
w‹k
 = 
g
->
GCmemåav
;

1002 
g
->
gøy
 = 
gøyagaö
;

1003 
	`¥›ag©óŒ
(
g
);

1004 
g
->
GCmemåav
 = 0;

1005 
	`c⁄vîgìphemî⁄s
(
g
);

1008 
	`˛órvÆues
(
g
, g->
wók
, 
NULL
);

1009 
	`˛órvÆues
(
g
, g->
Ælwók
, 
NULL
);

1010 
‹igwók
 = 
g
->
wók
; 
‹igÆl
 = g->
Ælwók
;

1011 
w‹k
 +
g
->
GCmemåav
;

1012 
	`£∑øãtobe‚z
(
g
, 0);

1013 
g
->
gcfönum
 = 1;

1014 
	`m¨kbeög‚z
(
g
);

1015 
	`¥›ag©óŒ
(
g
);

1016 
g
->
GCmemåav
 = 0;

1017 
	`c⁄vîgìphemî⁄s
(
g
);

1020 
	`˛órkeys
(
g
, g->
ïhemî⁄
, 
NULL
);

1021 
	`˛órkeys
(
g
, g->
Ælwók
, 
NULL
);

1023 
	`˛órvÆues
(
g
, g->
wók
, 
‹igwók
);

1024 
	`˛órvÆues
(
g
, g->
Ælwók
, 
‹igÆl
);

1025 
	`luaS_˛órˇche
(
g
);

1026 
g
->
cuºítwhôe
 = 
	`ˇ°_byã
(
	`Ÿhîwhôe
(g));

1027 
w‹k
 +
g
->
GCmemåav
;

1028  
w‹k
;

1029 
	}
}

1032 
lu_mem
 
	$swìp°ï
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
,

1033 
√xt°©e
, 
GCObje˘
 **
√xéi°
) {

1034 i‡(
g
->
swìpgc
) {

1035 
l_mem
 
ﬁddebt
 = 
g
->
GCdebt
;

1036 
g
->
swìpgc
 = 
	`swì∂i°
(
L
, g->swìpgc, 
GCSWEEPMAX
);

1037 
g
->
GCe°im©e
 +g->
GCdebt
 - 
ﬁddebt
;

1038 i‡(
g
->
swìpgc
)

1039  (
GCSWEEPMAX
 * 
GCSWEEPCOST
);

1042 
g
->
gc°©e
 = 
√xt°©e
;

1043 
g
->
swìpgc
 = 
√xéi°
;

1045 
	}
}

1048 
lu_mem
 
	$sögÀ°ï
 (
lua_Sèã
 *
L
) {

1049 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1050 
g
->
gc°©e
) {

1051 
GCS∑u£
: {

1052 
g
->
GCmemåav
 = g->
°π
.
size
 * (
GCObje˘
*);

1053 
	`ª°¨tcﬁÀ˘i⁄
(
g
);

1054 
g
->
gc°©e
 = 
GCS¥›ag©e
;

1055  
g
->
GCmemåav
;

1057 
GCS¥›ag©e
: {

1058 
g
->
GCmemåav
 = 0;

1059 
	`lua_as£π
(
g
->
gøy
);

1060 
	`¥›ag©em¨k
(
g
);

1061 i‡(
g
->
gøy
 =
NULL
)

1062 
g
->
gc°©e
 = 
GCS©omic
;

1063  
g
->
GCmemåav
;

1065 
GCS©omic
: {

1066 
lu_mem
 
w‹k
;

1067 
sw
;

1068 
	`¥›ag©óŒ
(
g
);

1069 
w‹k
 = 
	`©omic
(
L
);

1070 
sw
 = 
	`íãrswìp
(
L
);

1071 
g
->
GCe°im©e
 = 
	`gëtŸÆbyãs
(g); ;

1072  
w‹k
 + 
sw
 * 
GCSWEEPCOST
;

1074 
GCSsw∑Œgc
: {

1075  
	`swìp°ï
(
L
, 
g
, 
GCSswpföobj
, &g->
föobj
);

1077 
GCSswpföobj
: {

1078  
	`swìp°ï
(
L
, 
g
, 
GCSsw±obe‚z
, &g->
tobe‚z
);

1080 
GCSsw±obe‚z
: {

1081  
	`swìp°ï
(
L
, 
g
, 
GCSsw≥nd
, 
NULL
);

1083 
GCSsw≥nd
: {

1084 
	`makewhôe
(
g
, g->
maöthªad
);

1085 
	`checkSizes
(
L
, 
g
);

1086 
g
->
gc°©e
 = 
GCSˇŒfö
;

1089 
GCSˇŒfö
: {

1090 i‡(
g
->
tobe‚z
 && g->
gcköd
 !
KGC_EMERGENCY
) {

1091 
n
 = 
	`ru«„wföÆizîs
(
L
);

1092  (
n
 * 
GCFINALIZECOST
);

1095 
g
->
gc°©e
 = 
GCS∑u£
;

1099 : 
	`lua_as£π
(0);  0;

1101 
	}
}

1108 
	$luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
) {

1109 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1110 !
	`ã°bô
(
°©esmask
, 
g
->
gc°©e
))

1111 
	`sögÀ°ï
(
L
);

1112 
	}
}

1119 
l_mem
 
	$gëdebt
 (
globÆ_Sèã
 *
g
) {

1120 
l_mem
 
debt
 = 
g
->
GCdebt
;

1121 
°ïmul
 = 
g
->
gc°ïmul
;

1122 i‡(
debt
 <= 0)  0;

1124 
debt
 = (debà/ 
STEPMULADJ
) + 1;

1125 
debt
 = (debà< 
MAX_LMEM
 / 
°ïmul
) ? debt * stepmul : MAX_LMEM;

1126  
debt
;

1128 
	}
}

1133 
	$luaC_°ï
 (
lua_Sèã
 *
L
) {

1134 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1135 
l_mem
 
debt
 = 
	`gëdebt
(
g
);

1136 i‡(!
g
->
g¸u¬ög
) {

1137 
	`luaE_£tdebt
(
g
, -
GCSTEPSIZE
 * 10);

1141 
lu_mem
 
w‹k
 = 
	`sögÀ°ï
(
L
);

1142 
debt
 -
w‹k
;

1143 } 
debt
 > -
GCSTEPSIZE
 && 
g
->
gc°©e
 !
GCS∑u£
);

1144 i‡(
g
->
gc°©e
 =
GCS∑u£
)

1145 
	`£çau£
(
g
);

1147 
debt
 = (debà/ 
g
->
gc°ïmul
Ë* 
STEPMULADJ
;

1148 
	`luaE_£tdebt
(
g
, 
debt
);

1149 
	`ru«„wföÆizîs
(
L
);

1151 
	}
}

1163 
	$luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
) {

1164 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

1165 
	`lua_as£π
(
g
->
gcköd
 =
KGC_NORMAL
);

1166 i‡(
i£mîgícy
Ë
g
->
gcköd
 = 
KGC_EMERGENCY
;

1167 i‡(
	`kìpöv¨ü¡
(
g
)) {

1168 
	`íãrswìp
(
L
);

1171 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1172 
	`luaC_ru¡û°©e
(
L
, ~
	`bômask
(
GCS∑u£
));

1173 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCSˇŒfö
));

1175 
	`lua_as£π
(
g
->
GCe°im©e
 =
	`gëtŸÆbyãs
(g));

1176 
	`luaC_ru¡û°©e
(
L
, 
	`bômask
(
GCS∑u£
));

1177 
g
->
gcköd
 = 
KGC_NORMAL
;

1178 
	`£çau£
(
g
);

1179 
	}
}

	@lib/lua/src/lgc.h

7 #i‚de‡
lgc_h


8 
	#lgc_h


	)

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

30 #i‡!
deföed
(
GCSTEPSIZE
)

32 
	#GCSTEPSIZE
 (
	`ˇ°_öt
(100 * (
TSåög
)))

	)

39 
	#GCS¥›ag©e
 0

	)

40 
	#GCS©omic
 1

	)

41 
	#GCSsw∑Œgc
 2

	)

42 
	#GCSswpföobj
 3

	)

43 
	#GCSsw±obe‚z
 4

	)

44 
	#GCSsw≥nd
 5

	)

45 
	#GCSˇŒfö
 6

	)

46 
	#GCS∑u£
 7

	)

49 
	#isswìµha£
(
g
) \

50 (
GCSsw∑Œgc
 <(
g
)->
gc°©e
 && (g)->gc°©ê<
GCSsw≥nd
)

	)

61 
	#kìpöv¨ü¡
(
g
Ë((g)->
gc°©e
 <
GCS©omic
)

	)

67 
	#ª£tbôs
(
x
,
m
Ë((xË&
	`ˇ°
(
lu_byã
, ~(m)))

	)

68 
	#£tbôs
(
x
,
m
Ë((xË|(m))

	)

69 
	#ã°bôs
(
x
,
m
Ë((xË& (m))

	)

70 
	#bômask
(
b
Ë(1<<(b))

	)

71 
	#bô2mask
(
b1
,
b2
Ë(
	`bômask
(b1Ë| bômask(b2))

	)

72 
	#l_£tbô
(
x
,
b
Ë
	`£tbôs
(x, 
	`bômask
(b))

	)

73 
	#ª£tbô
(
x
,
b
Ë
	`ª£tbôs
(x, 
	`bômask
(b))

	)

74 
	#ã°bô
(
x
,
b
Ë
	`ã°bôs
(x, 
	`bômask
(b))

	)

78 
	#WHITE0BIT
 0

	)

79 
	#WHITE1BIT
 1

	)

80 
	#BLACKBIT
 2

	)

81 
	#FINALIZEDBIT
 3

	)

84 
	#WHITEBITS
 
	`bô2mask
(
WHITE0BIT
, 
WHITE1BIT
)

	)

87 
	#iswhôe
(
x
Ë
	`ã°bôs
((x)->
m¨ked
, 
WHITEBITS
)

	)

88 
	#isbœck
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
BLACKBIT
)

	)

89 
	#isgøy
(
x
) \

90 (!
	`ã°bôs
((
x
)->
m¨ked
, 
WHITEBITS
 | 
	`bômask
(
BLACKBIT
)))

	)

92 
	#toföÆize
(
x
Ë
	`ã°bô
((x)->
m¨ked
, 
FINALIZEDBIT
)

	)

94 
	#Ÿhîwhôe
(
g
Ë((g)->
cuºítwhôe
 ^ 
WHITEBITS
)

	)

95 
	#isdódm
(
ow
,
m
Ë(!(((mË^ 
WHITEBITS
Ë& (ow)))

	)

96 
	#isdód
(
g
,
v
Ë
	`isdódm
(
	`Ÿhîwhôe
(g), (v)->
m¨ked
)

	)

98 
	#ch™gewhôe
(
x
Ë((x)->
m¨ked
 ^
WHITEBITS
)

	)

99 
	#gøy2bœck
(
x
Ë
	`l_£tbô
((x)->
m¨ked
, 
BLACKBIT
)

	)

101 
	#luaC_whôe
(
g
Ë
	`ˇ°
(
lu_byã
, (g)->
cuºítwhôe
 & 
WHITEBITS
)

	)

110 
	#luaC_c⁄dGC
(
L
,
¥e
,
pos
) \

111 { i‡(
	`G
(
L
)->
GCdebt
 > 0Ë{ 
¥e
; 
	`luaC_°ï
(L); 
pos
;}; \

112 
	`c⁄dch™gemem
(
L
,
¥e
,
pos
); }

	)

115 
	#luaC_checkGC
(
L
Ë
	`luaC_c⁄dGC
(L,,)

	)

118 
	#luaC_b¨rõr
(
L
,
p
,
v
) ( \

119 (
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) ? \

120 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),
	`gcvÆue
(
v
)Ë: 
	`ˇ°_void
(0))

	)

122 
	#luaC_b¨rõrback
(
L
,
p
,
v
) ( \

123 (
	`iscﬁÀ˘abÀ
(
v
Ë&& 
	`isbœck
(
p
Ë&& 
	`iswhôe
(
	`gcvÆue
(v))) ? \

124 
	`luaC_b¨rõrback_
(
L
,
p
Ë: 
	`ˇ°_void
(0))

	)

126 
	#luaC_objb¨rõr
(
L
,
p
,
o
) ( \

127 (
	`isbœck
(
p
Ë&& 
	`iswhôe
(
o
)) ? \

128 
	`luaC_b¨rõr_
(
L
,
	`obj2gco
(
p
),obj2gco(
o
)Ë: 
	`ˇ°_void
(0))

	)

130 
	#luaC_upvÆb¨rõr
(
L
,
uv
) ( \

131 (
	`iscﬁÀ˘abÀ
((
uv
)->
v
Ë&& !
	`upis›í
(uv)) ? \

132 
	`luaC_upvÆb¨rõr_
(
L
,
uv
Ë: 
	`ˇ°_void
(0))

	)

134 
LUAI_FUNC
 
luaC_fix
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
);

135 
LUAI_FUNC
 
luaC_‰ìÆlobje˘s
 (
lua_Sèã
 *
L
);

136 
LUAI_FUNC
 
luaC_°ï
 (
lua_Sèã
 *
L
);

137 
LUAI_FUNC
 
luaC_ru¡û°©e
 (
lua_Sèã
 *
L
, 
°©esmask
);

138 
LUAI_FUNC
 
luaC_fuŒgc
 (
lua_Sèã
 *
L
, 
i£mîgícy
);

139 
LUAI_FUNC
 
GCObje˘
 *
luaC_√wobj
 (
lua_Sèã
 *
L
, 
â
, 
size_t
 
sz
);

140 
LUAI_FUNC
 
luaC_b¨rõr_
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, GCObje˘ *
v
);

141 
LUAI_FUNC
 
luaC_b¨rõrback_
 (
lua_Sèã
 *
L
, 
TabÀ
 *
o
);

142 
LUAI_FUNC
 
luaC_upvÆb¨rõr_
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

143 
LUAI_FUNC
 
luaC_checkföÆizî
 (
lua_Sèã
 *
L
, 
GCObje˘
 *
o
, 
TabÀ
 *
mt
);

144 
LUAI_FUNC
 
luaC_upvdeccou¡
 (
lua_Sèã
 *
L
, 
UpVÆ
 *
uv
);

	@lib/lua/src/linit.c

8 
	#löô_c


	)

9 
	#LUA_LIB


	)

27 
	~"Õªfix.h
"

30 
	~<°ddef.h
>

32 
	~"lua.h
"

34 
	~"luÆib.h
"

35 
	~"œuxlib.h
"

42 c⁄° 
luaL_Reg
 
	glﬂdedlibs
[] = {

43 {"_G", 
lua›í_ba£
},

44 {
LUA_LOADLIBNAME
, 
lua›í_∑ckage
},

45 {
LUA_COLIBNAME
, 
lua›í_c‹outöe
},

46 {
LUA_TABLIBNAME
, 
lua›í_èbÀ
},

47 {
LUA_IOLIBNAME
, 
lua›í_io
},

48 {
LUA_OSLIBNAME
, 
lua›í_os
},

49 {
LUA_STRLIBNAME
, 
lua›í_°rög
},

50 {
LUA_MATHLIBNAME
, 
lua›í_m©h
},

51 {
LUA_UTF8LIBNAME
, 
lua›í_utf8
},

52 {
LUA_DBLIBNAME
, 
lua›í_debug
},

53 #i‡
deföed
(
LUA_COMPAT_BITLIB
)

54 {
LUA_BITLIBNAME
, 
lua›í_bô32
},

56 {
NULL
, NULL}

60 
LUALIB_API
 
	$luaL_›ílibs
 (
lua_Sèã
 *
L
) {

61 c⁄° 
luaL_Reg
 *
lib
;

63 
lib
 = 
lﬂdedlibs
;Üib->
func
;Üib++) {

64 
	`luaL_ªquúef
(
L
, 
lib
->
«me
,Üib->
func
, 1);

65 
	`lua_p›
(
L
, 1);

67 
	}
}

	@lib/lua/src/liolib.c

7 
	#liﬁib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<loˇÀ.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"œuxlib.h
"

23 
	~"luÆib.h
"

32 #i‡!
deföed
(
l_checkmode
)

35 #i‡!
deföed
(
L_MODEEXT
)

36 
	#L_MODEEXT
 "b"

	)

40 
	#l_checkmode
(
mode
) \

41 (*
mode
 !'\0' && 
	`°rchr
("rwa", *(mode++)Ë!
NULL
 && \

42 (*
mode
 != '+' || (++mode, 1)) && \

43 (
	`°r•n
(
mode
, 
L_MODEEXT
Ë=
	`°æí
(mode)))

	)

54 #i‡!
deföed
(
l_p›í
)

56 #i‡
deföed
(
LUA_USE_POSIX
)

58 
	#l_p›í
(
L
,
c
,
m
Ë(
	`fÊush
(
NULL
), 
	`p›í
(c,m))

	)

59 
	#l_p˛o£
(
L
,
fûe
Ë(
	`p˛o£
(fûe))

	)

61 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

63 
	#l_p›í
(
L
,
c
,
m
Ë(
	`_p›í
(c,m))

	)

64 
	#l_p˛o£
(
L
,
fûe
Ë(
	`_p˛o£
(fûe))

	)

69 
	#l_p›í
(
L
,
c
,
m
) \

70 (()(()
c
, 
m
), \

71 
	`luaL_îr‹
(
L
, "'popen'Çot supported"), \

72 (
FILE
*)0)

	)

73 
	#l_p˛o£
(
L
,
fûe
Ë(()L, ()fûe, -1)

	)

82 #i‡!
deföed
(
l_gëc
)

84 #i‡
deföed
(
LUA_USE_POSIX
)

85 
	#l_gëc
(
f
Ë
	`gëc_u∆ocked
(f)

	)

86 
	#l_lockfûe
(
f
Ë
	`Êockfûe
(f)

	)

87 
	#l_u∆ockfûe
(
f
Ë
	`fu∆ockfûe
(f)

	)

89 
	#l_gëc
(
f
Ë
	`gëc
(f)

	)

90 
	#l_lockfûe
(
f
Ë(()0)

	)

91 
	#l_u∆ockfûe
(
f
Ë(()0)

	)

103 #i‡!
deföed
(
l_f£ek
)

105 #i‡
deföed
(
LUA_USE_POSIX
)

107 
	~<sys/ty≥s.h
>

109 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£eko
(f,o,w)

	)

110 
	#l_·ñl
(
f
Ë
	`·ñlo
(f)

	)

111 
	#l_£eknum
 
off_t


	)

113 #ñi‡
deföed
(
LUA_USE_WINDOWS
Ë&& !deföed(
_CRTIMP_TYPEINFO
) \

114 && 
deföed
(
_MSC_VER
Ë&& (
	g_MSC_VER
 >= 1400)

117 
	#l_f£ek
(
f
,
o
,
w
Ë
	`_f£eki64
(f,o,w)

	)

118 
	#l_·ñl
(
f
Ë
	`_·ñli64
(f)

	)

119 
	#l_£eknum
 
__öt64


	)

124 
	#l_f£ek
(
f
,
o
,
w
Ë
	`f£ek
(f,o,w)

	)

125 
	#l_·ñl
(
f
Ë
	`·ñl
(f)

	)

126 
	#l_£eknum
 

	)

135 
	#IO_PREFIX
 "_IO_"

	)

136 
	#IOPREF_LEN
 ((
IO_PREFIX
)/(Ë- 1)

	)

137 
	#IO_INPUT
 (
IO_PREFIX
 "öput")

	)

138 
	#IO_OUTPUT
 (
IO_PREFIX
 "ouçut")

	)

141 
luaL_Såóm
 
	tLSåóm
;

144 
	#tﬁ°ªam
(
L
Ë((
LSåóm
 *)
	`luaL_checkud©a
(L, 1, 
LUA_FILEHANDLE
))

	)

146 
	#is˛o£d
(
p
Ë(’)->
˛o£f
 =
NULL
)

	)

149 
	$io_ty≥
 (
lua_Sèã
 *
L
) {

150 
LSåóm
 *
p
;

151 
	`luaL_check™y
(
L
, 1);

152 
p
 = (
LSåóm
 *)
	`luaL_ã°ud©a
(
L
, 1, 
LUA_FILEHANDLE
);

153 i‡(
p
 =
NULL
)

154 
	`lua_pushnû
(
L
);

155 i‡(
	`is˛o£d
(
p
))

156 
	`lua_pushlôîÆ
(
L
, "closed file");

158 
	`lua_pushlôîÆ
(
L
, "file");

160 
	}
}

163 
	$f_to°rög
 (
lua_Sèã
 *
L
) {

164 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

165 i‡(
	`is˛o£d
(
p
))

166 
	`lua_pushlôîÆ
(
L
, "file (closed)");

168 
	`lua_pushf°rög
(
L
, "fûê(%p)", 
p
->
f
);

170 
	}
}

173 
FILE
 *
	$tofûe
 (
lua_Sèã
 *
L
) {

174 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

175 i‡(
	`is˛o£d
(
p
))

176 
	`luaL_îr‹
(
L
, "attemptÅo useá closed file");

177 
	`lua_as£π
(
p
->
f
);

178  
p
->
f
;

179 
	}
}

187 
LSåóm
 *
	$√w¥efûe
 (
lua_Sèã
 *
L
) {

188 
LSåóm
 *
p
 = (LSåóm *)
	`lua_√wu£rd©a
(
L
, (LStream));

189 
p
->
˛o£f
 = 
NULL
;

190 
	`luaL_£tmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

191  
p
;

192 
	}
}

200 
	$aux_˛o£
 (
lua_Sèã
 *
L
) {

201 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

202 vﬁ©ûê
lua_CFun˘i⁄
 
cf
 = 
p
->
˛o£f
;

203 
p
->
˛o£f
 = 
NULL
;

204  (*
cf
)(
L
);

205 
	}
}

208 
	$io_˛o£
 (
lua_Sèã
 *
L
) {

209 i‡(
	`lua_i¢⁄e
(
L
, 1))

210 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_OUTPUT
);

211 
	`tofûe
(
L
);

212  
	`aux_˛o£
(
L
);

213 
	}
}

216 
	$f_gc
 (
lua_Sèã
 *
L
) {

217 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

218 i‡(!
	`is˛o£d
(
p
Ë&&Ö->
f
 !
NULL
)

219 
	`aux_˛o£
(
L
);

221 
	}
}

227 
	$io_f˛o£
 (
lua_Sèã
 *
L
) {

228 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

229 
ªs
 = 
	`f˛o£
(
p
->
f
);

230  
	`luaL_fûîesu…
(
L
, (
ªs
 =0), 
NULL
);

231 
	}
}

234 
LSåóm
 *
	$√wfûe
 (
lua_Sèã
 *
L
) {

235 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

236 
p
->
f
 = 
NULL
;

237 
p
->
˛o£f
 = &
io_f˛o£
;

238  
p
;

239 
	}
}

242 
	$›ícheck
 (
lua_Sèã
 *
L
, c⁄° *
‚ame
, c⁄° *
mode
) {

243 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

244 
p
->
f
 = 
	`f›í
(
‚ame
, 
mode
);

245 i‡(
p
->
f
 =
NULL
)

246 
	`luaL_îr‹
(
L
, "ˇ¬Ÿ o≥¿fûê'%s' (%s)", 
‚ame
, 
	`°ªº‹
(
î∫o
));

247 
	}
}

250 
	$io_›í
 (
lua_Sèã
 *
L
) {

251 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

252 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

253 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

254 c⁄° *
md
 = 
mode
;

255 
	`luaL_¨gcheck
(
L
, 
	`l_checkmode
(
md
), 2, "invalid mode");

256 
p
->
f
 = 
	`f›í
(
fûíame
, 
mode
);

257  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

258 
	}
}

264 
	$io_p˛o£
 (
lua_Sèã
 *
L
) {

265 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

266  
	`luaL_exe¸esu…
(
L
, 
	`l_p˛o£
(L, 
p
->
f
));

267 
	}
}

270 
	$io_p›í
 (
lua_Sèã
 *
L
) {

271 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

272 c⁄° *
mode
 = 
	`luaL_›t°rög
(
L
, 2, "r");

273 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

274 
p
->
f
 = 
	`l_p›í
(
L
, 
fûíame
, 
mode
);

275 
p
->
˛o£f
 = &
io_p˛o£
;

276  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, 
fûíame
) : 1;

277 
	}
}

280 
	$io_tmpfûe
 (
lua_Sèã
 *
L
) {

281 
LSåóm
 *
p
 = 
	`√wfûe
(
L
);

282 
p
->
f
 = 
	`tmpfûe
();

283  (
p
->
f
 =
NULL
Ë? 
	`luaL_fûîesu…
(
L
, 0, NULL) : 1;

284 
	}
}

287 
FILE
 *
	$gëiofûe
 (
lua_Sèã
 *
L
, c⁄° *
födex
) {

288 
LSåóm
 *
p
;

289 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
födex
);

290 
p
 = (
LSåóm
 *)
	`lua_tou£rd©a
(
L
, -1);

291 i‡(
	`is˛o£d
(
p
))

292 
	`luaL_îr‹
(
L
, "°™d¨d %†fûêi†˛o£d", 
födex
 + 
IOPREF_LEN
);

293  
p
->
f
;

294 
	}
}

297 
	$g_iofûe
 (
lua_Sèã
 *
L
, c⁄° *
f
, c⁄° *
mode
) {

298 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

299 c⁄° *
fûíame
 = 
	`lua_to°rög
(
L
, 1);

300 i‡(
fûíame
)

301 
	`›ícheck
(
L
, 
fûíame
, 
mode
);

303 
	`tofûe
(
L
);

304 
	`lua_pushvÆue
(
L
, 1);

306 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

309 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
f
);

311 
	}
}

314 
	$io_öput
 (
lua_Sèã
 *
L
) {

315  
	`g_iofûe
(
L
, 
IO_INPUT
, "r");

316 
	}
}

319 
	$io_ouçut
 (
lua_Sèã
 *
L
) {

320  
	`g_iofûe
(
L
, 
IO_OUTPUT
, "w");

321 
	}
}

324 
io_ªadlöe
 (
lua_Sèã
 *
L
);

331 
	#MAXARGLINE
 250

	)

333 
	$aux_löes
 (
lua_Sèã
 *
L
, 
to˛o£
) {

334 
n
 = 
	`lua_gët›
(
L
) - 1;

335 
	`luaL_¨gcheck
(
L
, 
n
 <
MAXARGLINE
, MAXARGLINE + 2, "too manyárguments");

336 
	`lua_pushöãgî
(
L
, 
n
);

337 
	`lua_pushboﬁón
(
L
, 
to˛o£
);

338 
	`lua_rŸ©e
(
L
, 2, 2);

339 
	`lua_pushc˛osuª
(
L
, 
io_ªadlöe
, 3 + 
n
);

340 
	}
}

343 
	$f_löes
 (
lua_Sèã
 *
L
) {

344 
	`tofûe
(
L
);

345 
	`aux_löes
(
L
, 0);

347 
	}
}

350 
	$io_löes
 (
lua_Sèã
 *
L
) {

351 
to˛o£
;

352 i‡(
	`lua_i¢⁄e
(
L
, 1)Ë
	`lua_pushnû
(L);

353 i‡(
	`lua_i¢û
(
L
, 1)) {

354 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, 
IO_INPUT
);

355 
	`lua_ª∂a˚
(
L
, 1);

356 
	`tofûe
(
L
);

357 
to˛o£
 = 0;

360 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

361 
	`›ícheck
(
L
, 
fûíame
, "r");

362 
	`lua_ª∂a˚
(
L
, 1);

363 
to˛o£
 = 1;

365 
	`aux_löes
(
L
, 
to˛o£
);

367 
	}
}

378 
	#MAXRN
 200

	)

382 
FILE
 *
	mf
;

383 
	mc
;

384 
	mn
;

385 
	mbuff
[
MAXRN
 + 1];

386 } 
	tRN
;

392 
	$√xtc
 (
RN
 *
∫
) {

393 i‡(
∫
->
n
 >
MAXRN
) {

394 
∫
->
buff
[0] = '\0';

398 
∫
->
buff
[∫->
n
++] =Ñn->
c
;

399 
∫
->
c
 = 
	`l_gëc
‘n->
f
);

402 
	}
}

408 
	$ã°2
 (
RN
 *
∫
, c⁄° *
£t
) {

409 i‡(
∫
->
c
 =
£t
[0] || (rn->c == set[1] &&Ñn->c != '\0'))

410  
	`√xtc
(
∫
);

412 
	}
}

418 
	$ªaddigôs
 (
RN
 *
∫
, 
hex
) {

419 
cou¡
 = 0;

420 (
hex
 ? 
	`isxdigô
(
∫
->
c
Ë: 
	`isdigô
‘n->c)Ë&& 
	`√xtc
(rn))

421 
cou¡
++;

422  
cou¡
;

423 
	}
}

431 
	$ªad_numbî
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

432 
RN
 
∫
;

433 
cou¡
 = 0;

434 
hex
 = 0;

435 
de˝
[2];

436 
∫
.
f
 = f;Ñn.
n
 = 0;

437 
de˝
[0] = 
	`lua_gëloˇÀde˝oöt
();

438 
de˝
[1] = '\0';

439 
	`l_lockfûe
(
∫
.
f
);

440 dÿ{ 
∫
.
c
 = 
	`l_gëc
‘n.
f
); } 
	`is•a˚
(rn.c));

441 
	`ã°2
(&
∫
, "-+");

442 i‡(
	`ã°2
(&
∫
, "0")) {

443 i‡(
	`ã°2
(&
∫
, "xX")Ë
hex
 = 1;

444 
cou¡
 = 1;

446 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

447 i‡(
	`ã°2
(&
∫
, 
de˝
))

448 
cou¡
 +
	`ªaddigôs
(&
∫
, 
hex
);

449 i‡(
cou¡
 > 0 && 
	`ã°2
(&
∫
, (
hex
 ? "pP" : "eE"))) {

450 
	`ã°2
(&
∫
, "-+");

451 
	`ªaddigôs
(&
∫
, 0);

453 
	`ungëc
(
∫
.
c
,Ñn.
f
);

454 
	`l_u∆ockfûe
(
∫
.
f
);

455 
∫
.
buff
[∫.
n
] = '\0';

456 i‡(
	`lua_°rögt⁄umbî
(
L
, 
∫
.
buff
))

459 
	`lua_pushnû
(
L
);

462 
	}
}

465 
	$ã°_eof
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

466 
c
 = 
	`gëc
(
f
);

467 
	`ungëc
(
c
, 
f
);

468 
	`lua_pushlôîÆ
(
L
, "");

469  (
c
 !
EOF
);

470 
	}
}

473 
	$ªad_löe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
ch›
) {

474 
luaL_Buf„r
 
b
;

475 
c
 = '\0';

476 
	`luaL_bufföô
(
L
, &
b
);

477 
c
 !
EOF
 && c != '\n') {

478 *
buff
 = 
	`luaL_¥ïbuf„r
(&
b
);

479 
i
 = 0;

480 
	`l_lockfûe
(
f
);

481 
i
 < 
LUAL_BUFFERSIZE
 && (
c
 = 
	`l_gëc
(
f
)Ë!
EOF
 && c != '\n')

482 
buff
[
i
++] = 
c
;

483 
	`l_u∆ockfûe
(
f
);

484 
	`luaL_addsize
(&
b
, 
i
);

486 i‡(!
ch›
 && 
c
 == '\n')

487 
	`luaL_addch¨
(&
b
, 
c
);

488 
	`luaL_pushªsu…
(&
b
);

490  (
c
 ='\n' || 
	`lua_øwÀn
(
L
, -1) > 0);

491 
	}
}

494 
	$ªad_Æl
 (
lua_Sèã
 *
L
, 
FILE
 *
f
) {

495 
size_t
 
ƒ
;

496 
luaL_Buf„r
 
b
;

497 
	`luaL_bufföô
(
L
, &
b
);

499 *
p
 = 
	`luaL_¥ïbuf„r
(&
b
);

500 
ƒ
 = 
	`‰ód
(
p
, (), 
LUAL_BUFFERSIZE
, 
f
);

501 
	`luaL_addsize
(&
b
, 
ƒ
);

502 } 
ƒ
 =
LUAL_BUFFERSIZE
);

503 
	`luaL_pushªsu…
(&
b
);

504 
	}
}

507 
	$ªad_ch¨s
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
size_t
 
n
) {

508 
size_t
 
ƒ
;

509 *
p
;

510 
luaL_Buf„r
 
b
;

511 
	`luaL_bufföô
(
L
, &
b
);

512 
p
 = 
	`luaL_¥ïbuffsize
(&
b
, 
n
);

513 
ƒ
 = 
	`‰ód
(
p
, (), 
n
, 
f
);

514 
	`luaL_addsize
(&
b
, 
ƒ
);

515 
	`luaL_pushªsu…
(&
b
);

516  (
ƒ
 > 0);

517 
	}
}

520 
	$g_ªad
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
fú°
) {

521 
«rgs
 = 
	`lua_gët›
(
L
) - 1;

522 
suc˚ss
;

523 
n
;

524 
	`˛óªº
(
f
);

525 i‡(
«rgs
 == 0) {

526 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

527 
n
 = 
fú°
+1;

530 
	`luaL_check°ack
(
L
, 
«rgs
+
LUA_MINSTACK
, "too manyárguments");

531 
suc˚ss
 = 1;

532 
n
 = 
fú°
; 
«rgs
-- && 
suc˚ss
;Ç++) {

533 i‡(
	`lua_ty≥
(
L
, 
n
Ë=
LUA_TNUMBER
) {

534 
size_t
 
l
 = (size_t)
	`luaL_checköãgî
(
L
, 
n
);

535 
suc˚ss
 = (
l
 =0Ë? 
	`ã°_eof
(
L
, 
f
Ë: 
	`ªad_ch¨s
(L, f,Ü);

538 c⁄° *
p
 = 
	`luaL_check°rög
(
L
, 
n
);

539 i‡(*
p
 == '*')Ö++;

540 *
p
) {

542 
suc˚ss
 = 
	`ªad_numbî
(
L
, 
f
);

545 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 1);

548 
suc˚ss
 = 
	`ªad_löe
(
L
, 
f
, 0);

551 
	`ªad_Æl
(
L
, 
f
);

552 
suc˚ss
 = 1;

555  
	`luaL_¨gîr‹
(
L
, 
n
, "invalid format");

560 i‡(
	`„º‹
(
f
))

561  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

562 i‡(!
suc˚ss
) {

563 
	`lua_p›
(
L
, 1);

564 
	`lua_pushnû
(
L
);

566  
n
 - 
fú°
;

567 
	}
}

570 
	$io_ªad
 (
lua_Sèã
 *
L
) {

571  
	`g_ªad
(
L
, 
	`gëiofûe
(L, 
IO_INPUT
), 1);

572 
	}
}

575 
	$f_ªad
 (
lua_Sèã
 *
L
) {

576  
	`g_ªad
(
L
, 
	`tofûe
(L), 2);

577 
	}
}

580 
	$io_ªadlöe
 (
lua_Sèã
 *
L
) {

581 
LSåóm
 *
p
 = (LSåóm *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(1));

582 
i
;

583 
n
 = ()
	`lua_toöãgî
(
L
, 
	`lua_upvÆueödex
(2));

584 i‡(
	`is˛o£d
(
p
))

585  
	`luaL_îr‹
(
L
, "file isálready closed");

586 
	`lua_£â›
(
L
 , 1);

587 
	`luaL_check°ack
(
L
, 
n
, "too manyárguments");

588 
i
 = 1; i <
n
; i++)

589 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(3 + 
i
));

590 
n
 = 
	`g_ªad
(
L
, 
p
->
f
, 2);

591 
	`lua_as£π
(
n
 > 0);

592 i‡(
	`lua_toboﬁón
(
L
, -
n
))

593  
n
;

595 i‡(
n
 > 1) {

597  
	`luaL_îr‹
(
L
, "%s", 
	`lua_to°rög
(L, -
n
 + 1));

599 i‡(
	`lua_toboﬁón
(
L
, 
	`lua_upvÆueödex
(3))) {

600 
	`lua_£â›
(
L
, 0);

601 
	`lua_pushvÆue
(
L
, 
	`lua_upvÆueödex
(1));

602 
	`aux_˛o£
(
L
);

606 
	}
}

611 
	$g_wrôe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, 
¨g
) {

612 
«rgs
 = 
	`lua_gët›
(
L
Ë- 
¨g
;

613 
°©us
 = 1;

614 ; 
«rgs
--; 
¨g
++) {

615 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë=
LUA_TNUMBER
) {

617 
Àn
 = 
	`lua_isöãgî
(
L
, 
¨g
)

618 ? 
	`Ârötf
(
f
, 
LUA_INTEGER_FMT
, 
	`lua_toöãgî
(
L
, 
¨g
))

619 : 
	`Ârötf
(
f
, 
LUA_NUMBER_FMT
, 
	`lua_t⁄umbî
(
L
, 
¨g
));

620 
°©us
 = sètu†&& (
Àn
 > 0);

623 
size_t
 
l
;

624 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

625 
°©us
 = sètu†&& (
	`fwrôe
(
s
, (), 
l
, 
f
) ==Ü);

628 i‡(
°©us
)  1;

629  
	`luaL_fûîesu…
(
L
, 
°©us
, 
NULL
);

630 
	}
}

633 
	$io_wrôe
 (
lua_Sèã
 *
L
) {

634  
	`g_wrôe
(
L
, 
	`gëiofûe
(L, 
IO_OUTPUT
), 1);

635 
	}
}

638 
	$f_wrôe
 (
lua_Sèã
 *
L
) {

639 
FILE
 *
f
 = 
	`tofûe
(
L
);

640 
	`lua_pushvÆue
(
L
, 1);

641  
	`g_wrôe
(
L
, 
f
, 2);

642 
	}
}

645 
	$f_£ek
 (
lua_Sèã
 *
L
) {

646 c⁄° 
mode
[] = {
SEEK_SET
, 
SEEK_CUR
, 
SEEK_END
};

647 c⁄° *c⁄° 
modíames
[] = {"£t", "cur", "íd", 
NULL
};

648 
FILE
 *
f
 = 
	`tofûe
(
L
);

649 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "cur", 
modíames
);

650 
lua_I¡egî
 
p3
 = 
	`luaL_›töãgî
(
L
, 3, 0);

651 
l_£eknum
 
off£t
 = (l_£eknum)
p3
;

652 
	`luaL_¨gcheck
(
L
, (
lua_I¡egî
)
off£t
 =
p3
, 3,

654 
›
 = 
	`l_f£ek
(
f
, 
off£t
, 
mode
[op]);

655 i‡(
›
)

656  
	`luaL_fûîesu…
(
L
, 0, 
NULL
);

658 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
	`l_·ñl
(
f
));

661 
	}
}

664 
	$f_£tvbuf
 (
lua_Sèã
 *
L
) {

665 c⁄° 
mode
[] = {
_IONBF
, 
_IOFBF
, 
_IOLBF
};

666 c⁄° *c⁄° 
modíames
[] = {"no", "fuŒ", "löe", 
NULL
};

667 
FILE
 *
f
 = 
	`tofûe
(
L
);

668 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, 
NULL
, 
modíames
);

669 
lua_I¡egî
 
sz
 = 
	`luaL_›töãgî
(
L
, 3, 
LUAL_BUFFERSIZE
);

670 
ªs
 = 
	`£tvbuf
(
f
, 
NULL
, 
mode
[
›
], (
size_t
)
sz
);

671  
	`luaL_fûîesu…
(
L
, 
ªs
 =0, 
NULL
);

672 
	}
}

676 
	$io_Êush
 (
lua_Sèã
 *
L
) {

677  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`gëiofûe
(L, 
IO_OUTPUT
)Ë=0, 
NULL
);

678 
	}
}

681 
	$f_Êush
 (
lua_Sèã
 *
L
) {

682  
	`luaL_fûîesu…
(
L
, 
	`fÊush
(
	`tofûe
(L)Ë=0, 
NULL
);

683 
	}
}

689 c⁄° 
luaL_Reg
 
	giﬁib
[] = {

690 {"˛o£", 
io_˛o£
},

691 {"Êush", 
io_Êush
},

692 {"öput", 
io_öput
},

693 {"löes", 
io_löes
},

694 {"›í", 
io_›í
},

695 {"ouçut", 
io_ouçut
},

696 {"p›í", 
io_p›í
},

697 {"ªad", 
io_ªad
},

698 {"tmpfûe", 
io_tmpfûe
},

699 {"ty≥", 
io_ty≥
},

700 {"wrôe", 
io_wrôe
},

701 {
NULL
, NULL}

708 c⁄° 
luaL_Reg
 
	gÊib
[] = {

709 {"˛o£", 
io_˛o£
},

710 {"Êush", 
f_Êush
},

711 {"löes", 
f_löes
},

712 {"ªad", 
f_ªad
},

713 {"£ek", 
f_£ek
},

714 {"£tvbuf", 
f_£tvbuf
},

715 {"wrôe", 
f_wrôe
},

716 {"__gc", 
f_gc
},

717 {"__to°rög", 
f_to°rög
},

718 {
NULL
, NULL}

722 
	$¸óãmëa
 (
lua_Sèã
 *
L
) {

723 
	`luaL_√wmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

724 
	`lua_pushvÆue
(
L
, -1);

725 
	`lua_£tfõld
(
L
, -2, "__index");

726 
	`luaL_£tfuncs
(
L
, 
Êib
, 0);

727 
	`lua_p›
(
L
, 1);

728 
	}
}

734 
	$io_no˛o£
 (
lua_Sèã
 *
L
) {

735 
LSåóm
 *
p
 = 
	`tﬁ°ªam
(
L
);

736 
p
->
˛o£f
 = &
io_no˛o£
;

737 
	`lua_pushnû
(
L
);

738 
	`lua_pushlôîÆ
(
L
, "cannot close standard file");

740 
	}
}

743 
	$¸óã°dfûe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, c⁄° *
k
,

744 c⁄° *
‚ame
) {

745 
LSåóm
 *
p
 = 
	`√w¥efûe
(
L
);

746 
p
->
f
 = f;

747 
p
->
˛o£f
 = &
io_no˛o£
;

748 i‡(
k
 !
NULL
) {

749 
	`lua_pushvÆue
(
L
, -1);

750 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, 
k
);

752 
	`lua_£tfõld
(
L
, -2, 
‚ame
);

753 
	}
}

756 
LUAMOD_API
 
	$lua›í_io
 (
lua_Sèã
 *
L
) {

757 
	`luaL_√wlib
(
L
, 
iﬁib
);

758 
	`¸óãmëa
(
L
);

760 
	`¸óã°dfûe
(
L
, 
°dö
, 
IO_INPUT
, "stdin");

761 
	`¸óã°dfûe
(
L
, 
°dout
, 
IO_OUTPUT
, "stdout");

762 
	`¸óã°dfûe
(
L
, 
°dîr
, 
NULL
, "stderr");

764 
	}
}

	@lib/lua/src/llex.c

7 
	#Œex_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"l˘y≥.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lgc.h
"

22 
	~"Œex.h
"

23 
	~"lobje˘.h
"

24 
	~"Õ¨£r.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"lzio.h
"

32 
	#√xt
(
ls
Ë÷s->
cuºít
 = 
	`zgëc
÷s->
z
))

	)

36 
	#cuºIsNewlöe
(
ls
Ë÷s->
cuºít
 ='\n' ||Üs->cuºíà='\r')

	)

40 c⁄° *c⁄° 
	gluaX_tokís
 [] = {

51 
	#ßve_™d_√xt
(
ls
Ë(
	`ßve
÷s,Üs->
cuºít
), 
	`√xt
÷s))

	)

54 
l_n‹ë
 
Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
);

57 
	$ßve
 (
LexSèã
 *
ls
, 
c
) {

58 
Mbuf„r
 *
b
 = 
ls
->
buff
;

59 i‡(
	`luaZ_bufÊí
(
b
Ë+ 1 > 
	`luaZ_sizebuf„r
(b)) {

60 
size_t
 
√wsize
;

61 i‡(
	`luaZ_sizebuf„r
(
b
Ë>
MAX_SIZE
/2)

62 
	`Àxîr‹
(
ls
, "lexicalÉlementÅooÜong", 0);

63 
√wsize
 = 
	`luaZ_sizebuf„r
(
b
) * 2;

64 
	`luaZ_ªsizebuf„r
(
ls
->
L
, 
b
, 
√wsize
);

66 
b
->
buf„r
[
	`luaZ_bufÊí
(b)++] = 
	`ˇ°
(, 
c
);

67 
	}
}

70 
	$luaX_öô
 (
lua_Sèã
 *
L
) {

71 
i
;

72 
TSåög
 *
e
 = 
	`luaS_√wlôîÆ
(
L
, 
LUA_ENV
);

73 
	`luaC_fix
(
L
, 
	`obj2gco
(
e
));

74 
i
=0; i<
NUM_RESERVED
; i++) {

75 
TSåög
 *
ts
 = 
	`luaS_√w
(
L
, 
luaX_tokís
[
i
]);

76 
	`luaC_fix
(
L
, 
	`obj2gco
(
ts
));

77 
ts
->
exåa
 = 
	`ˇ°_byã
(
i
+1);

79 
	}
}

82 c⁄° *
	$luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
) {

83 i‡(
tokí
 < 
FIRST_RESERVED
) {

84 
	`lua_as£π
(
tokí
 =
	`ˇ°_uch¨
(token));

85  
	`luaO_pushf°rög
(
ls
->
L
, "'%c'", 
tokí
);

88 c⁄° *
s
 = 
luaX_tokís
[
tokí
 - 
FIRST_RESERVED
];

89 i‡(
tokí
 < 
TK_EOS
)

90  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
s
);

92  
s
;

94 
	}
}

97 c⁄° *
	$txtTokí
 (
LexSèã
 *
ls
, 
tokí
) {

98 
tokí
) {

99 
TK_NAME
: 
TK_STRING
:

100 
TK_FLT
: 
TK_INT
:

101 
	`ßve
(
ls
, '\0');

102  
	`luaO_pushf°rög
(
ls
->
L
, "'%s'", 
	`luaZ_buf„r
÷s->
buff
));

104  
	`luaX_tokí2°r
(
ls
, 
tokí
);

106 
	}
}

109 
l_n‹ë
 
	$Àxîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
, 
tokí
) {

110 
msg
 = 
	`luaG_addöfo
(
ls
->
L
, msg,Üs->
sour˚
,Üs->
löíumbî
);

111 i‡(
tokí
)

112 
	`luaO_pushf°rög
(
ls
->
L
, "%†√¨ %s", 
msg
, 
	`txtTokí
÷s, 
tokí
));

113 
	`luaD_throw
(
ls
->
L
, 
LUA_ERRSYNTAX
);

114 
	}
}

117 
l_n‹ë
 
	$luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

118 
	`Àxîr‹
(
ls
, 
msg
,Üs->
t
.
tokí
);

119 
	}
}

127 
TSåög
 *
	$luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
) {

128 
lua_Sèã
 *
L
 = 
ls
->L;

129 
TVÆue
 *
o
;

130 
TSåög
 *
ts
 = 
	`luaS_√wl°r
(
L
, 
°r
, 
l
);

131 
	`£tsvÆue2s
(
L
, L->
t›
++, 
ts
);

132 
o
 = 
	`luaH_£t
(
L
, 
ls
->
h
, L->
t›
 - 1);

133 i‡(
	`âi¢û
(
o
)) {

136 
	`£tbvÆue
(
o
, 1);

137 
	`luaC_checkGC
(
L
);

140 
ts
 = 
	`tsvÆue
(
	`key‰omvÆ
(
o
));

142 
L
->
t›
--;

143  
ts
;

144 
	}
}

151 
	$ö˛öíumbî
 (
LexSèã
 *
ls
) {

152 
ﬁd
 = 
ls
->
cuºít
;

153 
	`lua_as£π
(
	`cuºIsNewlöe
(
ls
));

154 
	`√xt
(
ls
);

155 i‡(
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
ﬁd
)

156 
	`√xt
(
ls
);

157 i‡(++
ls
->
löíumbî
 >
MAX_INT
)

158 
	`Àxîr‹
(
ls
, "chunk hasÅoo manyÜines", 0);

159 
	}
}

162 
	$luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
, 
TSåög
 *
sour˚
,

163 
fú°ch¨
) {

164 
ls
->
t
.
tokí
 = 0;

165 
ls
->
de˝oöt
 = '.';

166 
ls
->
L
 = L;

167 
ls
->
cuºít
 = 
fú°ch¨
;

168 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

169 
ls
->
z
 = z;

170 
ls
->
fs
 = 
NULL
;

171 
ls
->
löíumbî
 = 1;

172 
ls
->
œ°löe
 = 1;

173 
ls
->
sour˚
 = source;

174 
ls
->
ívn
 = 
	`luaS_√wlôîÆ
(
L
, 
LUA_ENV
);

175 
	`luaZ_ªsizebuf„r
(
ls
->
L
,Üs->
buff
, 
LUA_MINBUFFER
);

176 
	}
}

187 
	$check_√xt1
 (
LexSèã
 *
ls
, 
c
) {

188 i‡(
ls
->
cuºít
 =
c
) {

189 
	`√xt
(
ls
);

193 
	}
}

200 
	$check_√xt2
 (
LexSèã
 *
ls
, c⁄° *
£t
) {

201 
	`lua_as£π
(
£t
[2] == '\0');

202 i‡(
ls
->
cuºít
 =
£t
[0] ||Üs->current == set[1]) {

203 
	`ßve_™d_√xt
(
ls
);

207 
	}
}

213 
	$buf‰ïœ˚
 (
LexSèã
 *
ls
, 
‰om
, 
to
) {

214 i‡(
‰om
 !
to
) {

215 
size_t
 
n
 = 
	`luaZ_bufÊí
(
ls
->
buff
);

216 *
p
 = 
	`luaZ_buf„r
(
ls
->
buff
);

217 
n
--)

218 i‡(
p
[
n
] =
‰om
Ëp[n] = 
to
;

220 
	}
}

227 
	$åyde˝oöt
 (
LexSèã
 *
ls
, 
TVÆue
 *
o
) {

228 
ﬁd
 = 
ls
->
de˝oöt
;

229 
ls
->
de˝oöt
 = 
	`lua_gëloˇÀde˝oöt
();

230 
	`buf‰ïœ˚
(
ls
, 
ﬁd
,Üs->
de˝oöt
);

231 i‡(
	`luaO_°r2num
(
	`luaZ_buf„r
(
ls
->
buff
), 
o
) == 0) {

233 
	`buf‰ïœ˚
(
ls
,Üs->
de˝oöt
, '.');

234 
	`Àxîr‹
(
ls
, "mÆf‹medÇumbî", 
TK_FLT
);

236 
	}
}

244 
	$ªad_numîÆ
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

245 
TVÆue
 
obj
;

246 c⁄° *
expo
 = "Ee";

247 
fú°
 = 
ls
->
cuºít
;

248 
	`lua_as£π
(
	`lisdigô
(
ls
->
cuºít
));

249 
	`ßve_™d_√xt
(
ls
);

250 i‡(
fú°
 ='0' && 
	`check_√xt2
(
ls
, "xX"))

251 
expo
 = "Pp";

253 i‡(
	`check_√xt2
(
ls
, 
expo
))

254 
	`check_√xt2
(
ls
, "-+");

255 i‡(
	`lisxdigô
(
ls
->
cuºít
))

256 
	`ßve_™d_√xt
(
ls
);

257 i‡(
ls
->
cuºít
 == '.')

258 
	`ßve_™d_√xt
(
ls
);

261 
	`ßve
(
ls
, '\0');

262 
	`buf‰ïœ˚
(
ls
, '.',Üs->
de˝oöt
);

263 i‡(
	`luaO_°r2num
(
	`luaZ_buf„r
(
ls
->
buff
), &
obj
) == 0)

264 
	`åyde˝oöt
(
ls
, &
obj
);

265 i‡(
	`âisöãgî
(&
obj
)) {

266 
£möfo
->
i
 = 
	`ivÆue
(&
obj
);

267  
TK_INT
;

270 
	`lua_as£π
(
	`âisÊﬂt
(&
obj
));

271 
£möfo
->
r
 = 
	`ÊtvÆue
(&
obj
);

272  
TK_FLT
;

274 
	}
}

282 
	$skù_£p
 (
LexSèã
 *
ls
) {

283 
cou¡
 = 0;

284 
s
 = 
ls
->
cuºít
;

285 
	`lua_as£π
(
s
 == '[' || s == ']');

286 
	`ßve_™d_√xt
(
ls
);

287 
ls
->
cuºít
 == '=') {

288 
	`ßve_™d_√xt
(
ls
);

289 
cou¡
++;

291  (
ls
->
cuºít
 =
s
Ë? 
cou¡
 : (-count) - 1;

292 
	}
}

295 
	$ªad_l⁄g_°rög
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
, 
£p
) {

296 
löe
 = 
ls
->
löíumbî
;

297 
	`ßve_™d_√xt
(
ls
);

298 i‡(
	`cuºIsNewlöe
(
ls
))

299 
	`ö˛öíumbî
(
ls
);

301 
ls
->
cuºít
) {

302 
EOZ
: {

303 c⁄° *
wh©
 = (
£möfo
 ? "string" : "comment");

304 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

305 "unföishedÜ⁄g %†(°¨tögáàlöê%d)", 
wh©
, 
löe
);

306 
	`Àxîr‹
(
ls
, 
msg
, 
TK_EOS
);

310 i‡(
	`skù_£p
(
ls
Ë=
£p
) {

311 
	`ßve_™d_√xt
(
ls
);

312 
ídlo›
;

317 
	`ßve
(
ls
, '\n');

318 
	`ö˛öíumbî
(
ls
);

319 i‡(!
£möfo
Ë
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

323 i‡(
£möfo
Ë
	`ßve_™d_√xt
(
ls
);

324 
	`√xt
(
ls
);

327 } 
ídlo›
:

328 i‡(
£möfo
)

329 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
Ë+ (2 + 
£p
),

330 
	`luaZ_bufÊí
(
ls
->
buff
Ë- 2*(2 + 
£p
));

331 
	}
}

334 
	$esccheck
 (
LexSèã
 *
ls
, 
c
, c⁄° *
msg
) {

335 i‡(!
c
) {

336 i‡(
ls
->
cuºít
 !
EOZ
)

337 
	`ßve_™d_√xt
(
ls
);

338 
	`Àxîr‹
(
ls
, 
msg
, 
TK_STRING
);

340 
	}
}

343 
	$gëhexa
 (
LexSèã
 *
ls
) {

344 
	`ßve_™d_√xt
(
ls
);

345 
	`esccheck
 (
ls
, 
	`lisxdigô
÷s->
cuºít
), "hexadecimal digitÉxpected");

346  
	`luaO_hexavÆue
(
ls
->
cuºít
);

347 
	}
}

350 
	$ªadhex´sc
 (
LexSèã
 *
ls
) {

351 
r
 = 
	`gëhexa
(
ls
);

352 
r
 = (∏<< 4Ë+ 
	`gëhexa
(
ls
);

353 
	`luaZ_buf‰emove
(
ls
->
buff
, 2);

354  
r
;

355 
	}
}

358 
	$ªadutf8esc
 (
LexSèã
 *
ls
) {

359 
r
;

360 
i
 = 4;

361 
	`ßve_™d_√xt
(
ls
);

362 
	`esccheck
(
ls
,Üs->
cuºít
 == '{', "missing '{'");

363 
r
 = 
	`gëhexa
(
ls
);

364 (
	`ßve_™d_√xt
(
ls
), 
	`lisxdigô
÷s->
cuºít
))) {

365 
i
++;

366 
r
 = (∏<< 4Ë+ 
	`luaO_hexavÆue
(
ls
->
cuºít
);

367 
	`esccheck
(
ls
, 
r
 <= 0x10FFFF, "UTF-8 valueÅooÜarge");

369 
	`esccheck
(
ls
,Üs->
cuºít
 == '}', "missing '}'");

370 
	`√xt
(
ls
);

371 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

372  
r
;

373 
	}
}

376 
	$utf8esc
 (
LexSèã
 *
ls
) {

377 
buff
[
UTF8BUFFSZ
];

378 
n
 = 
	`luaO_utf8esc
(
buff
, 
	`ªadutf8esc
(
ls
));

379 ; 
n
 > 0;Ç--)

380 
	`ßve
(
ls
, 
buff
[
UTF8BUFFSZ
 - 
n
]);

381 
	}
}

384 
	$ªadde˚sc
 (
LexSèã
 *
ls
) {

385 
i
;

386 
r
 = 0;

387 
i
 = 0; i < 3 && 
	`lisdigô
(
ls
->
cuºít
); i++) {

388 
r
 = 10*∏+ 
ls
->
cuºít
 - '0';

389 
	`ßve_™d_√xt
(
ls
);

391 
	`esccheck
(
ls
, 
r
 <
UCHAR_MAX
, "decimalÉscapeÅooÜarge");

392 
	`luaZ_buf‰emove
(
ls
->
buff
, 
i
);

393  
r
;

394 
	}
}

397 
	$ªad_°rög
 (
LexSèã
 *
ls
, 
dñ
, 
SemInfo
 *
£möfo
) {

398 
	`ßve_™d_√xt
(
ls
);

399 
ls
->
cuºít
 !
dñ
) {

400 
ls
->
cuºít
) {

401 
EOZ
:

402 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_EOS
);

406 
	`Àxîr‹
(
ls
, "unföished såög", 
TK_STRING
);

409 
c
;

410 
	`ßve_™d_√xt
(
ls
);

411 
ls
->
cuºít
) {

412 'a': 
c
 = '\a'; 
ªad_ßve
;

413 'b': 
c
 = '\b'; 
ªad_ßve
;

414 'f': 
c
 = '\f'; 
ªad_ßve
;

415 'n': 
c
 = '\n'; 
ªad_ßve
;

416 'r': 
c
 = '\r'; 
ªad_ßve
;

417 't': 
c
 = '\t'; 
ªad_ßve
;

418 'v': 
c
 = '\v'; 
ªad_ßve
;

419 'x': 
c
 = 
	`ªadhex´sc
(
ls
); 
ªad_ßve
;

420 'u': 
	`utf8esc
(
ls
); 
no_ßve
;

422 
	`ö˛öíumbî
(
ls
); 
c
 = '\n'; 
⁄ly_ßve
;

424 
c
 = 
ls
->
cuºít
; 
ªad_ßve
;

425 
EOZ
: 
no_ßve
;

427 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

428 
	`√xt
(
ls
);

429 
	`lis•a˚
(
ls
->
cuºít
)) {

430 i‡(
	`cuºIsNewlöe
(
ls
)Ë
	`ö˛öíumbî
(ls);

431 
	`√xt
(
ls
);

433 
no_ßve
;

436 
	`esccheck
(
ls
, 
	`lisdigô
÷s->
cuºít
), "invalidÉscape sequence");

437 
c
 = 
	`ªadde˚sc
(
ls
);

438 
⁄ly_ßve
;

441 
ªad_ßve
:

442 
	`√xt
(
ls
);

444 
⁄ly_ßve
:

445 
	`luaZ_buf‰emove
(
ls
->
buff
, 1);

446 
	`ßve
(
ls
, 
c
);

448 
no_ßve
: ;

451 
	`ßve_™d_√xt
(
ls
);

454 
	`ßve_™d_√xt
(
ls
);

455 
£möfo
->
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
) + 1,

456 
	`luaZ_bufÊí
(
ls
->
buff
) - 2);

457 
	}
}

460 
	$Œex
 (
LexSèã
 *
ls
, 
SemInfo
 *
£möfo
) {

461 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

463 
ls
->
cuºít
) {

465 
	`ö˛öíumbî
(
ls
);

469 
	`√xt
(
ls
);

473 
	`√xt
(
ls
);

474 i‡(
ls
->
cuºít
 != '-')  '-';

476 
	`√xt
(
ls
);

477 i‡(
ls
->
cuºít
 == '[') {

478 
£p
 = 
	`skù_£p
(
ls
);

479 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

480 i‡(
£p
 >= 0) {

481 
	`ªad_l⁄g_°rög
(
ls
, 
NULL
, 
£p
);

482 
	`luaZ_ª£tbuf„r
(
ls
->
buff
);

487 !
	`cuºIsNewlöe
(
ls
Ë&&Üs->
cuºít
 !
EOZ
)

488 
	`√xt
(
ls
);

492 
£p
 = 
	`skù_£p
(
ls
);

493 i‡(
£p
 >= 0) {

494 
	`ªad_l⁄g_°rög
(
ls
, 
£möfo
, 
£p
);

495  
TK_STRING
;

497 i‡(
£p
 != -1)

498 
	`Àxîr‹
(
ls
, "övÆidÜ⁄g såög dñimôî", 
TK_STRING
);

502 
	`√xt
(
ls
);

503 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_EQ
;

507 
	`√xt
(
ls
);

508 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_LE
;

509 i‡(
	`check_√xt1
(
ls
, '<')Ë 
TK_SHL
;

513 
	`√xt
(
ls
);

514 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_GE
;

515 i‡(
	`check_√xt1
(
ls
, '>')Ë 
TK_SHR
;

519 
	`√xt
(
ls
);

520 i‡(
	`check_√xt1
(
ls
, '/')Ë 
TK_IDIV
;

524 
	`√xt
(
ls
);

525 i‡(
	`check_√xt1
(
ls
, '=')Ë 
TK_NE
;

529 
	`√xt
(
ls
);

530 i‡(
	`check_√xt1
(
ls
, ':')Ë 
TK_DBCOLON
;

534 
	`ªad_°rög
(
ls
,Üs->
cuºít
, 
£möfo
);

535  
TK_STRING
;

538 
	`ßve_™d_√xt
(
ls
);

539 i‡(
	`check_√xt1
(
ls
, '.')) {

540 i‡(
	`check_√xt1
(
ls
, '.'))

541  
TK_DOTS
;

542  
TK_CONCAT
;

544 i‡(!
	`lisdigô
(
ls
->
cuºít
))  '.';

545  
	`ªad_numîÆ
(
ls
, 
£möfo
);

549  
	`ªad_numîÆ
(
ls
, 
£möfo
);

551 
EOZ
: {

552  
TK_EOS
;

555 i‡(
	`li¶Æpha
(
ls
->
cuºít
)) {

556 
TSåög
 *
ts
;

558 
	`ßve_™d_√xt
(
ls
);

559 } 
	`li¶Ænum
(
ls
->
cuºít
));

560 
ts
 = 
	`luaX_√w°rög
(
ls
, 
	`luaZ_buf„r
÷s->
buff
),

561 
	`luaZ_bufÊí
(
ls
->
buff
));

562 
£möfo
->
ts
 =Ås;

563 i‡(
	`i§e£rved
(
ts
))

564  
ts
->
exåa
 - 1 + 
FIRST_RESERVED
;

566  
TK_NAME
;

570 
c
 = 
ls
->
cuºít
;

571 
	`√xt
(
ls
);

572  
c
;

577 
	}
}

580 
	$luaX_√xt
 (
LexSèã
 *
ls
) {

581 
ls
->
œ°löe
 =Üs->
löíumbî
;

582 i‡(
ls
->
lookahód
.
tokí
 !
TK_EOS
) {

583 
ls
->
t
 =Üs->
lookahód
;

584 
ls
->
lookahód
.
tokí
 = 
TK_EOS
;

587 
ls
->
t
.
tokí
 = 
	`Œex
÷s, &ls->t.
£möfo
);

588 
	}
}

591 
	$luaX_lookahód
 (
LexSèã
 *
ls
) {

592 
	`lua_as£π
(
ls
->
lookahód
.
tokí
 =
TK_EOS
);

593 
ls
->
lookahód
.
tokí
 = 
	`Œex
÷s, &ls->lookahód.
£möfo
);

594  
ls
->
lookahód
.
tokí
;

595 
	}
}

	@lib/lua/src/llex.h

7 #i‚de‡
Œex_h


8 
	#Œex_h


	)

10 
	~"lobje˘.h
"

11 
	~"lzio.h
"

14 
	#FIRST_RESERVED
 257

	)

17 #i‡!
deföed
(
LUA_ENV
)

18 
	#LUA_ENV
 "_ENV"

	)

26 
	eRESERVED
 {

28 
	mTK_AND
 = 
FIRST_RESERVED
, 
	mTK_BREAK
,

29 
	mTK_DO
, 
	mTK_ELSE
, 
	mTK_ELSEIF
, 
	mTK_END
, 
	mTK_FALSE
, 
	mTK_FOR
, 
	mTK_FUNCTION
,

30 
	mTK_GOTO
, 
	mTK_IF
, 
	mTK_IN
, 
	mTK_LOCAL
, 
	mTK_NIL
, 
	mTK_NOT
, 
	mTK_OR
, 
	mTK_REPEAT
,

31 
	mTK_RETURN
, 
	mTK_THEN
, 
	mTK_TRUE
, 
	mTK_UNTIL
, 
	mTK_WHILE
,

33 
	mTK_IDIV
, 
	mTK_CONCAT
, 
	mTK_DOTS
, 
	mTK_EQ
, 
	mTK_GE
, 
	mTK_LE
, 
	mTK_NE
,

34 
	mTK_SHL
, 
	mTK_SHR
,

35 
	mTK_DBCOLON
, 
	mTK_EOS
,

36 
	mTK_FLT
, 
	mTK_INT
, 
	mTK_NAME
, 
	mTK_STRING


40 
	#NUM_RESERVED
 (
	`ˇ°
(, 
TK_WHILE
-
FIRST_RESERVED
+1))

	)

44 
lua_Numbî
 
	mr
;

45 
lua_I¡egî
 
	mi
;

46 
TSåög
 *
	mts
;

47 } 
	tSemInfo
;

50 
	sTokí
 {

51 
	mtokí
;

52 
SemInfo
 
	m£möfo
;

53 } 
	tTokí
;

58 
	sLexSèã
 {

59 
	mcuºít
;

60 
	mlöíumbî
;

61 
	mœ°löe
;

62 
Tokí
 
	mt
;

63 
Tokí
 
	mlookahód
;

64 
FuncSèã
 *
	mfs
;

65 
lua_Sèã
 *
	mL
;

66 
ZIO
 *
	mz
;

67 
Mbuf„r
 *
	mbuff
;

68 
TabÀ
 *
	mh
;

69 
Dynd©a
 *
	mdyd
;

70 
TSåög
 *
	msour˚
;

71 
TSåög
 *
	mívn
;

72 
	mde˝oöt
;

73 } 
	tLexSèã
;

76 
LUAI_FUNC
 
luaX_öô
 (
lua_Sèã
 *
L
);

77 
LUAI_FUNC
 
luaX_£töput
 (
lua_Sèã
 *
L
, 
LexSèã
 *
ls
, 
ZIO
 *
z
,

78 
TSåög
 *
sour˚
, 
fú°ch¨
);

79 
LUAI_FUNC
 
TSåög
 *
luaX_√w°rög
 (
LexSèã
 *
ls
, c⁄° *
°r
, 
size_t
 
l
);

80 
LUAI_FUNC
 
luaX_√xt
 (
LexSèã
 *
ls
);

81 
LUAI_FUNC
 
luaX_lookahód
 (
LexSèã
 *
ls
);

82 
LUAI_FUNC
 
l_n‹ë
 
luaX_sy¡axîr‹
 (
LexSèã
 *
ls
, c⁄° *
s
);

83 
LUAI_FUNC
 c⁄° *
luaX_tokí2°r
 (
LexSèã
 *
ls
, 
tokí
);

	@lib/lua/src/llimits.h

7 #i‚de‡
Œimôs_h


8 
	#Œimôs_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

15 
	~"lua.h
"

22 #i‡
deföed
(
LUAI_MEM
)

23 
LUAI_UMEM
 
	tlu_mem
;

24 
LUAI_MEM
 
	tl_mem
;

25 #ñi‡
LUAI_BITSINT
 >= 32

26 
size_t
 
	tlu_mem
;

27 
±rdiff_t
 
	tl_mem
;

29 
	tlu_mem
;

30 
	tl_mem
;

35 
	tlu_byã
;

39 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

42 
	#MAX_SIZE
 ((
size_t
Ë< (
lua_I¡egî
Ë? 
MAX_SIZET
 \

43 : (
size_t
)(
LUA_MAXINTEGER
))

	)

46 
	#MAX_LUMEM
 ((
lu_mem
)(~÷u_mem)0))

	)

48 
	#MAX_LMEM
 ((
l_mem
)(
MAX_LUMEM
 >> 1))

	)

51 
	#MAX_INT
 
INT_MAX


	)

59 
	#poöt2uöt
(
p
Ë(()((
size_t
)’Ë& 
UINT_MAX
))

	)

64 #i‡
deföed
(
LUAI_USER_ALIGNMENT_T
)

65 
LUAI_USER_ALIGNMENT_T
 
	tL_UmaxÆign
;

68 
lua_Numbî
 
	mn
;

69 
	mu
;

70 *
	ms
;

71 
lua_I¡egî
 
	mi
;

72 
	ml
;

73 } 
	tL_UmaxÆign
;

79 
LUAI_UACNUMBER
 
	tl_uacNumbî
;

80 
LUAI_UACINT
 
	tl_uacI¡
;

84 #i‡
deföed
(
lua_as£π
)

85 
	#check_exp
(
c
,
e
Ë(
	`lua_as£π
(c), (e))

	)

87 
	#lua_l⁄gas£π
(
c
Ë((cË? ()0 : 
	`lua_as£π
(0))

	)

89 
	#lua_as£π
(
c
Ë(()0)

	)

90 
	#check_exp
(
c
,
e
Ë”)

	)

91 
	#lua_l⁄gas£π
(
c
Ë(()0)

	)

97 #i‡!
deföed
(
luai_≠icheck
)

98 
	#luai_≠icheck
(
l
,
e
Ë
	`lua_as£π
”)

	)

101 
	#≠i_check
(
l
,
e
,
msg
Ë
	`luai_≠icheck
÷,”Ë&& msg)

	)

105 #i‡!
deföed
(
UNUSED
)

106 
	#UNUSED
(
x
Ë(()(x))

	)

111 
	#ˇ°
(
t
, 
exp
Ë(—)”xp))

	)

113 
	#ˇ°_void
(
i
Ë
	`ˇ°
(, (i))

	)

114 
	#ˇ°_byã
(
i
Ë
	`ˇ°
(
lu_byã
, (i))

	)

115 
	#ˇ°_num
(
i
Ë
	`ˇ°
(
lua_Numbî
, (i))

	)

116 
	#ˇ°_öt
(
i
Ë
	`ˇ°
(, (i))

	)

117 
	#ˇ°_uch¨
(
i
Ë
	`ˇ°
(, (i))

	)

121 #i‡!
deföed
(
l_ˇ°S2U
)

122 
	#l_ˇ°S2U
(
i
Ë((
lua_Unsig√d
)(i))

	)

130 #i‡!
deföed
(
l_ˇ°U2S
)

131 
	#l_ˇ°U2S
(
i
Ë((
lua_I¡egî
)(i))

	)

138 #i‡
deföed
(
__GNUC__
)

139 
	#l_n‹ë
 
	`__©åibuã__
((
n‹ëu∫
))

	)

140 #ñi‡
deföed
(
_MSC_VER
) && _MSC_VER >= 1200

141 
	#l_n‹ë
 
	`__de˛•ec
(
n‹ëu∫
)

	)

143 
	#l_n‹ë
 

	)

152 #i‡!
deföed
(
LUAI_MAXCCALLS
)

153 
	#LUAI_MAXCCALLS
 200

	)

162 #i‡
LUAI_BITSINT
 >= 32

163 
	tIn°ru˘i⁄
;

165 
	tIn°ru˘i⁄
;

176 #i‡!
deföed
(
LUAI_MAXSHORTLEN
)

177 
	#LUAI_MAXSHORTLEN
 40

	)

187 #i‡!
deföed
(
MINSTRTABSIZE
)

188 
	#MINSTRTABSIZE
 128

	)

197 #i‡!
deföed
(
STRCACHE_N
)

198 
	#STRCACHE_N
 53

	)

199 
	#STRCACHE_M
 2

	)

204 #i‡!
deföed
(
LUA_MINBUFFER
)

205 
	#LUA_MINBUFFER
 32

	)

213 #i‡!
deföed
(
lua_lock
)

214 
	#lua_lock
(
L
Ë((Ë0)

	)

215 
	#lua_u∆ock
(
L
Ë((Ë0)

	)

222 #i‡!
deföed
(
luai_thªadyõld
)

223 
	#luai_thªadyõld
(
L
Ë{
	`lua_u∆ock
(L); 
	`lua_lock
(L);}

	)

232 #i‡!
deföed
(
luai_u£r°©e›í
)

233 
	#luai_u£r°©e›í
(
L
Ë(()L)

	)

236 #i‡!
deföed
(
luai_u£r°©e˛o£
)

237 
	#luai_u£r°©e˛o£
(
L
Ë(()L)

	)

240 #i‡!
deföed
(
luai_u£r°©ëhªad
)

241 
	#luai_u£r°©ëhªad
(
L
,
L1
Ë(()L)

	)

244 #i‡!
deföed
(
luai_u£r°©e‰ì
)

245 
	#luai_u£r°©e‰ì
(
L
,
L1
Ë(()L)

	)

248 #i‡!
deföed
(
luai_u£r°©îesume
)

249 
	#luai_u£r°©îesume
(
L
,
n
Ë(()L)

	)

252 #i‡!
deföed
(
luai_u£r°©eyõld
)

253 
	#luai_u£r°©eyõld
(
L
,
n
Ë(()L)

	)

263 #i‡!
deföed
(
luai_numidiv
)

264 
	#luai_numidiv
(
L
,
a
,
b
Ë(()L, 
	`l_Êo‹
(
	`luai_numdiv
(L,a,b)))

	)

268 #i‡!
deföed
(
luai_numdiv
)

269 
	#luai_numdiv
(
L
,
a
,
b
Ë(◊)/(b))

	)

279 #i‡!
deföed
(
luai_nummod
)

280 
	#luai_nummod
(
L
,
a
,
b
,
m
) \

281 { (
m
Ë
	`l_m©h›
(
fmod
)(
a
,
b
); i‡((m)*(bË< 0Ë(mË+(b); }

	)

285 #i‡!
deföed
(
luai_numpow
)

286 
	#luai_numpow
(
L
,
a
,
b
Ë(()L, 
	`l_m©h›
(
pow
)◊,b))

	)

290 #i‡!
deföed
(
luai_numadd
)

291 
	#luai_numadd
(
L
,
a
,
b
Ë(◊)+(b))

	)

292 
	#luai_numsub
(
L
,
a
,
b
Ë(◊)-(b))

	)

293 
	#luai_nummul
(
L
,
a
,
b
Ë(◊)*(b))

	)

294 
	#luai_numunm
(
L
,
a
Ë(-◊))

	)

295 
	#luai_numeq
(
a
,
b
Ë(◊)==(b))

	)

296 
	#luai_num…
(
a
,
b
Ë(◊)<(b))

	)

297 
	#luai_numÀ
(
a
,
b
Ë(◊)<=(b))

	)

298 
	#luai_numi¢™
(
a
Ë(!
	`luai_numeq
(◊), (a)))

	)

308 #i‡!
deföed
(
HARDSTACKTESTS
)

309 
	#c⁄dmove°ack
(
L
,
¥e
,
pos
Ë(()0)

	)

312 
	#c⁄dmove°ack
(
L
,
¥e
,
pos
) \

313 { 
sz_
 = (
L
)->
°acksize
; 
¥e
; 
	`luaD_ªÆloc°ack
((L), sz_); 
pos
; }

	)

316 #i‡!
deföed
(
HARDMEMTESTS
)

317 
	#c⁄dch™gemem
(
L
,
¥e
,
pos
Ë(()0)

	)

319 
	#c⁄dch™gemem
(
L
,
¥e
,
pos
) \

320 { i‡(
	`G
(
L
)->
g¸u¬ög
Ë{ 
¥e
; 
	`luaC_fuŒgc
(L, 0); 
pos
; } }

	)

	@lib/lua/src/lmathlib.c

7 
	#lm©hlib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<°dlib.h
>

14 
	~<m©h.h
>

16 
	~"lua.h
"

18 
	~"œuxlib.h
"

19 
	~"luÆib.h
"

22 #unde‡
PI


23 
	#PI
 (
	`l_m©h›
(3.141592653589793238462643383279502884))

	)

26 #i‡!
deföed
(
l_ønd
)

27 #i‡
deföed
(
LUA_USE_POSIX
)

28 
	#l_ønd
(Ë
	`øndom
()

	)

29 
	#l_§™d
(
x
Ë
	`§™dom
(x)

	)

30 
	#L_RANDMAX
 2147483647

	)

32 
	#l_ønd
(Ë
	`ønd
()

	)

33 
	#l_§™d
(
x
Ë
	`§™d
(x)

	)

34 
	#L_RANDMAX
 
RAND_MAX


	)

39 
	$m©h_abs
 (
lua_Sèã
 *
L
) {

40 i‡(
	`lua_isöãgî
(
L
, 1)) {

41 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 1);

42 i‡(
n
 < 0Ë¿(
lua_I¡egî
)(0u - (
lua_Unsig√d
)n);

43 
	`lua_pushöãgî
(
L
, 
n
);

46 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
Ábs
)(
	`luaL_checknumbî
(L, 1)));

48 
	}
}

50 
	$m©h_sö
 (
lua_Sèã
 *
L
) {

51 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sö
)(
	`luaL_checknumbî
(L, 1)));

53 
	}
}

55 
	$m©h_cos
 (
lua_Sèã
 *
L
) {

56 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cos
)(
	`luaL_checknumbî
(L, 1)));

58 
	}
}

60 
	$m©h_èn
 (
lua_Sèã
 *
L
) {

61 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
èn
)(
	`luaL_checknumbî
(L, 1)));

63 
	}
}

65 
	$m©h_asö
 (
lua_Sèã
 *
L
) {

66 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
asö
)(
	`luaL_checknumbî
(L, 1)));

68 
	}
}

70 
	$m©h_acos
 (
lua_Sèã
 *
L
) {

71 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
acos
)(
	`luaL_checknumbî
(L, 1)));

73 
	}
}

75 
	$m©h_©™
 (
lua_Sèã
 *
L
) {

76 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 1);

77 
lua_Numbî
 
x
 = 
	`luaL_›äumbî
(
L
, 2, 1);

78 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
©™2
)(
y
, 
x
));

80 
	}
}

83 
	$m©h_toöt
 (
lua_Sèã
 *
L
) {

84 
vÆid
;

85 
lua_I¡egî
 
n
 = 
	`lua_toöãgîx
(
L
, 1, &
vÆid
);

86 i‡(
vÆid
)

87 
	`lua_pushöãgî
(
L
, 
n
);

89 
	`luaL_check™y
(
L
, 1);

90 
	`lua_pushnû
(
L
);

93 
	}
}

96 
	$pushnumöt
 (
lua_Sèã
 *
L
, 
lua_Numbî
 
d
) {

97 
lua_I¡egî
 
n
;

98 i‡(
	`lua_numbîtoöãgî
(
d
, &
n
))

99 
	`lua_pushöãgî
(
L
, 
n
);

101 
	`lua_pushnumbî
(
L
, 
d
);

102 
	}
}

105 
	$m©h_Êo‹
 (
lua_Sèã
 *
L
) {

106 i‡(
	`lua_isöãgî
(
L
, 1))

107 
	`lua_£â›
(
L
, 1);

109 
lua_Numbî
 
d
 = 
	`l_m©h›
(
Êo‹
)(
	`luaL_checknumbî
(
L
, 1));

110 
	`pushnumöt
(
L
, 
d
);

113 
	}
}

116 
	$m©h_˚û
 (
lua_Sèã
 *
L
) {

117 i‡(
	`lua_isöãgî
(
L
, 1))

118 
	`lua_£â›
(
L
, 1);

120 
lua_Numbî
 
d
 = 
	`l_m©h›
(
˚û
)(
	`luaL_checknumbî
(
L
, 1));

121 
	`pushnumöt
(
L
, 
d
);

124 
	}
}

127 
	$m©h_fmod
 (
lua_Sèã
 *
L
) {

128 i‡(
	`lua_isöãgî
(
L
, 1) &&Üua_isinteger(L, 2)) {

129 
lua_I¡egî
 
d
 = 
	`lua_toöãgî
(
L
, 2);

130 i‡((
lua_Unsig√d
)
d
 + 1u <= 1u) {

131 
	`luaL_¨gcheck
(
L
, 
d
 != 0, 2, "zero");

132 
	`lua_pushöãgî
(
L
, 0);

135 
	`lua_pushöãgî
(
L
, 
	`lua_toöãgî
(L, 1Ë% 
d
);

138 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
fmod
)(
	`luaL_checknumbî
(L, 1),

139 
	`luaL_checknumbî
(
L
, 2)));

141 
	}
}

149 
	$m©h_modf
 (
lua_Sèã
 *
L
) {

150 i‡(
	`lua_isöãgî
(
L
 ,1)) {

151 
	`lua_£â›
(
L
, 1);

152 
	`lua_pushnumbî
(
L
, 0);

155 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 1);

157 
lua_Numbî
 
ù
 = (
n
 < 0Ë? 
	`l_m©h›
(
˚û
)“Ë:Ü_m©h›(
Êo‹
)(n);

158 
	`pushnumöt
(
L
, 
ù
);

160 
	`lua_pushnumbî
(
L
, (
n
 =
ù
Ë? 
	`l_m©h›
(0.0) : (n - ip));

163 
	}
}

166 
	$m©h_sqπ
 (
lua_Sèã
 *
L
) {

167 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
sqπ
)(
	`luaL_checknumbî
(L, 1)));

169 
	}
}

172 
	$m©h_u…
 (
lua_Sèã
 *
L
) {

173 
lua_I¡egî
 
a
 = 
	`luaL_checköãgî
(
L
, 1);

174 
lua_I¡egî
 
b
 = 
	`luaL_checköãgî
(
L
, 2);

175 
	`lua_pushboﬁón
(
L
, (
lua_Unsig√d
)
a
 < (lua_Unsig√d)
b
);

177 
	}
}

179 
	$m©h_log
 (
lua_Sèã
 *
L
) {

180 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

181 
lua_Numbî
 
ªs
;

182 i‡(
	`lua_i¢⁄e‹nû
(
L
, 2))

183 
ªs
 = 
	`l_m©h›
(
log
)(
x
);

185 
lua_Numbî
 
ba£
 = 
	`luaL_checknumbî
(
L
, 2);

186 #i‡!
	`deföed
(
LUA_USE_C89
)

187 i‡(
ba£
 =2.0Ë
ªs
 = 
	`l_m©h›
(
log2
)(
x
); 

189 i‡(
ba£
 =10.0Ë
ªs
 = 
	`l_m©h›
(
log10
)(
x
);

190 
ªs
 = 
	`l_m©h›
(
log
)(
x
)/l_m©h›÷og)(
ba£
);

192 
	`lua_pushnumbî
(
L
, 
ªs
);

194 
	}
}

196 
	$m©h_exp
 (
lua_Sèã
 *
L
) {

197 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
exp
)(
	`luaL_checknumbî
(L, 1)));

199 
	}
}

201 
	$m©h_deg
 (
lua_Sèã
 *
L
) {

202 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
	`l_m©h›
(180.0Ë/ 
PI
));

204 
	}
}

206 
	$m©h_ød
 (
lua_Sèã
 *
L
) {

207 
	`lua_pushnumbî
(
L
, 
	`luaL_checknumbî
(L, 1Ë* (
PI
 / 
	`l_m©h›
(180.0)));

209 
	}
}

212 
	$m©h_mö
 (
lua_Sèã
 *
L
) {

213 
n
 = 
	`lua_gët›
(
L
);

214 
imö
 = 1;

215 
i
;

216 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

217 
i
 = 2; i <
n
; i++) {

218 i‡(
	`lua_com∑ª
(
L
, 
i
, 
imö
, 
LUA_OPLT
))

219 
imö
 = 
i
;

221 
	`lua_pushvÆue
(
L
, 
imö
);

223 
	}
}

226 
	$m©h_max
 (
lua_Sèã
 *
L
) {

227 
n
 = 
	`lua_gët›
(
L
);

228 
imax
 = 1;

229 
i
;

230 
	`luaL_¨gcheck
(
L
, 
n
 >= 1, 1, "valueÉxpected");

231 
i
 = 2; i <
n
; i++) {

232 i‡(
	`lua_com∑ª
(
L
, 
imax
, 
i
, 
LUA_OPLT
))

233 
imax
 = 
i
;

235 
	`lua_pushvÆue
(
L
, 
imax
);

237 
	}
}

244 
	$m©h_øndom
 (
lua_Sèã
 *
L
) {

245 
lua_I¡egî
 
low
, 
up
;

246 
r
 = ()
	`l_ønd
(Ë* (1.0 / (()
L_RANDMAX
 + 1.0));

247 
	`lua_gët›
(
L
)) {

249 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
r
);

253 
low
 = 1;

254 
up
 = 
	`luaL_checköãgî
(
L
, 1);

258 
low
 = 
	`luaL_checköãgî
(
L
, 1);

259 
up
 = 
	`luaL_checköãgî
(
L
, 2);

262 :  
	`luaL_îr‹
(
L
, "wrongÇumber ofárguments");

265 
	`luaL_¨gcheck
(
L
, 
low
 <
up
, 1, "interval isÉmpty");

266 
	`luaL_¨gcheck
(
L
, 
low
 >0 || 
up
 <
LUA_MAXINTEGER
 +Üow, 1,

268 
r
 *()(
up
 - 
low
) + 1.0;

269 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
r
 + 
low
);

271 
	}
}

274 
	$m©h_øndom£ed
 (
lua_Sèã
 *
L
) {

275 
	`l_§™d
(()(
lua_I¡egî
)
	`luaL_checknumbî
(
L
, 1));

276 ()
	`l_ønd
();

278 
	}
}

281 
	$m©h_ty≥
 (
lua_Sèã
 *
L
) {

282 i‡(
	`lua_ty≥
(
L
, 1Ë=
LUA_TNUMBER
) {

283 i‡(
	`lua_isöãgî
(
L
, 1))

284 
	`lua_pushlôîÆ
(
L
, "integer");

286 
	`lua_pushlôîÆ
(
L
, "float");

289 
	`luaL_check™y
(
L
, 1);

290 
	`lua_pushnû
(
L
);

293 
	}
}

301 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

303 
	$m©h_cosh
 (
lua_Sèã
 *
L
) {

304 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
cosh
)(
	`luaL_checknumbî
(L, 1)));

306 
	}
}

308 
	$m©h_söh
 (
lua_Sèã
 *
L
) {

309 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
söh
)(
	`luaL_checknumbî
(L, 1)));

311 
	}
}

313 
	$m©h_ènh
 (
lua_Sèã
 *
L
) {

314 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ènh
)(
	`luaL_checknumbî
(L, 1)));

316 
	}
}

318 
	$m©h_pow
 (
lua_Sèã
 *
L
) {

319 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

320 
lua_Numbî
 
y
 = 
	`luaL_checknumbî
(
L
, 2);

321 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
pow
)(
x
, 
y
));

323 
	}
}

325 
	$m©h_‰exp
 (
lua_Sèã
 *
L
) {

326 
e
;

327 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
‰exp
)(
	`luaL_checknumbî
(L, 1), &
e
));

328 
	`lua_pushöãgî
(
L
, 
e
);

330 
	}
}

332 
	$m©h_ldexp
 (
lua_Sèã
 *
L
) {

333 
lua_Numbî
 
x
 = 
	`luaL_checknumbî
(
L
, 1);

334 
ï
 = ()
	`luaL_checköãgî
(
L
, 2);

335 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
ldexp
)(
x
, 
ï
));

337 
	}
}

339 
	$m©h_log10
 (
lua_Sèã
 *
L
) {

340 
	`lua_pushnumbî
(
L
, 
	`l_m©h›
(
log10
)(
	`luaL_checknumbî
(L, 1)));

342 
	}
}

349 c⁄° 
luaL_Reg
 
	gm©hlib
[] = {

350 {"abs", 
m©h_abs
},

351 {"acos", 
m©h_acos
},

352 {"asö", 
m©h_asö
},

353 {"©™", 
m©h_©™
},

354 {"˚û", 
m©h_˚û
},

355 {"cos", 
m©h_cos
},

356 {"deg", 
m©h_deg
},

357 {"exp", 
m©h_exp
},

358 {"toöãgî", 
m©h_toöt
},

359 {"Êo‹", 
m©h_Êo‹
},

360 {"fmod", 
m©h_fmod
},

361 {"u…", 
m©h_u…
},

362 {"log", 
m©h_log
},

363 {"max", 
m©h_max
},

364 {"mö", 
m©h_mö
},

365 {"modf", 
m©h_modf
},

366 {"ød", 
m©h_ød
},

367 {"øndom", 
m©h_øndom
},

368 {"øndom£ed", 
m©h_øndom£ed
},

369 {"sö", 
m©h_sö
},

370 {"sqπ", 
m©h_sqπ
},

371 {"èn", 
m©h_èn
},

372 {"ty≥", 
m©h_ty≥
},

373 #i‡
deföed
(
LUA_COMPAT_MATHLIB
)

374 {"©™2", 
m©h_©™
},

375 {"cosh", 
m©h_cosh
},

376 {"söh", 
m©h_söh
},

377 {"ènh", 
m©h_ènh
},

378 {"pow", 
m©h_pow
},

379 {"‰exp", 
m©h_‰exp
},

380 {"ldexp", 
m©h_ldexp
},

381 {"log10", 
m©h_log10
},

384 {"pi", 
NULL
},

385 {"huge", 
NULL
},

386 {"maxöãgî", 
NULL
},

387 {"mööãgî", 
NULL
},

388 {
NULL
, NULL}

395 
LUAMOD_API
 
	$lua›í_m©h
 (
lua_Sèã
 *
L
) {

396 
	`luaL_√wlib
(
L
, 
m©hlib
);

397 
	`lua_pushnumbî
(
L
, 
PI
);

398 
	`lua_£tfõld
(
L
, -2, "pi");

399 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
HUGE_VAL
);

400 
	`lua_£tfõld
(
L
, -2, "huge");

401 
	`lua_pushöãgî
(
L
, 
LUA_MAXINTEGER
);

402 
	`lua_£tfõld
(
L
, -2, "maxinteger");

403 
	`lua_pushöãgî
(
L
, 
LUA_MININTEGER
);

404 
	`lua_£tfõld
(
L
, -2, "mininteger");

406 
	}
}

	@lib/lua/src/lmem.c

7 
	#lmem_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lgc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

45 
	#MINSIZEARRAY
 4

	)

48 *
	$luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
, 
size_t
 
size_ñems
,

49 
limô
, c⁄° *
wh©
) {

50 *
√wblock
;

51 
√wsize
;

52 i‡(*
size
 >
limô
/2) {

53 i‡(*
size
 >
limô
)

54 
	`luaG_ru√º‹
(
L
, "toÿm™y %†÷imô i†%d)", 
wh©
, 
limô
);

55 
√wsize
 = 
limô
;

58 
√wsize
 = (*
size
)*2;

59 i‡(
√wsize
 < 
MINSIZEARRAY
)

60 
√wsize
 = 
MINSIZEARRAY
;

62 
√wblock
 = 
	`luaM_ªÆlocv
(
L
, 
block
, *
size
, 
√wsize
, 
size_ñems
);

63 *
size
 = 
√wsize
;

64  
√wblock
;

65 
	}
}

68 
l_n‹ë
 
	$luaM_toobig
 (
lua_Sèã
 *
L
) {

69 
	`luaG_ru√º‹
(
L
, "memoryállocationÉrror: blockÅoo big");

70 
	}
}

77 *
	$luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
osize
, size_à
nsize
) {

78 *
√wblock
;

79 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

80 
size_t
 
ªÆosize
 = (
block
Ë? 
osize
 : 0;

81 
	`lua_as£π
((
ªÆosize
 =0Ë=(
block
 =
NULL
));

82 #i‡
	`deföed
(
HARDMEMTESTS
)

83 i‡(
nsize
 > 
ªÆosize
 && 
g
->
g¸u¬ög
)

84 
	`luaC_fuŒgc
(
L
, 1);

86 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

87 i‡(
√wblock
 =
NULL
 && 
nsize
 > 0) {

88 
	`lua_as£π
(
nsize
 > 
ªÆosize
);

89 i‡(
g
->
vîsi⁄
) {

90 
	`luaC_fuŒgc
(
L
, 1);

91 
√wblock
 = (*
g
->
‰óŒoc
)(g->
ud
, 
block
, 
osize
, 
nsize
);

93 i‡(
√wblock
 =
NULL
)

94 
	`luaD_throw
(
L
, 
LUA_ERRMEM
);

96 
	`lua_as£π
((
nsize
 =0Ë=(
√wblock
 =
NULL
));

97 
g
->
GCdebt
 = (g->GCdebà+ 
nsize
Ë- 
ªÆosize
;

98  
√wblock
;

99 
	}
}

	@lib/lua/src/lmem.h

7 #i‚de‡
lmem_h


8 
	#lmem_h


	)

11 
	~<°ddef.h
>

13 
	~"Œimôs.h
"

14 
	~"lua.h
"

30 
	#luaM_ªÆlocv
(
L
,
b
,
⁄
,
n
,
e
) \

31 ((((
n
Ë>(
size_t
Ë&& 
	`ˇ°
(size_t, (n)Ë+ 1 > 
MAX_SIZET
/(
e
)) \

32 ? 
	`luaM_toobig
(
L
Ë: 
	`ˇ°_void
(0)) , \

33 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(
e
), (
n
)*”)))

	)

38 
	#luaM_ªÆlocvch¨
(
L
,
b
,
⁄
,
n
) \

39 
	`ˇ°
(*, 
	`luaM_ªÆloc_
(
L
, (
b
), (
⁄
)*(), (
n
)*()))

	)

41 
	#luaM_‰ìmem
(
L
, 
b
, 
s
Ë
	`luaM_ªÆloc_
(L, (b), (s), 0)

	)

42 
	#luaM_‰ì
(
L
, 
b
Ë
	`luaM_ªÆloc_
(L, (b), (*(b)), 0)

	)

43 
	#luaM_‰ì¨øy
(
L
, 
b
, 
n
Ë
	`luaM_ªÆloc_
(L, (b), (n)*(*(b)), 0)

	)

45 
	#luaM_mÆloc
(
L
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
, 0, (s))

	)

46 
	#luaM_√w
(
L
,
t
Ë
	`ˇ°
— *, 
	`luaM_mÆloc
(L, —)))

	)

47 
	#luaM_√wve˘‹
(
L
,
n
,
t
) \

48 
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, 
NULL
, 0, 
n
, —)))

	)

50 
	#luaM_√wobje˘
(
L
,
èg
,
s
Ë
	`luaM_ªÆloc_
(L, 
NULL
,Åag, (s))

	)

52 
	#luaM_growve˘‹
(
L
,
v
,
√Àms
,
size
,
t
,
limô
,
e
) \

53 i‡((
√Àms
)+1 > (
size
)) \

54 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_growaux_
(
L
,v,&(
size
),—),
limô
,
e
)))

	)

56 
	#luaM_ªÆlocve˘‹
(
L
, 
v
,
ﬁdn
,
n
,
t
) \

57 ((
v
)=
	`ˇ°
(
t
 *, 
	`luaM_ªÆlocv
(
L
, v, 
ﬁdn
, 
n
, —))))

	)

59 
LUAI_FUNC
 
l_n‹ë
 
luaM_toobig
 (
lua_Sèã
 *
L
);

62 
LUAI_FUNC
 *
luaM_ªÆloc_
 (
lua_Sèã
 *
L
, *
block
, 
size_t
 
ﬁdsize
,

63 
size_t
 
size
);

64 
LUAI_FUNC
 *
luaM_growaux_
 (
lua_Sèã
 *
L
, *
block
, *
size
,

65 
size_t
 
size_ñem
, 
limô
,

66 c⁄° *
wh©
);

	@lib/lua/src/loadlib.c

11 
	#lﬂdlib_c


	)

12 
	#LUA_LIB


	)

14 
	~"Õªfix.h
"

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

21 
	~"lua.h
"

23 
	~"œuxlib.h
"

24 
	~"luÆib.h
"

31 #i‡!
deföed
(
LUA_PATH_VAR
)

32 
	#LUA_PATH_VAR
 "LUA_PATH"

	)

35 #i‡!
deföed
(
LUA_CPATH_VAR
)

36 
	#LUA_CPATH_VAR
 "LUA_CPATH"

	)

39 
	#LUA_PATHSUFFIX
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

41 
	#LUA_PATHVARVERSION
 
LUA_PATH_VAR
 
LUA_PATHSUFFIX


	)

42 
	#LUA_CPATHVARVERSION
 
LUA_CPATH_VAR
 
LUA_PATHSUFFIX


	)

53 #i‡!
deföed
 (
LUA_PATH_SEP
)

54 
	#LUA_PATH_SEP
 ";"

	)

56 #i‡!
deföed
 (
LUA_PATH_MARK
)

57 
	#LUA_PATH_MARK
 "?"

	)

59 #i‡!
deföed
 (
LUA_EXEC_DIR
)

60 
	#LUA_EXEC_DIR
 "!"

	)

62 #i‡!
deföed
 (
LUA_IGMARK
)

63 
	#LUA_IGMARK
 "-"

	)

73 #i‡!
deföed
(
LUA_CSUBSEP
)

74 
	#LUA_CSUBSEP
 
LUA_DIRSEP


	)

77 #i‡!
deföed
(
LUA_LSUBSEP
)

78 
	#LUA_LSUBSEP
 
LUA_DIRSEP


	)

83 
	#LUA_POF
 "lua›í_"

	)

86 
	#LUA_OFSEP
 "_"

	)

93 c⁄° 
	gCLIBS
 = 0;

95 
	#LIB_FAIL
 "›í"

	)

97 
	#£çrogdú
(
L
Ë(()0)

	)

107 
lsys_u∆ﬂdlib
 (*
lib
);

115 *
lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
);

122 
lua_CFun˘i⁄
 
lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
);

127 #i‡
deföed
(
LUA_USE_DLOPEN
)

137 
	~<dlf˙.h
>

144 #i‡
deföed
(
__GNUC__
)

145 
	#ˇ°_func
(
p
Ë(
	`__exãnsi⁄__
 (
lua_CFun˘i⁄
)’))

	)

147 
	#ˇ°_func
(
p
Ë((
lua_CFun˘i⁄
)’))

	)

151 
	$lsys_u∆ﬂdlib
 (*
lib
) {

152 
	`dl˛o£
(
lib
);

153 
	}
}

156 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

157 *
lib
 = 
	`dl›í
(
∑th
, 
RTLD_NOW
 | (
£eglb
 ? 
RTLD_GLOBAL
 : 
RTLD_LOCAL
));

158 i‡(
lib
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

159  
lib
;

160 
	}
}

163 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

164 
lua_CFun˘i⁄
 
f
 = 
	`ˇ°_func
(
	`dlsym
(
lib
, 
sym
));

165 i‡(
f
 =
NULL
Ë
	`lua_push°rög
(
L
, 
	`dÀº‹
());

166  
f
;

167 
	}
}

173 #ñi‡
deföed
(
LUA_DL_DLL
)

180 
	~<wödows.h
>

182 #unde‡
£çrogdú


187 #i‡!
deföed
(
LUA_LLE_FLAGS
)

188 
	#LUA_LLE_FLAGS
 0

	)

192 
	$£çrogdú
 (
lua_Sèã
 *
L
) {

193 
buff
[
MAX_PATH
 + 1];

194 *
lb
;

195 
DWORD
 
nsize
 = (
buff
)/();

196 
DWORD
 
n
 = 
	`GëModuÀFûeNameA
(
NULL
, 
buff
, 
nsize
);

197 i‡(
n
 =0 ||Ç =
nsize
 || (
lb
 = 
	`°ºchr
(
buff
, '\\')Ë=
NULL
)

198 
	`luaL_îr‹
(
L
, "unableÅo get ModuleFileName");

200 *
lb
 = '\0';

201 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1), 
LUA_EXEC_DIR
, 
buff
);

202 
	`lua_ªmove
(
L
, -2);

204 
	}
}

207 
	$pushîr‹
 (
lua_Sèã
 *
L
) {

208 
îr‹
 = 
	`GëLa°Eº‹
();

209 
buf„r
[128];

210 i‡(
	`F‹m©MesßgeA
(
FORMAT_MESSAGE_IGNORE_INSERTS
 | 
FORMAT_MESSAGE_FROM_SYSTEM
,

211 
NULL
, 
îr‹
, 0, 
buf„r
, (buffer)/(), NULL))

212 
	`lua_push°rög
(
L
, 
buf„r
);

214 
	`lua_pushf°rög
(
L
, "sy°emÉº‹ %d\n", 
îr‹
);

215 
	}
}

217 
	$lsys_u∆ﬂdlib
 (*
lib
) {

218 
	`FªeLibøry
((
HMODULE
)
lib
);

219 
	}
}

222 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

223 
HMODULE
 
lib
 = 
	`LﬂdLibøryExA
(
∑th
, 
NULL
, 
LUA_LLE_FLAGS
);

224 ()(
£eglb
);

225 i‡(
lib
 =
NULL
Ë
	`pushîr‹
(
L
);

226  
lib
;

227 
	}
}

230 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

231 
lua_CFun˘i⁄
 
f
 = (lua_CFun˘i⁄)
	`GëProcAddªss
((
HMODULE
)
lib
, 
sym
);

232 i‡(
f
 =
NULL
Ë
	`pushîr‹
(
L
);

233  
f
;

234 
	}
}

246 #unde‡
LIB_FAIL


247 
	#LIB_FAIL
 "ab£¡"

	)

250 
	#DLMSG
 "dy«mi¯libørõ†nŸÉ«bÀd; check you∏Lu®ö°Æœti⁄"

	)

253 
	$lsys_u∆ﬂdlib
 (*
lib
) {

254 ()(
lib
);

255 
	}
}

258 *
	$lsys_lﬂd
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, 
£eglb
) {

259 ()(
∑th
); ()(
£eglb
);

260 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

261  
NULL
;

262 
	}
}

265 
lua_CFun˘i⁄
 
	$lsys_sym
 (
lua_Sèã
 *
L
, *
lib
, c⁄° *
sym
) {

266 ()(
lib
); ()(
sym
);

267 
	`lua_pushlôîÆ
(
L
, 
DLMSG
);

268  
NULL
;

269 
	}
}

278 *
	$check˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

279 *
∂ib
;

280 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

281 
	`lua_gëfõld
(
L
, -1, 
∑th
);

282 
∂ib
 = 
	`lua_tou£rd©a
(
L
, -1);

283 
	`lua_p›
(
L
, 2);

284  
∂ib
;

285 
	}
}

292 
	$addto˛ib
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, *
∂ib
) {

293 
	`lua_øwgëp
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

294 
	`lua_pushlightu£rd©a
(
L
, 
∂ib
);

295 
	`lua_pushvÆue
(
L
, -1);

296 
	`lua_£tfõld
(
L
, -3, 
∑th
);

297 
	`lua_øw£ti
(
L
, -2, 
	`luaL_Àn
(L, -2) + 1);

298 
	`lua_p›
(
L
, 1);

299 
	}
}

306 
	$g˘m
 (
lua_Sèã
 *
L
) {

307 
lua_I¡egî
 
n
 = 
	`luaL_Àn
(
L
, 1);

308 ; 
n
 >= 1;Ç--) {

309 
	`lua_øwgëi
(
L
, 1, 
n
);

310 
	`lsys_u∆ﬂdlib
(
	`lua_tou£rd©a
(
L
, -1));

311 
	`lua_p›
(
L
, 1);

314 
	}
}

319 
	#ERRLIB
 1

	)

320 
	#ERRFUNC
 2

	)

333 
	$lookf‹func
 (
lua_Sèã
 *
L
, c⁄° *
∑th
, c⁄° *
sym
) {

334 *
ªg
 = 
	`check˛ib
(
L
, 
∑th
);

335 i‡(
ªg
 =
NULL
) {

336 
ªg
 = 
	`lsys_lﬂd
(
L
, 
∑th
, *
sym
 == '*');

337 i‡(
ªg
 =
NULL
Ë 
ERRLIB
;

338 
	`addto˛ib
(
L
, 
∑th
, 
ªg
);

340 i‡(*
sym
 == '*') {

341 
	`lua_pushboﬁón
(
L
, 1);

345 
lua_CFun˘i⁄
 
f
 = 
	`lsys_sym
(
L
, 
ªg
, 
sym
);

346 i‡(
f
 =
NULL
)

347  
ERRFUNC
;

348 
	`lua_pushcfun˘i⁄
(
L
, 
f
);

351 
	}
}

354 
	$Œ_lﬂdlib
 (
lua_Sèã
 *
L
) {

355 c⁄° *
∑th
 = 
	`luaL_check°rög
(
L
, 1);

356 c⁄° *
öô
 = 
	`luaL_check°rög
(
L
, 2);

357 
°©
 = 
	`lookf‹func
(
L
, 
∑th
, 
öô
);

358 i‡(
°©
 == 0)

361 
	`lua_pushnû
(
L
);

362 
	`lua_ö£π
(
L
, -2);

363 
	`lua_push°rög
(
L
, (
°©
 =
ERRLIB
Ë? 
LIB_FAIL
 : "init");

366 
	}
}

377 
	$ªadabÀ
 (c⁄° *
fûíame
) {

378 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "r");

379 i‡(
f
 =
NULL
)  0;

380 
	`f˛o£
(
f
);

382 
	}
}

385 c⁄° *
	$push√xâem∂©e
 (
lua_Sèã
 *
L
, c⁄° *
∑th
) {

386 c⁄° *
l
;

387 *
∑th
 =*
LUA_PATH_SEP
)Öath++;

388 i‡(*
∑th
 ='\0'Ë 
NULL
;

389 
l
 = 
	`°rchr
(
∑th
, *
LUA_PATH_SEP
);

390 i‡(
l
 =
NULL
Ë»
∑th
 + 
	`°æí
(path);

391 
	`lua_pushl°rög
(
L
, 
∑th
, 
l
 -Öath);

392  
l
;

393 
	}
}

396 c⁄° *
	$£¨ch∑th
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

397 c⁄° *
∑th
,

398 c⁄° *
£p
,

399 c⁄° *
dú£p
) {

400 
luaL_Buf„r
 
msg
;

401 
	`luaL_bufföô
(
L
, &
msg
);

402 i‡(*
£p
 != '\0')

403 
«me
 = 
	`luaL_gsub
(
L
,Çame, 
£p
, 
dú£p
);

404 (
∑th
 = 
	`push√xâem∂©e
(
L
,Ö©h)Ë!
NULL
) {

405 c⁄° *
fûíame
 = 
	`luaL_gsub
(
L
, 
	`lua_to°rög
(L, -1),

406 
LUA_PATH_MARK
, 
«me
);

407 
	`lua_ªmove
(
L
, -2);

408 i‡(
	`ªadabÀ
(
fûíame
))

409  
fûíame
;

410 
	`lua_pushf°rög
(
L
, "\n\äÿfûê'%s'", 
fûíame
);

411 
	`lua_ªmove
(
L
, -2);

412 
	`luaL_addvÆue
(&
msg
);

414 
	`luaL_pushªsu…
(&
msg
);

415  
NULL
;

416 
	}
}

419 
	$Œ_£¨ch∑th
 (
lua_Sèã
 *
L
) {

420 c⁄° *
f
 = 
	`£¨ch∑th
(
L
, 
	`luaL_check°rög
(L, 1),

421 
	`luaL_check°rög
(
L
, 2),

422 
	`luaL_›t°rög
(
L
, 3, "."),

423 
	`luaL_›t°rög
(
L
, 4, 
LUA_DIRSEP
));

424 i‡(
f
 !
NULL
)  1;

426 
	`lua_pushnû
(
L
);

427 
	`lua_ö£π
(
L
, -2);

430 
	}
}

433 c⁄° *
	$födfûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
,

434 c⁄° *
≤ame
,

435 c⁄° *
dú£p
) {

436 c⁄° *
∑th
;

437 
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), 
≤ame
);

438 
∑th
 = 
	`lua_to°rög
(
L
, -1);

439 i‡(
∑th
 =
NULL
)

440 
	`luaL_îr‹
(
L
, "'∑ckage.%s' mu° bê®°rög", 
≤ame
);

441  
	`£¨ch∑th
(
L
, 
«me
, 
∑th
, ".", 
dú£p
);

442 
	}
}

445 
	$checklﬂd
 (
lua_Sèã
 *
L
, 
°©
, c⁄° *
fûíame
) {

446 i‡(
°©
) {

447 
	`lua_push°rög
(
L
, 
fûíame
);

451  
	`luaL_îr‹
(
L
, "errorÜoading module '%s' from file '%s':\n\t%s",

452 
	`lua_to°rög
(
L
, 1), 
fûíame
,Üua_tostring(L, -1));

453 
	}
}

456 
	$£¨chî_Lua
 (
lua_Sèã
 *
L
) {

457 c⁄° *
fûíame
;

458 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

459 
fûíame
 = 
	`födfûe
(
L
, 
«me
, "∑th", 
LUA_LSUBSEP
);

460 i‡(
fûíame
 =
NULL
)  1;

461  
	`checklﬂd
(
L
, (
	`luaL_lﬂdfûe
(L, 
fûíame
Ë=
LUA_OK
), filename);

462 
	}
}

473 
	$lﬂdfunc
 (
lua_Sèã
 *
L
, c⁄° *
fûíame
, c⁄° *
mod«me
) {

474 c⁄° *
›ífunc
;

475 c⁄° *
m¨k
;

476 
mod«me
 = 
	`luaL_gsub
(
L
, mod«me, ".", 
LUA_OFSEP
);

477 
m¨k
 = 
	`°rchr
(
mod«me
, *
LUA_IGMARK
);

478 i‡(
m¨k
) {

479 
°©
;

480 
›ífunc
 = 
	`lua_pushl°rög
(
L
, 
mod«me
, 
m¨k
 - modname);

481 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", openfunc);

482 
°©
 = 
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

483 i‡(
°©
 !
ERRFUNC
)  stat;

484 
mod«me
 = 
m¨k
 + 1;

486 
›ífunc
 = 
	`lua_pushf°rög
(
L
, 
LUA_POF
"%s", 
mod«me
);

487  
	`lookf‹func
(
L
, 
fûíame
, 
›ífunc
);

488 
	}
}

491 
	$£¨chî_C
 (
lua_Sèã
 *
L
) {

492 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

493 c⁄° *
fûíame
 = 
	`födfûe
(
L
, 
«me
, "˝©h", 
LUA_CSUBSEP
);

494 i‡(
fûíame
 =
NULL
)  1;

495  
	`checklﬂd
(
L
, (
	`lﬂdfunc
(L, 
fûíame
, 
«me
) == 0), filename);

496 
	}
}

499 
	$£¨chî_CroŸ
 (
lua_Sèã
 *
L
) {

500 c⁄° *
fûíame
;

501 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

502 c⁄° *
p
 = 
	`°rchr
(
«me
, '.');

503 
°©
;

504 i‡(
p
 =
NULL
)  0;

505 
	`lua_pushl°rög
(
L
, 
«me
, 
p
 -Çame);

506 
fûíame
 = 
	`födfûe
(
L
, 
	`lua_to°rög
(L, -1), "˝©h", 
LUA_CSUBSEP
);

507 i‡(
fûíame
 =
NULL
)  1;

508 i‡((
°©
 = 
	`lﬂdfunc
(
L
, 
fûíame
, 
«me
)) != 0) {

509 i‡(
°©
 !
ERRFUNC
)

510  
	`checklﬂd
(
L
, 0, 
fûíame
);

512 
	`lua_pushf°rög
(
L
, "\n\äÿmoduÀ '%s' i¿fûê'%s'", 
«me
, 
fûíame
);

516 
	`lua_push°rög
(
L
, 
fûíame
);

518 
	}
}

521 
	$£¨chî_¥ñﬂd
 (
lua_Sèã
 *
L
) {

522 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

523 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

524 i‡(
	`lua_gëfõld
(
L
, -1, 
«me
Ë=
LUA_TNIL
)

525 
	`lua_pushf°rög
(
L
, "\n\äÿfõldÖackage.¥ñﬂd['%s']", 
«me
);

527 
	}
}

530 
	$födlﬂdî
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

531 
i
;

532 
luaL_Buf„r
 
msg
;

533 
	`luaL_bufföô
(
L
, &
msg
);

535 i‡(
	`lua_gëfõld
(
L
, 
	`lua_upvÆueödex
(1), "£¨chîs"Ë!
LUA_TTABLE
)

536 
	`luaL_îr‹
(
L
, "'package.searchers' must beáÅable");

538 
i
 = 1; ; i++) {

539 i‡(
	`lua_øwgëi
(
L
, 3, 
i
Ë=
LUA_TNIL
) {

540 
	`lua_p›
(
L
, 1);

541 
	`luaL_pushªsu…
(&
msg
);

542 
	`luaL_îr‹
(
L
, "moduÀ '%s'ÇŸ found:%s", 
«me
, 
	`lua_to°rög
(L, -1));

544 
	`lua_push°rög
(
L
, 
«me
);

545 
	`lua_ˇŒ
(
L
, 1, 2);

546 i‡(
	`lua_isfun˘i⁄
(
L
, -2))

548 i‡(
	`lua_is°rög
(
L
, -2)) {

549 
	`lua_p›
(
L
, 1);

550 
	`luaL_addvÆue
(&
msg
);

553 
	`lua_p›
(
L
, 2);

555 
	}
}

558 
	$Œ_ªquúe
 (
lua_Sèã
 *
L
) {

559 c⁄° *
«me
 = 
	`luaL_check°rög
(
L
, 1);

560 
	`lua_£â›
(
L
, 1);

561 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

562 
	`lua_gëfõld
(
L
, 2, 
«me
);

563 i‡(
	`lua_toboﬁón
(
L
, -1))

566 
	`lua_p›
(
L
, 1);

567 
	`födlﬂdî
(
L
, 
«me
);

568 
	`lua_push°rög
(
L
, 
«me
);

569 
	`lua_ö£π
(
L
, -2);

570 
	`lua_ˇŒ
(
L
, 2, 1);

571 i‡(!
	`lua_i¢û
(
L
, -1))

572 
	`lua_£tfõld
(
L
, 2, 
«me
);

573 i‡(
	`lua_gëfõld
(
L
, 2, 
«me
Ë=
LUA_TNIL
) {

574 
	`lua_pushboﬁón
(
L
, 1);

575 
	`lua_pushvÆue
(
L
, -1);

576 
	`lua_£tfõld
(
L
, 2, 
«me
);

579 
	}
}

590 #i‡
deföed
(
LUA_COMPAT_MODULE
)

595 
	$£t_ív
 (
lua_Sèã
 *
L
) {

596 
lua_Debug
 
¨
;

597 i‡(
	`lua_gë°ack
(
L
, 1, &
¨
) == 0 ||

598 
	`lua_gëöfo
(
L
, "f", &
¨
) == 0 ||

599 
	`lua_iscfun˘i⁄
(
L
, -1))

600 
	`luaL_îr‹
(
L
, "'module'Çot called fromá Lua function");

601 
	`lua_pushvÆue
(
L
, -2);

602 
	`lua_£tupvÆue
(
L
, -2, 1);

603 
	`lua_p›
(
L
, 1);

604 
	}
}

607 
	$do›ti⁄s
 (
lua_Sèã
 *
L
, 
n
) {

608 
i
;

609 
i
 = 2; i <
n
; i++) {

610 i‡(
	`lua_isfun˘i⁄
(
L
, 
i
)) {

611 
	`lua_pushvÆue
(
L
, 
i
);

612 
	`lua_pushvÆue
(
L
, -2);

613 
	`lua_ˇŒ
(
L
, 1, 0);

616 
	}
}

619 
	$modöô
 (
lua_Sèã
 *
L
, c⁄° *
mod«me
) {

620 c⁄° *
dŸ
;

621 
	`lua_pushvÆue
(
L
, -1);

622 
	`lua_£tfõld
(
L
, -2, "_M");

623 
	`lua_push°rög
(
L
, 
mod«me
);

624 
	`lua_£tfõld
(
L
, -2, "_NAME");

625 
dŸ
 = 
	`°ºchr
(
mod«me
, '.');

626 i‡(
dŸ
 =
NULL
ËdŸ = 
mod«me
;

627 
dŸ
++;

629 
	`lua_pushl°rög
(
L
, 
mod«me
, 
dŸ
 - modname);

630 
	`lua_£tfõld
(
L
, -2, "_PACKAGE");

631 
	}
}

634 
	$Œ_moduÀ
 (
lua_Sèã
 *
L
) {

635 c⁄° *
mod«me
 = 
	`luaL_check°rög
(
L
, 1);

636 
œ°¨g
 = 
	`lua_gët›
(
L
);

637 
	`luaL_pushmoduÀ
(
L
, 
mod«me
, 1);

639 i‡(
	`lua_gëfõld
(
L
, -1, "_NAME"Ë!
LUA_TNIL
)

640 
	`lua_p›
(
L
, 1);

642 
	`lua_p›
(
L
, 1);

643 
	`modöô
(
L
, 
mod«me
);

645 
	`lua_pushvÆue
(
L
, -1);

646 
	`£t_ív
(
L
);

647 
	`do›ti⁄s
(
L
, 
œ°¨g
);

649 
	}
}

652 
	$Œ_£óŒ
 (
lua_Sèã
 *
L
) {

653 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

654 i‡(!
	`lua_gëmë©abÀ
(
L
, 1)) {

655 
	`lua_¸óãèbÀ
(
L
, 0, 1);

656 
	`lua_pushvÆue
(
L
, -1);

657 
	`lua_£tmë©abÀ
(
L
, 1);

659 
	`lua_pushglobÆèbÀ
(
L
);

660 
	`lua_£tfõld
(
L
, -2, "__index");

662 
	}
}

670 
	#AUXMARK
 "\1"

	)

676 
	$n€nv
 (
lua_Sèã
 *
L
) {

677 
b
;

678 
	`lua_gëfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

679 
b
 = 
	`lua_toboﬁón
(
L
, -1);

680 
	`lua_p›
(
L
, 1);

681  
b
;

682 
	}
}

685 
	$£ç©h
 (
lua_Sèã
 *
L
, c⁄° *
fõld«me
, c⁄° *
ív«me1
,

686 c⁄° *
ív«me2
, c⁄° *
def
) {

687 c⁄° *
∑th
 = 
	`gëív
(
ív«me1
);

688 i‡(
∑th
 =
NULL
)

689 
∑th
 = 
	`gëív
(
ív«me2
);

690 i‡(
∑th
 =
NULL
 || 
	`n€nv
(
L
))

691 
	`lua_push°rög
(
L
, 
def
);

694 
∑th
 = 
	`luaL_gsub
(
L
,Ö©h, 
LUA_PATH_SEP
 LUA_PATH_SEP,

695 
LUA_PATH_SEP
 
AUXMARK
 LUA_PATH_SEP);

696 
	`luaL_gsub
(
L
, 
∑th
, 
AUXMARK
, 
def
);

697 
	`lua_ªmove
(
L
, -2);

699 
	`£çrogdú
(
L
);

700 
	`lua_£tfõld
(
L
, -2, 
fõld«me
);

701 
	}
}

704 c⁄° 
luaL_Reg
 
	gpk_funcs
[] = {

705 {"lﬂdlib", 
Œ_lﬂdlib
},

706 {"£¨ch∑th", 
Œ_£¨ch∑th
},

707 #i‡
deföed
(
LUA_COMPAT_MODULE
)

708 {"£óŒ", 
Œ_£óŒ
},

711 {"¥ñﬂd", 
NULL
},

712 {"˝©h", 
NULL
},

713 {"∑th", 
NULL
},

714 {"£¨chîs", 
NULL
},

715 {"lﬂded", 
NULL
},

716 {
NULL
, NULL}

720 c⁄° 
luaL_Reg
 
	gŒ_funcs
[] = {

721 #i‡
deföed
(
LUA_COMPAT_MODULE
)

722 {"moduÀ", 
Œ_moduÀ
},

724 {"ªquúe", 
Œ_ªquúe
},

725 {
NULL
, NULL}

729 
	$¸óã£¨chî°abÀ
 (
lua_Sèã
 *
L
) {

730 c⁄° 
lua_CFun˘i⁄
 
£¨chîs
[] =

731 {
£¨chî_¥ñﬂd
, 
£¨chî_Lua
, 
£¨chî_C
, 
£¨chî_CroŸ
, 
NULL
};

732 
i
;

734 
	`lua_¸óãèbÀ
(
L
, (
£¨chîs
)/(searchers[0]) - 1, 0);

736 
i
=0; 
£¨chîs
[i] !
NULL
; i++) {

737 
	`lua_pushvÆue
(
L
, -2);

738 
	`lua_pushc˛osuª
(
L
, 
£¨chîs
[
i
], 1);

739 
	`lua_øw£ti
(
L
, -2, 
i
+1);

741 #i‡
	`deföed
(
LUA_COMPAT_LOADERS
)

742 
	`lua_pushvÆue
(
L
, -1);

743 
	`lua_£tfõld
(
L
, -3, "loaders");

745 
	`lua_£tfõld
(
L
, -2, "searchers");

746 
	}
}

753 
	$¸óã˛ib°abÀ
 (
lua_Sèã
 *
L
) {

754 
	`lua_√wèbÀ
(
L
);

755 
	`lua_¸óãèbÀ
(
L
, 0, 1);

756 
	`lua_pushcfun˘i⁄
(
L
, 
g˘m
);

757 
	`lua_£tfõld
(
L
, -2, "__gc");

758 
	`lua_£tmë©abÀ
(
L
, -2);

759 
	`lua_øw£ç
(
L
, 
LUA_REGISTRYINDEX
, &
CLIBS
);

760 
	}
}

763 
LUAMOD_API
 
	$lua›í_∑ckage
 (
lua_Sèã
 *
L
) {

764 
	`¸óã˛ib°abÀ
(
L
);

765 
	`luaL_√wlib
(
L
, 
pk_funcs
);

766 
	`¸óã£¨chî°abÀ
(
L
);

768 
	`£ç©h
(
L
, "∑th", 
LUA_PATHVARVERSION
, 
LUA_PATH_VAR
, 
LUA_PATH_DEFAULT
);

770 
	`£ç©h
(
L
, "˝©h", 
LUA_CPATHVARVERSION
, 
LUA_CPATH_VAR
, 
LUA_CPATH_DEFAULT
);

772 
	`lua_pushlôîÆ
(
L
, 
LUA_DIRSEP
 "\n" 
LUA_PATH_SEP
 "\n" 
LUA_PATH_MARK
 "\n"

773 
LUA_EXEC_DIR
 "\n" 
LUA_IGMARK
 "\n");

774 
	`lua_£tfõld
(
L
, -2, "config");

776 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_LOADED");

777 
	`lua_£tfõld
(
L
, -2, "loaded");

779 
	`luaL_gësubèbÀ
(
L
, 
LUA_REGISTRYINDEX
, "_PRELOAD");

780 
	`lua_£tfõld
(
L
, -2, "preload");

781 
	`lua_pushglobÆèbÀ
(
L
);

782 
	`lua_pushvÆue
(
L
, -2);

783 
	`luaL_£tfuncs
(
L
, 
Œ_funcs
, 1);

784 
	`lua_p›
(
L
, 1);

786 
	}
}

	@lib/lua/src/lobject.c

7 
	#lobje˘_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<loˇÀ.h
>

14 
	~<m©h.h
>

15 
	~<°d¨g.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<°rög.h
>

20 
	~"lua.h
"

22 
	~"l˘y≥.h
"

23 
	~"ldebug.h
"

24 
	~"ldo.h
"

25 
	~"lmem.h
"

26 
	~"lobje˘.h
"

27 
	~"l°©e.h
"

28 
	~"l°rög.h
"

29 
	~"lvm.h
"

33 
LUAI_DDEF
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
 = {
NILCONSTANT
};

41 
	$luaO_öt2fb
 (
x
) {

42 
e
 = 0;

43 i‡(
x
 < 8)  x;

44 
x
 >= (8 << 4)) {

45 
x
 = (x + 0xf) >> 4;

46 
e
 += 4;

48 
x
 >= (8 << 1)) {

49 
x
 = (x + 1) >> 1;

50 
e
++;

52  ((
e
+1Ë<< 3Ë| (
	`ˇ°_öt
(
x
) - 8);

53 
	}
}

57 
	$luaO_fb2öt
 (
x
) {

58  (
x
 < 8) ? x : ((x & 7) + 8) << ((x >> 3) - 1);

59 
	}
}

65 
	$luaO_˚ûlog2
 (
x
) {

66 c⁄° 
lu_byã
 
log_2
[256] = {

76 
l
 = 0;

77 
x
--;

78 
x
 >256Ë{ 
l
 += 8; x >>= 8; }

79  
l
 + 
log_2
[
x
];

80 
	}
}

83 
lua_I¡egî
 
	$öèrôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_I¡egî
 
v1
,

84 
lua_I¡egî
 
v2
) {

85 
›
) {

86 
LUA_OPADD
:  
	`öt›
(+, 
v1
, 
v2
);

87 
LUA_OPSUB
: 
	`öt›
(-, 
v1
, 
v2
);

88 
LUA_OPMUL
: 
	`öt›
(*, 
v1
, 
v2
);

89 
LUA_OPMOD
:  
	`luaV_mod
(
L
, 
v1
, 
v2
);

90 
LUA_OPIDIV
:  
	`luaV_div
(
L
, 
v1
, 
v2
);

91 
LUA_OPBAND
:  
	`öt›
(&, 
v1
, 
v2
);

92 
LUA_OPBOR
:  
	`öt›
(|, 
v1
, 
v2
);

93 
LUA_OPBXOR
:  
	`öt›
(^, 
v1
, 
v2
);

94 
LUA_OPSHL
:  
	`luaV_shi·l
(
v1
, 
v2
);

95 
LUA_OPSHR
:  
	`luaV_shi·l
(
v1
, -
v2
);

96 
LUA_OPUNM
:  
	`öt›
(-, 0, 
v1
);

97 
LUA_OPBNOT
:  
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
v1
);

98 : 
	`lua_as£π
(0);  0;

100 
	}
}

103 
lua_Numbî
 
	$num¨ôh
 (
lua_Sèã
 *
L
, 
›
, 
lua_Numbî
 
v1
,

104 
lua_Numbî
 
v2
) {

105 
›
) {

106 
LUA_OPADD
:  
	`luai_numadd
(
L
, 
v1
, 
v2
);

107 
LUA_OPSUB
:  
	`luai_numsub
(
L
, 
v1
, 
v2
);

108 
LUA_OPMUL
:  
	`luai_nummul
(
L
, 
v1
, 
v2
);

109 
LUA_OPDIV
:  
	`luai_numdiv
(
L
, 
v1
, 
v2
);

110 
LUA_OPPOW
:  
	`luai_numpow
(
L
, 
v1
, 
v2
);

111 
LUA_OPIDIV
:  
	`luai_numidiv
(
L
, 
v1
, 
v2
);

112 
LUA_OPUNM
:  
	`luai_numunm
(
L
, 
v1
);

113 
LUA_OPMOD
: {

114 
lua_Numbî
 
m
;

115 
	`luai_nummod
(
L
, 
v1
, 
v2
, 
m
);

116  
m
;

118 : 
	`lua_as£π
(0);  0;

120 
	}
}

123 
	$luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

124 
TVÆue
 *
ªs
) {

125 
›
) {

126 
LUA_OPBAND
: 
LUA_OPBOR
: 
LUA_OPBXOR
:

127 
LUA_OPSHL
: 
LUA_OPSHR
:

128 
LUA_OPBNOT
: {

129 
lua_I¡egî
 
i1
;Üua_I¡egî 
i2
;

130 i‡(
	`toöãgî
(
p1
, &
i1
Ë&&Åoöãgî(
p2
, &
i2
)) {

131 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
i1
, 
i2
));

136 
LUA_OPDIV
: 
LUA_OPPOW
: {

137 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

138 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

139 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

145 
lua_Numbî
 
n1
;Üua_Numbî 
n2
;

146 i‡(
	`âisöãgî
(
p1
Ë&&Åtisöãgî(
p2
)) {

147 
	`£tivÆue
(
ªs
, 
	`öèrôh
(
L
, 
›
, 
	`ivÆue
(
p1
), ivÆue(
p2
)));

150 i‡(
	`t⁄umbî
(
p1
, &
n1
Ë&&Å⁄umbî(
p2
, &
n2
)) {

151 
	`£tÊtvÆue
(
ªs
, 
	`num¨ôh
(
L
, 
›
, 
n1
, 
n2
));

158 
	`lua_as£π
(
L
 !
NULL
);

159 
	`luaT_åyböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
	`ˇ°
(
TMS
, (
›
 - 
LUA_OPADD
Ë+ 
TM_ADD
));

160 
	}
}

163 
	$luaO_hexavÆue
 (
c
) {

164 i‡(
	`lisdigô
(
c
))  c - '0';

165  (
	`…ﬁowî
(
c
) - 'a') + 10;

166 
	}
}

169 
	$i¢eg
 (c⁄° **
s
) {

170 i‡(**
s
 == '-') { (*s)++;  1; }

171 i‡(**
s
 == '+') (*s)++;

173 
	}
}

183 #i‡!
deföed
(
lua_°rx2numbî
)

187 
	#MAXSIGDIG
 30

	)

193 
lua_Numbî
 
	$lua_°rx2numbî
 (c⁄° *
s
, **
íd±r
) {

194 
dŸ
 = 
	`lua_gëloˇÀde˝oöt
();

195 
lua_Numbî
 
r
 = 0.0;

196 
sigdig
 = 0;

197 
nosigdig
 = 0;

198 
e
 = 0;

199 
√g
;

200 
hasdŸ
 = 0;

201 *
íd±r
 = 
	`ˇ°
(*, 
s
);

202 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

203 
√g
 = 
	`i¢eg
(&
s
);

204 i‡(!(*
s
 == '0' && (*(s + 1) == 'x' || *(s + 1) == 'X')))

206 
s
 += 2; ; s++) {

207 i‡(*
s
 =
dŸ
) {

208 i‡(
hasdŸ
) ;

209 
hasdŸ
 = 1;

211 i‡(
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
))) {

212 i‡(
sigdig
 =0 && *
s
 == '0')

213 
nosigdig
++;

214 i‡(++
sigdig
 <
MAXSIGDIG
)

215 
r
 = (∏* 
	`ˇ°_num
(16.0)Ë+ 
	`luaO_hexavÆue
(*
s
);

216 
e
++;

217 i‡(
hasdŸ
Ë
e
--;

221 i‡(
nosigdig
 + 
sigdig
 == 0)

223 *
íd±r
 = 
	`ˇ°
(*, 
s
);

224 
e
 *= 4;

225 i‡(*
s
 == 'p' || *s == 'P') {

226 
exp1
 = 0;

227 
√g1
;

228 
s
++;

229 
√g1
 = 
	`i¢eg
(&
s
);

230 i‡(!
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

232 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)))

233 
exp1
 =Éxp1 * 10 + *(
s
++) - '0';

234 i‡(
√g1
Ë
exp1
 = -exp1;

235 
e
 +
exp1
;

236 *
íd±r
 = 
	`ˇ°
(*, 
s
);

238 i‡(
√g
Ë
r
 = -r;

239  
	`l_m©h›
(
ldexp
)(
r
, 
e
);

240 
	}
}

246 c⁄° *
	$l_°r2d
 (c⁄° *
s
, 
lua_Numbî
 *
ªsu…
) {

247 *
íd±r
;

248 i‡(
	`°Ωbrk
(
s
, "nN"))

249  
NULL
;

250 i‡(
	`°Ωbrk
(
s
, "xX"))

251 *
ªsu…
 = 
	`lua_°rx2numbî
(
s
, &
íd±r
);

253 *
ªsu…
 = 
	`lua_°r2numbî
(
s
, &
íd±r
);

254 i‡(
íd±r
 =
s
Ë 
NULL
;

255 
	`lis•a˚
(
	`ˇ°_uch¨
(*
íd±r
)))Éndptr++;

256  (*
íd±r
 ='\0' ?Énd±∏: 
NULL
);

257 
	}
}

260 c⁄° *
	$l_°r2öt
 (c⁄° *
s
, 
lua_I¡egî
 *
ªsu…
) {

261 
lua_Unsig√d
 
a
 = 0;

262 
em±y
 = 1;

263 
√g
;

264 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

265 
√g
 = 
	`i¢eg
(&
s
);

266 i‡(
s
[0] == '0' &&

267 (
s
[1] == 'x' || s[1] == 'X')) {

268 
s
 += 2;

269 ; 
	`lisxdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

270 
a
 =á * 16 + 
	`luaO_hexavÆue
(*
s
);

271 
em±y
 = 0;

275 ; 
	`lisdigô
(
	`ˇ°_uch¨
(*
s
)); s++) {

276 
a
 =á * 10 + *
s
 - '0';

277 
em±y
 = 0;

280 
	`lis•a˚
(
	`ˇ°_uch¨
(*
s
))) s++;

281 i‡(
em±y
 || *
s
 !'\0'Ë 
NULL
;

283 *
ªsu…
 = 
	`l_ˇ°U2S
((
√g
Ë? 0u - 
a
 :á);

284  
s
;

286 
	}
}

289 
size_t
 
	$luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
) {

290 
lua_I¡egî
 
i
; 
lua_Numbî
 
n
;

291 c⁄° *
e
;

292 i‡((
e
 = 
	`l_°r2öt
(
s
, &
i
)Ë!
NULL
) {

293 
	`£tivÆue
(
o
, 
i
);

295 i‡((
e
 = 
	`l_°r2d
(
s
, &
n
)Ë!
NULL
) {

296 
	`£tÊtvÆue
(
o
, 
n
);

300  (
e
 - 
s
) + 1;

301 
	}
}

304 
	$luaO_utf8esc
 (*
buff
, 
x
) {

305 
n
 = 1;

306 
	`lua_as£π
(
x
 <= 0x10FFFF);

307 i‡(
x
 < 0x80)

308 
buff
[
UTF8BUFFSZ
 - 1] = 
	`ˇ°
(, 
x
);

310 
mfb
 = 0x3f;

312 
buff
[
UTF8BUFFSZ
 - (
n
++)] = 
	`ˇ°
(, 0x80 | (
x
 & 0x3f));

313 
x
 >>= 6;

314 
mfb
 >>= 1;

315 } 
x
 > 
mfb
);

316 
buff
[
UTF8BUFFSZ
 - 
n
] = 
	`ˇ°
(, (~
mfb
 << 1Ë| 
x
);

318  
n
;

319 
	}
}

323 
	#MAXNUMBER2STR
 50

	)

329 
	$luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
) {

330 
buff
[
MAXNUMBER2STR
];

331 
size_t
 
Àn
;

332 
	`lua_as£π
(
	`âi¢umbî
(
obj
));

333 i‡(
	`âisöãgî
(
obj
))

334 
Àn
 = 
	`lua_öãgî2°r
(
buff
, (buff), 
	`ivÆue
(
obj
));

336 
Àn
 = 
	`lua_numbî2°r
(
buff
, (buff), 
	`ÊtvÆue
(
obj
));

337 #i‡!
	`deföed
(
LUA_COMPAT_FLOATSTRING
)

338 i‡(
buff
[
	`°r•n
(buff, "-0123456789")] == '\0') {

339 
buff
[
Àn
++] = 
	`lua_gëloˇÀde˝oöt
();

340 
buff
[
Àn
++] = '0';

344 
	`£tsvÆue2s
(
L
, 
obj
, 
	`luaS_√wl°r
(L, 
buff
, 
Àn
));

345 
	}
}

348 
	$push°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

349 
	`£tsvÆue2s
(
L
, L->
t›
, 
	`luaS_√wl°r
(L, 
°r
, 
l
));

350 
	`luaD_ö˘›
(
L
);

351 
	}
}

356 c⁄° *
	$luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, 
va_li°
 
¨gp
) {

357 
n
 = 0;

359 c⁄° *
e
 = 
	`°rchr
(
fmt
, '%');

360 i‡(
e
 =
NULL
) ;

361 
	`push°r
(
L
, 
fmt
, 
e
 - fmt);

362 *(
e
+1)) {

364 c⁄° *
s
 = 
	`va_¨g
(
¨gp
, *);

365 i‡(
s
 =
NULL
) s = "(null)";

366 
	`push°r
(
L
, 
s
, 
	`°æí
(s));

370 
buff
 = 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, ));

371 i‡(
	`li•röt
(
	`ˇ°_uch¨
(
buff
)))

372 
	`push°r
(
L
, &
buff
, 1);

374 
	`luaO_pushf°rög
(
L
, "<\\%d>", 
	`ˇ°_uch¨
(
buff
));

378 
	`£tivÆue
(
L
->
t›
, 
	`va_¨g
(
¨gp
, ));

379 
t›2°r
;

382 
	`£tivÆue
(
L
->
t›
, 
	`ˇ°
(
lua_I¡egî
, 
	`va_¨g
(
¨gp
, 
l_uacI¡
)));

383 
t›2°r
;

386 
	`£tÊtvÆue
(
L
->
t›
, 
	`ˇ°_num
(
	`va_¨g
(
¨gp
, 
l_uacNumbî
)));

387 
t›2°r
:

388 
	`luaD_ö˘›
(
L
);

389 
	`luaO_to°rög
(
L
, L->
t›
 - 1);

393 
buff
[4*(*) + 8];

394 
l
 = 
	`l_•rötf
(
buff
, (buff), "%p", 
	`va_¨g
(
¨gp
, *));

395 
	`push°r
(
L
, 
buff
, 
l
);

399 
buff
[
UTF8BUFFSZ
];

400 
l
 = 
	`luaO_utf8esc
(
buff
, 
	`ˇ°
(, 
	`va_¨g
(
¨gp
, )));

401 
	`push°r
(
L
, 
buff
 + 
UTF8BUFFSZ
 - 
l
,Ü);

405 
	`push°r
(
L
, "%", 1);

409 
	`luaG_ru√º‹
(
L
, "invalid option '%%%c'Åo 'lua_pushfstring'",

410 *(
e
 + 1));

413 
n
 += 2;

414 
fmt
 = 
e
+2;

416 
	`luaD_check°ack
(
L
, 1);

417 
	`push°r
(
L
, 
fmt
, 
	`°æí
(fmt));

418 i‡(
n
 > 0Ë
	`luaV_c⁄ˇt
(
L
,Ç + 1);

419  
	`svÆue
(
L
->
t›
 - 1);

420 
	}
}

423 c⁄° *
	$luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...) {

424 c⁄° *
msg
;

425 
va_li°
 
¨gp
;

426 
	`va_°¨t
(
¨gp
, 
fmt
);

427 
msg
 = 
	`luaO_pushvf°rög
(
L
, 
fmt
, 
¨gp
);

428 
	`va_íd
(
¨gp
);

429  
msg
;

430 
	}
}

434 
	#LL
(
x
Ë((x)/(Ë- 1)

	)

436 
	#RETS
 "..."

	)

437 
	#PRE
 "[°rög \""

	)

438 
	#POS
 "\"]"

	)

440 
	#add°r
(
a
,
b
,
l
Ë–
	`mem˝y
◊,b,÷Ë* ()),á +÷Ë)

	)

442 
	$luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
bufÊí
) {

443 
size_t
 
l
 = 
	`°æí
(
sour˚
);

444 i‡(*
sour˚
 == '=') {

445 i‡(
l
 <
bufÊí
)

446 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

448 
	`add°r
(
out
, 
sour˚
 + 1, 
bufÊí
 - 1);

449 *
out
 = '\0';

452 i‡(*
sour˚
 == '@') {

453 i‡(
l
 <
bufÊí
)

454 
	`mem˝y
(
out
, 
sour˚
 + 1, 
l
 * ());

456 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

457 
bufÊí
 -
	`LL
(
RETS
);

458 
	`mem˝y
(
out
, 
sour˚
 + 1 + 
l
 - 
bufÊí
, bufflen * ());

462 c⁄° *
∆
 = 
	`°rchr
(
sour˚
, '\n');

463 
	`add°r
(
out
, 
PRE
, 
	`LL
(PRE));

464 
bufÊí
 -
	`LL
(
PRE
 
RETS
 
POS
) + 1;

465 i‡(
l
 < 
bufÊí
 && 
∆
 =
NULL
) {

466 
	`add°r
(
out
, 
sour˚
, 
l
);

469 i‡(
∆
 !
NULL
Ë
l
 =Ç»- 
sour˚
;

470 i‡(
l
 > 
bufÊí
)Ü = bufflen;

471 
	`add°r
(
out
, 
sour˚
, 
l
);

472 
	`add°r
(
out
, 
RETS
, 
	`LL
(RETS));

474 
	`mem˝y
(
out
, 
POS
, (
	`LL
(POS) + 1) * ());

476 
	}
}

	@lib/lua/src/lobject.h

8 #i‚de‡
lobje˘_h


9 
	#lobje˘_h


	)

12 
	~<°d¨g.h
>

15 
	~"Œimôs.h
"

16 
	~"lua.h
"

22 
	#LUA_TPROTO
 
LUA_NUMTAGS


	)

23 
	#LUA_TDEADKEY
 (
LUA_NUMTAGS
+1Ë

	)

28 
	#LUA_TOTALTAGS
 (
LUA_TPROTO
 + 2)

	)

47 
	#LUA_TLCL
 (
LUA_TFUNCTION
 | (0 << 4)Ë

	)

48 
	#LUA_TLCF
 (
LUA_TFUNCTION
 | (1 << 4)Ë

	)

49 
	#LUA_TCCL
 (
LUA_TFUNCTION
 | (2 << 4)Ë

	)

53 
	#LUA_TSHRSTR
 (
LUA_TSTRING
 | (0 << 4)Ë

	)

54 
	#LUA_TLNGSTR
 (
LUA_TSTRING
 | (1 << 4)Ë

	)

58 
	#LUA_TNUMFLT
 (
LUA_TNUMBER
 | (0 << 4)Ë

	)

59 
	#LUA_TNUMINT
 (
LUA_TNUMBER
 | (1 << 4)Ë

	)

63 
	#BIT_ISCOLLECTABLE
 (1 << 6)

	)

66 
	#˘b
(
t
Ë(—Ë| 
BIT_ISCOLLECTABLE
)

	)

72 
GCObje˘
 
	tGCObje˘
;

79 
	#Comm⁄Hódî
 
GCObje˘
 *
√xt
; 
lu_byã
 
â
;Üu_byã 
m¨ked


	)

85 
	sGCObje˘
 {

86 
	mComm⁄Hódî
;

100 
	uVÆue
 {

101 
GCObje˘
 *
	mgc
;

102 *
	mp
;

103 
	mb
;

104 
lua_CFun˘i⁄
 
	mf
;

105 
lua_I¡egî
 
	mi
;

106 
lua_Numbî
 
	mn
;

107 } 
	tVÆue
;

110 
	#TVÆuefõlds
 
VÆue
 
vÆue_
; 
â_


	)

113 
	slua_TVÆue
 {

114 
	mTVÆuefõlds
;

115 } 
	tTVÆue
;

120 
	#NILCONSTANT
 {
NULL
}, 
LUA_TNIL


	)

123 
	#vÆ_
(
o
Ë((o)->
vÆue_
)

	)

127 
	#πty≥
(
o
Ë((o)->
â_
)

	)

130 
	#nov¨ü¡
(
x
Ë((xË& 0x0F)

	)

133 
	#ây≥
(
o
Ë(
	`πty≥
(oË& 0x3F)

	)

136 
	#ânov
(
o
Ë(
	`nov¨ü¡
(
	`πty≥
(o)))

	)

140 
	#checkèg
(
o
,
t
Ë(
	`πty≥
(oË=—))

	)

141 
	#checkty≥
(
o
,
t
Ë(
	`ânov
(oË=—))

	)

142 
	#âi¢umbî
(
o
Ë
	`checkty≥
((o), 
LUA_TNUMBER
)

	)

143 
	#âisÊﬂt
(
o
Ë
	`checkèg
((o), 
LUA_TNUMFLT
)

	)

144 
	#âisöãgî
(
o
Ë
	`checkèg
((o), 
LUA_TNUMINT
)

	)

145 
	#âi¢û
(
o
Ë
	`checkèg
((o), 
LUA_TNIL
)

	)

146 
	#âisboﬁón
(
o
Ë
	`checkèg
((o), 
LUA_TBOOLEAN
)

	)

147 
	#âi¶ightu£rd©a
(
o
Ë
	`checkèg
((o), 
LUA_TLIGHTUSERDATA
)

	)

148 
	#âis°rög
(
o
Ë
	`checkty≥
((o), 
LUA_TSTRING
)

	)

149 
	#âisshr°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TSHRSTR
))

	)

150 
	#âi¶ng°rög
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLNGSTR
))

	)

151 
	#âi°abÀ
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTABLE
))

	)

152 
	#âisfun˘i⁄
(
o
Ë
	`checkty≥
(o, 
LUA_TFUNCTION
)

	)

153 
	#âis˛osuª
(
o
Ë((
	`πty≥
(oË& 0x1FË=
LUA_TFUNCTION
)

	)

154 
	#âisC˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TCCL
))

	)

155 
	#âisL˛osuª
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TLCL
))

	)

156 
	#âi¶cf
(
o
Ë
	`checkèg
((o), 
LUA_TLCF
)

	)

157 
	#âisfuŒu£rd©a
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TUSERDATA
))

	)

158 
	#âi°hªad
(
o
Ë
	`checkèg
((o), 
	`˘b
(
LUA_TTHREAD
))

	)

159 
	#âisdódkey
(
o
Ë
	`checkèg
((o), 
LUA_TDEADKEY
)

	)

163 
	#ivÆue
(
o
Ë
	`check_exp
(
	`âisöãgî
(o), 
	`vÆ_
(o).
i
)

	)

164 
	#ÊtvÆue
(
o
Ë
	`check_exp
(
	`âisÊﬂt
(o), 
	`vÆ_
(o).
n
)

	)

165 
	#nvÆue
(
o
Ë
	`check_exp
(
	`âi¢umbî
(o), \

166 (
	`âisöãgî
(
o
Ë? 
	`ˇ°_num
(
	`ivÆue
(o)Ë: 
	`ÊtvÆue
(o)))

	)

167 
	#gcvÆue
(
o
Ë
	`check_exp
(
	`iscﬁÀ˘abÀ
(o), 
	`vÆ_
(o).
gc
)

	)

168 
	#pvÆue
(
o
Ë
	`check_exp
(
	`âi¶ightu£rd©a
(o), 
	`vÆ_
(o).
p
)

	)

169 
	#tsvÆue
(
o
Ë
	`check_exp
(
	`âis°rög
(o), 
	`gco2ts
(
	`vÆ_
(o).
gc
))

	)

170 
	#uvÆue
(
o
Ë
	`check_exp
(
	`âisfuŒu£rd©a
(o), 
	`gco2u
(
	`vÆ_
(o).
gc
))

	)

171 
	#˛vÆue
(
o
Ë
	`check_exp
(
	`âis˛osuª
(o), 
	`gco2˛
(
	`vÆ_
(o).
gc
))

	)

172 
	#˛LvÆue
(
o
Ë
	`check_exp
(
	`âisL˛osuª
(o), 
	`gco2l˛
(
	`vÆ_
(o).
gc
))

	)

173 
	#˛CvÆue
(
o
Ë
	`check_exp
(
	`âisC˛osuª
(o), 
	`gco2c˛
(
	`vÆ_
(o).
gc
))

	)

174 
	#fvÆue
(
o
Ë
	`check_exp
(
	`âi¶cf
(o), 
	`vÆ_
(o).
f
)

	)

175 
	#hvÆue
(
o
Ë
	`check_exp
(
	`âi°abÀ
(o), 
	`gco2t
(
	`vÆ_
(o).
gc
))

	)

176 
	#bvÆue
(
o
Ë
	`check_exp
(
	`âisboﬁón
(o), 
	`vÆ_
(o).
b
)

	)

177 
	#thvÆue
(
o
Ë
	`check_exp
(
	`âi°hªad
(o), 
	`gco2th
(
	`vÆ_
(o).
gc
))

	)

179 
	#dódvÆue
(
o
Ë
	`check_exp
(
	`âisdódkey
(o), 
	`ˇ°
(*, 
	`vÆ_
(o).
gc
))

	)

181 
	#l_isÁl£
(
o
Ë(
	`âi¢û
(oË|| (
	`âisboﬁón
(oË&& 
	`bvÆue
(oË=0))

	)

184 
	#iscﬁÀ˘abÀ
(
o
Ë(
	`πty≥
(oË& 
BIT_ISCOLLECTABLE
)

	)

188 
	#righât
(
obj
Ë(
	`ây≥
(objË=
	`gcvÆue
(obj)->
â
)

	)

190 
	#checklivíess
(
L
,
obj
) \

191 
	`lua_l⁄gas£π
(!
	`iscﬁÀ˘abÀ
(
obj
) || \

192 (
	`righât
(
obj
Ë&& (
L
 =
NULL
 || !
	`isdód
(
	`G
(L),
	`gcvÆue
(obj)))))

	)

196 
	#£ât_
(
o
,
t
Ë((o)->
â_
=—))

	)

198 
	#£tÊtvÆue
(
obj
,
x
) \

199 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
n
=(
x
); 
	`£ât_
(io, 
LUA_TNUMFLT
); }

	)

201 
	#chgÊtvÆue
(
obj
,
x
) \

202 { 
TVÆue
 *
io
=(
obj
); 
	`lua_as£π
(
	`âisÊﬂt
(io)); 
	`vÆ_
(io).
n
=(
x
); }

	)

204 
	#£tivÆue
(
obj
,
x
) \

205 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
i
=(
x
); 
	`£ât_
(io, 
LUA_TNUMINT
); }

	)

207 
	#chgivÆue
(
obj
,
x
) \

208 { 
TVÆue
 *
io
=(
obj
); 
	`lua_as£π
(
	`âisöãgî
(io)); 
	`vÆ_
(io).
i
=(
x
); }

	)

210 
	#£äûvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TNIL
)

	)

212 
	#£tfvÆue
(
obj
,
x
) \

213 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
f
=(
x
); 
	`£ât_
(io, 
LUA_TLCF
); }

	)

215 
	#£çvÆue
(
obj
,
x
) \

216 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
p
=(
x
); 
	`£ât_
(io, 
LUA_TLIGHTUSERDATA
); }

	)

218 
	#£tbvÆue
(
obj
,
x
) \

219 { 
TVÆue
 *
io
=(
obj
); 
	`vÆ_
(io).
b
=(
x
); 
	`£ât_
(io, 
LUA_TBOOLEAN
); }

	)

221 
	#£tgcovÆue
(
L
,
obj
,
x
) \

222 { 
TVÆue
 *
io
 = (
obj
); 
GCObje˘
 *
i_g
=(
x
); \

223 
	`vÆ_
(
io
).
gc
 = 
i_g
; 
	`£ât_
(io, 
	`˘b
(i_g->
â
)); }

	)

225 
	#£tsvÆue
(
L
,
obj
,
x
) \

226 { 
TVÆue
 *
io
 = (
obj
); 
TSåög
 *
x_
 = (
x
); \

227 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(x_->
â
)); \

228 
	`checklivíess
(
L
,
io
); }

	)

230 
	#£tuvÆue
(
L
,
obj
,
x
) \

231 { 
TVÆue
 *
io
 = (
obj
); 
Ud©a
 *
x_
 = (
x
); \

232 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TUSERDATA
)); \

233 
	`checklivíess
(
L
,
io
); }

	)

235 
	#£âhvÆue
(
L
,
obj
,
x
) \

236 { 
TVÆue
 *
io
 = (
obj
); 
lua_Sèã
 *
x_
 = (
x
); \

237 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTHREAD
)); \

238 
	`checklivíess
(
L
,
io
); }

	)

240 
	#£t˛LvÆue
(
L
,
obj
,
x
) \

241 { 
TVÆue
 *
io
 = (
obj
); 
LClosuª
 *
x_
 = (
x
); \

242 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TLCL
)); \

243 
	`checklivíess
(
L
,
io
); }

	)

245 
	#£t˛CvÆue
(
L
,
obj
,
x
) \

246 { 
TVÆue
 *
io
 = (
obj
); 
CClosuª
 *
x_
 = (
x
); \

247 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TCCL
)); \

248 
	`checklivíess
(
L
,
io
); }

	)

250 
	#£thvÆue
(
L
,
obj
,
x
) \

251 { 
TVÆue
 *
io
 = (
obj
); 
TabÀ
 *
x_
 = (
x
); \

252 
	`vÆ_
(
io
).
gc
 = 
	`obj2gco
(
x_
); 
	`£ât_
(io, 
	`˘b
(
LUA_TTABLE
)); \

253 
	`checklivíess
(
L
,
io
); }

	)

255 
	#£tdódvÆue
(
obj
Ë
	`£ât_
(obj, 
LUA_TDEADKEY
)

	)

259 
	#£tobj
(
L
,
obj1
,
obj2
) \

260 { 
TVÆue
 *
io1
=(
obj1
); *io1 = *(
obj2
); \

261 ()
L
; 
	`checklivíess
(L,
io1
); }

	)

269 
	#£tobjs2s
 
£tobj


	)

271 
	#£tobj2s
 
£tobj


	)

272 
	#£tsvÆue2s
 
£tsvÆue


	)

273 
	#£thvÆue2s
 
£thvÆue


	)

274 
	#£çtvÆue2s
 
£çtvÆue


	)

276 
	#£tobjt2t
 
£tobj


	)

278 
	#£tobj2n
 
£tobj


	)

279 
	#£tsvÆue2n
 
£tsvÆue


	)

282 
	#£tobj2t
(
L
,
o1
,
o2
Ë(()L, *(o1)=*(o2), 
	`checklivíess
(L,(o1)))

	)

294 
TVÆue
 *
	tStkId
;

303 
	sTSåög
 {

304 
	mComm⁄Hódî
;

305 
lu_byã
 
	mexåa
;

306 
lu_byã
 
	mshæí
;

307 
	mhash
;

309 
size_t
 
	m gÀn
;

310 
TSåög
 *
	mh√xt
;

311 } 
	mu
;

312 } 
	tTSåög
;

318 
	uUTSåög
 {

319 
L_UmaxÆign
 
	mdummy
;

320 
TSåög
 
	mtsv
;

321 } 
	tUTSåög
;

328 
	#gë°r
(
ts
) \

329 
	`check_exp
(((
ts
)->
exåa
), 
	`ˇ°
(*, (ts)Ë+ (
UTSåög
))

	)

333 
	#svÆue
(
o
Ë
	`gë°r
(
	`tsvÆue
(o))

	)

336 
	#ts¶í
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 ? (s)->
shæí
 : (s)->
u
.
 gÀn
)

	)

339 
	#v¶í
(
o
Ë
	`ts¶í
(
	`tsvÆue
(o))

	)

346 
	sUd©a
 {

347 
	mComm⁄Hódî
;

348 
lu_byã
 
	mâuv_
;

349 
TabÀ
 *
	mmë©abÀ
;

350 
size_t
 
	mÀn
;

351 
VÆue
 
	mu£r_
;

352 } 
	tUd©a
;

358 
	uUUd©a
 {

359 
L_UmaxÆign
 
	mdummy
;

360 
Ud©a
 
	muv
;

361 } 
	tUUd©a
;

368 
	#gëud©amem
(
u
) \

369 
	`check_exp
(((
u
)->
âuv_
), (
	`ˇ°
(*, (u)Ë+ (
UUd©a
)))

	)

371 
	#£tu£rvÆue
(
L
,
u
,
o
) \

372 { c⁄° 
TVÆue
 *
io
=(
o
); 
Ud©a
 *
iu
 = (
u
); \

373 
iu
->
u£r_
 = 
io
->
vÆue_
; iu->
âuv_
 = 
	`πty≥
(io); \

374 
	`checklivíess
(
L
,
io
); }

	)

377 
	#gëu£rvÆue
(
L
,
u
,
o
) \

378 { 
TVÆue
 *
io
=(
o
); c⁄° 
Ud©a
 *
iu
 = (
u
); \

379 
io
->
vÆue_
 = 
iu
->
u£r_
; 
	`£ât_
(io, iu->
âuv_
); \

380 
	`checklivíess
(
L
,
io
); }

	)

386 
	sUpvÆdesc
 {

387 
TSåög
 *
	m«me
;

388 
lu_byã
 
	mö°ack
;

389 
lu_byã
 
	midx
;

390 } 
	tUpvÆdesc
;

397 
	sLocV¨
 {

398 
TSåög
 *
	mv¨«me
;

399 
	m°¨çc
;

400 
	mídpc
;

401 } 
	tLocV¨
;

407 
	sPrŸo
 {

408 
	mComm⁄Hódî
;

409 
lu_byã
 
	mnum∑øms
;

410 
lu_byã
 
	mis_v¨¨g
;

411 
lu_byã
 
	mmax°acksize
;

412 
	msizeupvÆues
;

413 
	msizek
;

414 
	msizecode
;

415 
	msizñöeöfo
;

416 
	msizï
;

417 
	msizñocv¨s
;

418 
	mlöedeföed
;

419 
	mœ°löedeföed
;

420 
TVÆue
 *
	mk
;

421 
In°ru˘i⁄
 *
	mcode
;

422 
PrŸo
 **
	mp
;

423 *
	mlöeöfo
;

424 
LocV¨
 *
	mlocv¨s
;

425 
UpvÆdesc
 *
	mupvÆues
;

426 
LClosuª
 *
	mˇche
;

427 
TSåög
 *
	msour˚
;

428 
GCObje˘
 *
	mg˛i°
;

429 } 
	tPrŸo
;

436 
UpVÆ
 
	tUpVÆ
;

443 
	#ClosuªHódî
 \

444 
Comm⁄Hódî
; 
lu_byã
 
nupvÆues
; 
GCObje˘
 *
g˛i°


	)

446 
	sCClosuª
 {

447 
	mClosuªHódî
;

448 
lua_CFun˘i⁄
 
	mf
;

449 
TVÆue
 
	mupvÆue
[1];

450 } 
	tCClosuª
;

453 
	sLClosuª
 {

454 
	mClosuªHódî
;

455 
PrŸo
 *
	mp
;

456 
UpVÆ
 *
	mupvÆs
[1];

457 } 
	tLClosuª
;

460 
	uClosuª
 {

461 
CClosuª
 
	mc
;

462 
LClosuª
 
	ml
;

463 } 
	tClosuª
;

466 
	#isLfun˘i⁄
(
o
Ë
	`âisL˛osuª
(o)

	)

468 
	#gë¥Ÿo
(
o
Ë(
	`˛LvÆue
(o)->
p
)

	)

475 
	uTKey
 {

477 
	mTVÆuefõlds
;

478 
	m√xt
;

479 } 
	mnk
;

480 
TVÆue
 
	mtvk
;

481 } 
	tTKey
;

485 
	#£äodekey
(
L
,
key
,
obj
) \

486 { 
TKey
 *
k_
=(
key
); c⁄° 
TVÆue
 *
io_
=(
obj
); \

487 
k_
->
nk
.
vÆue_
 = 
io_
->vÆue_; k_->nk.
â_
 = io_->tt_; \

488 ()
L
; 
	`checklivíess
(L,
io_
); }

	)

491 
	sNode
 {

492 
TVÆue
 
	mi_vÆ
;

493 
TKey
 
	mi_key
;

494 } 
	tNode
;

497 
	sTabÀ
 {

498 
	mComm⁄Hódî
;

499 
lu_byã
 
	mÊags
;

500 
lu_byã
 
	mlsizíode
;

501 
	msizóºay
;

502 
TVÆue
 *
	m¨øy
;

503 
Node
 *
	mnode
;

504 
Node
 *
	mœ°‰ì
;

505 
TabÀ
 *
	mmë©abÀ
;

506 
GCObje˘
 *
	mg˛i°
;

507 } 
	tTabÀ
;

514 
	#lmod
(
s
,
size
) \

515 (
	`check_exp
((
size
&(size-1))==0, (
	`ˇ°
(, (
s
Ë& ((size)-1)))))

	)

518 
	#twŸo
(
x
Ë(1<<(x))

	)

519 
	#sizíode
(
t
Ë(
	`twŸo
(—)->
lsizíode
))

	)

525 
	#luaO_nûobje˘
 (&
luaO_nûobje˘_
)

	)

528 
LUAI_DDEC
 c⁄° 
TVÆue
 
	gluaO_nûobje˘_
;

531 
	#UTF8BUFFSZ
 8

	)

533 
LUAI_FUNC
 
luaO_öt2fb
 (
x
);

534 
LUAI_FUNC
 
luaO_fb2öt
 (
x
);

535 
LUAI_FUNC
 
luaO_utf8esc
 (*
buff
, 
x
);

536 
LUAI_FUNC
 
luaO_˚ûlog2
 (
x
);

537 
LUAI_FUNC
 
luaO_¨ôh
 (
lua_Sèã
 *
L
, 
›
, c⁄° 
TVÆue
 *
p1
,

538 c⁄° 
TVÆue
 *
p2
, TVÆuê*
ªs
);

539 
LUAI_FUNC
 
size_t
 
luaO_°r2num
 (c⁄° *
s
, 
TVÆue
 *
o
);

540 
LUAI_FUNC
 
luaO_hexavÆue
 (
c
);

541 
LUAI_FUNC
 
luaO_to°rög
 (
lua_Sèã
 *
L
, 
StkId
 
obj
);

542 
LUAI_FUNC
 c⁄° *
luaO_pushvf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
,

543 
va_li°
 
¨gp
);

544 
LUAI_FUNC
 c⁄° *
luaO_pushf°rög
 (
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

545 
LUAI_FUNC
 
luaO_chunkid
 (*
out
, c⁄° *
sour˚
, 
size_t
 
Àn
);

	@lib/lua/src/lopcodes.c

7 
	#l›codes_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

15 
	~"l›codes.h
"

20 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1] = {

68 
NULL


72 
	#›mode
(
t
,
a
,
b
,
c
,
m
Ë((—)<<7Ë| (◊)<<6Ë| ((b)<<4Ë| ((c)<<2Ë| (m))

	)

74 
LUAI_DDEF
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
] = {

76 
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

77 ,
›mode
(0, 1, 
OpArgK
, 
OpArgN
, 
iABx
)

78 ,
›mode
(0, 1, 
OpArgN
, OpArgN, 
iABx
)

79 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

80 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

81 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

82 ,
›mode
(0, 1, 
OpArgU
, 
OpArgK
, 
iABC
)

83 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

84 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

85 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

86 ,
›mode
(0, 0, 
OpArgK
, OpArgK, 
iABC
)

87 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

88 ,
›mode
(0, 1, 
OpArgR
, 
OpArgK
, 
iABC
)

89 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

90 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

91 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

92 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

93 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

94 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

95 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

96 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

97 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

98 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

99 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

100 ,
›mode
(0, 1, 
OpArgK
, OpArgK, 
iABC
)

101 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

102 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

103 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

104 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iABC
)

105 ,
›mode
(0, 1, 
OpArgR
, OpArgR, 
iABC
)

106 ,
›mode
(0, 0, 
OpArgR
, 
OpArgN
, 
iAsBx
)

107 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

108 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

109 ,
›mode
(1, 0, 
OpArgK
, OpArgK, 
iABC
)

110 ,
›mode
(1, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

111 ,
›mode
(1, 1, 
OpArgR
, 
OpArgU
, 
iABC
)

112 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

113 ,
›mode
(0, 1, 
OpArgU
, OpArgU, 
iABC
)

114 ,
›mode
(0, 0, 
OpArgU
, 
OpArgN
, 
iABC
)

115 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

116 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

117 ,
›mode
(0, 0, 
OpArgN
, 
OpArgU
, 
iABC
)

118 ,
›mode
(0, 1, 
OpArgR
, 
OpArgN
, 
iAsBx
)

119 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iABC
)

120 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABx
)

121 ,
›mode
(0, 1, 
OpArgU
, 
OpArgN
, 
iABC
)

122 ,
›mode
(0, 0, 
OpArgU
, OpArgU, 
iAx
)

	@lib/lua/src/lopcodes.h

7 #i‚de‡
l›codes_h


8 
	#l›codes_h


	)

10 
	~"Œimôs.h
"

32 
	eOpMode
 {
	miABC
, 
	miABx
, 
	miAsBx
, 
	miAx
};

38 
	#SIZE_C
 9

	)

39 
	#SIZE_B
 9

	)

40 
	#SIZE_Bx
 (
SIZE_C
 + 
SIZE_B
)

	)

41 
	#SIZE_A
 8

	)

42 
	#SIZE_Ax
 (
SIZE_C
 + 
SIZE_B
 + 
SIZE_A
)

	)

44 
	#SIZE_OP
 6

	)

46 
	#POS_OP
 0

	)

47 
	#POS_A
 (
POS_OP
 + 
SIZE_OP
)

	)

48 
	#POS_C
 (
POS_A
 + 
SIZE_A
)

	)

49 
	#POS_B
 (
POS_C
 + 
SIZE_C
)

	)

50 
	#POS_Bx
 
POS_C


	)

51 
	#POS_Ax
 
POS_A


	)

59 #i‡
SIZE_Bx
 < 
LUAI_BITSINT
-1

60 
	#MAXARG_Bx
 ((1<<
SIZE_Bx
)-1)

	)

61 
	#MAXARG_sBx
 (
MAXARG_Bx
>>1Ë

	)

63 
	#MAXARG_Bx
 
MAX_INT


	)

64 
	#MAXARG_sBx
 
MAX_INT


	)

67 #i‡
SIZE_Ax
 < 
LUAI_BITSINT
-1

68 
	#MAXARG_Ax
 ((1<<
SIZE_Ax
)-1)

	)

70 
	#MAXARG_Ax
 
MAX_INT


	)

74 
	#MAXARG_A
 ((1<<
SIZE_A
)-1)

	)

75 
	#MAXARG_B
 ((1<<
SIZE_B
)-1)

	)

76 
	#MAXARG_C
 ((1<<
SIZE_C
)-1)

	)

80 
	#MASK1
(
n
,
p
Ë((~((~(
In°ru˘i⁄
)0)<<“)))<<’))

	)

83 
	#MASK0
(
n
,
p
Ë(~
	`MASK1
“,p))

	)

89 
	#GET_OPCODE
(
i
Ë(
	`ˇ°
(
OpCode
, ((i)>>
POS_OP
Ë& 
	`MASK1
(
SIZE_OP
,0)))

	)

90 
	#SET_OPCODE
(
i
,
o
Ë((iË(((i)&
	`MASK0
(
SIZE_OP
,
POS_OP
)) | \

91 ((
	`ˇ°
(
In°ru˘i⁄
, 
o
)<<
POS_OP
)&
	`MASK1
(
SIZE_OP
,POS_OP))))

	)

93 
	#gë¨g
(
i
,
pos
,
size
Ë(
	`ˇ°
(, ((i)>>posË& 
	`MASK1
(size,0)))

	)

94 
	#£èrg
(
i
,
v
,
pos
,
size
Ë((iË(((i)&
	`MASK0
(size,pos)) | \

95 ((
	`ˇ°
(
In°ru˘i⁄
, 
v
)<<
pos
)&
	`MASK1
(
size
,pos))))

	)

97 
	#GETARG_A
(
i
Ë
	`gë¨g
(i, 
POS_A
, 
SIZE_A
)

	)

98 
	#SETARG_A
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_A
, 
SIZE_A
)

	)

100 
	#GETARG_B
(
i
Ë
	`gë¨g
(i, 
POS_B
, 
SIZE_B
)

	)

101 
	#SETARG_B
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_B
, 
SIZE_B
)

	)

103 
	#GETARG_C
(
i
Ë
	`gë¨g
(i, 
POS_C
, 
SIZE_C
)

	)

104 
	#SETARG_C
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_C
, 
SIZE_C
)

	)

106 
	#GETARG_Bx
(
i
Ë
	`gë¨g
(i, 
POS_Bx
, 
SIZE_Bx
)

	)

107 
	#SETARG_Bx
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Bx
, 
SIZE_Bx
)

	)

109 
	#GETARG_Ax
(
i
Ë
	`gë¨g
(i, 
POS_Ax
, 
SIZE_Ax
)

	)

110 
	#SETARG_Ax
(
i
,
v
Ë
	`£èrg
(i, v, 
POS_Ax
, 
SIZE_Ax
)

	)

112 
	#GETARG_sBx
(
i
Ë(
	`GETARG_Bx
(i)-
MAXARG_sBx
)

	)

113 
	#SETARG_sBx
(
i
,
b
Ë
	`SETARG_Bx
((i),
	`ˇ°
(, (b)+
MAXARG_sBx
))

	)

116 
	#CREATE_ABC
(
o
,
a
,
b
,
c
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

117 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

118 | (
	`ˇ°
(
In°ru˘i⁄
, 
b
)<<
POS_B
) \

119 | (
	`ˇ°
(
In°ru˘i⁄
, 
c
)<<
POS_C
))

	)

121 
	#CREATE_ABx
(
o
,
a
,
bc
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

122 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_A
) \

123 | (
	`ˇ°
(
In°ru˘i⁄
, 
bc
)<<
POS_Bx
))

	)

125 
	#CREATE_Ax
(
o
,
a
Ë((
	`ˇ°
(
In°ru˘i⁄
, o)<<
POS_OP
) \

126 | (
	`ˇ°
(
In°ru˘i⁄
, 
a
)<<
POS_Ax
))

	)

134 
	#BITRK
 (1 << (
SIZE_B
 - 1))

	)

137 
	#ISK
(
x
Ë((xË& 
BITRK
)

	)

140 
	#INDEXK
(
r
Ë(()‘Ë& ~
BITRK
)

	)

142 
	#MAXINDEXRK
 (
BITRK
 - 1)

	)

145 
	#RKASK
(
x
Ë((xË| 
BITRK
)

	)

151 
	#NO_REG
 
MAXARG_A


	)

169 
	mOP_MOVE
,

170 
	mOP_LOADK
,

171 
	mOP_LOADKX
,

172 
	mOP_LOADBOOL
,

173 
	mOP_LOADNIL
,

174 
	mOP_GETUPVAL
,

176 
	mOP_GETTABUP
,

177 
	mOP_GETTABLE
,

179 
	mOP_SETTABUP
,

180 
	mOP_SETUPVAL
,

181 
	mOP_SETTABLE
,

183 
	mOP_NEWTABLE
,

185 
	mOP_SELF
,

187 
	mOP_ADD
,

188 
	mOP_SUB
,

189 
	mOP_MUL
,

190 
	mOP_MOD
,

191 
	mOP_POW
,

192 
	mOP_DIV
,

193 
	mOP_IDIV
,

194 
	mOP_BAND
,

195 
	mOP_BOR
,

196 
	mOP_BXOR
,

197 
	mOP_SHL
,

198 
	mOP_SHR
,

199 
	mOP_UNM
,

200 
	mOP_BNOT
,

201 
	mOP_NOT
,

202 
	mOP_LEN
,

204 
	mOP_CONCAT
,

206 
	mOP_JMP
,

207 
	mOP_EQ
,

208 
	mOP_LT
,

209 
	mOP_LE
,

211 
	mOP_TEST
,

212 
	mOP_TESTSET
,

214 
	mOP_CALL
,

215 
	mOP_TAILCALL
,

216 
	mOP_RETURN
,

218 
	mOP_FORLOOP
,

220 
	mOP_FORPREP
,

222 
	mOP_TFORCALL
,

223 
	mOP_TFORLOOP
,

225 
	mOP_SETLIST
,

227 
	mOP_CLOSURE
,

229 
	mOP_VARARG
,

231 
	mOP_EXTRAARG


232 } 
	tOpCode
;

235 
	#NUM_OPCODES
 (
	`ˇ°
(, 
OP_EXTRAARG
Ë+ 1)

	)

272 
	eOpArgMask
 {

273 
	mOpArgN
,

274 
	mOpArgU
,

275 
	mOpArgR
,

276 
	mOpArgK


279 
LUAI_DDEC
 c⁄° 
lu_byã
 
	gluaP_›modes
[
NUM_OPCODES
];

281 
	#gëOpMode
(
m
Ë(
	`ˇ°
(
OpMode
, 
luaP_›modes
[m] & 3))

	)

282 
	#gëBMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 4Ë& 3))

	)

283 
	#gëCMode
(
m
Ë(
	`ˇ°
(
OpArgMask
, (
luaP_›modes
[m] >> 2Ë& 3))

	)

284 
	#ã°AMode
(
m
Ë(
luaP_›modes
[m] & (1 << 6))

	)

285 
	#ã°TMode
(
m
Ë(
luaP_›modes
[m] & (1 << 7))

	)

288 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaP_›«mes
[
NUM_OPCODES
+1];

292 
	#LFIELDS_PER_FLUSH
 50

	)

	@lib/lua/src/loslib.c

7 
	#lo¶ib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<î∫o.h
>

14 
	~<loˇÀ.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

17 
	~<time.h
>

19 
	~"lua.h
"

21 
	~"œuxlib.h
"

22 
	~"luÆib.h
"

30 #i‡!
deföed
(
LUA_STRFTIMEOPTIONS
)

32 #i‡
deföed
(
LUA_USE_C89
)

33 
	#LUA_STRFTIMEOPTIONS
 { "aAbBcdHIjmMpSUwWxXyYz%", "" }

	)

35 
	#LUA_STRFTIMEOPTIONS
 \

38 "O", "deHImMSuUVwWy" }

	)

51 #i‡!
deföed
(
l_time_t
)

55 
	#l_timë
 
lua_I¡egî


	)

56 
	#l_pushtime
(
L
,
t
Ë
	`lua_pushöãgî
(L,(
lua_I¡egî
)—))

	)

58 
time_t
 
	$l_checktime
 (
lua_Sèã
 *
L
, 
¨g
) {

59 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

60 
	`luaL_¨gcheck
(
L
, (
time_t
)
t
 =t, 
¨g
, "time out-of-bounds");

61  (
time_t
)
t
;

62 
	}
}

67 #i‡!
deföed
(
l_gmtime
)

73 #i‡
deföed
(
LUA_USE_POSIX
)

75 
	#l_gmtime
(
t
,
r
Ë
	`gmtime_r
—,r)

	)

76 
	#l_loˇ…ime
(
t
,
r
Ë
	`loˇ…ime_r
—,r)

	)

81 
	#l_gmtime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`gmtime
—))

	)

82 
	#l_loˇ…ime
(
t
,
r
Ë(()‘)->
tm_£c
, 
	`loˇ…ime
—))

	)

98 #i‡!
deföed
(
lua_tm≤am
)

100 #i‡
deföed
(
LUA_USE_POSIX
)

102 
	~<uni°d.h
>

104 
	#LUA_TMPNAMBUFSIZE
 32

	)

106 #i‡!
deföed
(
LUA_TMPNAMTEMPLATE
)

107 
	#LUA_TMPNAMTEMPLATE
 "/tmp/lua_XXXXXX"

	)

110 
	#lua_tm≤am
(
b
,
e
) { \

111 
	`°r˝y
(
b
, 
LUA_TMPNAMTEMPLATE
); \

112 
e
 = 
	`mk°emp
(
b
); \

113 i‡(
e
 !-1Ë
	`˛o£
(e); \

114 
e
 = (ê=-1); }

	)

119 
	#LUA_TMPNAMBUFSIZE
 
L_tm≤am


	)

120 
	#lua_tm≤am
(
b
,
e
Ë{É = (
	`tm≤am
(bË=
NULL
); }

	)

130 
	$os_execuã
 (
lua_Sèã
 *
L
) {

131 c⁄° *
cmd
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

132 
°©
 = 
	`sy°em
(
cmd
);

133 i‡(
cmd
 !
NULL
)

134  
	`luaL_exe¸esu…
(
L
, 
°©
);

136 
	`lua_pushboﬁón
(
L
, 
°©
);

139 
	}
}

142 
	$os_ªmove
 (
lua_Sèã
 *
L
) {

143 c⁄° *
fûíame
 = 
	`luaL_check°rög
(
L
, 1);

144  
	`luaL_fûîesu…
(
L
, 
	`ªmove
(
fûíame
) == 0, filename);

145 
	}
}

148 
	$os_ª«me
 (
lua_Sèã
 *
L
) {

149 c⁄° *
‰om«me
 = 
	`luaL_check°rög
(
L
, 1);

150 c⁄° *
t⁄ame
 = 
	`luaL_check°rög
(
L
, 2);

151  
	`luaL_fûîesu…
(
L
, 
	`ª«me
(
‰om«me
, 
t⁄ame
Ë=0, 
NULL
);

152 
	}
}

155 
	$os_tm≤ame
 (
lua_Sèã
 *
L
) {

156 
buff
[
LUA_TMPNAMBUFSIZE
];

157 
îr
;

158 
	`lua_tm≤am
(
buff
, 
îr
);

159 i‡(
îr
)

160  
	`luaL_îr‹
(
L
, "unableÅo generateá unique filename");

161 
	`lua_push°rög
(
L
, 
buff
);

163 
	}
}

166 
	$os_gëív
 (
lua_Sèã
 *
L
) {

167 
	`lua_push°rög
(
L
, 
	`gëív
(
	`luaL_check°rög
(L, 1)));

169 
	}
}

172 
	$os_˛ock
 (
lua_Sèã
 *
L
) {

173 
	`lua_pushnumbî
(
L
, ((
lua_Numbî
)
	`˛ock
())/÷ua_Numbî)
CLOCKS_PER_SEC
);

175 
	}
}

186 
	$£tfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

187 
	`lua_pushöãgî
(
L
, 
vÆue
);

188 
	`lua_£tfõld
(
L
, -2, 
key
);

189 
	}
}

191 
	$£tboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
vÆue
) {

192 i‡(
vÆue
 < 0)

194 
	`lua_pushboﬁón
(
L
, 
vÆue
);

195 
	`lua_£tfõld
(
L
, -2, 
key
);

196 
	}
}

198 
	$gëboﬁfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
) {

199 
ªs
;

200 
ªs
 = (
	`lua_gëfõld
(
L
, -1, 
key
Ë=
LUA_TNIL
Ë? -1 : 
	`lua_toboﬁón
(L, -1);

201 
	`lua_p›
(
L
, 1);

202  
ªs
;

203 
	}
}

207 #i‡!
deföed
(
L_MAXDATEFIELD
)

208 
	#L_MAXDATEFIELD
 (
INT_MAX
 / 2)

	)

211 
	$gëfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
d
, 
dñè
) {

212 
i¢um
;

213 
t
 = 
	`lua_gëfõld
(
L
, -1, 
key
);

214 
lua_I¡egî
 
ªs
 = 
	`lua_toöãgîx
(
L
, -1, &
i¢um
);

215 i‡(!
i¢um
) {

216 i‡(
t
 !
LUA_TNIL
)

217  
	`luaL_îr‹
(
L
, "fõld '%s'ÇŸá¿öãgî", 
key
);

218 i‡(
d
 < 0)

219  
	`luaL_îr‹
(
L
, "fõld '%s' missög i¿d©êèbÀ", 
key
);

220 
ªs
 = 
d
;

223 i‡(!(-
L_MAXDATEFIELD
 <
ªs
 &&Ñes <= L_MAXDATEFIELD))

224  
	`luaL_îr‹
(
L
, "fõld '%s' out-of-bounds", 
key
);

225 
ªs
 -
dñè
;

227 
	`lua_p›
(
L
, 1);

228  ()
ªs
;

229 
	}
}

232 c⁄° *
	$check›ti⁄
 (
lua_Sèã
 *
L
, c⁄° *
c⁄v
, *
buff
) {

233 c⁄° *c⁄° 
›ti⁄s
[] = 
LUA_STRFTIMEOPTIONS
;

234 
i
;

235 
i
 = 0; i < (
›ti⁄s
)/(options[0]); i += 2) {

236 i‡(*
c⁄v
 !'\0' && 
	`°rchr
(
›ti⁄s
[
i
], *c⁄vË!
NULL
) {

237 
buff
[1] = *
c⁄v
;

238 i‡(*
›ti⁄s
[
i
 + 1] == '\0') {

239 
buff
[2] = '\0';

240  
c⁄v
 + 1;

242 i‡(*(
c⁄v
 + 1) != '\0' &&

243 
	`°rchr
(
›ti⁄s
[
i
 + 1], *(
c⁄v
 + 1)Ë!
NULL
) {

244 
buff
[2] = *(
c⁄v
 + 1);

245 
buff
[3] = '\0';

246  
c⁄v
 + 2;

250 
	`luaL_¨gîr‹
(
L
, 1,

251 
	`lua_pushf°rög
(
L
, "övÆid c⁄vîsi⁄ s≥cifõ∏'%%%s'", 
c⁄v
));

252  
c⁄v
;

253 
	}
}

257 
	#SIZETIMEFMT
 250

	)

260 
	$os_d©e
 (
lua_Sèã
 *
L
) {

261 c⁄° *
s
 = 
	`luaL_›t°rög
(
L
, 1, "%c");

262 
time_t
 
t
 = 
	`luaL_›t
(
L
, 
l_checktime
, 2, 
	`time
(
NULL
));

263 
tm
 
tmr
, *
°m
;

264 i‡(*
s
 == '!') {

265 
°m
 = 
	`l_gmtime
(&
t
, &
tmr
);

266 
s
++;

269 
°m
 = 
	`l_loˇ…ime
(&
t
, &
tmr
);

270 i‡(
°m
 =
NULL
)

271 
	`luaL_îr‹
(
L
, "timeÑesult cannot beÑepresented inÅhis installation");

272 i‡(
	`°rcmp
(
s
, "*t") == 0) {

273 
	`lua_¸óãèbÀ
(
L
, 0, 9);

274 
	`£tfõld
(
L
, "£c", 
°m
->
tm_£c
);

275 
	`£tfõld
(
L
, "mö", 
°m
->
tm_mö
);

276 
	`£tfõld
(
L
, "hour", 
°m
->
tm_hour
);

277 
	`£tfõld
(
L
, "day", 
°m
->
tm_mday
);

278 
	`£tfõld
(
L
, "m⁄th", 
°m
->
tm_m⁄
+1);

279 
	`£tfõld
(
L
, "yór", 
°m
->
tm_yór
+1900);

280 
	`£tfõld
(
L
, "wday", 
°m
->
tm_wday
+1);

281 
	`£tfõld
(
L
, "yday", 
°m
->
tm_yday
+1);

282 
	`£tboﬁfõld
(
L
, "isd°", 
°m
->
tm_isd°
);

285 
cc
[4];

286 
luaL_Buf„r
 
b
;

287 
cc
[0] = '%';

288 
	`luaL_bufföô
(
L
, &
b
);

289 *
s
) {

290 i‡(*
s
 != '%')

291 
	`luaL_addch¨
(&
b
, *
s
++);

293 
size_t
 
ª¶í
;

294 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
SIZETIMEFMT
);

295 
s
 = 
	`check›ti⁄
(
L
, s + 1, 
cc
);

296 
ª¶í
 = 
	`°r·ime
(
buff
, 
SIZETIMEFMT
, 
cc
, 
°m
);

297 
	`luaL_addsize
(&
b
, 
ª¶í
);

300 
	`luaL_pushªsu…
(&
b
);

303 
	}
}

306 
	$os_time
 (
lua_Sèã
 *
L
) {

307 
time_t
 
t
;

308 i‡(
	`lua_i¢⁄e‹nû
(
L
, 1))

309 
t
 = 
	`time
(
NULL
);

311 
tm
 
ts
;

312 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

313 
	`lua_£â›
(
L
, 1);

314 
ts
.
tm_£c
 = 
	`gëfõld
(
L
, "sec", 0, 0);

315 
ts
.
tm_mö
 = 
	`gëfõld
(
L
, "min", 0, 0);

316 
ts
.
tm_hour
 = 
	`gëfõld
(
L
, "hour", 12, 0);

317 
ts
.
tm_mday
 = 
	`gëfõld
(
L
, "day", -1, 0);

318 
ts
.
tm_m⁄
 = 
	`gëfõld
(
L
, "month", -1, 1);

319 
ts
.
tm_yór
 = 
	`gëfõld
(
L
, "year", -1, 1900);

320 
ts
.
tm_isd°
 = 
	`gëboﬁfõld
(
L
, "isdst");

321 
t
 = 
	`mktime
(&
ts
);

323 i‡(
t
 !(
time_t
)(
l_timë
)t ||Å == (time_t)(-1))

324 
	`luaL_îr‹
(
L
, "timeÑesult cannot beÑepresented inÅhis installation");

325 
	`l_pushtime
(
L
, 
t
);

327 
	}
}

330 
	$os_dif·ime
 (
lua_Sèã
 *
L
) {

331 
time_t
 
t1
 = 
	`l_checktime
(
L
, 1);

332 
time_t
 
t2
 = 
	`l_checktime
(
L
, 2);

333 
	`lua_pushnumbî
(
L
, (
lua_Numbî
)
	`dif·ime
(
t1
, 
t2
));

335 
	}
}

340 
	$os_£éoˇÀ
 (
lua_Sèã
 *
L
) {

341 c⁄° 
ˇt
[] = {
LC_ALL
, 
LC_COLLATE
, 
LC_CTYPE
, 
LC_MONETARY
,

342 
LC_NUMERIC
, 
LC_TIME
};

343 c⁄° *c⁄° 
ˇäames
[] = {"all", "collate", "ctype", "monetary",

344 "numîic", "time", 
NULL
};

345 c⁄° *
l
 = 
	`luaL_›t°rög
(
L
, 1, 
NULL
);

346 
›
 = 
	`luaL_check›ti⁄
(
L
, 2, "Æl", 
ˇäames
);

347 
	`lua_push°rög
(
L
, 
	`£éoˇÀ
(
ˇt
[
›
], 
l
));

349 
	}
}

352 
	$os_exô
 (
lua_Sèã
 *
L
) {

353 
°©us
;

354 i‡(
	`lua_isboﬁón
(
L
, 1))

355 
°©us
 = (
	`lua_toboﬁón
(
L
, 1Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
);

357 
°©us
 = ()
	`luaL_›töãgî
(
L
, 1, 
EXIT_SUCCESS
);

358 i‡(
	`lua_toboﬁón
(
L
, 2))

359 
	`lua_˛o£
(
L
);

360 i‡(
L
Ë
	`exô
(
°©us
);

362 
	}
}

365 c⁄° 
luaL_Reg
 
	gsy¶ib
[] = {

366 {"˛ock", 
os_˛ock
},

367 {"d©e", 
os_d©e
},

368 {"dif·ime", 
os_dif·ime
},

369 {"execuã", 
os_execuã
},

370 {"exô", 
os_exô
},

371 {"gëív", 
os_gëív
},

372 {"ªmove", 
os_ªmove
},

373 {"ª«me", 
os_ª«me
},

374 {"£éoˇÀ", 
os_£éoˇÀ
},

375 {"time", 
os_time
},

376 {"tm≤ame", 
os_tm≤ame
},

377 {
NULL
, NULL}

384 
LUAMOD_API
 
	$lua›í_os
 (
lua_Sèã
 *
L
) {

385 
	`luaL_√wlib
(
L
, 
sy¶ib
);

387 
	}
}

	@lib/lua/src/lparser.c

7 
	#Õ¨£r_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"lcode.h
"

18 
	~"ldebug.h
"

19 
	~"ldo.h
"

20 
	~"lfunc.h
"

21 
	~"Œex.h
"

22 
	~"lmem.h
"

23 
	~"lobje˘.h
"

24 
	~"l›codes.h
"

25 
	~"Õ¨£r.h
"

26 
	~"l°©e.h
"

27 
	~"l°rög.h
"

28 
	~"…abÀ.h
"

34 
	#MAXVARS
 200

	)

37 
	#hasmu…ªt
(
k
Ë((kË=
VCALL
 || (kË=
VVARARG
)

	)

42 
	#eq°r
(
a
,
b
Ë(◊Ë=(b))

	)

48 
	sBlockC¡
 {

49 
BlockC¡
 *
	m¥evious
;

50 
	mfú°œbñ
;

51 
	mfú°gŸo
;

52 
lu_byã
 
	m«˘v¨
;

53 
lu_byã
 
	mupvÆ
;

54 
lu_byã
 
	mi¶o›
;

55 } 
	tBlockC¡
;

62 
°©emít
 (
LexSèã
 *
ls
);

63 
ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
);

67 
l_n‹ë
 
	$£mîr‹
 (
LexSèã
 *
ls
, c⁄° *
msg
) {

68 
ls
->
t
.
tokí
 = 0;

69 
	`luaX_sy¡axîr‹
(
ls
, 
msg
);

70 
	}
}

73 
l_n‹ë
 
	$îr‹_ex≥˘ed
 (
LexSèã
 *
ls
, 
tokí
) {

74 
	`luaX_sy¡axîr‹
(
ls
,

75 
	`luaO_pushf°rög
(
ls
->
L
, "%†ex≥˘ed", 
	`luaX_tokí2°r
÷s, 
tokí
)));

76 
	}
}

79 
l_n‹ë
 
	$îr‹limô
 (
FuncSèã
 *
fs
, 
limô
, c⁄° *
wh©
) {

80 
lua_Sèã
 *
L
 = 
fs
->
ls
->L;

81 c⁄° *
msg
;

82 
löe
 = 
fs
->
f
->
löedeföed
;

83 c⁄° *
whîe
 = (
löe
 == 0)

85 : 
	`luaO_pushf°rög
(
L
, "fun˘i⁄áàlöê%d", 
löe
);

86 
msg
 = 
	`luaO_pushf°rög
(
L
, "too many %s (limit is %d) in %s",

87 
wh©
, 
limô
, 
whîe
);

88 
	`luaX_sy¡axîr‹
(
fs
->
ls
, 
msg
);

89 
	}
}

92 
	$checklimô
 (
FuncSèã
 *
fs
, 
v
, 
l
, c⁄° *
wh©
) {

93 i‡(
v
 > 
l
Ë
	`îr‹limô
(
fs
,Ü, 
wh©
);

94 
	}
}

97 
	$ã°√xt
 (
LexSèã
 *
ls
, 
c
) {

98 i‡(
ls
->
t
.
tokí
 =
c
) {

99 
	`luaX_√xt
(
ls
);

103 
	}
}

106 
	$check
 (
LexSèã
 *
ls
, 
c
) {

107 i‡(
ls
->
t
.
tokí
 !
c
)

108 
	`îr‹_ex≥˘ed
(
ls
, 
c
);

109 
	}
}

112 
	$check√xt
 (
LexSèã
 *
ls
, 
c
) {

113 
	`check
(
ls
, 
c
);

114 
	`luaX_√xt
(
ls
);

115 
	}
}

118 
	#check_c⁄dôi⁄
(
ls
,
c
,
msg
Ë{ i‡(!(c)Ë
	`luaX_sy¡axîr‹
÷s, msg); }

	)

122 
	$check_m©ch
 (
LexSèã
 *
ls
, 
wh©
, 
who
, 
whîe
) {

123 i‡(!
	`ã°√xt
(
ls
, 
wh©
)) {

124 i‡(
whîe
 =
ls
->
löíumbî
)

125 
	`îr‹_ex≥˘ed
(
ls
, 
wh©
);

127 
	`luaX_sy¡axîr‹
(
ls
, 
	`luaO_pushf°rög
÷s->
L
,

129 
	`luaX_tokí2°r
(
ls
, 
wh©
),ÜuaX_tokí2°r÷s, 
who
), 
whîe
));

132 
	}
}

135 
TSåög
 *
	$°r_check«me
 (
LexSèã
 *
ls
) {

136 
TSåög
 *
ts
;

137 
	`check
(
ls
, 
TK_NAME
);

138 
ts
 = 
ls
->
t
.
£möfo
.ts;

139 
	`luaX_√xt
(
ls
);

140  
ts
;

141 
	}
}

144 
	$öô_exp
 (
expdesc
 *
e
, 
expköd
 
k
, 
i
) {

145 
e
->
f
 =É->
t
 = 
NO_JUMP
;

146 
e
->
k
 = k;

147 
e
->
u
.
öfo
 = 
i
;

148 
	}
}

151 
	$code°rög
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
TSåög
 *
s
) {

152 
	`öô_exp
(
e
, 
VK
, 
	`luaK_°rögK
(
ls
->
fs
, 
s
));

153 
	}
}

156 
	$check«me
 (
LexSèã
 *
ls
, 
expdesc
 *
e
) {

157 
	`code°rög
(
ls
, 
e
, 
	`°r_check«me
(ls));

158 
	}
}

161 
	$ªgi°îloˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
) {

162 
FuncSèã
 *
fs
 = 
ls
->fs;

163 
PrŸo
 *
f
 = 
fs
->f;

164 
ﬁdsize
 = 
f
->
sizñocv¨s
;

165 
	`luaM_growve˘‹
(
ls
->
L
, 
f
->
locv¨s
, 
fs
->
∆ocv¨s
, f->
sizñocv¨s
,

166 
LocV¨
, 
SHRT_MAX
, "local variables");

167 
ﬁdsize
 < 
f
->
sizñocv¨s
Ëf->
locv¨s
[ﬁdsize++].
v¨«me
 = 
NULL
;

168 
f
->
locv¨s
[
fs
->
∆ocv¨s
].
v¨«me
 = varname;

169 
	`luaC_objb¨rõr
(
ls
->
L
, 
f
, 
v¨«me
);

170  
fs
->
∆ocv¨s
++;

171 
	}
}

174 
	$√w_loˇlv¨
 (
LexSèã
 *
ls
, 
TSåög
 *
«me
) {

175 
FuncSèã
 *
fs
 = 
ls
->fs;

176 
Dynd©a
 *
dyd
 = 
ls
->dyd;

177 
ªg
 = 
	`ªgi°îloˇlv¨
(
ls
, 
«me
);

178 
	`checklimô
(
fs
, 
dyd
->
a˘v¨
.
n
 + 1 - fs->
fú°loˇl
,

179 
MAXVARS
, "local variables");

180 
	`luaM_growve˘‹
(
ls
->
L
, 
dyd
->
a˘v¨
.
¨r
, dyd->a˘v¨.
n
 + 1,

181 
dyd
->
a˘v¨
.
size
, 
V¨desc
, 
MAX_INT
, "local variables");

182 
dyd
->
a˘v¨
.
¨r
[dyd->a˘v¨.
n
++].
idx
 = 
	`ˇ°
(, 
ªg
);

183 
	}
}

186 
	$√w_loˇlv¨lôîÆ_
 (
LexSèã
 *
ls
, c⁄° *
«me
, 
size_t
 
sz
) {

187 
	`√w_loˇlv¨
(
ls
, 
	`luaX_√w°rög
÷s, 
«me
, 
sz
));

188 
	}
}

190 
	#√w_loˇlv¨lôîÆ
(
ls
,
v
) \

191 
	`√w_loˇlv¨lôîÆ_
(
ls
, "" 
v
, ((v)/())-1)

	)

194 
LocV¨
 *
	$gëlocv¨
 (
FuncSèã
 *
fs
, 
i
) {

195 
idx
 = 
fs
->
ls
->
dyd
->
a˘v¨
.
¨r
[fs->
fú°loˇl
 + 
i
].idx;

196 
	`lua_as£π
(
idx
 < 
fs
->
∆ocv¨s
);

197  &
fs
->
f
->
locv¨s
[
idx
];

198 
	}
}

201 
	$adju°loˇlv¨s
 (
LexSèã
 *
ls
, 
nv¨s
) {

202 
FuncSèã
 *
fs
 = 
ls
->fs;

203 
fs
->
«˘v¨
 = 
	`ˇ°_byã
(fs->«˘v¨ + 
nv¨s
);

204 ; 
nv¨s
;Çvars--) {

205 
	`gëlocv¨
(
fs
, fs->
«˘v¨
 - 
nv¨s
)->
°¨çc
 = fs->
pc
;

207 
	}
}

210 
	$ªmovev¨s
 (
FuncSèã
 *
fs
, 
tﬁevñ
) {

211 
fs
->
ls
->
dyd
->
a˘v¨
.
n
 -(fs->
«˘v¨
 - 
tﬁevñ
);

212 
fs
->
«˘v¨
 > 
tﬁevñ
)

213 
	`gëlocv¨
(
fs
, --fs->
«˘v¨
)->
ídpc
 = fs->
pc
;

214 
	}
}

217 
	$£¨chupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
) {

218 
i
;

219 
UpvÆdesc
 *
up
 = 
fs
->
f
->
upvÆues
;

220 
i
 = 0; i < 
fs
->
nups
; i++) {

221 i‡(
	`eq°r
(
up
[
i
].
«me
,Çame))  i;

224 
	}
}

227 
	$√wupvÆue
 (
FuncSèã
 *
fs
, 
TSåög
 *
«me
, 
expdesc
 *
v
) {

228 
PrŸo
 *
f
 = 
fs
->f;

229 
ﬁdsize
 = 
f
->
sizeupvÆues
;

230 
	`checklimô
(
fs
, fs->
nups
 + 1, 
MAXUPVAL
, "upvalues");

231 
	`luaM_growve˘‹
(
fs
->
ls
->
L
, 
f
->
upvÆues
, fs->
nups
, f->
sizeupvÆues
,

232 
UpvÆdesc
, 
MAXUPVAL
, "upvalues");

233 
ﬁdsize
 < 
f
->
sizeupvÆues
Ëf->
upvÆues
[ﬁdsize++].
«me
 = 
NULL
;

234 
f
->
upvÆues
[
fs
->
nups
].
ö°ack
 = (
v
->
k
 =
VLOCAL
);

235 
f
->
upvÆues
[
fs
->
nups
].
idx
 = 
	`ˇ°_byã
(
v
->
u
.
öfo
);

236 
f
->
upvÆues
[
fs
->
nups
].
«me
 =Çame;

237 
	`luaC_objb¨rõr
(
fs
->
ls
->
L
, 
f
, 
«me
);

238  
fs
->
nups
++;

239 
	}
}

242 
	$£¨chv¨
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
) {

243 
i
;

244 
i
 = 
	`ˇ°_öt
(
fs
->
«˘v¨
) - 1; i >= 0; i--) {

245 i‡(
	`eq°r
(
n
, 
	`gëlocv¨
(
fs
, 
i
)->
v¨«me
))

246  
i
;

249 
	}
}

256 
	$m¨kupvÆ
 (
FuncSèã
 *
fs
, 
Àvñ
) {

257 
BlockC¡
 *
bl
 = 
fs
->bl;

258 
bl
->
«˘v¨
 > 
Àvñ
Ëb»bl->
¥evious
;

259 
bl
->
upvÆ
 = 1;

260 
	}
}

267 
	$sögÀv¨aux
 (
FuncSèã
 *
fs
, 
TSåög
 *
n
, 
expdesc
 *
v¨
, 
ba£
) {

268 i‡(
fs
 =
NULL
)

269  
VVOID
;

271 
v
 = 
	`£¨chv¨
(
fs
, 
n
);

272 i‡(
v
 >= 0) {

273 
	`öô_exp
(
v¨
, 
VLOCAL
, 
v
);

274 i‡(!
ba£
)

275 
	`m¨kupvÆ
(
fs
, 
v
);

276  
VLOCAL
;

279 
idx
 = 
	`£¨chupvÆue
(
fs
, 
n
);

280 i‡(
idx
 < 0) {

281 i‡(
	`sögÀv¨aux
(
fs
->
¥ev
, 
n
, 
v¨
, 0Ë=
VVOID
)

282  
VVOID
;

284 
idx
 = 
	`√wupvÆue
(
fs
, 
n
, 
v¨
);

286 
	`öô_exp
(
v¨
, 
VUPVAL
, 
idx
);

287  
VUPVAL
;

290 
	}
}

293 
	$sögÀv¨
 (
LexSèã
 *
ls
, 
expdesc
 *
v¨
) {

294 
TSåög
 *
v¨«me
 = 
	`°r_check«me
(
ls
);

295 
FuncSèã
 *
fs
 = 
ls
->fs;

296 i‡(
	`sögÀv¨aux
(
fs
, 
v¨«me
, 
v¨
, 1Ë=
VVOID
) {

297 
expdesc
 
key
;

298 
	`sögÀv¨aux
(
fs
, 
ls
->
ívn
, 
v¨
, 1);

299 
	`lua_as£π
(
v¨
->
k
 =
VLOCAL
 || v¨->k =
VUPVAL
);

300 
	`code°rög
(
ls
, &
key
, 
v¨«me
);

301 
	`luaK_ödexed
(
fs
, 
v¨
, &
key
);

303 
	}
}

306 
	$adju°_assign
 (
LexSèã
 *
ls
, 
nv¨s
, 
√xps
, 
expdesc
 *
e
) {

307 
FuncSèã
 *
fs
 = 
ls
->fs;

308 
exåa
 = 
nv¨s
 - 
√xps
;

309 i‡(
	`hasmu…ªt
(
e
->
k
)) {

310 
exåa
++;

311 i‡(
exåa
 < 0)Éxtra = 0;

312 
	`luaK_£åëu∫s
(
fs
, 
e
, 
exåa
);

313 i‡(
exåa
 > 1Ë
	`luaK_ª£rvîegs
(
fs
,Éxtra-1);

316 i‡(
e
->
k
 !
VVOID
Ë
	`luaK_exp2√xåeg
(
fs
,É);

317 i‡(
exåa
 > 0) {

318 
ªg
 = 
fs
->
‰ìªg
;

319 
	`luaK_ª£rvîegs
(
fs
, 
exåa
);

320 
	`luaK_nû
(
fs
, 
ªg
, 
exåa
);

323 
	}
}

326 
	$íãæevñ
 (
LexSèã
 *
ls
) {

327 
lua_Sèã
 *
L
 = 
ls
->L;

328 ++
L
->
nCˇŒs
;

329 
	`checklimô
(
ls
->
fs
, 
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
, "CÜevels");

330 
	}
}

333 
	#Àavñevñ
(
ls
Ë(÷s)->
L
->
nCˇŒs
--)

	)

336 
	$˛o£gŸo
 (
LexSèã
 *
ls
, 
g
, 
Labñdesc
 *
œbñ
) {

337 
i
;

338 
FuncSèã
 *
fs
 = 
ls
->fs;

339 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

340 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
g
];

341 
	`lua_as£π
(
	`eq°r
(
gt
->
«me
, 
œbñ
->name));

342 i‡(
gt
->
«˘v¨
 < 
œbñ
->nactvar) {

343 
TSåög
 *
v«me
 = 
	`gëlocv¨
(
fs
, 
gt
->
«˘v¨
)->
v¨«me
;

344 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
,

346 
	`gë°r
(
gt
->
«me
), gt->
löe
, gë°r(
v«me
));

347 
	`£mîr‹
(
ls
, 
msg
);

349 
	`luaK_∑tchli°
(
fs
, 
gt
->
pc
, 
œbñ
->pc);

351 
i
 = 
g
; i < 
gl
->
n
 - 1; i++)

352 
gl
->
¨r
[
i
] = gl->arr[i + 1];

353 
gl
->
n
--;

354 
	}
}

360 
	$födœbñ
 (
LexSèã
 *
ls
, 
g
) {

361 
i
;

362 
BlockC¡
 *
bl
 = 
ls
->
fs
->bl;

363 
Dynd©a
 *
dyd
 = 
ls
->dyd;

364 
Labñdesc
 *
gt
 = &
dyd
->gt.
¨r
[
g
];

366 
i
 = 
bl
->
fú°œbñ
; i < 
dyd
->
œbñ
.
n
; i++) {

367 
Labñdesc
 *
lb
 = &
dyd
->
œbñ
.
¨r
[
i
];

368 i‡(
	`eq°r
(
lb
->
«me
, 
gt
->name)) {

369 i‡(
gt
->
«˘v¨
 > 
lb
->nactvar &&

370 (
bl
->
upvÆ
 || 
dyd
->
œbñ
.
n
 > bl->
fú°œbñ
))

371 
	`luaK_∑tch˛o£
(
ls
->
fs
, 
gt
->
pc
, 
lb
->
«˘v¨
);

372 
	`˛o£gŸo
(
ls
, 
g
, 
lb
);

377 
	}
}

380 
	$√wœbñíåy
 (
LexSèã
 *
ls
, 
Labñli°
 *
l
, 
TSåög
 *
«me
,

381 
löe
, 
pc
) {

382 
n
 = 
l
->n;

383 
	`luaM_growve˘‹
(
ls
->
L
, 
l
->
¨r
, 
n
,Ü->
size
,

384 
Labñdesc
, 
SHRT_MAX
, "labels/gotos");

385 
l
->
¨r
[
n
].
«me
 =Çame;

386 
l
->
¨r
[
n
].
löe
 =Üine;

387 
l
->
¨r
[
n
].
«˘v¨
 = 
ls
->
fs
->nactvar;

388 
l
->
¨r
[
n
].
pc
 =Öc;

389 
l
->
n
 =Ç + 1;

390  
n
;

391 
	}
}

398 
	$födgŸos
 (
LexSèã
 *
ls
, 
Labñdesc
 *
lb
) {

399 
Labñli°
 *
gl
 = &
ls
->
dyd
->
gt
;

400 
i
 = 
ls
->
fs
->
bl
->
fú°gŸo
;

401 
i
 < 
gl
->
n
) {

402 i‡(
	`eq°r
(
gl
->
¨r
[
i
].
«me
, 
lb
->name))

403 
	`˛o£gŸo
(
ls
, 
i
, 
lb
);

405 
i
++;

407 
	}
}

416 
	$movegŸosout
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

417 
i
 = 
bl
->
fú°gŸo
;

418 
Labñli°
 *
gl
 = &
fs
->
ls
->
dyd
->
gt
;

421 
i
 < 
gl
->
n
) {

422 
Labñdesc
 *
gt
 = &
gl
->
¨r
[
i
];

423 i‡(
gt
->
«˘v¨
 > 
bl
->nactvar) {

424 i‡(
bl
->
upvÆ
)

425 
	`luaK_∑tch˛o£
(
fs
, 
gt
->
pc
, 
bl
->
«˘v¨
);

426 
gt
->
«˘v¨
 = 
bl
->nactvar;

428 i‡(!
	`födœbñ
(
fs
->
ls
, 
i
))

429 
i
++;

431 
	}
}

434 
	$íãrblock
 (
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
, 
lu_byã
 
i¶o›
) {

435 
bl
->
i¶o›
 = isloop;

436 
bl
->
«˘v¨
 = 
fs
->nactvar;

437 
bl
->
fú°œbñ
 = 
fs
->
ls
->
dyd
->
œbñ
.
n
;

438 
bl
->
fú°gŸo
 = 
fs
->
ls
->
dyd
->
gt
.
n
;

439 
bl
->
upvÆ
 = 0;

440 
bl
->
¥evious
 = 
fs
->bl;

441 
fs
->
bl
 = bl;

442 
	`lua_as£π
(
fs
->
‰ìªg
 =fs->
«˘v¨
);

443 
	}
}

449 
	$bªakœbñ
 (
LexSèã
 *
ls
) {

450 
TSåög
 *
n
 = 
	`luaS_√w
(
ls
->
L
, "break");

451 
l
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
œbñ
, 
n
, 0,Üs->
fs
->
pc
);

452 
	`födgŸos
(
ls
, &ls->
dyd
->
œbñ
.
¨r
[
l
]);

453 
	}
}

459 
l_n‹ë
 
	$undefgŸo
 (
LexSèã
 *
ls
, 
Labñdesc
 *
gt
) {

460 c⁄° *
msg
 = 
	`i§e£rved
(
gt
->
«me
)

463 
msg
 = 
	`luaO_pushf°rög
(
ls
->
L
, msg, 
	`gë°r
(
gt
->
«me
), gt->
löe
);

464 
	`£mîr‹
(
ls
, 
msg
);

465 
	}
}

468 
	$Àaveblock
 (
FuncSèã
 *
fs
) {

469 
BlockC¡
 *
bl
 = 
fs
->bl;

470 
LexSèã
 *
ls
 = 
fs
->ls;

471 i‡(
bl
->
¥evious
 && bl->
upvÆ
) {

473 
j
 = 
	`luaK_jump
(
fs
);

474 
	`luaK_∑tch˛o£
(
fs
, 
j
, 
bl
->
«˘v¨
);

475 
	`luaK_∑tchtohîe
(
fs
, 
j
);

477 i‡(
bl
->
i¶o›
)

478 
	`bªakœbñ
(
ls
);

479 
fs
->
bl
 = bl->
¥evious
;

480 
	`ªmovev¨s
(
fs
, 
bl
->
«˘v¨
);

481 
	`lua_as£π
(
bl
->
«˘v¨
 =
fs
->nactvar);

482 
fs
->
‰ìªg
 = fs->
«˘v¨
;

483 
ls
->
dyd
->
œbñ
.
n
 = 
bl
->
fú°œbñ
;

484 i‡(
bl
->
¥evious
)

485 
	`movegŸosout
(
fs
, 
bl
);

486 i‡(
bl
->
fú°gŸo
 < 
ls
->
dyd
->
gt
.
n
)

487 
	`undefgŸo
(
ls
, &ls->
dyd
->
gt
.
¨r
[
bl
->
fú°gŸo
]);

488 
	}
}

494 
PrŸo
 *
	$add¥ŸŸy≥
 (
LexSèã
 *
ls
) {

495 
PrŸo
 *
˛p
;

496 
lua_Sèã
 *
L
 = 
ls
->L;

497 
FuncSèã
 *
fs
 = 
ls
->fs;

498 
PrŸo
 *
f
 = 
fs
->f;

499 i‡(
fs
->
≈
 >
f
->
sizï
) {

500 
ﬁdsize
 = 
f
->
sizï
;

501 
	`luaM_growve˘‹
(
L
, 
f
->
p
, 
fs
->
≈
, f->
sizï
, 
PrŸo
 *, 
MAXARG_Bx
, "functions");

502 
ﬁdsize
 < 
f
->
sizï
Ëf->
p
[ﬁdsize++] = 
NULL
;

504 
f
->
p
[
fs
->
≈
++] = 
˛p
 = 
	`luaF_√w¥Ÿo
(
L
);

505 
	`luaC_objb¨rõr
(
L
, 
f
, 
˛p
);

506  
˛p
;

507 
	}
}

516 
	$code˛osuª
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

517 
FuncSèã
 *
fs
 = 
ls
->fs->
¥ev
;

518 
	`öô_exp
(
v
, 
VRELOCABLE
, 
	`luaK_codeABx
(
fs
, 
OP_CLOSURE
, 0, fs->
≈
 - 1));

519 
	`luaK_exp2√xåeg
(
fs
, 
v
);

520 
	}
}

523 
	$›í_func
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
, 
BlockC¡
 *
bl
) {

524 
PrŸo
 *
f
;

525 
fs
->
¥ev
 = 
ls
->fs;

526 
fs
->
ls
 =Üs;

527 
ls
->
fs
 = fs;

528 
fs
->
pc
 = 0;

529 
fs
->
œ°èrgë
 = 0;

530 
fs
->
jpc
 = 
NO_JUMP
;

531 
fs
->
‰ìªg
 = 0;

532 
fs
->
nk
 = 0;

533 
fs
->
≈
 = 0;

534 
fs
->
nups
 = 0;

535 
fs
->
∆ocv¨s
 = 0;

536 
fs
->
«˘v¨
 = 0;

537 
fs
->
fú°loˇl
 = 
ls
->
dyd
->
a˘v¨
.
n
;

538 
fs
->
bl
 = 
NULL
;

539 
f
 = 
fs
->f;

540 
f
->
sour˚
 = 
ls
->source;

541 
f
->
max°acksize
 = 2;

542 
	`íãrblock
(
fs
, 
bl
, 0);

543 
	}
}

546 
	$˛o£_func
 (
LexSèã
 *
ls
) {

547 
lua_Sèã
 *
L
 = 
ls
->L;

548 
FuncSèã
 *
fs
 = 
ls
->fs;

549 
PrŸo
 *
f
 = 
fs
->f;

550 
	`luaK_ªt
(
fs
, 0, 0);

551 
	`Àaveblock
(
fs
);

552 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
code
, f->
sizecode
, 
fs
->
pc
, 
In°ru˘i⁄
);

553 
f
->
sizecode
 = 
fs
->
pc
;

554 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
löeöfo
, f->
sizñöeöfo
, 
fs
->
pc
, );

555 
f
->
sizñöeöfo
 = 
fs
->
pc
;

556 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
k
, f->
sizek
, 
fs
->
nk
, 
TVÆue
);

557 
f
->
sizek
 = 
fs
->
nk
;

558 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
p
, f->
sizï
, 
fs
->
≈
, 
PrŸo
 *);

559 
f
->
sizï
 = 
fs
->
≈
;

560 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
locv¨s
, f->
sizñocv¨s
, 
fs
->
∆ocv¨s
, 
LocV¨
);

561 
f
->
sizñocv¨s
 = 
fs
->
∆ocv¨s
;

562 
	`luaM_ªÆlocve˘‹
(
L
, 
f
->
upvÆues
, f->
sizeupvÆues
, 
fs
->
nups
, 
UpvÆdesc
);

563 
f
->
sizeupvÆues
 = 
fs
->
nups
;

564 
	`lua_as£π
(
fs
->
bl
 =
NULL
);

565 
ls
->
fs
 = fs->
¥ev
;

566 
	`luaC_checkGC
(
L
);

567 
	}
}

581 
	$block_fﬁlow
 (
LexSèã
 *
ls
, 
wôhu¡û
) {

582 
ls
->
t
.
tokí
) {

583 
TK_ELSE
: 
TK_ELSEIF
:

584 
TK_END
: 
TK_EOS
:

586 
TK_UNTIL
:  
wôhu¡û
;

589 
	}
}

592 
	$°©li°
 (
LexSèã
 *
ls
) {

594 !
	`block_fﬁlow
(
ls
, 1)) {

595 i‡(
ls
->
t
.
tokí
 =
TK_RETURN
) {

596 
	`°©emít
(
ls
);

599 
	`°©emít
(
ls
);

601 
	}
}

604 
	$fõld£l
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

606 
FuncSèã
 *
fs
 = 
ls
->fs;

607 
expdesc
 
key
;

608 
	`luaK_exp2™yªgup
(
fs
, 
v
);

609 
	`luaX_√xt
(
ls
);

610 
	`check«me
(
ls
, &
key
);

611 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

612 
	}
}

615 
	$yödex
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

617 
	`luaX_√xt
(
ls
);

618 
	`ex¥
(
ls
, 
v
);

619 
	`luaK_exp2vÆ
(
ls
->
fs
, 
v
);

620 
	`check√xt
(
ls
, ']');

621 
	}
}

631 
	sC⁄sC⁄åﬁ
 {

632 
expdesc
 
	mv
;

633 
expdesc
 *
	mt
;

634 
	mnh
;

635 
	m«
;

636 
	mto°‹e
;

640 
	$ªcfõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

642 
FuncSèã
 *
fs
 = 
ls
->fs;

643 
ªg
 = 
ls
->
fs
->
‰ìªg
;

644 
expdesc
 
key
, 
vÆ
;

645 
rkkey
;

646 i‡(
ls
->
t
.
tokí
 =
TK_NAME
) {

647 
	`checklimô
(
fs
, 
cc
->
nh
, 
MAX_INT
, "items iná constructor");

648 
	`check«me
(
ls
, &
key
);

651 
	`yödex
(
ls
, &
key
);

652 
cc
->
nh
++;

653 
	`check√xt
(
ls
, '=');

654 
rkkey
 = 
	`luaK_exp2RK
(
fs
, &
key
);

655 
	`ex¥
(
ls
, &
vÆ
);

656 
	`luaK_codeABC
(
fs
, 
OP_SETTABLE
, 
cc
->
t
->
u
.
öfo
, 
rkkey
, 
	`luaK_exp2RK
(fs, &
vÆ
));

657 
fs
->
‰ìªg
 = 
ªg
;

658 
	}
}

661 
	$˛o£li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

662 i‡(
cc
->
v
.
k
 =
VVOID
) ;

663 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

664 
cc
->
v
.
k
 = 
VVOID
;

665 i‡(
cc
->
to°‹e
 =
LFIELDS_PER_FLUSH
) {

666 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

667 
cc
->
to°‹e
 = 0;

669 
	}
}

672 
	$œ°li°fõld
 (
FuncSèã
 *
fs
, 
C⁄sC⁄åﬁ
 *
cc
) {

673 i‡(
cc
->
to°‹e
 == 0) ;

674 i‡(
	`hasmu…ªt
(
cc
->
v
.
k
)) {

675 
	`luaK_£tmu…ªt
(
fs
, &
cc
->
v
);

676 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, 
LUA_MULTRET
);

677 
cc
->
«
--;

680 i‡(
cc
->
v
.
k
 !
VVOID
)

681 
	`luaK_exp2√xåeg
(
fs
, &
cc
->
v
);

682 
	`luaK_£éi°
(
fs
, 
cc
->
t
->
u
.
öfo
, cc->
«
, cc->
to°‹e
);

684 
	}
}

687 
	$li°fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

689 
	`ex¥
(
ls
, &
cc
->
v
);

690 
	`checklimô
(
ls
->
fs
, 
cc
->
«
, 
MAX_INT
, "items iná constructor");

691 
cc
->
«
++;

692 
cc
->
to°‹e
++;

693 
	}
}

696 
	$fõld
 (
LexSèã
 *
ls
, 
C⁄sC⁄åﬁ
 *
cc
) {

698 
ls
->
t
.
tokí
) {

699 
TK_NAME
: {

700 i‡(
	`luaX_lookahód
(
ls
) != '=')

701 
	`li°fõld
(
ls
, 
cc
);

703 
	`ªcfõld
(
ls
, 
cc
);

707 
	`ªcfõld
(
ls
, 
cc
);

711 
	`li°fõld
(
ls
, 
cc
);

715 
	}
}

718 
	$c⁄°ru˘‹
 (
LexSèã
 *
ls
, 
expdesc
 *
t
) {

721 
FuncSèã
 *
fs
 = 
ls
->fs;

722 
löe
 = 
ls
->
löíumbî
;

723 
pc
 = 
	`luaK_codeABC
(
fs
, 
OP_NEWTABLE
, 0, 0, 0);

724 
C⁄sC⁄åﬁ
 
cc
;

725 
cc
.
«
 = cc.
nh
 = cc.
to°‹e
 = 0;

726 
cc
.
t
 =Å;

727 
	`öô_exp
(
t
, 
VRELOCABLE
, 
pc
);

728 
	`öô_exp
(&
cc
.
v
, 
VVOID
, 0);

729 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
t
);

730 
	`check√xt
(
ls
, '{');

732 
	`lua_as£π
(
cc
.
v
.
k
 =
VVOID
 || cc.
to°‹e
 > 0);

733 i‡(
ls
->
t
.
tokí
 == '}') ;

734 
	`˛o£li°fõld
(
fs
, &
cc
);

735 
	`fõld
(
ls
, &
cc
);

736 } 
	`ã°√xt
(
ls
, ',') ||Åestnext(ls, ';'));

737 
	`check_m©ch
(
ls
, '}', '{', 
löe
);

738 
	`œ°li°fõld
(
fs
, &
cc
);

739 
	`SETARG_B
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
«
));

740 
	`SETARG_C
(
fs
->
f
->
code
[
pc
], 
	`luaO_öt2fb
(
cc
.
nh
));

741 
	}
}

747 
	$∑æi°
 (
LexSèã
 *
ls
) {

749 
FuncSèã
 *
fs
 = 
ls
->fs;

750 
PrŸo
 *
f
 = 
fs
->f;

751 
≈¨ams
 = 0;

752 
f
->
is_v¨¨g
 = 0;

753 i‡(
ls
->
t
.
tokí
 != ')') {

755 
ls
->
t
.
tokí
) {

756 
TK_NAME
: {

757 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

758 
≈¨ams
++;

761 
TK_DOTS
: {

762 
	`luaX_√xt
(
ls
);

763 
f
->
is_v¨¨g
 = 2;

766 : 
	`luaX_sy¡axîr‹
(
ls
, "<name> or '...'Éxpected");

768 } !
f
->
is_v¨¨g
 && 
	`ã°√xt
(
ls
, ','));

770 
	`adju°loˇlv¨s
(
ls
, 
≈¨ams
);

771 
f
->
num∑øms
 = 
	`ˇ°_byã
(
fs
->
«˘v¨
);

772 
	`luaK_ª£rvîegs
(
fs
, fs->
«˘v¨
);

773 
	}
}

776 
	$body
 (
LexSèã
 *
ls
, 
expdesc
 *
e
, 
ismëhod
, 
löe
) {

778 
FuncSèã
 
√w_fs
;

779 
BlockC¡
 
bl
;

780 
√w_fs
.
f
 = 
	`add¥ŸŸy≥
(
ls
);

781 
√w_fs
.
f
->
löedeföed
 = 
löe
;

782 
	`›í_func
(
ls
, &
√w_fs
, &
bl
);

783 
	`check√xt
(
ls
, '(');

784 i‡(
ismëhod
) {

785 
	`√w_loˇlv¨lôîÆ
(
ls
, "self");

786 
	`adju°loˇlv¨s
(
ls
, 1);

788 
	`∑æi°
(
ls
);

789 
	`check√xt
(
ls
, ')');

790 
	`°©li°
(
ls
);

791 
√w_fs
.
f
->
œ°löedeföed
 = 
ls
->
löíumbî
;

792 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FUNCTION
, 
löe
);

793 
	`code˛osuª
(
ls
, 
e
);

794 
	`˛o£_func
(
ls
);

795 
	}
}

798 
	$ex∂i°
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

800 
n
 = 1;

801 
	`ex¥
(
ls
, 
v
);

802 
	`ã°√xt
(
ls
, ',')) {

803 
	`luaK_exp2√xåeg
(
ls
->
fs
, 
v
);

804 
	`ex¥
(
ls
, 
v
);

805 
n
++;

807  
n
;

808 
	}
}

811 
	$funˇrgs
 (
LexSèã
 *
ls
, 
expdesc
 *
f
, 
löe
) {

812 
FuncSèã
 *
fs
 = 
ls
->fs;

813 
expdesc
 
¨gs
;

814 
ba£
, 
≈¨ams
;

815 
ls
->
t
.
tokí
) {

817 
	`luaX_√xt
(
ls
);

818 i‡(
ls
->
t
.
tokí
 == ')')

819 
¨gs
.
k
 = 
VVOID
;

821 
	`ex∂i°
(
ls
, &
¨gs
);

822 
	`luaK_£tmu…ªt
(
fs
, &
¨gs
);

824 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

828 
	`c⁄°ru˘‹
(
ls
, &
¨gs
);

831 
TK_STRING
: {

832 
	`code°rög
(
ls
, &
¨gs
,Üs->
t
.
£möfo
.
ts
);

833 
	`luaX_√xt
(
ls
);

837 
	`luaX_sy¡axîr‹
(
ls
, "functionárgumentsÉxpected");

840 
	`lua_as£π
(
f
->
k
 =
VNONRELOC
);

841 
ba£
 = 
f
->
u
.
öfo
;

842 i‡(
	`hasmu…ªt
(
¨gs
.
k
))

843 
≈¨ams
 = 
LUA_MULTRET
;

845 i‡(
¨gs
.
k
 !
VVOID
)

846 
	`luaK_exp2√xåeg
(
fs
, &
¨gs
);

847 
≈¨ams
 = 
fs
->
‰ìªg
 - (
ba£
+1);

849 
	`öô_exp
(
f
, 
VCALL
, 
	`luaK_codeABC
(
fs
, 
OP_CALL
, 
ba£
, 
≈¨ams
+1, 2));

850 
	`luaK_fixlöe
(
fs
, 
löe
);

851 
fs
->
‰ìªg
 = 
ba£
+1;

853 
	}
}

865 
	$¥im¨yexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

867 
ls
->
t
.
tokí
) {

869 
löe
 = 
ls
->
löíumbî
;

870 
	`luaX_√xt
(
ls
);

871 
	`ex¥
(
ls
, 
v
);

872 
	`check_m©ch
(
ls
, ')', '(', 
löe
);

873 
	`luaK_disch¨gev¨s
(
ls
->
fs
, 
v
);

876 
TK_NAME
: {

877 
	`sögÀv¨
(
ls
, 
v
);

881 
	`luaX_sy¡axîr‹
(
ls
, "unexpected symbol");

884 
	}
}

887 
	$suffixedexp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

890 
FuncSèã
 *
fs
 = 
ls
->fs;

891 
löe
 = 
ls
->
löíumbî
;

892 
	`¥im¨yexp
(
ls
, 
v
);

894 
ls
->
t
.
tokí
) {

896 
	`fõld£l
(
ls
, 
v
);

900 
expdesc
 
key
;

901 
	`luaK_exp2™yªgup
(
fs
, 
v
);

902 
	`yödex
(
ls
, &
key
);

903 
	`luaK_ödexed
(
fs
, 
v
, &
key
);

907 
expdesc
 
key
;

908 
	`luaX_√xt
(
ls
);

909 
	`check«me
(
ls
, &
key
);

910 
	`luaK_£lf
(
fs
, 
v
, &
key
);

911 
	`funˇrgs
(
ls
, 
v
, 
löe
);

914 '(': 
TK_STRING
: '{': {

915 
	`luaK_exp2√xåeg
(
fs
, 
v
);

916 
	`funˇrgs
(
ls
, 
v
, 
löe
);

922 
	}
}

925 
	$sim∂ìxp
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

928 
ls
->
t
.
tokí
) {

929 
TK_FLT
: {

930 
	`öô_exp
(
v
, 
VKFLT
, 0);

931 
v
->
u
.
nvÆ
 = 
ls
->
t
.
£möfo
.
r
;

934 
TK_INT
: {

935 
	`öô_exp
(
v
, 
VKINT
, 0);

936 
v
->
u
.
ivÆ
 = 
ls
->
t
.
£möfo
.
i
;

939 
TK_STRING
: {

940 
	`code°rög
(
ls
, 
v
,Üs->
t
.
£möfo
.
ts
);

943 
TK_NIL
: {

944 
	`öô_exp
(
v
, 
VNIL
, 0);

947 
TK_TRUE
: {

948 
	`öô_exp
(
v
, 
VTRUE
, 0);

951 
TK_FALSE
: {

952 
	`öô_exp
(
v
, 
VFALSE
, 0);

955 
TK_DOTS
: {

956 
FuncSèã
 *
fs
 = 
ls
->fs;

957 
	`check_c⁄dôi⁄
(
ls
, 
fs
->
f
->
is_v¨¨g
,

959 
fs
->
f
->
is_v¨¨g
 = 1;

960 
	`öô_exp
(
v
, 
VVARARG
, 
	`luaK_codeABC
(
fs
, 
OP_VARARG
, 0, 1, 0));

964 
	`c⁄°ru˘‹
(
ls
, 
v
);

967 
TK_FUNCTION
: {

968 
	`luaX_√xt
(
ls
);

969 
	`body
(
ls
, 
v
, 0,Üs->
löíumbî
);

973 
	`suffixedexp
(
ls
, 
v
);

977 
	`luaX_√xt
(
ls
);

978 
	}
}

981 
UnO¥
 
	$gëun›r
 (
›
) {

982 
›
) {

983 
TK_NOT
:  
OPR_NOT
;

984 '-':  
OPR_MINUS
;

985 '~':  
OPR_BNOT
;

986 '#':  
OPR_LEN
;

987 :  
OPR_NOUNOPR
;

989 
	}
}

992 
BöO¥
 
	$gëbö›r
 (
›
) {

993 
›
) {

994 '+':  
OPR_ADD
;

995 '-':  
OPR_SUB
;

996 '*':  
OPR_MUL
;

997 '%':  
OPR_MOD
;

998 '^':  
OPR_POW
;

999 '/':  
OPR_DIV
;

1000 
TK_IDIV
:  
OPR_IDIV
;

1001 '&':  
OPR_BAND
;

1002 '|':  
OPR_BOR
;

1003 '~':  
OPR_BXOR
;

1004 
TK_SHL
:  
OPR_SHL
;

1005 
TK_SHR
:  
OPR_SHR
;

1006 
TK_CONCAT
:  
OPR_CONCAT
;

1007 
TK_NE
:  
OPR_NE
;

1008 
TK_EQ
:  
OPR_EQ
;

1009 '<':  
OPR_LT
;

1010 
TK_LE
:  
OPR_LE
;

1011 '>':  
OPR_GT
;

1012 
TK_GE
:  
OPR_GE
;

1013 
TK_AND
:  
OPR_AND
;

1014 
TK_OR
:  
OPR_OR
;

1015 :  
OPR_NOBINOPR
;

1017 
	}
}

1021 
lu_byã
 
	mÀ·
;

1022 
lu_byã
 
	mright
;

1023 } 
	g¥i‹ôy
[] = {

1036 
	#UNARY_PRIORITY
 12

	)

1043 
BöO¥
 
	$subex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
, 
limô
) {

1044 
BöO¥
 
›
;

1045 
UnO¥
 
u›
;

1046 
	`íãæevñ
(
ls
);

1047 
u›
 = 
	`gëun›r
(
ls
->
t
.
tokí
);

1048 i‡(
u›
 !
OPR_NOUNOPR
) {

1049 
löe
 = 
ls
->
löíumbî
;

1050 
	`luaX_√xt
(
ls
);

1051 
	`subex¥
(
ls
, 
v
, 
UNARY_PRIORITY
);

1052 
	`luaK_¥efix
(
ls
->
fs
, 
u›
, 
v
, 
löe
);

1054 
	`sim∂ìxp
(
ls
, 
v
);

1056 
›
 = 
	`gëbö›r
(
ls
->
t
.
tokí
);

1057 
›
 !
OPR_NOBINOPR
 && 
¥i‹ôy
[›].
À·
 > 
limô
) {

1058 
expdesc
 
v2
;

1059 
BöO¥
 
√xt›
;

1060 
löe
 = 
ls
->
löíumbî
;

1061 
	`luaX_√xt
(
ls
);

1062 
	`luaK_öfix
(
ls
->
fs
, 
›
, 
v
);

1064 
√xt›
 = 
	`subex¥
(
ls
, &
v2
, 
¥i‹ôy
[
›
].
right
);

1065 
	`luaK_posfix
(
ls
->
fs
, 
›
, 
v
, &
v2
, 
löe
);

1066 
›
 = 
√xt›
;

1068 
	`Àavñevñ
(
ls
);

1069  
›
;

1070 
	}
}

1073 
	$ex¥
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1074 
	`subex¥
(
ls
, 
v
, 0);

1075 
	}
}

1088 
	$block
 (
LexSèã
 *
ls
) {

1090 
FuncSèã
 *
fs
 = 
ls
->fs;

1091 
BlockC¡
 
bl
;

1092 
	`íãrblock
(
fs
, &
bl
, 0);

1093 
	`°©li°
(
ls
);

1094 
	`Àaveblock
(
fs
);

1095 
	}
}

1102 
	sLHS_assign
 {

1103 
LHS_assign
 *
	m¥ev
;

1104 
expdesc
 
	mv
;

1114 
	$check_c⁄Êi˘
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
expdesc
 *
v
) {

1115 
FuncSèã
 *
fs
 = 
ls
->fs;

1116 
exåa
 = 
fs
->
‰ìªg
;

1117 
c⁄Êi˘
 = 0;

1118 ; 
lh
;Üh =Üh->
¥ev
) {

1119 i‡(
lh
->
v
.
k
 =
VINDEXED
) {

1121 i‡(
lh
->
v
.
u
.
öd
.
vt
 =v->
k
 &&Üh->v.u.öd.
t
 =v->u.
öfo
) {

1122 
c⁄Êi˘
 = 1;

1123 
lh
->
v
.
u
.
öd
.
vt
 = 
VLOCAL
;

1124 
lh
->
v
.
u
.
öd
.
t
 = 
exåa
;

1127 i‡(
v
->
k
 =
VLOCAL
 && 
lh
->v.
u
.
öd
.
idx
 =v->u.
öfo
) {

1128 
c⁄Êi˘
 = 1;

1129 
lh
->
v
.
u
.
öd
.
idx
 = 
exåa
;

1133 i‡(
c⁄Êi˘
) {

1135 
OpCode
 
›
 = (
v
->
k
 =
VLOCAL
Ë? 
OP_MOVE
 : 
OP_GETUPVAL
;

1136 
	`luaK_codeABC
(
fs
, 
›
, 
exåa
, 
v
->
u
.
öfo
, 0);

1137 
	`luaK_ª£rvîegs
(
fs
, 1);

1139 
	}
}

1142 
	$assignmít
 (
LexSèã
 *
ls
, 
LHS_assign
 *
lh
, 
nv¨s
) {

1143 
expdesc
 
e
;

1144 
	`check_c⁄dôi⁄
(
ls
, 
	`vkisv¨
(
lh
->
v
.
k
), "syntaxÉrror");

1145 i‡(
	`ã°√xt
(
ls
, ',')) {

1146 
LHS_assign
 
nv
;

1147 
nv
.
¥ev
 = 
lh
;

1148 
	`suffixedexp
(
ls
, &
nv
.
v
);

1149 i‡(
nv
.
v
.
k
 !
VINDEXED
)

1150 
	`check_c⁄Êi˘
(
ls
, 
lh
, &
nv
.
v
);

1151 
	`checklimô
(
ls
->
fs
, 
nv¨s
 +Üs->
L
->
nCˇŒs
, 
LUAI_MAXCCALLS
,

1153 
	`assignmít
(
ls
, &
nv
, 
nv¨s
+1);

1156 
√xps
;

1157 
	`check√xt
(
ls
, '=');

1158 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1159 i‡(
√xps
 !
nv¨s
) {

1160 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1161 i‡(
√xps
 > 
nv¨s
)

1162 
ls
->
fs
->
‰ìªg
 -
√xps
 - 
nv¨s
;

1165 
	`luaK_£t⁄îë
(
ls
->
fs
, &
e
);

1166 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1170 
	`öô_exp
(&
e
, 
VNONRELOC
, 
ls
->
fs
->
‰ìªg
-1);

1171 
	`luaK_°‹ev¨
(
ls
->
fs
, &
lh
->
v
, &
e
);

1172 
	}
}

1175 
	$c⁄d
 (
LexSèã
 *
ls
) {

1177 
expdesc
 
v
;

1178 
	`ex¥
(
ls
, &
v
);

1179 i‡(
v
.
k
 =
VNIL
Ëv.k = 
VFALSE
;

1180 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1181  
v
.
f
;

1182 
	}
}

1185 
	$gŸo°©
 (
LexSèã
 *
ls
, 
pc
) {

1186 
löe
 = 
ls
->
löíumbî
;

1187 
TSåög
 *
œbñ
;

1188 
g
;

1189 i‡(
	`ã°√xt
(
ls
, 
TK_GOTO
))

1190 
œbñ
 = 
	`°r_check«me
(
ls
);

1192 
	`luaX_√xt
(
ls
);

1193 
œbñ
 = 
	`luaS_√w
(
ls
->
L
, "break");

1195 
g
 = 
	`√wœbñíåy
(
ls
, &ls->
dyd
->
gt
, 
œbñ
, 
löe
, 
pc
);

1196 
	`födœbñ
(
ls
, 
g
);

1197 
	}
}

1201 
	$checkª≥©ed
 (
FuncSèã
 *
fs
, 
Labñli°
 *
Œ
, 
TSåög
 *
œbñ
) {

1202 
i
;

1203 
i
 = 
fs
->
bl
->
fú°œbñ
; i < 
Œ
->
n
; i++) {

1204 i‡(
	`eq°r
(
œbñ
, 
Œ
->
¨r
[
i
].
«me
)) {

1205 c⁄° *
msg
 = 
	`luaO_pushf°rög
(
fs
->
ls
->
L
,

1207 
	`gë°r
(
œbñ
), 
Œ
->
¨r
[
i
].
löe
);

1208 
	`£mîr‹
(
fs
->
ls
, 
msg
);

1211 
	}
}

1215 
	$skùno›°©
 (
LexSèã
 *
ls
) {

1216 
ls
->
t
.
tokí
 =';' ||Üs->t.tokí =
TK_DBCOLON
)

1217 
	`°©emít
(
ls
);

1218 
	}
}

1221 
	$œbñ°©
 (
LexSèã
 *
ls
, 
TSåög
 *
œbñ
, 
löe
) {

1223 
FuncSèã
 *
fs
 = 
ls
->fs;

1224 
Labñli°
 *
Œ
 = &
ls
->
dyd
->
œbñ
;

1225 
l
;

1226 
	`checkª≥©ed
(
fs
, 
Œ
, 
œbñ
);

1227 
	`check√xt
(
ls
, 
TK_DBCOLON
);

1229 
l
 = 
	`√wœbñíåy
(
ls
, 
Œ
, 
œbñ
, 
löe
, 
fs
->
pc
);

1230 
	`skùno›°©
(
ls
);

1231 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1233 
Œ
->
¨r
[
l
].
«˘v¨
 = 
fs
->
bl
->nactvar;

1235 
	`födgŸos
(
ls
, &
Œ
->
¨r
[
l
]);

1236 
	}
}

1239 
	$whûe°©
 (
LexSèã
 *
ls
, 
löe
) {

1241 
FuncSèã
 *
fs
 = 
ls
->fs;

1242 
whûeöô
;

1243 
c⁄dexô
;

1244 
BlockC¡
 
bl
;

1245 
	`luaX_√xt
(
ls
);

1246 
whûeöô
 = 
	`luaK_gëœbñ
(
fs
);

1247 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1248 
	`íãrblock
(
fs
, &
bl
, 1);

1249 
	`check√xt
(
ls
, 
TK_DO
);

1250 
	`block
(
ls
);

1251 
	`luaK_jum±o
(
fs
, 
whûeöô
);

1252 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_WHILE
, 
löe
);

1253 
	`Àaveblock
(
fs
);

1254 
	`luaK_∑tchtohîe
(
fs
, 
c⁄dexô
);

1255 
	}
}

1258 
	$ª≥©°©
 (
LexSèã
 *
ls
, 
löe
) {

1260 
c⁄dexô
;

1261 
FuncSèã
 *
fs
 = 
ls
->fs;

1262 
ª≥©_öô
 = 
	`luaK_gëœbñ
(
fs
);

1263 
BlockC¡
 
bl1
, 
bl2
;

1264 
	`íãrblock
(
fs
, &
bl1
, 1);

1265 
	`íãrblock
(
fs
, &
bl2
, 0);

1266 
	`luaX_√xt
(
ls
);

1267 
	`°©li°
(
ls
);

1268 
	`check_m©ch
(
ls
, 
TK_UNTIL
, 
TK_REPEAT
, 
löe
);

1269 
c⁄dexô
 = 
	`c⁄d
(
ls
);

1270 i‡(
bl2
.
upvÆ
)

1271 
	`luaK_∑tch˛o£
(
fs
, 
c⁄dexô
, 
bl2
.
«˘v¨
);

1272 
	`Àaveblock
(
fs
);

1273 
	`luaK_∑tchli°
(
fs
, 
c⁄dexô
, 
ª≥©_öô
);

1274 
	`Àaveblock
(
fs
);

1275 
	}
}

1278 
	$exp1
 (
LexSèã
 *
ls
) {

1279 
expdesc
 
e
;

1280 
ªg
;

1281 
	`ex¥
(
ls
, &
e
);

1282 
	`luaK_exp2√xåeg
(
ls
->
fs
, &
e
);

1283 
	`lua_as£π
(
e
.
k
 =
VNONRELOC
);

1284 
ªg
 = 
e
.
u
.
öfo
;

1285  
ªg
;

1286 
	}
}

1289 
	$f‹body
 (
LexSèã
 *
ls
, 
ba£
, 
löe
, 
nv¨s
, 
i¢um
) {

1291 
BlockC¡
 
bl
;

1292 
FuncSèã
 *
fs
 = 
ls
->fs;

1293 
¥ï
, 
ídf‹
;

1294 
	`adju°loˇlv¨s
(
ls
, 3);

1295 
	`check√xt
(
ls
, 
TK_DO
);

1296 
¥ï
 = 
i¢um
 ? 
	`luaK_codeAsBx
(
fs
, 
OP_FORPREP
, 
ba£
, 
NO_JUMP
Ë: 
	`luaK_jump
(fs);

1297 
	`íãrblock
(
fs
, &
bl
, 0);

1298 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1299 
	`luaK_ª£rvîegs
(
fs
, 
nv¨s
);

1300 
	`block
(
ls
);

1301 
	`Àaveblock
(
fs
);

1302 
	`luaK_∑tchtohîe
(
fs
, 
¥ï
);

1303 i‡(
i¢um
)

1304 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_FORLOOP
, 
ba£
, 
NO_JUMP
);

1306 
	`luaK_codeABC
(
fs
, 
OP_TFORCALL
, 
ba£
, 0, 
nv¨s
);

1307 
	`luaK_fixlöe
(
fs
, 
löe
);

1308 
ídf‹
 = 
	`luaK_codeAsBx
(
fs
, 
OP_TFORLOOP
, 
ba£
 + 2, 
NO_JUMP
);

1310 
	`luaK_∑tchli°
(
fs
, 
ídf‹
, 
¥ï
 + 1);

1311 
	`luaK_fixlöe
(
fs
, 
löe
);

1312 
	}
}

1315 
	$f‹num
 (
LexSèã
 *
ls
, 
TSåög
 *
v¨«me
, 
löe
) {

1317 
FuncSèã
 *
fs
 = 
ls
->fs;

1318 
ba£
 = 
fs
->
‰ìªg
;

1319 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for index)");

1320 
	`√w_loˇlv¨lôîÆ
(
ls
, "(forÜimit)");

1321 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for step)");

1322 
	`√w_loˇlv¨
(
ls
, 
v¨«me
);

1323 
	`check√xt
(
ls
, '=');

1324 
	`exp1
(
ls
);

1325 
	`check√xt
(
ls
, ',');

1326 
	`exp1
(
ls
);

1327 i‡(
	`ã°√xt
(
ls
, ','))

1328 
	`exp1
(
ls
);

1330 
	`luaK_codek
(
fs
, fs->
‰ìªg
, 
	`luaK_ötK
(fs, 1));

1331 
	`luaK_ª£rvîegs
(
fs
, 1);

1333 
	`f‹body
(
ls
, 
ba£
, 
löe
, 1, 1);

1334 
	}
}

1337 
	$f‹li°
 (
LexSèã
 *
ls
, 
TSåög
 *
ödex«me
) {

1339 
FuncSèã
 *
fs
 = 
ls
->fs;

1340 
expdesc
 
e
;

1341 
nv¨s
 = 4;

1342 
löe
;

1343 
ba£
 = 
fs
->
‰ìªg
;

1345 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for generator)");

1346 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for state)");

1347 
	`√w_loˇlv¨lôîÆ
(
ls
, "(for control)");

1349 
	`√w_loˇlv¨
(
ls
, 
ödex«me
);

1350 
	`ã°√xt
(
ls
, ',')) {

1351 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1352 
nv¨s
++;

1354 
	`check√xt
(
ls
, 
TK_IN
);

1355 
löe
 = 
ls
->
löíumbî
;

1356 
	`adju°_assign
(
ls
, 3, 
	`ex∂i°
÷s, &
e
), &e);

1357 
	`luaK_check°ack
(
fs
, 3);

1358 
	`f‹body
(
ls
, 
ba£
, 
löe
, 
nv¨s
 - 3, 0);

1359 
	}
}

1362 
	$f‹°©
 (
LexSèã
 *
ls
, 
löe
) {

1364 
FuncSèã
 *
fs
 = 
ls
->fs;

1365 
TSåög
 *
v¨«me
;

1366 
BlockC¡
 
bl
;

1367 
	`íãrblock
(
fs
, &
bl
, 1);

1368 
	`luaX_√xt
(
ls
);

1369 
v¨«me
 = 
	`°r_check«me
(
ls
);

1370 
ls
->
t
.
tokí
) {

1371 '=': 
	`f‹num
(
ls
, 
v¨«me
, 
löe
); ;

1372 ',': 
TK_IN
: 
	`f‹li°
(
ls
, 
v¨«me
); ;

1373 : 
	`luaX_sy¡axîr‹
(
ls
, "'=' or 'in'Éxpected");

1375 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_FOR
, 
löe
);

1376 
	`Àaveblock
(
fs
);

1377 
	}
}

1380 
	$ã°_thí_block
 (
LexSèã
 *
ls
, *
esˇ≥li°
) {

1382 
BlockC¡
 
bl
;

1383 
FuncSèã
 *
fs
 = 
ls
->fs;

1384 
expdesc
 
v
;

1385 
jf
;

1386 
	`luaX_√xt
(
ls
);

1387 
	`ex¥
(
ls
, &
v
);

1388 
	`check√xt
(
ls
, 
TK_THEN
);

1389 i‡(
ls
->
t
.
tokí
 =
TK_GOTO
 ||Üs->t.tokí =
TK_BREAK
) {

1390 
	`luaK_goifÁl£
(
ls
->
fs
, &
v
);

1391 
	`íãrblock
(
fs
, &
bl
, 0);

1392 
	`gŸo°©
(
ls
, 
v
.
t
);

1393 
	`skùno›°©
(
ls
);

1394 i‡(
	`block_fﬁlow
(
ls
, 0)) {

1395 
	`Àaveblock
(
fs
);

1399 
jf
 = 
	`luaK_jump
(
fs
);

1402 
	`luaK_goi·rue
(
ls
->
fs
, &
v
);

1403 
	`íãrblock
(
fs
, &
bl
, 0);

1404 
jf
 = 
v
.
f
;

1406 
	`°©li°
(
ls
);

1407 
	`Àaveblock
(
fs
);

1408 i‡(
ls
->
t
.
tokí
 =
TK_ELSE
 ||

1409 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1410 
	`luaK_c⁄ˇt
(
fs
, 
esˇ≥li°
, 
	`luaK_jump
(fs));

1411 
	`luaK_∑tchtohîe
(
fs
, 
jf
);

1412 
	}
}

1415 
	$if°©
 (
LexSèã
 *
ls
, 
löe
) {

1417 
FuncSèã
 *
fs
 = 
ls
->fs;

1418 
esˇ≥li°
 = 
NO_JUMP
;

1419 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1420 
ls
->
t
.
tokí
 =
TK_ELSEIF
)

1421 
	`ã°_thí_block
(
ls
, &
esˇ≥li°
);

1422 i‡(
	`ã°√xt
(
ls
, 
TK_ELSE
))

1423 
	`block
(
ls
);

1424 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_IF
, 
löe
);

1425 
	`luaK_∑tchtohîe
(
fs
, 
esˇ≥li°
);

1426 
	}
}

1429 
	$loˇlfunc
 (
LexSèã
 *
ls
) {

1430 
expdesc
 
b
;

1431 
FuncSèã
 *
fs
 = 
ls
->fs;

1432 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1433 
	`adju°loˇlv¨s
(
ls
, 1);

1434 
	`body
(
ls
, &
b
, 0,Üs->
löíumbî
);

1436 
	`gëlocv¨
(
fs
, 
b
.
u
.
öfo
)->
°¨çc
 = fs->
pc
;

1437 
	}
}

1440 
	$loˇl°©
 (
LexSèã
 *
ls
) {

1442 
nv¨s
 = 0;

1443 
√xps
;

1444 
expdesc
 
e
;

1446 
	`√w_loˇlv¨
(
ls
, 
	`°r_check«me
(ls));

1447 
nv¨s
++;

1448 } 
	`ã°√xt
(
ls
, ','));

1449 i‡(
	`ã°√xt
(
ls
, '='))

1450 
√xps
 = 
	`ex∂i°
(
ls
, &
e
);

1452 
e
.
k
 = 
VVOID
;

1453 
√xps
 = 0;

1455 
	`adju°_assign
(
ls
, 
nv¨s
, 
√xps
, &
e
);

1456 
	`adju°loˇlv¨s
(
ls
, 
nv¨s
);

1457 
	}
}

1460 
	$fun˙ame
 (
LexSèã
 *
ls
, 
expdesc
 *
v
) {

1462 
ismëhod
 = 0;

1463 
	`sögÀv¨
(
ls
, 
v
);

1464 
ls
->
t
.
tokí
 == '.')

1465 
	`fõld£l
(
ls
, 
v
);

1466 i‡(
ls
->
t
.
tokí
 == ':') {

1467 
ismëhod
 = 1;

1468 
	`fõld£l
(
ls
, 
v
);

1470  
ismëhod
;

1471 
	}
}

1474 
	$func°©
 (
LexSèã
 *
ls
, 
löe
) {

1476 
ismëhod
;

1477 
expdesc
 
v
, 
b
;

1478 
	`luaX_√xt
(
ls
);

1479 
ismëhod
 = 
	`fun˙ame
(
ls
, &
v
);

1480 
	`body
(
ls
, &
b
, 
ismëhod
, 
löe
);

1481 
	`luaK_°‹ev¨
(
ls
->
fs
, &
v
, &
b
);

1482 
	`luaK_fixlöe
(
ls
->
fs
, 
löe
);

1483 
	}
}

1486 
	$ex¥°©
 (
LexSèã
 *
ls
) {

1488 
FuncSèã
 *
fs
 = 
ls
->fs;

1489 
LHS_assign
 
v
;

1490 
	`suffixedexp
(
ls
, &
v
.v);

1491 i‡(
ls
->
t
.
tokí
 == '=' ||Üs->t.token == ',') {

1492 
v
.
¥ev
 = 
NULL
;

1493 
	`assignmít
(
ls
, &
v
, 1);

1496 
	`check_c⁄dôi⁄
(
ls
, 
v
.v.
k
 =
VCALL
, "syntaxÉrror");

1497 
	`SETARG_C
(
	`gëcode
(
fs
, &
v
.v), 1);

1499 
	}
}

1502 
	$ªt°©
 (
LexSèã
 *
ls
) {

1504 
FuncSèã
 *
fs
 = 
ls
->fs;

1505 
expdesc
 
e
;

1506 
fú°
, 
ƒë
;

1507 i‡(
	`block_fﬁlow
(
ls
, 1Ë||Üs->
t
.
tokí
 == ';')

1508 
fú°
 = 
ƒë
 = 0;

1510 
ƒë
 = 
	`ex∂i°
(
ls
, &
e
);

1511 i‡(
	`hasmu…ªt
(
e
.
k
)) {

1512 
	`luaK_£tmu…ªt
(
fs
, &
e
);

1513 i‡(
e
.
k
 =
VCALL
 && 
ƒë
 == 1) {

1514 
	`SET_OPCODE
(
	`gëcode
(
fs
,&
e
), 
OP_TAILCALL
);

1515 
	`lua_as£π
(
	`GETARG_A
(
	`gëcode
(
fs
,&
e
)Ë=fs->
«˘v¨
);

1517 
fú°
 = 
fs
->
«˘v¨
;

1518 
ƒë
 = 
LUA_MULTRET
;

1521 i‡(
ƒë
 == 1)

1522 
fú°
 = 
	`luaK_exp2™yªg
(
fs
, &
e
);

1524 
	`luaK_exp2√xåeg
(
fs
, &
e
);

1525 
fú°
 = 
fs
->
«˘v¨
;

1526 
	`lua_as£π
(
ƒë
 =
fs
->
‰ìªg
 - 
fú°
);

1530 
	`luaK_ªt
(
fs
, 
fú°
, 
ƒë
);

1531 
	`ã°√xt
(
ls
, ';');

1532 
	}
}

1535 
	$°©emít
 (
LexSèã
 *
ls
) {

1536 
löe
 = 
ls
->
löíumbî
;

1537 
	`íãæevñ
(
ls
);

1538 
ls
->
t
.
tokí
) {

1540 
	`luaX_√xt
(
ls
);

1543 
TK_IF
: {

1544 
	`if°©
(
ls
, 
löe
);

1547 
TK_WHILE
: {

1548 
	`whûe°©
(
ls
, 
löe
);

1551 
TK_DO
: {

1552 
	`luaX_√xt
(
ls
);

1553 
	`block
(
ls
);

1554 
	`check_m©ch
(
ls
, 
TK_END
, 
TK_DO
, 
löe
);

1557 
TK_FOR
: {

1558 
	`f‹°©
(
ls
, 
löe
);

1561 
TK_REPEAT
: {

1562 
	`ª≥©°©
(
ls
, 
löe
);

1565 
TK_FUNCTION
: {

1566 
	`func°©
(
ls
, 
löe
);

1569 
TK_LOCAL
: {

1570 
	`luaX_√xt
(
ls
);

1571 i‡(
	`ã°√xt
(
ls
, 
TK_FUNCTION
))

1572 
	`loˇlfunc
(
ls
);

1574 
	`loˇl°©
(
ls
);

1577 
TK_DBCOLON
: {

1578 
	`luaX_√xt
(
ls
);

1579 
	`œbñ°©
(
ls
, 
	`°r_check«me
÷s), 
löe
);

1582 
TK_RETURN
: {

1583 
	`luaX_√xt
(
ls
);

1584 
	`ªt°©
(
ls
);

1587 
TK_BREAK
:

1588 
TK_GOTO
: {

1589 
	`gŸo°©
(
ls
, 
	`luaK_jump
÷s->
fs
));

1593 
	`ex¥°©
(
ls
);

1597 
	`lua_as£π
(
ls
->
fs
->
f
->
max°acksize
 >ls->fs->
‰ìªg
 &&

1598 
ls
->
fs
->
‰ìªg
 >ls->fs->
«˘v¨
);

1599 
ls
->
fs
->
‰ìªg
 =Üs->fs->
«˘v¨
;

1600 
	`Àavñevñ
(
ls
);

1601 
	}
}

1610 
	$maöfunc
 (
LexSèã
 *
ls
, 
FuncSèã
 *
fs
) {

1611 
BlockC¡
 
bl
;

1612 
expdesc
 
v
;

1613 
	`›í_func
(
ls
, 
fs
, &
bl
);

1614 
fs
->
f
->
is_v¨¨g
 = 2;

1615 
	`öô_exp
(&
v
, 
VLOCAL
, 0);

1616 
	`√wupvÆue
(
fs
, 
ls
->
ívn
, &
v
);

1617 
	`luaX_√xt
(
ls
);

1618 
	`°©li°
(
ls
);

1619 
	`check
(
ls
, 
TK_EOS
);

1620 
	`˛o£_func
(
ls
);

1621 
	}
}

1624 
LClosuª
 *
	$luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

1625 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
) {

1626 
LexSèã
 
Àx°©e
;

1627 
FuncSèã
 
func°©e
;

1628 
LClosuª
 *
˛
 = 
	`luaF_√wL˛osuª
(
L
, 1);

1629 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

1630 
	`luaD_ö˘›
(
L
);

1631 
Àx°©e
.
h
 = 
	`luaH_√w
(
L
);

1632 
	`£thvÆue
(
L
, L->
t›
, 
Àx°©e
.
h
);

1633 
	`luaD_ö˘›
(
L
);

1634 
func°©e
.
f
 = 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

1635 
func°©e
.
f
->
sour˚
 = 
	`luaS_√w
(
L
, 
«me
);

1636 
	`lua_as£π
(
	`iswhôe
(
func°©e
.
f
));

1637 
Àx°©e
.
buff
 = buff;

1638 
Àx°©e
.
dyd
 = dyd;

1639 
dyd
->
a˘v¨
.
n
 = dyd->
gt
.¿dyd->
œbñ
.n = 0;

1640 
	`luaX_£töput
(
L
, &
Àx°©e
, 
z
, 
func°©e
.
f
->
sour˚
, 
fú°ch¨
);

1641 
	`maöfunc
(&
Àx°©e
, &
func°©e
);

1642 
	`lua_as£π
(!
func°©e
.
¥ev
 && func°©e.
nups
 =1 && !
Àx°©e
.
fs
);

1644 
	`lua_as£π
(
dyd
->
a˘v¨
.
n
 =0 && dyd->
gt
.¿=0 && dyd->
œbñ
.n == 0);

1645 
L
->
t›
--;

1646  
˛
;

1647 
	}
}

	@lib/lua/src/lparser.h

7 #i‚de‡
Õ¨£r_h


8 
	#Õ¨£r_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

20 
	mVVOID
,

21 
	mVNIL
,

22 
	mVTRUE
,

23 
	mVFALSE
,

24 
	mVK
,

25 
	mVKFLT
,

26 
	mVKINT
,

27 
	mVNONRELOC
,

28 
	mVLOCAL
,

29 
	mVUPVAL
,

30 
	mVINDEXED
,

31 
	mVJMP
,

32 
	mVRELOCABLE
,

33 
	mVCALL
,

34 
	mVVARARG


35 } 
	texpköd
;

38 
	#vkisv¨
(
k
Ë(
VLOCAL
 <(kË&& (kË<
VINDEXED
)

	)

39 
	#vkisöªg
(
k
Ë((kË=
VNONRELOC
 || (kË=
VLOCAL
)

	)

41 
	sexpdesc
 {

42 
expköd
 
	mk
;

45 
	midx
;

46 
lu_byã
 
	mt
;

47 
lu_byã
 
	mvt
;

48 } 
	möd
;

49 
	möfo
;

50 
lua_Numbî
 
	mnvÆ
;

51 
lua_I¡egî
 
	mivÆ
;

52 } 
	mu
;

53 
	mt
;

54 
	mf
;

55 } 
	texpdesc
;

59 
	sV¨desc
 {

60 
	midx
;

61 } 
	tV¨desc
;

65 
	sLabñdesc
 {

66 
TSåög
 *
	m«me
;

67 
	mpc
;

68 
	mlöe
;

69 
lu_byã
 
	m«˘v¨
;

70 } 
	tLabñdesc
;

74 
	sLabñli°
 {

75 
Labñdesc
 *
	m¨r
;

76 
	mn
;

77 
	msize
;

78 } 
	tLabñli°
;

82 
	sDynd©a
 {

84 
V¨desc
 *
	m¨r
;

85 
	mn
;

86 
	msize
;

87 } 
	ma˘v¨
;

88 
Labñli°
 
	mgt
;

89 
Labñli°
 
	mœbñ
;

90 } 
	tDynd©a
;

94 
	gBlockC¡
;

98 
	sFuncSèã
 {

99 
PrŸo
 *
	mf
;

100 
FuncSèã
 *
	m¥ev
;

101 
LexSèã
 *
	mls
;

102 
BlockC¡
 *
	mbl
;

103 
	mpc
;

104 
	mœ°èrgë
;

105 
	mjpc
;

106 
	mnk
;

107 
	m≈
;

108 
	mfú°loˇl
;

109 
	m∆ocv¨s
;

110 
lu_byã
 
	m«˘v¨
;

111 
lu_byã
 
	mnups
;

112 
lu_byã
 
	m‰ìªg
;

113 } 
	tFuncSèã
;

116 
LUAI_FUNC
 
LClosuª
 *
luaY_∑r£r
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
Mbuf„r
 *
buff
,

117 
Dynd©a
 *
dyd
, c⁄° *
«me
, 
fú°ch¨
);

	@lib/lua/src/lprefix.h

7 #i‚de‡
Õªfix_h


8 
	#Õªfix_h


	)

14 #i‡!
deföed
(
LUA_USE_C89
)

16 #i‡!
deföed
(
_XOPEN_SOURCE
)

17 
	#_XOPEN_SOURCE
 600

	)

18 #ñi‡
_XOPEN_SOURCE
 == 0

19 #unde‡
_XOPEN_SOURCE


25 #i‡!
deföed
(
LUA_32BITS
Ë&& !deföed(
_FILE_OFFSET_BITS
)

26 
	#_LARGEFILE_SOURCE
 1

	)

27 
	#_FILE_OFFSET_BITS
 64

	)

36 #i‡
deföed
(
_WIN32
)

38 #i‡!
deföed
(
_CRT_SECURE_NO_WARNINGS
)

39 
	#_CRT_SECURE_NO_WARNINGS


	)

	@lib/lua/src/lstate.c

7 
	#l°©e_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°ddef.h
>

14 
	~<°rög.h
>

16 
	~"lua.h
"

18 
	~"œpi.h
"

19 
	~"ldebug.h
"

20 
	~"ldo.h
"

21 
	~"lfunc.h
"

22 
	~"lgc.h
"

23 
	~"Œex.h
"

24 
	~"lmem.h
"

25 
	~"l°©e.h
"

26 
	~"l°rög.h
"

27 
	~"…abÀ.h
"

28 
	~"…m.h
"

31 #i‡!
deföed
(
LUAI_GCPAUSE
)

32 
	#LUAI_GCPAUSE
 200

	)

35 #i‡!
deföed
(
LUAI_GCMUL
)

36 
	#LUAI_GCMUL
 200

	)

44 #i‡!
deföed
(
luai_make£ed
)

45 
	~<time.h
>

46 
	#luai_make£ed
(Ë
	`ˇ°
(, 
	`time
(
NULL
))

	)

54 
	sLX
 {

55 
lu_byã
 
	mexåa_
[
LUA_EXTRASPACE
];

56 
lua_Sèã
 
	ml
;

57 } 
	tLX
;

63 
	sLG
 {

64 
LX
 
	ml
;

65 
globÆ_Sèã
 
	mg
;

66 } 
	tLG
;

70 
	#‰om°©e
(
L
Ë(
	`ˇ°
(
LX
 *, ca°(
lu_byã
 *, (L)Ë- 
	`off£tof
(LX, 
l
)))

	)

77 
	#addbuff
(
b
,
p
,
e
) \

78 { 
size_t
 
t
 = 
	`ˇ°
(size_t, 
e
); \

79 
	`mem˝y
(
b
 + 
p
, &
t
, —));Ö +—); }

	)

81 
	$make£ed
 (
lua_Sèã
 *
L
) {

82 
buff
[4 * (
size_t
)];

83 
h
 = 
	`luai_make£ed
();

84 
p
 = 0;

85 
	`addbuff
(
buff
, 
p
, 
L
);

86 
	`addbuff
(
buff
, 
p
, &
h
);

87 
	`addbuff
(
buff
, 
p
, 
luaO_nûobje˘
);

88 
	`addbuff
(
buff
, 
p
, &
lua_√w°©e
);

89 
	`lua_as£π
(
p
 =(
buff
));

90  
	`luaS_hash
(
buff
, 
p
, 
h
);

91 
	}
}

98 
	$luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
) {

99 
l_mem
 
tb
 = 
	`gëtŸÆbyãs
(
g
);

100 
	`lua_as£π
(
tb
 > 0);

101 i‡(
debt
 < 
tb
 - 
MAX_LMEM
)

102 
debt
 = 
tb
 - 
MAX_LMEM
;

103 
g
->
tŸÆbyãs
 = 
tb
 - 
debt
;

104 
g
->
GCdebt
 = 
debt
;

105 
	}
}

108 
CÆlInfo
 *
	$luaE_exãndCI
 (
lua_Sèã
 *
L
) {

109 
CÆlInfo
 *
ci
 = 
	`luaM_√w
(
L
, CallInfo);

110 
	`lua_as£π
(
L
->
ci
->
√xt
 =
NULL
);

111 
L
->
ci
->
√xt
 = ci;

112 
ci
->
¥evious
 = 
L
->ci;

113 
ci
->
√xt
 = 
NULL
;

114 
L
->
nci
++;

115  
ci
;

116 
	}
}

122 
	$luaE_‰ìCI
 (
lua_Sèã
 *
L
) {

123 
CÆlInfo
 *
ci
 = 
L
->ci;

124 
CÆlInfo
 *
√xt
 = 
ci
->next;

125 
ci
->
√xt
 = 
NULL
;

126 (
ci
 = 
√xt
Ë!
NULL
) {

127 
√xt
 = 
ci
->next;

128 
	`luaM_‰ì
(
L
, 
ci
);

129 
L
->
nci
--;

131 
	}
}

137 
	$luaE_shrökCI
 (
lua_Sèã
 *
L
) {

138 
CÆlInfo
 *
ci
 = 
L
->ci;

139 
CÆlInfo
 *
√xt2
;

141 
ci
->
√xt
 !
NULL
 && (
√xt2
 = ci->next->next) != NULL) {

142 
	`luaM_‰ì
(
L
, 
ci
->
√xt
);

143 
L
->
nci
--;

144 
ci
->
√xt
 = 
√xt2
;

145 
√xt2
->
¥evious
 = 
ci
;

146 
ci
 = 
√xt2
;

148 
	}
}

151 
	$°ack_öô
 (
lua_Sèã
 *
L1
,Üua_Sèã *
L
) {

152 
i
; 
CÆlInfo
 *
ci
;

154 
L1
->
°ack
 = 
	`luaM_√wve˘‹
(
L
, 
BASIC_STACK_SIZE
, 
TVÆue
);

155 
L1
->
°acksize
 = 
BASIC_STACK_SIZE
;

156 
i
 = 0; i < 
BASIC_STACK_SIZE
; i++)

157 
	`£äûvÆue
(
L1
->
°ack
 + 
i
);

158 
L1
->
t›
 = L1->
°ack
;

159 
L1
->
°ack_œ°
 = L1->
°ack
 + L1->
°acksize
 - 
EXTRA_STACK
;

161 
ci
 = &
L1
->
ba£_ci
;

162 
ci
->
√xt
 = ci->
¥evious
 = 
NULL
;

163 
ci
->
ˇŒ°©us
 = 0;

164 
ci
->
func
 = 
L1
->
t›
;

165 
	`£äûvÆue
(
L1
->
t›
++);

166 
ci
->
t›
 = 
L1
->t› + 
LUA_MINSTACK
;

167 
L1
->
ci
 = ci;

168 
	}
}

171 
	$‰ì°ack
 (
lua_Sèã
 *
L
) {

172 i‡(
L
->
°ack
 =
NULL
)

174 
L
->
ci
 = &L->
ba£_ci
;

175 
	`luaE_‰ìCI
(
L
);

176 
	`lua_as£π
(
L
->
nci
 == 0);

177 
	`luaM_‰ì¨øy
(
L
, L->
°ack
, L->
°acksize
);

178 
	}
}

184 
	$öô_ªgi°ry
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

185 
TVÆue
 
ãmp
;

187 
TabÀ
 *
ªgi°ry
 = 
	`luaH_√w
(
L
);

188 
	`£thvÆue
(
L
, &
g
->
l_ªgi°ry
, 
ªgi°ry
);

189 
	`luaH_ªsize
(
L
, 
ªgi°ry
, 
LUA_RIDX_LAST
, 0);

191 
	`£âhvÆue
(
L
, &
ãmp
, L);

192 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_MAINTHREAD
, &
ãmp
);

194 
	`£thvÆue
(
L
, &
ãmp
, 
	`luaH_√w
(L));

195 
	`luaH_£töt
(
L
, 
ªgi°ry
, 
LUA_RIDX_GLOBALS
, &
ãmp
);

196 
	}
}

203 
	$f_lua›í
 (
lua_Sèã
 *
L
, *
ud
) {

204 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

205 
	`UNUSED
(
ud
);

206 
	`°ack_öô
(
L
, L);

207 
	`öô_ªgi°ry
(
L
, 
g
);

208 
	`luaS_öô
(
L
);

209 
	`luaT_öô
(
L
);

210 
	`luaX_öô
(
L
);

211 
g
->
g¸u¬ög
 = 1;

212 
g
->
vîsi⁄
 = 
	`lua_vîsi⁄
(
NULL
);

213 
	`luai_u£r°©e›í
(
L
);

214 
	}
}

221 
	$¥eöô_thªad
 (
lua_Sèã
 *
L
, 
globÆ_Sèã
 *
g
) {

222 
	`G
(
L
Ë
g
;

223 
L
->
°ack
 = 
NULL
;

224 
L
->
ci
 = 
NULL
;

225 
L
->
nci
 = 0;

226 
L
->
°acksize
 = 0;

227 
L
->
twups
 = L;

228 
L
->
îr‹Jmp
 = 
NULL
;

229 
L
->
nCˇŒs
 = 0;

230 
L
->
hook
 = 
NULL
;

231 
L
->
hookmask
 = 0;

232 
L
->
ba£hookcou¡
 = 0;

233 
L
->
Ælowhook
 = 1;

234 
	`ª£thookcou¡
(
L
);

235 
L
->
›íupvÆ
 = 
NULL
;

236 
L
->
¬y
 = 1;

237 
L
->
°©us
 = 
LUA_OK
;

238 
L
->
îrfunc
 = 0;

239 
	}
}

242 
	$˛o£_°©e
 (
lua_Sèã
 *
L
) {

243 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

244 
	`luaF_˛o£
(
L
, L->
°ack
);

245 
	`luaC_‰ìÆlobje˘s
(
L
);

246 i‡(
g
->
vîsi⁄
)

247 
	`luai_u£r°©e˛o£
(
L
);

248 
	`luaM_‰ì¨øy
(
L
, 
	`G
(L)->
°π
.
hash
, G(L)->°π.
size
);

249 
	`‰ì°ack
(
L
);

250 
	`lua_as£π
(
	`gëtŸÆbyãs
(
g
Ë=(
LG
));

251 (*
g
->
‰óŒoc
)(g->
ud
, 
	`‰om°©e
(
L
), (
LG
), 0);

252 
	}
}

255 
LUA_API
 
lua_Sèã
 *
	$lua_√wthªad
 (
lua_Sèã
 *
L
) {

256 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

257 
lua_Sèã
 *
L1
;

258 
	`lua_lock
(
L
);

259 
	`luaC_checkGC
(
L
);

261 
L1
 = &
	`ˇ°
(
LX
 *, 
	`luaM_√wobje˘
(
L
, 
LUA_TTHREAD
, (LX)))->
l
;

262 
L1
->
m¨ked
 = 
	`luaC_whôe
(
g
);

263 
L1
->
â
 = 
LUA_TTHREAD
;

265 
L1
->
√xt
 = 
g
->
Ælgc
;

266 
g
->
Ælgc
 = 
	`obj2gco
(
L1
);

268 
	`£âhvÆue
(
L
, L->
t›
, 
L1
);

269 
	`≠i_ö¸_t›
(
L
);

270 
	`¥eöô_thªad
(
L1
, 
g
);

271 
L1
->
hookmask
 = 
L
->hookmask;

272 
L1
->
ba£hookcou¡
 = 
L
->basehookcount;

273 
L1
->
hook
 = 
L
->hook;

274 
	`ª£thookcou¡
(
L1
);

276 
	`mem˝y
(
	`lua_gëexåa•a˚
(
L1
),Üua_gëexåa•a˚(
g
->
maöthªad
),

277 
LUA_EXTRASPACE
);

278 
	`luai_u£r°©ëhªad
(
L
, 
L1
);

279 
	`°ack_öô
(
L1
, 
L
);

280 
	`lua_u∆ock
(
L
);

281  
L1
;

282 
	}
}

285 
	$luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
) {

286 
LX
 *
l
 = 
	`‰om°©e
(
L1
);

287 
	`luaF_˛o£
(
L1
, L1->
°ack
);

288 
	`lua_as£π
(
L1
->
›íupvÆ
 =
NULL
);

289 
	`luai_u£r°©e‰ì
(
L
, 
L1
);

290 
	`‰ì°ack
(
L1
);

291 
	`luaM_‰ì
(
L
, 
l
);

292 
	}
}

295 
LUA_API
 
lua_Sèã
 *
	$lua_√w°©e
 (
lua_AŒoc
 
f
, *
ud
) {

296 
i
;

297 
lua_Sèã
 *
L
;

298 
globÆ_Sèã
 *
g
;

299 
LG
 *
l
 = 
	`ˇ°
(LG *, (*
f
)(
ud
, 
NULL
, 
LUA_TTHREAD
, (LG)));

300 i‡(
l
 =
NULL
)  NULL;

301 
L
 = &
l
->l.l;

302 
g
 = &
l
->g;

303 
L
->
√xt
 = 
NULL
;

304 
L
->
â
 = 
LUA_TTHREAD
;

305 
g
->
cuºítwhôe
 = 
	`bômask
(
WHITE0BIT
);

306 
L
->
m¨ked
 = 
	`luaC_whôe
(
g
);

307 
	`¥eöô_thªad
(
L
, 
g
);

308 
g
->
‰óŒoc
 = 
f
;

309 
g
->
ud
 = ud;

310 
g
->
maöthªad
 = 
L
;

311 
g
->
£ed
 = 
	`make£ed
(
L
);

312 
g
->
g¸u¬ög
 = 0;

313 
g
->
GCe°im©e
 = 0;

314 
g
->
°π
.
size
 = g->°π.
nu£
 = 0;

315 
g
->
°π
.
hash
 = 
NULL
;

316 
	`£äûvÆue
(&
g
->
l_ªgi°ry
);

317 
g
->
∑nic
 = 
NULL
;

318 
g
->
vîsi⁄
 = 
NULL
;

319 
g
->
gc°©e
 = 
GCS∑u£
;

320 
g
->
gcköd
 = 
KGC_NORMAL
;

321 
g
->
Ælgc
 = g->
föobj
 = g->
tobe‚z
 = g->
fixedgc
 = 
NULL
;

322 
g
->
swìpgc
 = 
NULL
;

323 
g
->
gøy
 = g->
gøyagaö
 = 
NULL
;

324 
g
->
wók
 = g->
ïhemî⁄
 = g->
Ælwók
 = 
NULL
;

325 
g
->
twups
 = 
NULL
;

326 
g
->
tŸÆbyãs
 = (
LG
);

327 
g
->
GCdebt
 = 0;

328 
g
->
gcfönum
 = 0;

329 
g
->
g˝au£
 = 
LUAI_GCPAUSE
;

330 
g
->
gc°ïmul
 = 
LUAI_GCMUL
;

331 
i
=0; i < 
LUA_NUMTAGS
; i++Ë
g
->
mt
[i] = 
NULL
;

332 i‡(
	`luaD_øwru≈rŸe˘ed
(
L
, 
f_lua›í
, 
NULL
Ë!
LUA_OK
) {

334 
	`˛o£_°©e
(
L
);

335 
L
 = 
NULL
;

337  
L
;

338 
	}
}

341 
LUA_API
 
	$lua_˛o£
 (
lua_Sèã
 *
L
) {

342 
L
 = 
	`G
(L)->
maöthªad
;

343 
	`lua_lock
(
L
);

344 
	`˛o£_°©e
(
L
);

345 
	}
}

	@lib/lua/src/lstate.h

7 #i‚de‡
l°©e_h


8 
	#l°©e_h


	)

10 
	~"lua.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

14 
	~"lzio.h
"

33 
	glua_l⁄gjmp
;

38 
	#EXTRA_STACK
 5

	)

41 
	#BASIC_STACK_SIZE
 (2*
LUA_MINSTACK
)

	)

45 
	#KGC_NORMAL
 0

	)

46 
	#KGC_EMERGENCY
 1

	)

49 
	s°rögèbÀ
 {

50 
TSåög
 **
	mhash
;

51 
	mnu£
;

52 
	msize
;

53 } 
	t°rögèbÀ
;

65 
	sCÆlInfo
 {

66 
StkId
 
	mfunc
;

67 
StkId
 
	mt›
;

68 
CÆlInfo
 *
	m¥evious
, *
	m√xt
;

71 
StkId
 
	mba£
;

72 c⁄° 
In°ru˘i⁄
 *
	mßvedpc
;

73 } 
	ml
;

75 
lua_KFun˘i⁄
 
	mk
;

76 
±rdiff_t
 
	mﬁd_îrfunc
;

77 
lua_KC⁄ãxt
 
	m˘x
;

78 } 
	mc
;

79 } 
	mu
;

80 
±rdiff_t
 
	mexåa
;

81 
	mƒesu…s
;

82 
lu_byã
 
	mˇŒ°©us
;

83 } 
	tCÆlInfo
;

89 
	#CIST_OAH
 (1<<0Ë

	)

90 
	#CIST_LUA
 (1<<1Ë

	)

91 
	#CIST_HOOKED
 (1<<2Ë

	)

92 
	#CIST_FRESH
 (1<<3Ë

	)

94 
	#CIST_YPCALL
 (1<<4Ë

	)

95 
	#CIST_TAIL
 (1<<5Ë

	)

96 
	#CIST_HOOKYIELD
 (1<<6Ë

	)

97 
	#CIST_LEQ
 (1<<7Ë

	)

99 
	#isLua
(
ci
Ë((ci)->
ˇŒ°©us
 & 
CIST_LUA
)

	)

102 
	#£tﬂh
(
°
,
v
Ë((°Ë((°Ë& ~
CIST_OAH
Ë| (v))

	)

103 
	#gëﬂh
(
°
Ë((°Ë& 
CIST_OAH
)

	)

109 
	sglobÆ_Sèã
 {

110 
lua_AŒoc
 
	m‰óŒoc
;

111 *
	mud
;

112 
l_mem
 
	mtŸÆbyãs
;

113 
l_mem
 
	mGCdebt
;

114 
lu_mem
 
	mGCmemåav
;

115 
lu_mem
 
	mGCe°im©e
;

116 
°rögèbÀ
 
	m°π
;

117 
TVÆue
 
	ml_ªgi°ry
;

118 
	m£ed
;

119 
lu_byã
 
	mcuºítwhôe
;

120 
lu_byã
 
	mgc°©e
;

121 
lu_byã
 
	mgcköd
;

122 
lu_byã
 
	mg¸u¬ög
;

123 
GCObje˘
 *
	mÆlgc
;

124 
GCObje˘
 **
	mswìpgc
;

125 
GCObje˘
 *
	mföobj
;

126 
GCObje˘
 *
	mgøy
;

127 
GCObje˘
 *
	mgøyagaö
;

128 
GCObje˘
 *
	mwók
;

129 
GCObje˘
 *
	mïhemî⁄
;

130 
GCObje˘
 *
	mÆlwók
;

131 
GCObje˘
 *
	mtobe‚z
;

132 
GCObje˘
 *
	mfixedgc
;

133 
lua_Sèã
 *
	mtwups
;

134 
	mgcfönum
;

135 
	mg˝au£
;

136 
	mgc°ïmul
;

137 
lua_CFun˘i⁄
 
	m∑nic
;

138 
lua_Sèã
 *
	mmaöthªad
;

139 c⁄° 
lua_Numbî
 *
	mvîsi⁄
;

140 
TSåög
 *
	mmemîrmsg
;

141 
TSåög
 *
	mtm«me
[
TM_N
];

142 
TabÀ
 *
	mmt
[
LUA_NUMTAGS
];

143 
TSåög
 *
	m°rˇche
[
STRCACHE_N
][
STRCACHE_M
];

144 } 
	tglobÆ_Sèã
;

150 
	slua_Sèã
 {

151 
	mComm⁄Hódî
;

152 
	mnci
;

153 
lu_byã
 
	m°©us
;

154 
StkId
 
	mt›
;

155 
globÆ_Sèã
 *
	ml_G
;

156 
CÆlInfo
 *
	mci
;

157 c⁄° 
In°ru˘i⁄
 *
	mﬁdpc
;

158 
StkId
 
	m°ack_œ°
;

159 
StkId
 
	m°ack
;

160 
UpVÆ
 *
	m›íupvÆ
;

161 
GCObje˘
 *
	mg˛i°
;

162 
lua_Sèã
 *
	mtwups
;

163 
lua_l⁄gjmp
 *
	mîr‹Jmp
;

164 
CÆlInfo
 
	mba£_ci
;

165 
lua_Hook
 
	mhook
;

166 
±rdiff_t
 
	mîrfunc
;

167 
	m°acksize
;

168 
	mba£hookcou¡
;

169 
	mhookcou¡
;

170 
	m¬y
;

171 
	mnCˇŒs
;

172 
lu_byã
 
	mhookmask
;

173 
lu_byã
 
	mÆlowhook
;

175 * 
	m¥iv©e
;

179 
	#G
(
L
Ë(L->
l_G
)

	)

185 
	uGCUni⁄
 {

186 
GCObje˘
 
	mgc
;

187 
TSåög
 
	mts
;

188 
Ud©a
 
	mu
;

189 
Closuª
 
	m˛
;

190 
TabÀ
 
	mh
;

191 
PrŸo
 
	mp
;

192 
lua_Sèã
 
	mth
;

196 
	#ˇ°_u
(
o
Ë
	`ˇ°
(
GCUni⁄
 *, (o))

	)

199 
	#gco2ts
(
o
) \

200 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TSTRING
, &((
	`ˇ°_u
(o))->
ts
))

	)

201 
	#gco2u
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TUSERDATA
, &((
	`ˇ°_u
(o))->
u
))

	)

202 
	#gco2l˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TLCL
, &((
	`ˇ°_u
(o))->
˛
.
l
))

	)

203 
	#gco2c˛
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TCCL
, &((
	`ˇ°_u
(o))->
˛
.
c
))

	)

204 
	#gco2˛
(
o
) \

205 
	`check_exp
(
	`nov¨ü¡
((
o
)->
â
Ë=
LUA_TFUNCTION
, &((
	`ˇ°_u
(o))->
˛
))

	)

206 
	#gco2t
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTABLE
, &((
	`ˇ°_u
(o))->
h
))

	)

207 
	#gco2p
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TPROTO
, &((
	`ˇ°_u
(o))->
p
))

	)

208 
	#gco2th
(
o
Ë
	`check_exp
((o)->
â
 =
LUA_TTHREAD
, &((
	`ˇ°_u
(o))->
th
))

	)

212 
	#obj2gco
(
v
) \

213 
	`check_exp
(
	`nov¨ü¡
((
v
)->
â
Ë< 
LUA_TDEADKEY
, (&(
	`ˇ°_u
(v)->
gc
)))

	)

217 
	#gëtŸÆbyãs
(
g
Ë
	`ˇ°
(
lu_mem
, (g)->
tŸÆbyãs
 + (g)->
GCdebt
)

	)

219 
LUAI_FUNC
 
luaE_£tdebt
 (
globÆ_Sèã
 *
g
, 
l_mem
 
debt
);

220 
LUAI_FUNC
 
luaE_‰ìthªad
 (
lua_Sèã
 *
L
,Üua_Sèã *
L1
);

221 
LUAI_FUNC
 
CÆlInfo
 *
luaE_exãndCI
 (
lua_Sèã
 *
L
);

222 
LUAI_FUNC
 
luaE_‰ìCI
 (
lua_Sèã
 *
L
);

223 
LUAI_FUNC
 
luaE_shrökCI
 (
lua_Sèã
 *
L
);

	@lib/lua/src/lstring.c

7 
	#l°rög_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lmem.h
"

20 
	~"lobje˘.h
"

21 
	~"l°©e.h
"

22 
	~"l°rög.h
"

25 
	#MEMERRMSG
 "nŸÉnough mem‹y"

	)

32 #i‡!
deföed
(
LUAI_HASHLIMIT
)

33 
	#LUAI_HASHLIMIT
 5

	)

40 
	$luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
) {

41 
size_t
 
Àn
 = 
a
->
u
.
 gÀn
;

42 
	`lua_as£π
(
a
->
â
 =
LUA_TLNGSTR
 && 
b
->tt == LUA_TLNGSTR);

43  (
a
 =
b
) ||

44 ((
Àn
 =
b
->
u
.
 gÀn
) &&

45 (
	`memcmp
(
	`gë°r
(
a
), gë°r(
b
), 
Àn
) == 0));

46 
	}
}

49 
	$luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
) {

50 
h
 = 
£ed
 ^ 
	`ˇ°
(, 
l
);

51 
size_t
 
°ï
 = (
l
 >> 
LUAI_HASHLIMIT
) + 1;

52 ; 
l
 >
°ï
;Ü -= step)

53 
h
 ^((h<<5Ë+ (h>>2Ë+ 
	`ˇ°_byã
(
°r
[
l
 - 1]));

54  
h
;

55 
	}
}

58 
	$luaS_hashl⁄g°r
 (
TSåög
 *
ts
) {

59 
	`lua_as£π
(
ts
->
â
 =
LUA_TLNGSTR
);

60 i‡(
ts
->
exåa
 == 0) {

61 
ts
->
hash
 = 
	`luaS_hash
(
	`gë°r
—s),Ås->
u
.
 gÀn
,Ås->hash);

62 
ts
->
exåa
 = 1;

64  
ts
->
hash
;

65 
	}
}

71 
	$luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
) {

72 
i
;

73 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

74 i‡(
√wsize
 > 
tb
->
size
) {

75 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

76 
i
 = 
tb
->
size
; i < 
√wsize
; i++)

77 
tb
->
hash
[
i
] = 
NULL
;

79 
i
 = 0; i < 
tb
->
size
; i++) {

80 
TSåög
 *
p
 = 
tb
->
hash
[
i
];

81 
tb
->
hash
[
i
] = 
NULL
;

82 
p
) {

83 
TSåög
 *
h√xt
 = 
p
->
u
.hnext;

84 
h
 = 
	`lmod
(
p
->
hash
, 
√wsize
);

85 
p
->
u
.
h√xt
 = 
tb
->
hash
[
h
];

86 
tb
->
hash
[
h
] = 
p
;

87 
p
 = 
h√xt
;

90 i‡(
√wsize
 < 
tb
->
size
) {

92 
	`lua_as£π
(
tb
->
hash
[
√wsize
] =
NULL
 &&Åb->hash[tb->
size
 - 1] == NULL);

93 
	`luaM_ªÆlocve˘‹
(
L
, 
tb
->
hash
,Åb->
size
, 
√wsize
, 
TSåög
 *);

95 
tb
->
size
 = 
√wsize
;

96 
	}
}

103 
	$luaS_˛órˇche
 (
globÆ_Sèã
 *
g
) {

104 
i
, 
j
;

105 
i
 = 0; i < 
STRCACHE_N
; i++)

106 
j
 = 0; j < 
STRCACHE_M
; j++) {

107 i‡(
	`iswhôe
(
g
->
°rˇche
[
i
][
j
]))

108 
g
->
°rˇche
[
i
][
j
] = g->
memîrmsg
;

110 
	}
}

116 
	$luaS_öô
 (
lua_Sèã
 *
L
) {

117 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

118 
i
, 
j
;

119 
	`luaS_ªsize
(
L
, 
MINSTRTABSIZE
);

121 
g
->
memîrmsg
 = 
	`luaS_√wlôîÆ
(
L
, 
MEMERRMSG
);

122 
	`luaC_fix
(
L
, 
	`obj2gco
(
g
->
memîrmsg
));

123 
i
 = 0; i < 
STRCACHE_N
; i++)

124 
j
 = 0; j < 
STRCACHE_M
; j++)

125 
g
->
°rˇche
[
i
][
j
] = g->
memîrmsg
;

126 
	}
}

133 
TSåög
 *
	$¸óã°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
, 
èg
, 
h
) {

134 
TSåög
 *
ts
;

135 
GCObje˘
 *
o
;

136 
size_t
 
tŸÆsize
;

137 
tŸÆsize
 = 
	`sizñ°rög
(
l
);

138 
o
 = 
	`luaC_√wobj
(
L
, 
èg
, 
tŸÆsize
);

139 
ts
 = 
	`gco2ts
(
o
);

140 
ts
->
hash
 = 
h
;

141 
ts
->
exåa
 = 0;

142 
	`gë°r
(
ts
)[
l
] = '\0';

143  
ts
;

144 
	}
}

147 
TSåög
 *
	$luaS_¸óã g°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
) {

148 
TSåög
 *
ts
 = 
	`¸óã°robj
(
L
, 
l
, 
LUA_TLNGSTR
, 
	`G
(L)->
£ed
);

149 
ts
->
u
.
 gÀn
 = 
l
;

150  
ts
;

151 
	}
}

154 
	$luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
) {

155 
°rögèbÀ
 *
tb
 = &
	`G
(
L
)->
°π
;

156 
TSåög
 **
p
 = &
tb
->
hash
[
	`lmod
(
ts
->hash,Åb->
size
)];

157 *
p
 !
ts
)

158 
p
 = &(*p)->
u
.
h√xt
;

159 *
p
 = (*p)->
u
.
h√xt
;

160 
tb
->
nu£
--;

161 
	}
}

167 
TSåög
 *
	$öã∫shr°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

168 
TSåög
 *
ts
;

169 
globÆ_Sèã
 *
g
 = 
	`G
(
L
);

170 
h
 = 
	`luaS_hash
(
°r
, 
l
, 
g
->
£ed
);

171 
TSåög
 **
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

172 
	`lua_as£π
(
°r
 !
NULL
);

173 
ts
 = *
li°
;Å†!
NULL
;Å†ts->
u
.
h√xt
) {

174 i‡(
l
 =
ts
->
shæí
 &&

175 (
	`memcmp
(
°r
, 
	`gë°r
(
ts
), 
l
 * ()) == 0)) {

177 i‡(
	`isdód
(
g
, 
ts
))

178 
	`ch™gewhôe
(
ts
);

179  
ts
;

182 i‡(
g
->
°π
.
nu£
 >g->°π.
size
 && g->°π.sizê<
MAX_INT
/2) {

183 
	`luaS_ªsize
(
L
, 
g
->
°π
.
size
 * 2);

184 
li°
 = &
g
->
°π
.
hash
[
	`lmod
(
h
, g->°π.
size
)];

186 
ts
 = 
	`¸óã°robj
(
L
, 
l
, 
LUA_TSHRSTR
, 
h
);

187 
	`mem˝y
(
	`gë°r
(
ts
), 
°r
, 
l
 * ());

188 
ts
->
shæí
 = 
	`ˇ°_byã
(
l
);

189 
ts
->
u
.
h√xt
 = *
li°
;

190 *
li°
 = 
ts
;

191 
g
->
°π
.
nu£
++;

192  
ts
;

193 
	}
}

199 
TSåög
 *
	$luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
) {

200 i‡(
l
 <
LUAI_MAXSHORTLEN
)

201  
	`öã∫shr°r
(
L
, 
°r
, 
l
);

203 
TSåög
 *
ts
;

204 i‡(
l
 >(
MAX_SIZE
 - (
TSåög
))/())

205 
	`luaM_toobig
(
L
);

206 
ts
 = 
	`luaS_¸óã g°robj
(
L
, 
l
);

207 
	`mem˝y
(
	`gë°r
(
ts
), 
°r
, 
l
 * ());

208  
ts
;

210 
	}
}

219 
TSåög
 *
	$luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
) {

220 
i
 = 
	`poöt2uöt
(
°r
Ë% 
STRCACHE_N
;

221 
j
;

222 
TSåög
 **
p
 = 
	`G
(
L
)->
°rˇche
[
i
];

223 
j
 = 0; j < 
STRCACHE_M
; j++) {

224 i‡(
	`°rcmp
(
°r
, 
	`gë°r
(
p
[
j
])) == 0)

225  
p
[
j
];

228 
j
 = 
STRCACHE_M
 - 1; j > 0; j--)

229 
p
[
j
] =Ö[j - 1];

231 
p
[0] = 
	`luaS_√wl°r
(
L
, 
°r
, 
	`°æí
(str));

232  
p
[0];

233 
	}
}

236 
Ud©a
 *
	$luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
) {

237 
Ud©a
 *
u
;

238 
GCObje˘
 *
o
;

239 i‡(
s
 > 
MAX_SIZE
 - (
Ud©a
))

240 
	`luaM_toobig
(
L
);

241 
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TUSERDATA
, 
	`sizñud©a
(
s
));

242 
u
 = 
	`gco2u
(
o
);

243 
u
->
Àn
 = 
s
;

244 
u
->
më©abÀ
 = 
NULL
;

245 
	`£tu£rvÆue
(
L
, 
u
, 
luaO_nûobje˘
);

246  
u
;

247 
	}
}

	@lib/lua/src/lstring.h

7 #i‚de‡
l°rög_h


8 
	#l°rög_h


	)

10 
	~"lgc.h
"

11 
	~"lobje˘.h
"

12 
	~"l°©e.h
"

15 
	#sizñ°rög
(
l
Ë((
UTSåög
Ë+ (÷Ë+ 1Ë* ())

	)

17 
	#sizñud©a
(
l
Ë((
UUd©a
Ë+ (l))

	)

18 
	#sizeud©a
(
u
Ë
	`sizñud©a
((u)->
Àn
)

	)

20 
	#luaS_√wlôîÆ
(
L
, 
s
Ë(
	`luaS_√wl°r
(L, "" s, \

21 ((
s
)/())-1))

	)

27 
	#i§e£rved
(
s
Ë((s)->
â
 =
LUA_TSHRSTR
 && (s)->
exåa
 > 0)

	)

33 
	#eqshr°r
(
a
,
b
Ë
	`check_exp
(◊)->
â
 =
LUA_TSHRSTR
, (aË=(b))

	)

36 
LUAI_FUNC
 
luaS_hash
 (c⁄° *
°r
, 
size_t
 
l
, 
£ed
);

37 
LUAI_FUNC
 
luaS_hashl⁄g°r
 (
TSåög
 *
ts
);

38 
LUAI_FUNC
 
luaS_eq g°r
 (
TSåög
 *
a
, TSåög *
b
);

39 
LUAI_FUNC
 
luaS_ªsize
 (
lua_Sèã
 *
L
, 
√wsize
);

40 
LUAI_FUNC
 
luaS_˛órˇche
 (
globÆ_Sèã
 *
g
);

41 
LUAI_FUNC
 
luaS_öô
 (
lua_Sèã
 *
L
);

42 
LUAI_FUNC
 
luaS_ªmove
 (
lua_Sèã
 *
L
, 
TSåög
 *
ts
);

43 
LUAI_FUNC
 
Ud©a
 *
luaS_√wud©a
 (
lua_Sèã
 *
L
, 
size_t
 
s
);

44 
LUAI_FUNC
 
TSåög
 *
luaS_√wl°r
 (
lua_Sèã
 *
L
, c⁄° *
°r
, 
size_t
 
l
);

45 
LUAI_FUNC
 
TSåög
 *
luaS_√w
 (
lua_Sèã
 *
L
, c⁄° *
°r
);

46 
LUAI_FUNC
 
TSåög
 *
luaS_¸óã g°robj
 (
lua_Sèã
 *
L
, 
size_t
 
l
);

	@lib/lua/src/lstrlib.c

7 
	#l°æib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<˘y≥.h
>

14 
	~<Êﬂt.h
>

15 
	~<limôs.h
>

16 
	~<°ddef.h
>

17 
	~<°dio.h
>

18 
	~<°dlib.h
>

19 
	~<°rög.h
>

21 
	~"lua.h
"

23 
	~"œuxlib.h
"

24 
	~"luÆib.h
"

31 #i‡!
deföed
(
LUA_MAXCAPTURES
)

32 
	#LUA_MAXCAPTURES
 32

	)

37 
	#uch¨
(
c
Ë(()(c))

	)

44 
	#MAX_SIZET
 ((
size_t
)(~(size_t)0))

	)

46 
	#MAXSIZE
 \

47 ((
size_t
Ë< (Ë? 
MAX_SIZET
 : (size_t)(
INT_MAX
))

	)

52 
	$°r_Àn
 (
lua_Sèã
 *
L
) {

53 
size_t
 
l
;

54 
	`luaL_checkl°rög
(
L
, 1, &
l
);

55 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
l
);

57 
	}
}

61 
lua_I¡egî
 
	$po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

62 i‡(
pos
 >= 0) Öos;

63 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

64  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

65 
	}
}

68 
	$°r_sub
 (
lua_Sèã
 *
L
) {

69 
size_t
 
l
;

70 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

71 
lua_I¡egî
 
°¨t
 = 
	`po§ñ©
(
	`luaL_checköãgî
(
L
, 2), 
l
);

72 
lua_I¡egî
 
íd
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
l
);

73 i‡(
°¨t
 < 1) start = 1;

74 i‡(
íd
 > (
lua_I¡egî
)
l
)Énd =Ü;

75 i‡(
°¨t
 <
íd
)

76 
	`lua_pushl°rög
(
L
, 
s
 + 
°¨t
 - 1, (
size_t
)(
íd
 - start) + 1);

77 
	`lua_pushlôîÆ
(
L
, "");

79 
	}
}

82 
	$°r_ªvî£
 (
lua_Sèã
 *
L
) {

83 
size_t
 
l
, 
i
;

84 
luaL_Buf„r
 
b
;

85 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

86 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

87 
i
 = 0; i < 
l
; i++)

88 
p
[
i
] = 
s
[
l
 - i - 1];

89 
	`luaL_pushªsu…size
(&
b
, 
l
);

91 
	}
}

94 
	$°r_lowî
 (
lua_Sèã
 *
L
) {

95 
size_t
 
l
;

96 
size_t
 
i
;

97 
luaL_Buf„r
 
b
;

98 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

99 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

100 
i
=0; i<
l
; i++)

101 
p
[
i
] = 
	`tﬁowî
(
	`uch¨
(
s
[i]));

102 
	`luaL_pushªsu…size
(&
b
, 
l
);

104 
	}
}

107 
	$°r_uµî
 (
lua_Sèã
 *
L
) {

108 
size_t
 
l
;

109 
size_t
 
i
;

110 
luaL_Buf„r
 
b
;

111 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

112 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
l
);

113 
i
=0; i<
l
; i++)

114 
p
[
i
] = 
	`touµî
(
	`uch¨
(
s
[i]));

115 
	`luaL_pushªsu…size
(&
b
, 
l
);

117 
	}
}

120 
	$°r_ªp
 (
lua_Sèã
 *
L
) {

121 
size_t
 
l
, 
l£p
;

122 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

123 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

124 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 3, "", &
l£p
);

125 i‡(
n
 <0Ë
	`lua_pushlôîÆ
(
L
, "");

126 i‡(
l
 + 
l£p
 <Ü ||Ü +Ü£∞> 
MAXSIZE
 / 
n
)

127  
	`luaL_îr‹
(
L
, "resulting stringÅooÜarge");

129 
size_t
 
tŸÆÀn
 = (size_t)
n
 * 
l
 + (size_t)“ - 1Ë* 
l£p
;

130 
luaL_Buf„r
 
b
;

131 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
tŸÆÀn
);

132 
n
-- > 1) {

133 
	`mem˝y
(
p
, 
s
, 
l
 * ());Ö +=Ü;

134 i‡(
l£p
 > 0) {

135 
	`mem˝y
(
p
, 
£p
, 
l£p
 * ());

136 
p
 +
l£p
;

139 
	`mem˝y
(
p
, 
s
, 
l
 * ());

140 
	`luaL_pushªsu…size
(&
b
, 
tŸÆÀn
);

143 
	}
}

146 
	$°r_byã
 (
lua_Sèã
 *
L
) {

147 
size_t
 
l
;

148 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
l
);

149 
lua_I¡egî
 
posi
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
l
);

150 
lua_I¡egî
 
po£
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
l
);

151 
n
, 
i
;

152 i‡(
posi
 < 1)Öosi = 1;

153 i‡(
po£
 > (
lua_I¡egî
)
l
)Öose =Ü;

154 i‡(
posi
 > 
po£
)  0;

155 i‡(
po£
 - 
posi
 >
INT_MAX
)

156  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

157 
n
 = ()(
po£
 - 
posi
) + 1;

158 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

159 
i
=0; i<
n
; i++)

160 
	`lua_pushöãgî
(
L
, 
	`uch¨
(
s
[
posi
+
i
-1]));

161  
n
;

162 
	}
}

165 
	$°r_ch¨
 (
lua_Sèã
 *
L
) {

166 
n
 = 
	`lua_gët›
(
L
);

167 
i
;

168 
luaL_Buf„r
 
b
;

169 *
p
 = 
	`luaL_bufföôsize
(
L
, &
b
, 
n
);

170 
i
=1; i<=
n
; i++) {

171 
lua_I¡egî
 
c
 = 
	`luaL_checköãgî
(
L
, 
i
);

172 
	`luaL_¨gcheck
(
L
, 
	`uch¨
(
c
Ë=c, 
i
, "value out ofÑange");

173 
p
[
i
 - 1] = 
	`uch¨
(
c
);

175 
	`luaL_pushªsu…size
(&
b
, 
n
);

177 
	}
}

180 
	$wrôî
 (
lua_Sèã
 *
L
, c⁄° *
b
, 
size_t
 
size
, *
B
) {

181 ()
L
;

182 
	`luaL_addl°rög
((
luaL_Buf„r
 *Ë
B
, (c⁄° *)
b
, 
size
);

184 
	}
}

187 
	$°r_dump
 (
lua_Sèã
 *
L
) {

188 
luaL_Buf„r
 
b
;

189 
°rù
 = 
	`lua_toboﬁón
(
L
, 2);

190 
	`luaL_checkty≥
(
L
, 1, 
LUA_TFUNCTION
);

191 
	`lua_£â›
(
L
, 1);

192 
	`luaL_bufföô
(
L
,&
b
);

193 i‡(
	`lua_dump
(
L
, 
wrôî
, &
b
, 
°rù
) != 0)

194  
	`luaL_îr‹
(
L
, "unableÅo dump given function");

195 
	`luaL_pushªsu…
(&
b
);

197 
	}
}

208 
	#CAP_UNFINISHED
 (-1)

	)

209 
	#CAP_POSITION
 (-2)

	)

212 
	sM©chSèã
 {

213 c⁄° *
	m§c_öô
;

214 c⁄° *
	m§c_íd
;

215 c⁄° *
	mp_íd
;

216 
lua_Sèã
 *
	mL
;

217 
size_t
 
	mƒï
;

218 
	mm©chdïth
;

219 
	mÀvñ
;

221 c⁄° *
	möô
;

222 
±rdiff_t
 
	mÀn
;

223 } 
	mˇ±uª
[
LUA_MAXCAPTURES
];

224 } 
	tM©chSèã
;

228 c⁄° *
m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
);

232 #i‡!
deföed
(
MAXCCALLS
)

233 
	#MAXCCALLS
 200

	)

242 #i‡!
deföed
(
A_REPS
)

243 
	#A_REPS
 4

	)

244 
	#B_REPS
 100000

	)

248 
	#L_ESC
 '%'

	)

249 
	#SPECIALS
 "^$*+?.([%-"

	)

252 
	$check_ˇ±uª
 (
M©chSèã
 *
ms
, 
l
) {

253 
l
 -= '1';

254 i‡(
l
 < 0 ||Ü >
ms
->
Àvñ
 || ms->
ˇ±uª
[l].
Àn
 =
CAP_UNFINISHED
)

255  
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
l
 + 1);

256  
l
;

257 
	}
}

260 
	$ˇ±uª_to_˛o£
 (
M©chSèã
 *
ms
) {

261 
Àvñ
 = 
ms
->level;

262 
Àvñ
--;Üevel>=0;Üevel--)

263 i‡(
ms
->
ˇ±uª
[
Àvñ
].
Àn
 =
CAP_UNFINISHED
) Üevel;

264  
	`luaL_îr‹
(
ms
->
L
, "invalidÖattern capture");

265 
	}
}

268 c⁄° *
	$˛as£nd
 (
M©chSèã
 *
ms
, c⁄° *
p
) {

269 *
p
++) {

270 
L_ESC
: {

271 i‡(
p
 =
ms
->
p_íd
)

272 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (ends with '%%')");

273  
p
+1;

276 i‡(*
p
 == '^')Ö++;

278 i‡(
p
 =
ms
->
p_íd
)

279 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missing ']')");

280 i‡(*(
p
++Ë=
L_ESC
 &&Ö < 
ms
->
p_íd
)

281 
p
++;

282 } *
p
 != ']');

283  
p
+1;

286  
p
;

289 
	}
}

292 
	$m©ch_˛ass
 (
c
, 
˛
) {

293 
ªs
;

294 
	`tﬁowî
(
˛
)) {

295 'a' : 
ªs
 = 
	`ißÕha
(
c
); ;

296 'c' : 
ªs
 = 
	`is˙ål
(
c
); ;

297 'd' : 
ªs
 = 
	`isdigô
(
c
); ;

298 'g' : 
ªs
 = 
	`isgøph
(
c
); ;

299 'l' : 
ªs
 = 
	`i¶owî
(
c
); ;

300 'p' : 
ªs
 = 
	`i•un˘
(
c
); ;

301 's' : 
ªs
 = 
	`is•a˚
(
c
); ;

302 'u' : 
ªs
 = 
	`isuµî
(
c
); ;

303 'w' : 
ªs
 = 
	`iß um
(
c
); ;

304 'x' : 
ªs
 = 
	`isxdigô
(
c
); ;

305 'z' : 
ªs
 = (
c
 == 0); ;

306 :  (
˛
 =
c
);

308  (
	`i¶owî
(
˛
Ë? 
ªs
 : !res);

309 
	}
}

312 
	$m©chbøckë˛ass
 (
c
, c⁄° *
p
, c⁄° *
ec
) {

313 
sig
 = 1;

314 i‡(*(
p
+1) == '^') {

315 
sig
 = 0;

316 
p
++;

318 ++
p
 < 
ec
) {

319 i‡(*
p
 =
L_ESC
) {

320 
p
++;

321 i‡(
	`m©ch_˛ass
(
c
, 
	`uch¨
(*
p
)))

322  
sig
;

324 i‡((*(
p
+1Ë='-'Ë&& (p+2 < 
ec
)) {

325 
p
+=2;

326 i‡(
	`uch¨
(*(
p
-2)Ë<
c
 && c <= uchar(*p))

327  
sig
;

329 i‡(
	`uch¨
(*
p
Ë=
c
Ë 
sig
;

331  !
sig
;

332 
	}
}

335 
	$sögÀm©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
,

336 c⁄° *
ï
) {

337 i‡(
s
 >
ms
->
§c_íd
)

340 
c
 = 
	`uch¨
(*
s
);

341 *
p
) {

343 
L_ESC
:  
	`m©ch_˛ass
(
c
, 
	`uch¨
(*(
p
+1)));

344 '[':  
	`m©chbøckë˛ass
(
c
, 
p
, 
ï
-1);

345 :  (
	`uch¨
(*
p
Ë=
c
);

348 
	}
}

351 c⁄° *
	$m©chbÆ™˚
 (
M©chSèã
 *
ms
, c⁄° *
s
,

352 c⁄° *
p
) {

353 i‡(
p
 >
ms
->
p_íd
 - 1)

354 
	`luaL_îr‹
(
ms
->
L
, "malformedÖattern (missingárgumentsÅo '%%b')");

355 i‡(*
s
 !*
p
Ë 
NULL
;

357 
b
 = *
p
;

358 
e
 = *(
p
+1);

359 
c⁄t
 = 1;

360 ++
s
 < 
ms
->
§c_íd
) {

361 i‡(*
s
 =
e
) {

362 i‡(--
c⁄t
 =0Ë 
s
+1;

364 i‡(*
s
 =
b
Ë
c⁄t
++;

367  
NULL
;

368 
	}
}

371 c⁄° *
	$max_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

372 c⁄° *
p
, c⁄° *
ï
) {

373 
±rdiff_t
 
i
 = 0;

374 
	`sögÀm©ch
(
ms
, 
s
 + 
i
, 
p
, 
ï
))

375 
i
++;

377 
i
>=0) {

378 c⁄° *
ªs
 = 
	`m©ch
(
ms
, (
s
+
i
), 
ï
+1);

379 i‡(
ªs
) Ñes;

380 
i
--;

382  
NULL
;

383 
	}
}

386 c⁄° *
	$mö_ex∑nd
 (
M©chSèã
 *
ms
, c⁄° *
s
,

387 c⁄° *
p
, c⁄° *
ï
) {

389 c⁄° *
ªs
 = 
	`m©ch
(
ms
, 
s
, 
ï
+1);

390 i‡(
ªs
 !
NULL
)

391  
ªs
;

392 i‡(
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
))

393 
s
++;

394  
NULL
;

396 
	}
}

399 c⁄° *
	$°¨t_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

400 c⁄° *
p
, 
wh©
) {

401 c⁄° *
ªs
;

402 
Àvñ
 = 
ms
->level;

403 i‡(
Àvñ
 >
LUA_MAXCAPTURES
Ë
	`luaL_îr‹
(
ms
->
L
, "too many captures");

404 
ms
->
ˇ±uª
[
Àvñ
].
öô
 = 
s
;

405 
ms
->
ˇ±uª
[
Àvñ
].
Àn
 = 
wh©
;

406 
ms
->
Àvñ
 =Üevel+1;

407 i‡((
ªs
=
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

408 
ms
->
Àvñ
--;

409  
ªs
;

410 
	}
}

413 c⁄° *
	$íd_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
,

414 c⁄° *
p
) {

415 
l
 = 
	`ˇ±uª_to_˛o£
(
ms
);

416 c⁄° *
ªs
;

417 
ms
->
ˇ±uª
[
l
].
Àn
 = 
s
 - ms->ˇ±uª[l].
öô
;

418 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
, 
p
)Ë=
NULL
)

419 
ms
->
ˇ±uª
[
l
].
Àn
 = 
CAP_UNFINISHED
;

420  
ªs
;

421 
	}
}

424 c⁄° *
	$m©ch_ˇ±uª
 (
M©chSèã
 *
ms
, c⁄° *
s
, 
l
) {

425 
size_t
 
Àn
;

426 
l
 = 
	`check_ˇ±uª
(
ms
,Ü);

427 
Àn
 = 
ms
->
ˇ±uª
[
l
].len;

428 i‡((
size_t
)(
ms
->
§c_íd
-
s
Ë>
Àn
 &&

429 
	`memcmp
(
ms
->
ˇ±uª
[
l
].
öô
, 
s
, 
Àn
) == 0)

430  
s
+
Àn
;

431  
NULL
;

432 
	}
}

435 c⁄° *
	$m©ch
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
p
) {

436 i‡(
ms
->
m©chdïth
-- == 0)

437 
	`luaL_îr‹
(
ms
->
L
, "patternÅoo complex");

438 
öô
:

439 i‡(
p
 !
ms
->
p_íd
) {

440 *
p
) {

442 i‡(*(
p
 + 1) == ')')

443 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 2, 
CAP_POSITION
);

445 
s
 = 
	`°¨t_ˇ±uª
(
ms
, s, 
p
 + 1, 
CAP_UNFINISHED
);

449 
s
 = 
	`íd_ˇ±uª
(
ms
, s, 
p
 + 1);

453 i‡((
p
 + 1Ë!
ms
->
p_íd
)

454 
dÊt
;

455 
s
 = (†=
ms
->
§c_íd
Ë? s : 
NULL
;

458 
L_ESC
: {

459 *(
p
 + 1)) {

461 
s
 = 
	`m©chbÆ™˚
(
ms
, s, 
p
 + 2);

462 i‡(
s
 !
NULL
) {

463 
p
 +4; 
öô
;

468 c⁄° *
ï
; 
¥evious
;

469 
p
 += 2;

470 i‡(*
p
 != '[')

471 
	`luaL_îr‹
(
ms
->
L
, "missing '['áfter '%%f' inÖattern");

472 
ï
 = 
	`˛as£nd
(
ms
, 
p
);

473 
¥evious
 = (
s
 =
ms
->
§c_öô
) ? '\0' : *(s - 1);

474 i‡(!
	`m©chbøckë˛ass
(
	`uch¨
(
¥evious
), 
p
, 
ï
 - 1) &&

475 
	`m©chbøckë˛ass
(
	`uch¨
(*
s
), 
p
, 
ï
 - 1)) {

476 
p
 = 
ï
; 
öô
;

478 
s
 = 
NULL
;

484 
s
 = 
	`m©ch_ˇ±uª
(
ms
, s, 
	`uch¨
(*(
p
 + 1)));

485 i‡(
s
 !
NULL
) {

486 
p
 +2; 
öô
;

490 : 
dÊt
;

494 : 
dÊt
: {

495 c⁄° *
ï
 = 
	`˛as£nd
(
ms
, 
p
);

497 i‡(!
	`sögÀm©ch
(
ms
, 
s
, 
p
, 
ï
)) {

498 i‡(*
ï
 == '*' || *ep == '?' || *ep == '-') {

499 
p
 = 
ï
 + 1; 
öô
;

502 
s
 = 
NULL
;

505 i‡(
ms
->
ƒï
-- == 0)

506 
	`luaL_îr‹
(
ms
->
L
, "patternÅoo complex");

507 *
ï
) {

509 c⁄° *
ªs
;

510 i‡((
ªs
 = 
	`m©ch
(
ms
, 
s
 + 1, 
ï
 + 1)Ë!
NULL
)

511 
s
 = 
ªs
;

513 
p
 = 
ï
 + 1; 
öô
;

518 
s
++;

521 
s
 = 
	`max_ex∑nd
(
ms
, s, 
p
, 
ï
);

524 
s
 = 
	`mö_ex∑nd
(
ms
, s, 
p
, 
ï
);

527 
s
++; 
p
 = 
ï
; 
öô
;

534 
ms
->
m©chdïth
++;

535  
s
;

536 
	}
}

540 c⁄° *
	$lmemföd
 (c⁄° *
s1
, 
size_t
 
l1
,

541 c⁄° *
s2
, 
size_t
 
l2
) {

542 i‡(
l2
 =0Ë 
s1
;

543 i‡(
l2
 > 
l1
Ë 
NULL
;

545 c⁄° *
öô
;

546 
l2
--;

547 
l1
 =Ü1-
l2
;

548 
l1
 > 0 && (
öô
 = (c⁄° *)
	`memchr
(
s1
, *
s2
,Ü1)Ë!
NULL
) {

549 
öô
++;

550 i‡(
	`memcmp
(
öô
, 
s2
+1, 
l2
) == 0)

551  
öô
-1;

553 
l1
 -
öô
-
s1
;

554 
s1
 = 
öô
;

557  
NULL
;

559 
	}
}

562 
	$push_⁄eˇ±uª
 (
M©chSèã
 *
ms
, 
i
, c⁄° *
s
,

563 c⁄° *
e
) {

564 i‡(
i
 >
ms
->
Àvñ
) {

565 i‡(
i
 == 0)

566 
	`lua_pushl°rög
(
ms
->
L
, 
s
, 
e
 - s);

568 
	`luaL_îr‹
(
ms
->
L
, "övÆid c≠tuª index %%%d", 
i
 + 1);

571 
±rdiff_t
 
l
 = 
ms
->
ˇ±uª
[
i
].
Àn
;

572 i‡(
l
 =
CAP_UNFINISHED
Ë
	`luaL_îr‹
(
ms
->
L
, "unfinished capture");

573 i‡(
l
 =
CAP_POSITION
)

574 
	`lua_pushöãgî
(
ms
->
L
, (ms->
ˇ±uª
[
i
].
öô
 - ms->
§c_öô
) + 1);

576 
	`lua_pushl°rög
(
ms
->
L
, ms->
ˇ±uª
[
i
].
öô
, 
l
);

578 
	}
}

581 
	$push_ˇ±uªs
 (
M©chSèã
 *
ms
, c⁄° *
s
, c⁄° *
e
) {

582 
i
;

583 
∆evñs
 = (
ms
->
Àvñ
 =0 && 
s
) ? 1 : ms->level;

584 
	`luaL_check°ack
(
ms
->
L
, 
∆evñs
, "too many captures");

585 
i
 = 0; i < 
∆evñs
; i++)

586 
	`push_⁄eˇ±uª
(
ms
, 
i
, 
s
, 
e
);

587  
∆evñs
;

588 
	}
}

592 
	$no•ecüls
 (c⁄° *
p
, 
size_t
 
l
) {

593 
size_t
 
u±o
 = 0;

595 i‡(
	`°Ωbrk
(
p
 + 
u±o
, 
SPECIALS
))

597 
u±o
 +
	`°æí
(
p
 + upto) + 1;

598 } 
u±o
 <
l
);

600 
	}
}

603 
	$¥ï°©e
 (
M©chSèã
 *
ms
, 
lua_Sèã
 *
L
,

604 c⁄° *
s
, 
size_t
 
ls
, c⁄° *
p
, size_à
Õ
) {

605 
ms
->
L
 = L;

606 
ms
->
m©chdïth
 = 
MAXCCALLS
;

607 
ms
->
§c_öô
 = 
s
;

608 
ms
->
§c_íd
 = 
s
 + 
ls
;

609 
ms
->
p_íd
 = 
p
 + 
Õ
;

610 i‡(
ls
 < (
MAX_SIZET
 - 
B_REPS
Ë/ 
A_REPS
)

611 
ms
->
ƒï
 = 
A_REPS
 * 
ls
 + 
B_REPS
;

613 
ms
->
ƒï
 = 
MAX_SIZET
;

614 
	}
}

617 
	$ª¥ï°©e
 (
M©chSèã
 *
ms
) {

618 
ms
->
Àvñ
 = 0;

619 
	`lua_as£π
(
ms
->
m©chdïth
 =
MAXCCALLS
);

620 
	}
}

623 
	$°r_föd_aux
 (
lua_Sèã
 *
L
, 
föd
) {

624 
size_t
 
ls
, 
Õ
;

625 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

626 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

627 
lua_I¡egî
 
öô
 = 
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ls
);

628 i‡(
öô
 < 1) init = 1;

629 i‡(
öô
 > (
lua_I¡egî
)
ls
 + 1) {

630 
	`lua_pushnû
(
L
);

634 i‡(
föd
 && (
	`lua_toboﬁón
(
L
, 4Ë|| 
	`no•ecüls
(
p
, 
Õ
))) {

636 c⁄° *
s2
 = 
	`lmemföd
(
s
 + 
öô
 - 1, 
ls
 - (
size_t
)öô + 1, 
p
, 
Õ
);

637 i‡(
s2
) {

638 
	`lua_pushöãgî
(
L
, (
s2
 - 
s
) + 1);

639 
	`lua_pushöãgî
(
L
, (
s2
 - 
s
Ë+ 
Õ
);

644 
M©chSèã
 
ms
;

645 c⁄° *
s1
 = 
s
 + 
öô
 - 1;

646 
™ch‹
 = (*
p
 == '^');

647 i‡(
™ch‹
) {

648 
p
++; 
Õ
--;

650 
	`¥ï°©e
(&
ms
, 
L
, 
s
, 
ls
, 
p
, 
Õ
);

652 c⁄° *
ªs
;

653 
	`ª¥ï°©e
(&
ms
);

654 i‡((
ªs
=
	`m©ch
(&
ms
, 
s1
, 
p
)Ë!
NULL
) {

655 i‡(
föd
) {

656 
	`lua_pushöãgî
(
L
, (
s1
 - 
s
) + 1);

657 
	`lua_pushöãgî
(
L
, 
ªs
 - 
s
);

658  
	`push_ˇ±uªs
(&
ms
, 
NULL
, 0) + 2;

661  
	`push_ˇ±uªs
(&
ms
, 
s1
, 
ªs
);

663 } 
s1
++ < 
ms
.
§c_íd
 && !
™ch‹
);

665 
	`lua_pushnû
(
L
);

667 
	}
}

670 
	$°r_föd
 (
lua_Sèã
 *
L
) {

671  
	`°r_föd_aux
(
L
, 1);

672 
	}
}

675 
	$°r_m©ch
 (
lua_Sèã
 *
L
) {

676  
	`°r_föd_aux
(
L
, 0);

677 
	}
}

681 
	sGM©chSèã
 {

682 c⁄° *
	m§c
;

683 c⁄° *
	mp
;

684 
M©chSèã
 
	mms
;

685 } 
	tGM©chSèã
;

688 
	$gm©ch_aux
 (
lua_Sèã
 *
L
) {

689 
GM©chSèã
 *
gm
 = (GM©chSèã *)
	`lua_tou£rd©a
(
L
, 
	`lua_upvÆueödex
(3));

690 c⁄° *
§c
;

691 
§c
 = 
gm
->§c; sr¯<gm->
ms
.
§c_íd
; src++) {

692 c⁄° *
e
;

693 
	`ª¥ï°©e
(&
gm
->
ms
);

694 i‡((
e
 = 
	`m©ch
(&
gm
->
ms
, 
§c
, gm->
p
)Ë!
NULL
) {

695 i‡(
e
 =
§c
)

696 
gm
->
§c
 =src + 1;

698 
gm
->
§c
 = 
e
;

699  
	`push_ˇ±uªs
(&
gm
->
ms
, 
§c
, 
e
);

703 
	}
}

706 
	$gm©ch
 (
lua_Sèã
 *
L
) {

707 
size_t
 
ls
, 
Õ
;

708 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
ls
);

709 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

710 
GM©chSèã
 *
gm
;

711 
	`lua_£â›
(
L
, 2);

712 
gm
 = (
GM©chSèã
 *)
	`lua_√wu£rd©a
(
L
, (GMatchState));

713 
	`¥ï°©e
(&
gm
->
ms
, 
L
, 
s
, 
ls
, 
p
, 
Õ
);

714 
gm
->
§c
 = 
s
; gm->
p
 =Ö;

715 
	`lua_pushc˛osuª
(
L
, 
gm©ch_aux
, 3);

717 
	}
}

720 
	$add_s
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

721 c⁄° *
e
) {

722 
size_t
 
l
, 
i
;

723 
lua_Sèã
 *
L
 = 
ms
->L;

724 c⁄° *
√ws
 = 
	`lua_tﬁ°rög
(
L
, 3, &
l
);

725 
i
 = 0; i < 
l
; i++) {

726 i‡(
√ws
[
i
] !
L_ESC
)

727 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

729 
i
++;

730 i‡(!
	`isdigô
(
	`uch¨
(
√ws
[
i
]))) {

731 i‡(
√ws
[
i
] !
L_ESC
)

732 
	`luaL_îr‹
(
L
, "övÆid u£ o‡'%c' i¿ª∂a˚míà°rög", 
L_ESC
);

733 
	`luaL_addch¨
(
b
, 
√ws
[
i
]);

735 i‡(
√ws
[
i
] == '0')

736 
	`luaL_addl°rög
(
b
, 
s
, 
e
 - s);

738 
	`push_⁄eˇ±uª
(
ms
, 
√ws
[
i
] - '1', 
s
, 
e
);

739 
	`luaL_tﬁ°rög
(
L
, -1, 
NULL
);

740 
	`lua_ªmove
(
L
, -2);

741 
	`luaL_addvÆue
(
b
);

745 
	}
}

748 
	$add_vÆue
 (
M©chSèã
 *
ms
, 
luaL_Buf„r
 *
b
, c⁄° *
s
,

749 c⁄° *
e
, 
å
) {

750 
lua_Sèã
 *
L
 = 
ms
->L;

751 
å
) {

752 
LUA_TFUNCTION
: {

753 
n
;

754 
	`lua_pushvÆue
(
L
, 3);

755 
n
 = 
	`push_ˇ±uªs
(
ms
, 
s
, 
e
);

756 
	`lua_ˇŒ
(
L
, 
n
, 1);

759 
LUA_TTABLE
: {

760 
	`push_⁄eˇ±uª
(
ms
, 0, 
s
, 
e
);

761 
	`lua_gëèbÀ
(
L
, 3);

765 
	`add_s
(
ms
, 
b
, 
s
, 
e
);

769 i‡(!
	`lua_toboﬁón
(
L
, -1)) {

770 
	`lua_p›
(
L
, 1);

771 
	`lua_pushl°rög
(
L
, 
s
, 
e
 - s);

773 i‡(!
	`lua_is°rög
(
L
, -1))

774 
	`luaL_îr‹
(
L
, "övÆidÑïœ˚míàvÆuê◊ %s)", 
	`luaL_ty≥«me
(L, -1));

775 
	`luaL_addvÆue
(
b
);

776 
	}
}

779 
	$°r_gsub
 (
lua_Sèã
 *
L
) {

780 
size_t
 
§˛
, 
Õ
;

781 c⁄° *
§c
 = 
	`luaL_checkl°rög
(
L
, 1, &
§˛
);

782 c⁄° *
p
 = 
	`luaL_checkl°rög
(
L
, 2, &
Õ
);

783 
å
 = 
	`lua_ty≥
(
L
, 3);

784 
lua_I¡egî
 
max_s
 = 
	`luaL_›töãgî
(
L
, 4, 
§˛
 + 1);

785 
™ch‹
 = (*
p
 == '^');

786 
lua_I¡egî
 
n
 = 0;

787 
M©chSèã
 
ms
;

788 
luaL_Buf„r
 
b
;

789 
	`luaL_¨gcheck
(
L
, 
å
 =
LUA_TNUMBER
 ||Å∏=
LUA_TSTRING
 ||

790 
å
 =
LUA_TFUNCTION
 ||Å∏=
LUA_TTABLE
, 3,

792 
	`luaL_bufföô
(
L
, &
b
);

793 i‡(
™ch‹
) {

794 
p
++; 
Õ
--;

796 
	`¥ï°©e
(&
ms
, 
L
, 
§c
, 
§˛
, 
p
, 
Õ
);

797 
n
 < 
max_s
) {

798 c⁄° *
e
;

799 
	`ª¥ï°©e
(&
ms
);

800 i‡((
e
 = 
	`m©ch
(&
ms
, 
§c
, 
p
)Ë!
NULL
) {

801 
n
++;

802 
	`add_vÆue
(&
ms
, &
b
, 
§c
, 
e
, 
å
);

804 i‡(
e
 &&É>
§c
)

805 
§c
 = 
e
;

806 i‡(
§c
 < 
ms
.
§c_íd
)

807 
	`luaL_addch¨
(&
b
, *
§c
++);

809 i‡(
™ch‹
) ;

811 
	`luaL_addl°rög
(&
b
, 
§c
, 
ms
.
§c_íd
-src);

812 
	`luaL_pushªsu…
(&
b
);

813 
	`lua_pushöãgî
(
L
, 
n
);

815 
	}
}

827 #i‡!
deföed
(
lua_numbî2°rx
)

833 
	~<loˇÀ.h
>

834 
	~<m©h.h
>

836 
	#SIZELENMOD
 ((
LUA_NUMBER_FRMLEN
)/())

	)

845 
	#L_NBFD
 ((
	`l_m©hlim
(
MANT_DIG
Ë- 1)%4 + 1)

	)

851 
lua_Numbî
 
	$adddigô
 (*
buff
, 
n
, 
lua_Numbî
 
x
) {

852 
lua_Numbî
 
dd
 = 
	`l_m©h›
(
Êo‹
)(
x
);

853 
d
 = ()
dd
;

854 
buff
[
n
] = (
d
 < 10 ? d + '0' : d - 10 + 'a');

855  
x
 - 
dd
;

856 
	}
}

859 
	$num2°øux
 (*
buff
, 
sz
, 
lua_Numbî
 
x
) {

860 i‡(
x
 !x || x =
HUGE_VAL
 || x == -HUGE_VAL)

861  
	`l_•rötf
(
buff
, 
sz
, 
LUA_NUMBER_FMT
, 
x
);

862 i‡(
x
 == 0) {

864  
	`l_•rötf
(
buff
, 
sz
, 
LUA_NUMBER_FMT
 "x0p+0", 
x
);

867 
e
;

868 
lua_Numbî
 
m
 = 
	`l_m©h›
(
‰exp
)(
x
, &
e
);

869 
n
 = 0;

870 i‡(
m
 < 0) {

871 
buff
[
n
++] = '-';

872 
m
 = -m;

874 
buff
[
n
++] = '0'; buff[n++] = 'x';

875 
m
 = 
	`adddigô
(
buff
, 
n
++, m * (1 << 
L_NBFD
));

876 
e
 -
L_NBFD
;

877 i‡(
m
 > 0) {

878 
buff
[
n
++] = 
	`lua_gëloˇÀde˝oöt
();

880 
m
 = 
	`adddigô
(
buff
, 
n
++, m * 16);

881 } 
m
 > 0);

883 
n
 +
	`l_•rötf
(
buff
 +Ç, 
sz
 -Ç, "p%+d", 
e
);

884 
	`lua_as£π
(
n
 < 
sz
);

885  
n
;

887 
	}
}

890 
	$lua_numbî2°rx
 (
lua_Sèã
 *
L
, *
buff
, 
sz
,

891 c⁄° *
fmt
, 
lua_Numbî
 
x
) {

892 
n
 = 
	`num2°øux
(
buff
, 
sz
, 
x
);

893 i‡(
fmt
[
SIZELENMOD
] == 'A') {

894 
i
;

895 
i
 = 0; i < 
n
; i++)

896 
buff
[
i
] = 
	`touµî
(
	`uch¨
(buff[i]));

898 i‡(
fmt
[
SIZELENMOD
] != 'a')

899 
	`luaL_îr‹
(
L
, "modifiers for format '%%a'/'%%A'Çot implemented");

900  
n
;

901 
	}
}

913 
	#MAX_ITEM
 (120 + 
	`l_m©hlim
(
MAX_10_EXP
))

	)

917 
	#FLAGS
 "-+ #0"

	)

922 
	#MAX_FORMAT
 32

	)

925 
	$addquŸed
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
¨g
) {

926 
size_t
 
l
;

927 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
l
);

928 
	`luaL_addch¨
(
b
, '"');

929 
l
--) {

930 i‡(*
s
 == '"' || *s == '\\' || *s == '\n') {

931 
	`luaL_addch¨
(
b
, '\\');

932 
	`luaL_addch¨
(
b
, *
s
);

934 i‡(*
s
 ='\0' || 
	`is˙ål
(
	`uch¨
(*s))) {

935 
buff
[10];

936 i‡(!
	`isdigô
(
	`uch¨
(*(
s
+1))))

937 
	`l_•rötf
(
buff
, (buff), "\\%d", ()
	`uch¨
(*
s
));

939 
	`l_•rötf
(
buff
, (buff), "\\%03d", ()
	`uch¨
(*
s
));

940 
	`luaL_add°rög
(
b
, 
buff
);

943 
	`luaL_addch¨
(
b
, *
s
);

944 
s
++;

946 
	`luaL_addch¨
(
b
, '"');

947 
	}
}

949 c⁄° *
	$sˇnf‹m©
 (
lua_Sèã
 *
L
, c⁄° *
°r‰mt
, *
f‹m
) {

950 c⁄° *
p
 = 
°r‰mt
;

951 *
p
 !'\0' && 
	`°rchr
(
FLAGS
, *pË!
NULL
)Ö++;

952 i‡((
size_t
)(
p
 - 
°r‰mt
Ë>(
FLAGS
)/())

953 
	`luaL_îr‹
(
L
, "invalid format (repeated flags)");

954 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

955 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

956 i‡(*
p
 == '.') {

957 
p
++;

958 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

959 i‡(
	`isdigô
(
	`uch¨
(*
p
)))Ö++;

961 i‡(
	`isdigô
(
	`uch¨
(*
p
)))

962 
	`luaL_îr‹
(
L
, "invalid format (width orÖrecisionÅooÜong)");

963 *(
f‹m
++) = '%';

964 
	`mem˝y
(
f‹m
, 
°r‰mt
, ((
p
 - strfrmt) + 1) * ());

965 
f‹m
 +(
p
 - 
°r‰mt
) + 1;

966 *
f‹m
 = '\0';

967  
p
;

968 
	}
}

974 
	$addÀnmod
 (*
f‹m
, c⁄° *
Ànmod
) {

975 
size_t
 
l
 = 
	`°æí
(
f‹m
);

976 
size_t
 
lm
 = 
	`°æí
(
Ànmod
);

977 
•ec
 = 
f‹m
[
l
 - 1];

978 
	`°r˝y
(
f‹m
 + 
l
 - 1, 
Ànmod
);

979 
f‹m
[
l
 + 
lm
 - 1] = 
•ec
;

980 
f‹m
[
l
 + 
lm
] = '\0';

981 
	}
}

984 
	$°r_f‹m©
 (
lua_Sèã
 *
L
) {

985 
t›
 = 
	`lua_gët›
(
L
);

986 
¨g
 = 1;

987 
size_t
 
sÊ
;

988 c⁄° *
°r‰mt
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
sÊ
);

989 c⁄° *
°r‰mt_íd
 = 
°r‰mt
+
sÊ
;

990 
luaL_Buf„r
 
b
;

991 
	`luaL_bufföô
(
L
, &
b
);

992 
°r‰mt
 < 
°r‰mt_íd
) {

993 i‡(*
°r‰mt
 !
L_ESC
)

994 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

995 i‡(*++
°r‰mt
 =
L_ESC
)

996 
	`luaL_addch¨
(&
b
, *
°r‰mt
++);

998 
f‹m
[
MAX_FORMAT
];

999 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
MAX_ITEM
);

1000 
nb
 = 0;

1001 i‡(++
¨g
 > 
t›
)

1002 
	`luaL_¨gîr‹
(
L
, 
¨g
, "no value");

1003 
°r‰mt
 = 
	`sˇnf‹m©
(
L
, så‰mt, 
f‹m
);

1004 *
°r‰mt
++) {

1006 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, ()
	`luaL_checköãgî
(
L
, 
¨g
));

1011 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1012 
	`addÀnmod
(
f‹m
, 
LUA_INTEGER_FRMLEN
);

1013 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, 
n
);

1017 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

1018 
nb
 = 
	`lua_numbî2°rx
(
L
, 
buff
, 
MAX_ITEM
, 
f‹m
,

1019 
	`luaL_checknumbî
(
L
, 
¨g
));

1023 
	`addÀnmod
(
f‹m
, 
LUA_NUMBER_FRMLEN
);

1024 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, 
	`luaL_checknumbî
(
L
, 
¨g
));

1028 
	`addquŸed
(
L
, &
b
, 
¨g
);

1032 
size_t
 
l
;

1033 c⁄° *
s
 = 
	`luaL_tﬁ°rög
(
L
, 
¨g
, &
l
);

1034 i‡(
f‹m
[2] == '\0')

1035 
	`luaL_addvÆue
(&
b
);

1037 
	`luaL_¨gcheck
(
L
, 
l
 =
	`°æí
(
s
), 
¨g
, "string contains zeros");

1038 i‡(!
	`°rchr
(
f‹m
, '.'Ë&& 
l
 >= 100) {

1040 
	`luaL_addvÆue
(&
b
);

1043 
nb
 = 
	`l_•rötf
(
buff
, 
MAX_ITEM
, 
f‹m
, 
s
);

1044 
	`lua_p›
(
L
, 1);

1050  
	`luaL_îr‹
(
L
, "invalid option '%%%c'Åo 'format'",

1051 *(
°r‰mt
 - 1));

1054 
	`lua_as£π
(
nb
 < 
MAX_ITEM
);

1055 
	`luaL_addsize
(&
b
, 
nb
);

1058 
	`luaL_pushªsu…
(&
b
);

1060 
	}
}

1073 #i‡!
deföed
(
LUA_PACKPADBYTE
)

1074 
	#LUA_PACKPADBYTE
 0x00

	)

1078 
	#MAXINTSIZE
 16

	)

1081 
	#NB
 
CHAR_BIT


	)

1084 
	#MC
 ((1 << 
NB
Ë- 1)

	)

1087 
	#SZINT
 (()(
lua_I¡egî
))

	)

1092 
	mdummy
;

1093 
	mlôée
;

1094 } 
	g«tivìndün
 = {1};

1098 
	scD
 {

1099 
	mc
;

1100 uni⁄ { 
	md
; *
	mp
; 
lua_I¡egî
 
	mi
; 
lua_Numbî
 
	mn
; } 
	mu
;

1103 
	#MAXALIGN
 (
	`off£tof
(
cD
, 
u
))

	)

1109 
	uFty≥s
 {

1110 
	mf
;

1111 
	md
;

1112 
lua_Numbî
 
	mn
;

1113 
	mbuff
[5 * (
lua_Numbî
)];

1114 } 
	tFty≥s
;

1120 
	sHódî
 {

1121 
lua_Sèã
 *
	mL
;

1122 
	mi¶ôée
;

1123 
	mmaxÆign
;

1124 } 
	tHódî
;

1130 
	eKO±i⁄
 {

1131 
	mKöt
,

1132 
	mKuöt
,

1133 
	mKÊﬂt
,

1134 
	mKch¨
,

1135 
	mK°rög
,

1136 
	mKz°r
,

1137 
	mK∑ddög
,

1138 
	mK∑ddÆign
,

1139 
	mKn›


1140 } 
	tKO±i⁄
;

1147 
	$digô
 (
c
Ë{  '0' <¯&& c <'9'; 
	}
}

1149 
	$gënum
 (c⁄° **
fmt
, 
df
) {

1150 i‡(!
	`digô
(**
fmt
))

1151  
df
;

1153 
a
 = 0;

1155 
a
 =á*10 + (*((*
fmt
)++) - '0');

1156 } 
	`digô
(**
fmt
Ë&& 
a
 <(()
MAXSIZE
 - 9)/10);

1157  
a
;

1159 
	}
}

1166 
	$gënumlimô
 (
Hódî
 *
h
, c⁄° **
fmt
, 
df
) {

1167 
sz
 = 
	`gënum
(
fmt
, 
df
);

1168 i‡(
sz
 > 
MAXINTSIZE
 || sz <= 0)

1169 
	`luaL_îr‹
(
h
->
L
, "integral size (%d) out ofÜimits [1,%d]",

1170 
sz
, 
MAXINTSIZE
);

1171  
sz
;

1172 
	}
}

1178 
	$öôhódî
 (
lua_Sèã
 *
L
, 
Hódî
 *
h
) {

1179 
h
->
L
 = L;

1180 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
;

1181 
h
->
maxÆign
 = 1;

1182 
	}
}

1188 
KO±i⁄
 
	$gë›ti⁄
 (
Hódî
 *
h
, c⁄° **
fmt
, *
size
) {

1189 
›t
 = *((*
fmt
)++);

1190 *
size
 = 0;

1191 
›t
) {

1192 'b': *
size
 = ();  
Köt
;

1193 'B': *
size
 = ();  
Kuöt
;

1194 'h': *
size
 = ();  
Köt
;

1195 'H': *
size
 = ();  
Kuöt
;

1196 'l': *
size
 = ();  
Köt
;

1197 'L': *
size
 = ();  
Kuöt
;

1198 'j': *
size
 = (
lua_I¡egî
);  
Köt
;

1199 'J': *
size
 = (
lua_I¡egî
);  
Kuöt
;

1200 'T': *
size
 = (
size_t
);  
Kuöt
;

1201 'f': *
size
 = ();  
KÊﬂt
;

1202 'd': *
size
 = ();  
KÊﬂt
;

1203 'n': *
size
 = (
lua_Numbî
);  
KÊﬂt
;

1204 'i': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Köt
;

1205 'I': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, ());  
Kuöt
;

1206 's': *
size
 = 
	`gënumlimô
(
h
, 
fmt
, (
size_t
));  
K°rög
;

1208 *
size
 = 
	`gënum
(
fmt
, -1);

1209 i‡(*
size
 == -1)

1210 
	`luaL_îr‹
(
h
->
L
, "missing size for format option 'c'");

1211  
Kch¨
;

1212 'z':  
Kz°r
;

1213 'x': *
size
 = 1;  
K∑ddög
;

1214 'X':  
K∑ddÆign
;

1216 '<': 
h
->
i¶ôée
 = 1; ;

1217 '>': 
h
->
i¶ôée
 = 0; ;

1218 '=': 
h
->
i¶ôée
 = 
«tivìndün
.
lôée
; ;

1219 '!': 
h
->
maxÆign
 = 
	`gënumlimô
(h, 
fmt
, 
MAXALIGN
); ;

1220 : 
	`luaL_îr‹
(
h
->
L
, "övÆid f‹m© o±i⁄ '%c'", 
›t
);

1222  
Kn›
;

1223 
	}
}

1235 
KO±i⁄
 
	$gëdëaûs
 (
Hódî
 *
h
, 
size_t
 
tŸÆsize
,

1236 c⁄° **
fmt
, *
psize
, *
¡ﬂlign
) {

1237 
KO±i⁄
 
›t
 = 
	`gë›ti⁄
(
h
, 
fmt
, 
psize
);

1238 
Æign
 = *
psize
;

1239 i‡(
›t
 =
K∑ddÆign
) {

1240 i‡(**
fmt
 ='\0' || 
	`gë›ti⁄
(
h
, fmt, &
Æign
Ë=
Kch¨
 ||álign == 0)

1241 
	`luaL_¨gîr‹
(
h
->
L
, 1, "invalidÇext option for option 'X'");

1243 i‡(
Æign
 <1 || 
›t
 =
Kch¨
)

1244 *
¡ﬂlign
 = 0;

1246 i‡(
Æign
 > 
h
->
maxÆign
)

1247 
Æign
 = 
h
->
maxÆign
;

1248 i‡((
Æign
 & (align - 1)) != 0)

1249 
	`luaL_¨gîr‹
(
h
->
L
, 1, "formatásks forálignmentÇotÖower of 2");

1250 *
¡ﬂlign
 = (
Æign
 - ()(
tŸÆsize
 & (align - 1))) & (align - 1);

1252  
›t
;

1253 
	}
}

1262 
	$∑cköt
 (
luaL_Buf„r
 *
b
, 
lua_Unsig√d
 
n
,

1263 
i¶ôée
, 
size
, 
√g
) {

1264 *
buff
 = 
	`luaL_¥ïbuffsize
(
b
, 
size
);

1265 
i
;

1266 
buff
[
i¶ôée
 ? 0 : 
size
 - 1] = ()(
n
 & 
MC
);

1267 
i
 = 1; i < 
size
; i++) {

1268 
n
 >>
NB
;

1269 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()(
n
 & 
MC
);

1271 i‡(
√g
 && 
size
 > 
SZINT
) {

1272 
i
 = 
SZINT
; i < 
size
; i++)

1273 
buff
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] = ()
MC
;

1275 
	`luaL_addsize
(
b
, 
size
);

1276 
	}
}

1283 
	$c›ywôhídün
 (vﬁ©ûê*
de°
, vﬁ©ûêc⁄° *
§c
,

1284 
size
, 
i¶ôée
) {

1285 i‡(
i¶ôée
 =
«tivìndün
.
lôée
) {

1286 
size
-- != 0)

1287 *(
de°
++Ë*(
§c
++);

1290 
de°
 +
size
 - 1;

1291 
size
-- != 0)

1292 *(
de°
--Ë*(
§c
++);

1294 
	}
}

1297 
	$°r_∑ck
 (
lua_Sèã
 *
L
) {

1298 
luaL_Buf„r
 
b
;

1299 
Hódî
 
h
;

1300 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1301 
¨g
 = 1;

1302 
size_t
 
tŸÆsize
 = 0;

1303 
	`öôhódî
(
L
, &
h
);

1304 
	`lua_pushnû
(
L
);

1305 
	`luaL_bufföô
(
L
, &
b
);

1306 *
fmt
 != '\0') {

1307 
size
, 
¡ﬂlign
;

1308 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1309 
tŸÆsize
 +
¡ﬂlign
 + 
size
;

1310 
¡ﬂlign
-- > 0)

1311 
	`luaL_addch¨
(&
b
, 
LUA_PACKPADBYTE
);

1312 
¨g
++;

1313 
›t
) {

1314 
Köt
: {

1315 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1316 i‡(
size
 < 
SZINT
) {

1317 
lua_I¡egî
 
lim
 = (lua_I¡egî)1 << ((
size
 * 
NB
) - 1);

1318 
	`luaL_¨gcheck
(
L
, -
lim
 <
n
 &&Ç <Üim, 
¨g
, "integer overflow");

1320 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, (n < 0));

1323 
Kuöt
: {

1324 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

1325 i‡(
size
 < 
SZINT
)

1326 
	`luaL_¨gcheck
(
L
, (
lua_Unsig√d
)
n
 < (÷ua_Unsig√d)1 << (
size
 * 
NB
)),

1327 
¨g
, "unsigned overflow");

1328 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
n
, 
h
.
i¶ôée
, 
size
, 0);

1331 
KÊﬂt
: {

1332 vﬁ©ûê
Fty≥s
 
u
;

1333 *
buff
 = 
	`luaL_¥ïbuffsize
(&
b
, 
size
);

1334 
lua_Numbî
 
n
 = 
	`luaL_checknumbî
(
L
, 
¨g
);

1335 i‡(
size
 =(
u
.
f
)Ëu.‡()
n
;

1336 i‡(
size
 =(
u
.
d
)Ëu.d = ()
n
;

1337 
u
.
n
 =Ç;

1339 
	`c›ywôhídün
(
buff
, 
u
.buff, 
size
, 
h
.
i¶ôée
);

1340 
	`luaL_addsize
(&
b
, 
size
);

1343 
Kch¨
: {

1344 
size_t
 
Àn
;

1345 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1346 i‡((
size_t
)
size
 <
Àn
)

1347 
	`luaL_addl°rög
(&
b
, 
s
, 
size
);

1349 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1350 
Àn
++ < (
size_t
)
size
)

1351 
	`luaL_addch¨
(&
b
, 
LUA_PACKPADBYTE
);

1355 
K°rög
: {

1356 
size_t
 
Àn
;

1357 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1358 
	`luaL_¨gcheck
(
L
, 
size
 >()(
size_t
) ||

1359 
Àn
 < ((
size_t
)1 << (
size
 * 
NB
)),

1360 
¨g
, "stringÜength doesÇot fit in given size");

1361 
	`∑cköt
(&
b
, (
lua_Unsig√d
)
Àn
, 
h
.
i¶ôée
, 
size
, 0);

1362 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1363 
tŸÆsize
 +
Àn
;

1366 
Kz°r
: {

1367 
size_t
 
Àn
;

1368 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 
¨g
, &
Àn
);

1369 
	`luaL_¨gcheck
(
L
, 
	`°æí
(
s
Ë=
Àn
, 
¨g
, "string contains zeros");

1370 
	`luaL_addl°rög
(&
b
, 
s
, 
Àn
);

1371 
	`luaL_addch¨
(&
b
, '\0');

1372 
tŸÆsize
 +
Àn
 + 1;

1375 
K∑ddög
: 
	`luaL_addch¨
(&
b
, 
LUA_PACKPADBYTE
);

1376 
K∑ddÆign
: 
Kn›
:

1377 
¨g
--;

1381 
	`luaL_pushªsu…
(&
b
);

1383 
	}
}

1386 
	$°r_∑cksize
 (
lua_Sèã
 *
L
) {

1387 
Hódî
 
h
;

1388 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1389 
size_t
 
tŸÆsize
 = 0;

1390 
	`öôhódî
(
L
, &
h
);

1391 *
fmt
 != '\0') {

1392 
size
, 
¡ﬂlign
;

1393 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
tŸÆsize
, &
fmt
, &
size
, &
¡ﬂlign
);

1394 
size
 +
¡ﬂlign
;

1395 
	`luaL_¨gcheck
(
L
, 
tŸÆsize
 <
MAXSIZE
 - 
size
, 1,

1397 
tŸÆsize
 +
size
;

1398 
›t
) {

1399 
K°rög
:

1400 
Kz°r
:

1401 
	`luaL_¨gîr‹
(
L
, 1, "variable-length format");

1406 
	`lua_pushöãgî
(
L
, (
lua_I¡egî
)
tŸÆsize
);

1408 
	}
}

1419 
lua_I¡egî
 
	$u≈acköt
 (
lua_Sèã
 *
L
, c⁄° *
°r
,

1420 
i¶ôée
, 
size
, 
issig√d
) {

1421 
lua_Unsig√d
 
ªs
 = 0;

1422 
i
;

1423 
limô
 = (
size
 <
SZINT
) ? size : SZINT;

1424 
i
 = 
limô
 - 1; i >= 0; i--) {

1425 
ªs
 <<
NB
;

1426 
ªs
 |(
lua_Unsig√d
)()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i];

1428 i‡(
size
 < 
SZINT
) {

1429 i‡(
issig√d
) {

1430 
lua_Unsig√d
 
mask
 = (lua_Unsig√d)1 << (
size
*
NB
 - 1);

1431 
ªs
 = (‘e†^ 
mask
) - mask);

1434 i‡(
size
 > 
SZINT
) {

1435 
mask
 = (!
issig√d
 || (
lua_I¡egî
)
ªs
 >0Ë? 0 : 
MC
;

1436 
i
 = 
limô
; i < 
size
; i++) {

1437 i‡(()
°r
[
i¶ôée
 ? 
i
 : 
size
 - 1 - i] !
mask
)

1438 
	`luaL_îr‹
(
L
, "%d-byã i¡egî d€†nŸ fô i¡ÿLu®I¡egî", 
size
);

1441  (
lua_I¡egî
)
ªs
;

1442 
	}
}

1445 
	$°r_u≈ack
 (
lua_Sèã
 *
L
) {

1446 
Hódî
 
h
;

1447 c⁄° *
fmt
 = 
	`luaL_check°rög
(
L
, 1);

1448 
size_t
 
ld
;

1449 c⁄° *
d©a
 = 
	`luaL_checkl°rög
(
L
, 2, &
ld
);

1450 
size_t
 
pos
 = (size_t)
	`po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 1), 
ld
) - 1;

1451 
n
 = 0;

1452 
	`luaL_¨gcheck
(
L
, 
pos
 <
ld
, 3, "initialÖosition out of string");

1453 
	`öôhódî
(
L
, &
h
);

1454 *
fmt
 != '\0') {

1455 
size
, 
¡ﬂlign
;

1456 
KO±i⁄
 
›t
 = 
	`gëdëaûs
(&
h
, 
pos
, &
fmt
, &
size
, &
¡ﬂlign
);

1457 i‡((
size_t
)
¡ﬂlign
 + 
size
 > ~
pos
 ||Öo†+Çtﬂlig¿+ sizê> 
ld
)

1458 
	`luaL_¨gîr‹
(
L
, 2, "data stringÅoo short");

1459 
pos
 +
¡ﬂlign
;

1461 
	`luaL_check°ack
(
L
, 2, "too manyÑesults");

1462 
n
++;

1463 
›t
) {

1464 
Köt
:

1465 
Kuöt
: {

1466 
lua_I¡egî
 
ªs
 = 
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
,

1467 (
›t
 =
Köt
));

1468 
	`lua_pushöãgî
(
L
, 
ªs
);

1471 
KÊﬂt
: {

1472 vﬁ©ûê
Fty≥s
 
u
;

1473 
lua_Numbî
 
num
;

1474 
	`c›ywôhídün
(
u
.
buff
, 
d©a
 + 
pos
, 
size
, 
h
.
i¶ôée
);

1475 i‡(
size
 =(
u
.
f
)Ë
num
 = (
lua_Numbî
)u.f;

1476 i‡(
size
 =(
u
.
d
)Ë
num
 = (
lua_Numbî
)u.d;

1477 
num
 = 
u
.
n
;

1478 
	`lua_pushnumbî
(
L
, 
num
);

1481 
Kch¨
: {

1482 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
size
);

1485 
K°rög
: {

1486 
size_t
 
Àn
 = (size_t)
	`u≈acköt
(
L
, 
d©a
 + 
pos
, 
h
.
i¶ôée
, 
size
, 0);

1487 
	`luaL_¨gcheck
(
L
, 
pos
 + 
Àn
 + 
size
 <
ld
, 2, "data stringÅoo short");

1488 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
 + 
size
, 
Àn
);

1489 
pos
 +
Àn
;

1492 
Kz°r
: {

1493 
size_t
 
Àn
 = ()
	`°æí
(
d©a
 + 
pos
);

1494 
	`lua_pushl°rög
(
L
, 
d©a
 + 
pos
, 
Àn
);

1495 
pos
 +
Àn
 + 1;

1498 
K∑ddÆign
: 
K∑ddög
: 
Kn›
:

1499 
n
--;

1502 
pos
 +
size
;

1504 
	`lua_pushöãgî
(
L
, 
pos
 + 1);

1505  
n
 + 1;

1506 
	}
}

1511 c⁄° 
luaL_Reg
 
	g°æib
[] = {

1512 {"byã", 
°r_byã
},

1513 {"ch¨", 
°r_ch¨
},

1514 {"dump", 
°r_dump
},

1515 {"föd", 
°r_föd
},

1516 {"f‹m©", 
°r_f‹m©
},

1517 {"gm©ch", 
gm©ch
},

1518 {"gsub", 
°r_gsub
},

1519 {"Àn", 
°r_Àn
},

1520 {"lowî", 
°r_lowî
},

1521 {"m©ch", 
°r_m©ch
},

1522 {"ªp", 
°r_ªp
},

1523 {"ªvî£", 
°r_ªvî£
},

1524 {"sub", 
°r_sub
},

1525 {"uµî", 
°r_uµî
},

1526 {"∑ck", 
°r_∑ck
},

1527 {"∑cksize", 
°r_∑cksize
},

1528 {"u≈ack", 
°r_u≈ack
},

1529 {
NULL
, NULL}

1533 
	$¸óãmë©abÀ
 (
lua_Sèã
 *
L
) {

1534 
	`lua_¸óãèbÀ
(
L
, 0, 1);

1535 
	`lua_pushlôîÆ
(
L
, "");

1536 
	`lua_pushvÆue
(
L
, -2);

1537 
	`lua_£tmë©abÀ
(
L
, -2);

1538 
	`lua_p›
(
L
, 1);

1539 
	`lua_pushvÆue
(
L
, -2);

1540 
	`lua_£tfõld
(
L
, -2, "__index");

1541 
	`lua_p›
(
L
, 1);

1542 
	}
}

1548 
LUAMOD_API
 
	$lua›í_°rög
 (
lua_Sèã
 *
L
) {

1549 
	`luaL_√wlib
(
L
, 
°æib
);

1550 
	`¸óãmë©abÀ
(
L
);

1552 
	}
}

	@lib/lua/src/ltable.c

7 
	#…abÀ_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

26 
	~<m©h.h
>

27 
	~<limôs.h
>

29 
	~"lua.h
"

31 
	~"ldebug.h
"

32 
	~"ldo.h
"

33 
	~"lgc.h
"

34 
	~"lmem.h
"

35 
	~"lobje˘.h
"

36 
	~"l°©e.h
"

37 
	~"l°rög.h
"

38 
	~"…abÀ.h
"

39 
	~"lvm.h
"

46 
	#MAXABITS
 
	`ˇ°_öt
((Ë* 
CHAR_BIT
 - 1)

	)

47 
	#MAXASIZE
 (1u << 
MAXABITS
)

	)

55 
	#MAXHBITS
 (
MAXABITS
 - 1)

	)

58 
	#hashpow2
(
t
,
n
Ë(
	`gnode
—, 
	`lmod
(“), 
	`sizíode
—))))

	)

60 
	#hash°r
(
t
,
°r
Ë
	`hashpow2
—, (°r)->
hash
)

	)

61 
	#hashboﬁón
(
t
,
p
Ë
	`hashpow2
—,Ö)

	)

62 
	#hashöt
(
t
,
i
Ë
	`hashpow2
—, i)

	)

69 
	#hashmod
(
t
,
n
Ë(
	`gnode
—, (“Ë% ((
	`sizíode
—)-1)|1))))

	)

72 
	#hashpoöãr
(
t
,
p
Ë
	`hashmod
—, 
	`poöt2uöt
’))

	)

75 
	#dummynode
 (&
dummynode_
)

	)

77 
	#isdummy
(
n
Ë(“Ë=
dummynode
)

	)

79 c⁄° 
Node
 
	gdummynode_
 = {

80 {
NILCONSTANT
},

81 {{
NILCONSTANT
, 0}}

98 #i‡!
deföed
(
l_hashÊﬂt
)

99 
	$l_hashÊﬂt
 (
lua_Numbî
 
n
) {

100 
i
;

101 
lua_I¡egî
 
ni
;

102 
n
 = 
	`l_m©h›
(
‰exp
)“, &
i
Ë* -
	`ˇ°_num
(
INT_MIN
);

103 i‡(!
	`lua_numbîtoöãgî
(
n
, &
ni
)) {

104 
	`lua_as£π
(
	`luai_numi¢™
(
n
Ë|| 
	`l_m©h›
(
Ábs
)“Ë=
	`ˇ°_num
(
HUGE_VAL
));

108 
u
 = 
	`ˇ°
(, 
i
Ë+ ca°(, 
ni
);

109  
	`ˇ°_öt
(
u
 <
	`ˇ°
(, 
INT_MAX
) ? u : ~u);

111 
	}
}

119 
Node
 *
	$maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

120 
	`ây≥
(
key
)) {

121 
LUA_TNUMINT
:

122  
	`hashöt
(
t
, 
	`ivÆue
(
key
));

123 
LUA_TNUMFLT
:

124  
	`hashmod
(
t
, 
	`l_hashÊﬂt
(
	`ÊtvÆue
(
key
)));

125 
LUA_TSHRSTR
:

126  
	`hash°r
(
t
, 
	`tsvÆue
(
key
));

127 
LUA_TLNGSTR
:

128  
	`hashpow2
(
t
, 
	`luaS_hashl⁄g°r
(
	`tsvÆue
(
key
)));

129 
LUA_TBOOLEAN
:

130  
	`hashboﬁón
(
t
, 
	`bvÆue
(
key
));

131 
LUA_TLIGHTUSERDATA
:

132  
	`hashpoöãr
(
t
, 
	`pvÆue
(
key
));

133 
LUA_TLCF
:

134  
	`hashpoöãr
(
t
, 
	`fvÆue
(
key
));

136 
	`lua_as£π
(!
	`âisdódkey
(
key
));

137  
	`hashpoöãr
(
t
, 
	`gcvÆue
(
key
));

139 
	}
}

146 
	$¨øyödex
 (c⁄° 
TVÆue
 *
key
) {

147 i‡(
	`âisöãgî
(
key
)) {

148 
lua_I¡egî
 
k
 = 
	`ivÆue
(
key
);

149 i‡(0 < 
k
 && (
lua_Unsig√d
)k <
MAXASIZE
)

150  
	`ˇ°
(, 
k
);

153 
	}
}

161 
	$födödex
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

162 
i
;

163 i‡(
	`âi¢û
(
key
))  0;

164 
i
 = 
	`¨øyödex
(
key
);

165 i‡(
i
 !0 && i <
t
->
sizóºay
)

166  
i
;

168 
nx
;

169 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

172 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
) ||

173 (
	`âisdódkey
(
	`gkey
(
n
)Ë&& 
	`iscﬁÀ˘abÀ
(
key
) &&

174 
	`dódvÆue
(
	`gkey
(
n
)Ë=
	`gcvÆue
(
key
))) {

175 
i
 = 
	`ˇ°_öt
(
n
 - 
	`gnode
(
t
, 0));

177  (
i
 + 1Ë+ 
t
->
sizóºay
;

179 
nx
 = 
	`g√xt
(
n
);

180 i‡(
nx
 == 0)

181 
	`luaG_ru√º‹
(
L
, "invalid keyÅo 'next'");

182 
n
 +
nx
;

185 
	}
}

188 
	$luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
) {

189 
i
 = 
	`födödex
(
L
, 
t
, 
key
);

190 ; 
i
 < 
t
->
sizóºay
; i++) {

191 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
])) {

192 
	`£tivÆue
(
key
, 
i
 + 1);

193 
	`£tobj2s
(
L
, 
key
+1, &
t
->
¨øy
[
i
]);

197 
i
 -
t
->
sizóºay
; 
	`ˇ°_öt
(iË< 
	`sizíode
(t); i++) {

198 i‡(!
	`âi¢û
(
	`gvÆ
(
	`gnode
(
t
, 
i
)))) {

199 
	`£tobj2s
(
L
, 
key
, 
	`gkey
(
	`gnode
(
t
, 
i
)));

200 
	`£tobj2s
(
L
, 
key
+1, 
	`gvÆ
(
	`gnode
(
t
, 
i
)));

205 
	}
}

221 
	$compuãsizes
 (
nums
[], *
≤a
) {

222 
i
;

223 
twŸoi
;

224 
a
 = 0;

225 
«
 = 0;

226 
›timÆ
 = 0;

228 
i
 = 0, 
twŸoi
 = 1; *
≤a
 >Åwotoi / 2; i++,Åwotoi *= 2) {

229 i‡(
nums
[
i
] > 0) {

230 
a
 +
nums
[
i
];

231 i‡(
a
 > 
twŸoi
/2) {

232 
›timÆ
 = 
twŸoi
;

233 
«
 = 
a
;

237 
	`lua_as£π
((
›timÆ
 =0 || o±imÆ / 2 < 
«
) &&Ça <= optimal);

238 *
≤a
 = 
«
;

239  
›timÆ
;

240 
	}
}

243 
	$cou¡öt
 (c⁄° 
TVÆue
 *
key
, *
nums
) {

244 
k
 = 
	`¨øyödex
(
key
);

245 i‡(
k
 != 0) {

246 
nums
[
	`luaO_˚ûlog2
(
k
)]++;

251 
	}
}

259 
	$numu£¨øy
 (c⁄° 
TabÀ
 *
t
, *
nums
) {

260 
lg
;

261 
âlg
;

262 
au£
 = 0;

263 
i
 = 1;

265 
lg
 = 0, 
âlg
 = 1;Üg <
MAXABITS
;Üg++,Åtlg *= 2) {

266 
lc
 = 0;

267 
lim
 = 
âlg
;

268 i‡(
lim
 > 
t
->
sizóºay
) {

269 
lim
 = 
t
->
sizóºay
;

270 i‡(
i
 > 
lim
)

274 ; 
i
 <
lim
; i++) {

275 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
-1]))

276 
lc
++;

278 
nums
[
lg
] +
lc
;

279 
au£
 +
lc
;

281  
au£
;

282 
	}
}

285 
	$numu£hash
 (c⁄° 
TabÀ
 *
t
, *
nums
, *
≤a
) {

286 
tŸÆu£
 = 0;

287 
au£
 = 0;

288 
i
 = 
	`sizíode
(
t
);

289 
i
--) {

290 
Node
 *
n
 = &
t
->
node
[
i
];

291 i‡(!
	`âi¢û
(
	`gvÆ
(
n
))) {

292 
au£
 +
	`cou¡öt
(
	`gkey
(
n
), 
nums
);

293 
tŸÆu£
++;

296 *
≤a
 +
au£
;

297  
tŸÆu£
;

298 
	}
}

301 
	$£èºayve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

302 
i
;

303 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
,Å->
sizóºay
, 
size
, 
TVÆue
);

304 
i
=
t
->
sizóºay
; i<
size
; i++)

305 
	`£äûvÆue
(&
t
->
¨øy
[
i
]);

306 
t
->
sizóºay
 = 
size
;

307 
	}
}

310 
	$£äodeve˘‹
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
size
) {

311 
lsize
;

312 i‡(
size
 == 0) {

313 
t
->
node
 = 
	`ˇ°
(
Node
 *, 
dummynode
);

314 
lsize
 = 0;

317 
i
;

318 
lsize
 = 
	`luaO_˚ûlog2
(
size
);

319 i‡(
lsize
 > 
MAXHBITS
)

320 
	`luaG_ru√º‹
(
L
, "table overflow");

321 
size
 = 
	`twŸo
(
lsize
);

322 
t
->
node
 = 
	`luaM_√wve˘‹
(
L
, 
size
, 
Node
);

323 
i
 = 0; i < ()
size
; i++) {

324 
Node
 *
n
 = 
	`gnode
(
t
, 
i
);

325 
	`g√xt
(
n
) = 0;

326 
	`£äûvÆue
(
	`wgkey
(
n
));

327 
	`£äûvÆue
(
	`gvÆ
(
n
));

330 
t
->
lsizíode
 = 
	`ˇ°_byã
(
lsize
);

331 
t
->
œ°‰ì
 = 
	`gnode
—, 
size
);

332 
	}
}

335 
	$luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

336 
nhsize
) {

337 
i
;

338 
j
;

339 
ﬁdasize
 = 
t
->
sizóºay
;

340 
ﬁdhsize
 = 
t
->
lsizíode
;

341 
Node
 *
nﬁd
 = 
t
->
node
;

342 i‡(
«size
 > 
ﬁdasize
)

343 
	`£èºayve˘‹
(
L
, 
t
, 
«size
);

345 
	`£äodeve˘‹
(
L
, 
t
, 
nhsize
);

346 i‡(
«size
 < 
ﬁdasize
) {

347 
t
->
sizóºay
 = 
«size
;

349 
i
=
«size
; i<
ﬁdasize
; i++) {

350 i‡(!
	`âi¢û
(&
t
->
¨øy
[
i
]))

351 
	`luaH_£töt
(
L
, 
t
, 
i
 + 1, &t->
¨øy
[i]);

354 
	`luaM_ªÆlocve˘‹
(
L
, 
t
->
¨øy
, 
ﬁdasize
, 
«size
, 
TVÆue
);

357 
j
 = 
	`twŸo
(
ﬁdhsize
) - 1; j >= 0; j--) {

358 
Node
 *
ﬁd
 = 
nﬁd
 + 
j
;

359 i‡(!
	`âi¢û
(
	`gvÆ
(
ﬁd
))) {

362 
	`£tobjt2t
(
L
, 
	`luaH_£t
(L, 
t
, 
	`gkey
(
ﬁd
)), 
	`gvÆ
(old));

365 i‡(!
	`isdummy
(
nﬁd
))

366 
	`luaM_‰ì¨øy
(
L
, 
nﬁd
, 
	`ˇ°
(
size_t
, 
	`twŸo
(
ﬁdhsize
)));

367 
	}
}

370 
	$luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
) {

371 
nsize
 = 
	`isdummy
(
t
->
node
Ë? 0 : 
	`sizíode
(t);

372 
	`luaH_ªsize
(
L
, 
t
, 
«size
, 
nsize
);

373 
	}
}

378 
	$ªhash
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
ek
) {

379 
asize
;

380 
«
;

381 
nums
[
MAXABITS
 + 1];

382 
i
;

383 
tŸÆu£
;

384 
i
 = 0; i <
MAXABITS
; i++Ë
nums
[i] = 0;

385 
«
 = 
	`numu£¨øy
(
t
, 
nums
);

386 
tŸÆu£
 = 
«
;

387 
tŸÆu£
 +
	`numu£hash
(
t
, 
nums
, &
«
);

389 
«
 +
	`cou¡öt
(
ek
, 
nums
);

390 
tŸÆu£
++;

392 
asize
 = 
	`compuãsizes
(
nums
, &
«
);

394 
	`luaH_ªsize
(
L
, 
t
, 
asize
, 
tŸÆu£
 - 
«
);

395 
	}
}

404 
TabÀ
 *
	$luaH_√w
 (
lua_Sèã
 *
L
) {

405 
GCObje˘
 *
o
 = 
	`luaC_√wobj
(
L
, 
LUA_TTABLE
, (
TabÀ
));

406 
TabÀ
 *
t
 = 
	`gco2t
(
o
);

407 
t
->
më©abÀ
 = 
NULL
;

408 
t
->
Êags
 = 
	`ˇ°_byã
(~0);

409 
t
->
¨øy
 = 
NULL
;

410 
t
->
sizóºay
 = 0;

411 
	`£äodeve˘‹
(
L
, 
t
, 0);

412  
t
;

413 
	}
}

416 
	$luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
) {

417 i‡(!
	`isdummy
(
t
->
node
))

418 
	`luaM_‰ì¨øy
(
L
, 
t
->
node
, 
	`ˇ°
(
size_t
, 
	`sizíode
(t)));

419 
	`luaM_‰ì¨øy
(
L
, 
t
->
¨øy
,Å->
sizóºay
);

420 
	`luaM_‰ì
(
L
, 
t
);

421 
	}
}

424 
Node
 *
	$gë‰ìpos
 (
TabÀ
 *
t
) {

425 
t
->
œ°‰ì
 >Å->
node
) {

426 
t
->
œ°‰ì
--;

427 i‡(
	`âi¢û
(
	`gkey
(
t
->
œ°‰ì
)))

428  
t
->
œ°‰ì
;

430  
NULL
;

431 
	}
}

442 
TVÆue
 *
	$luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

443 
Node
 *
mp
;

444 
TVÆue
 
aux
;

445 i‡(
	`âi¢û
(
key
)Ë
	`luaG_ru√º‹
(
L
, "table index isÇil");

446 i‡(
	`âisÊﬂt
(
key
)) {

447 
lua_I¡egî
 
k
;

448 i‡(
	`luaV_toöãgî
(
key
, &
k
, 0)) {

449 
	`£tivÆue
(&
aux
, 
k
);

450 
key
 = &
aux
;

452 i‡(
	`luai_numi¢™
(
	`ÊtvÆue
(
key
)))

453 
	`luaG_ru√º‹
(
L
, "table index is NaN");

455 
mp
 = 
	`maöposôi⁄
(
t
, 
key
);

456 i‡(!
	`âi¢û
(
	`gvÆ
(
mp
)Ë|| 
	`isdummy
(mp)) {

457 
Node
 *
Ÿhîn
;

458 
Node
 *
f
 = 
	`gë‰ìpos
(
t
);

459 i‡(
f
 =
NULL
) {

460 
	`ªhash
(
L
, 
t
, 
key
);

462  
	`luaH_£t
(
L
, 
t
, 
key
);

464 
	`lua_as£π
(!
	`isdummy
(
f
));

465 
Ÿhîn
 = 
	`maöposôi⁄
(
t
, 
	`gkey
(
mp
));

466 i‡(
Ÿhîn
 !
mp
) {

468 
Ÿhîn
 + 
	`g√xt
(ŸhînË!
mp
)

469 
Ÿhîn
 +
	`g√xt
(othern);

470 
	`g√xt
(
Ÿhîn
Ë
	`ˇ°_öt
(
f
 - othern);

471 *
f
 = *
mp
;

472 i‡(
	`g√xt
(
mp
) != 0) {

473 
	`g√xt
(
f
Ë+
	`ˇ°_öt
(
mp
 - f);

474 
	`g√xt
(
mp
) = 0;

476 
	`£äûvÆue
(
	`gvÆ
(
mp
));

480 i‡(
	`g√xt
(
mp
) != 0)

481 
	`g√xt
(
f
Ë
	`ˇ°_öt
((
mp
 + gnext(mp)) - f);

482 
	`lua_as£π
(
	`g√xt
(
f
) == 0);

483 
	`g√xt
(
mp
Ë
	`ˇ°_öt
(
f
 - mp);

484 
mp
 = 
f
;

487 
	`£äodekey
(
L
, &
mp
->
i_key
, 
key
);

488 
	`luaC_b¨rõrback
(
L
, 
t
, 
key
);

489 
	`lua_as£π
(
	`âi¢û
(
	`gvÆ
(
mp
)));

490  
	`gvÆ
(
mp
);

491 
	}
}

497 c⁄° 
TVÆue
 *
	$luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
) {

499 i‡(
	`l_ˇ°S2U
(
key
Ë- 1 < 
t
->
sizóºay
)

500  &
t
->
¨øy
[
key
 - 1];

502 
Node
 *
n
 = 
	`hashöt
(
t
, 
key
);

504 i‡(
	`âisöãgî
(
	`gkey
(
n
)Ë&& 
	`ivÆue
(gkey“)Ë=
key
)

505  
	`gvÆ
(
n
);

507 
nx
 = 
	`g√xt
(
n
);

508 i‡(
nx
 == 0) ;

509 
n
 +
nx
;

512  
luaO_nûobje˘
;

514 
	}
}

520 c⁄° 
TVÆue
 *
	$luaH_gësh‹t°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

521 
Node
 *
n
 = 
	`hash°r
(
t
, 
key
);

522 
	`lua_as£π
(
key
->
â
 =
LUA_TSHRSTR
);

524 c⁄° 
TVÆue
 *
k
 = 
	`gkey
(
n
);

525 i‡(
	`âisshr°rög
(
k
Ë&& 
	`eqshr°r
(
	`tsvÆue
(k), 
key
))

526  
	`gvÆ
(
n
);

528 
nx
 = 
	`g√xt
(
n
);

529 i‡(
nx
 == 0)

530  
luaO_nûobje˘
;

531 
n
 +
nx
;

534 
	}
}

541 c⁄° 
TVÆue
 *
	$gëgíîic
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

542 
Node
 *
n
 = 
	`maöposôi⁄
(
t
, 
key
);

544 i‡(
	`luaV_øwequÆobj
(
	`gkey
(
n
), 
key
))

545  
	`gvÆ
(
n
);

547 
nx
 = 
	`g√xt
(
n
);

548 i‡(
nx
 == 0)

549  
luaO_nûobje˘
;

550 
n
 +
nx
;

553 
	}
}

556 c⁄° 
TVÆue
 *
	$luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
) {

557 i‡(
key
->
â
 =
LUA_TSHRSTR
)

558  
	`luaH_gësh‹t°r
(
t
, 
key
);

560 
TVÆue
 
ko
;

561 
	`£tsvÆue
(
	`ˇ°
(
lua_Sèã
 *, 
NULL
), &
ko
, 
key
);

562  
	`gëgíîic
(
t
, &
ko
);

564 
	}
}

570 c⁄° 
TVÆue
 *
	$luaH_gë
 (
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

571 
	`ây≥
(
key
)) {

572 
LUA_TSHRSTR
:  
	`luaH_gësh‹t°r
(
t
, 
	`tsvÆue
(
key
));

573 
LUA_TNUMINT
:  
	`luaH_gëöt
(
t
, 
	`ivÆue
(
key
));

574 
LUA_TNIL
:  
luaO_nûobje˘
;

575 
LUA_TNUMFLT
: {

576 
lua_I¡egî
 
k
;

577 i‡(
	`luaV_toöãgî
(
key
, &
k
, 0))

578  
	`luaH_gëöt
(
t
, 
k
);

582  
	`gëgíîic
(
t
, 
key
);

584 
	}
}

591 
TVÆue
 *
	$luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

592 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gë
(
t
, 
key
);

593 i‡(
p
 !
luaO_nûobje˘
)

594  
	`ˇ°
(
TVÆue
 *, 
p
);

595  
	`luaH_√wkey
(
L
, 
t
, 
key
);

596 
	}
}

599 
	$luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
, 
TVÆue
 *
vÆue
) {

600 c⁄° 
TVÆue
 *
p
 = 
	`luaH_gëöt
(
t
, 
key
);

601 
TVÆue
 *
˚Œ
;

602 i‡(
p
 !
luaO_nûobje˘
)

603 
˚Œ
 = 
	`ˇ°
(
TVÆue
 *, 
p
);

605 
TVÆue
 
k
;

606 
	`£tivÆue
(&
k
, 
key
);

607 
˚Œ
 = 
	`luaH_√wkey
(
L
, 
t
, &
k
);

609 
	`£tobj2t
(
L
, 
˚Œ
, 
vÆue
);

610 
	}
}

613 
	$unbound_£¨ch
 (
TabÀ
 *
t
, 
j
) {

614 
i
 = 
j
;

615 
j
++;

617 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
j
))) {

618 
i
 = 
j
;

619 i‡(
j
 > 
	`ˇ°
(, 
MAX_INT
)/2) {

621 
i
 = 1;

622 !
	`âi¢û
(
	`luaH_gëöt
(
t
, 
i
))) i++;

623  
i
 - 1;

625 
j
 *= 2;

628 
j
 - 
i
 > 1) {

629 
m
 = (
i
+
j
)/2;

630 i‡(
	`âi¢û
(
	`luaH_gëöt
(
t
, 
m
))Ë
j
 = m;

631 
i
 = 
m
;

633  
i
;

634 
	}
}

641 
	$luaH_gën
 (
TabÀ
 *
t
) {

642 
j
 = 
t
->
sizóºay
;

643 i‡(
j
 > 0 && 
	`âi¢û
(&
t
->
¨øy
[j - 1])) {

645 
i
 = 0;

646 
j
 - 
i
 > 1) {

647 
m
 = (
i
+
j
)/2;

648 i‡(
	`âi¢û
(&
t
->
¨øy
[
m
 - 1])Ë
j
 = m;

649 
i
 = 
m
;

651  
i
;

654 i‡(
	`isdummy
(
t
->
node
))

655  
j
;

656  
	`unbound_£¨ch
(
t
, 
j
);

657 
	}
}

661 #i‡
deföed
(
LUA_DEBUG
)

663 
Node
 *
	$luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
) {

664  
	`maöposôi⁄
(
t
, 
key
);

665 
	}
}

667 
	$luaH_isdummy
 (
Node
 *
n
Ë{  
	`isdummy
“); 
	}
}

	@lib/lua/src/ltable.h

7 #i‚de‡
…abÀ_h


8 
	#…abÀ_h


	)

10 
	~"lobje˘.h
"

13 
	#gnode
(
t
,
i
Ë(&—)->
node
[i])

	)

14 
	#gvÆ
(
n
Ë(&“)->
i_vÆ
)

	)

15 
	#g√xt
(
n
Ë(“)->
i_key
.
nk
.
√xt
)

	)

19 
	#gkey
(
n
Ë
	`ˇ°
(c⁄° 
TVÆue
*, (&“)->
i_key
.
tvk
))

	)

25 
	#wgkey
(
n
Ë(&“)->
i_key
.
nk
)

	)

27 
	#övÆid©eTMˇche
(
t
Ë(—)->
Êags
 = 0)

	)

31 
	#key‰omvÆ
(
v
) \

32 (
	`gkey
(
	`ˇ°
(
Node
 *, ca°(*, (
v
)Ë- 
	`off£tof
(Node, 
i_vÆ
))))

	)

35 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gëöt
 (
TabÀ
 *
t
, 
lua_I¡egî
 
key
);

36 
LUAI_FUNC
 
luaH_£töt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
lua_I¡egî
 
key
,

37 
TVÆue
 *
vÆue
);

38 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gësh‹t°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

39 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë°r
 (
TabÀ
 *
t
, 
TSåög
 *
key
);

40 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaH_gë
 (
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

41 
LUAI_FUNC
 
TVÆue
 *
luaH_√wkey
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

42 
LUAI_FUNC
 
TVÆue
 *
luaH_£t
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, c⁄° TVÆuê*
key
);

43 
LUAI_FUNC
 
TabÀ
 *
luaH_√w
 (
lua_Sèã
 *
L
);

44 
LUAI_FUNC
 
luaH_ªsize
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
,

45 
nhsize
);

46 
LUAI_FUNC
 
luaH_ªsizóºay
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
«size
);

47 
LUAI_FUNC
 
luaH_‰ì
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
);

48 
LUAI_FUNC
 
luaH_√xt
 (
lua_Sèã
 *
L
, 
TabÀ
 *
t
, 
StkId
 
key
);

49 
LUAI_FUNC
 
luaH_gën
 (
TabÀ
 *
t
);

52 #i‡
deföed
(
LUA_DEBUG
)

53 
LUAI_FUNC
 
Node
 *
luaH_maöposôi⁄
 (c⁄° 
TabÀ
 *
t
, c⁄° 
TVÆue
 *
key
);

54 
LUAI_FUNC
 
luaH_isdummy
 (
Node
 *
n
);

	@lib/lua/src/ltablib.c

7 
	#…ablib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<limôs.h
>

14 
	~<°ddef.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

27 
	#TAB_R
 1

	)

28 
	#TAB_W
 2

	)

29 
	#TAB_L
 4

	)

30 
	#TAB_RW
 (
TAB_R
 | 
TAB_W
Ë

	)

33 
	#aux_gën
(
L
,
n
,
w
Ë(
	`checkèb
(L,Ç, (wË| 
TAB_L
), 
	`luaL_Àn
(L,Ç))

	)

36 
	$checkfõld
 (
lua_Sèã
 *
L
, c⁄° *
key
, 
n
) {

37 
	`lua_push°rög
(
L
, 
key
);

38  (
	`lua_øwgë
(
L
, -
n
Ë!
LUA_TNIL
);

39 
	}
}

46 
	$checkèb
 (
lua_Sèã
 *
L
, 
¨g
, 
wh©
) {

47 i‡(
	`lua_ty≥
(
L
, 
¨g
Ë!
LUA_TTABLE
) {

48 
n
 = 1;

49 i‡(
	`lua_gëmë©abÀ
(
L
, 
¨g
) &&

50 (!(
wh©
 & 
TAB_R
Ë|| 
	`checkfõld
(
L
, "__ödex", ++
n
)) &&

51 (!(
wh©
 & 
TAB_W
Ë|| 
	`checkfõld
(
L
, "__√wödex", ++
n
)) &&

52 (!(
wh©
 & 
TAB_L
Ë|| 
	`checkfõld
(
L
, "__Àn", ++
n
))) {

53 
	`lua_p›
(
L
, 
n
);

56 
	`luaL_¨gîr‹
(
L
, 
¨g
, "tableÉxpected");

58 
	}
}

61 #i‡
deföed
(
LUA_COMPAT_MAXN
)

62 
	$maxn
 (
lua_Sèã
 *
L
) {

63 
lua_Numbî
 
max
 = 0;

64 
	`luaL_checkty≥
(
L
, 1, 
LUA_TTABLE
);

65 
	`lua_pushnû
(
L
);

66 
	`lua_√xt
(
L
, 1)) {

67 
	`lua_p›
(
L
, 1);

68 i‡(
	`lua_ty≥
(
L
, -1Ë=
LUA_TNUMBER
) {

69 
lua_Numbî
 
v
 = 
	`lua_t⁄umbî
(
L
, -1);

70 i‡(
v
 > 
max
) max = v;

73 
	`lua_pushnumbî
(
L
, 
max
);

75 
	}
}

79 
	$tö£π
 (
lua_Sèã
 *
L
) {

80 
lua_I¡egî
 
e
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
) + 1;

81 
lua_I¡egî
 
pos
;

82 
	`lua_gët›
(
L
)) {

84 
pos
 = 
e
;

88 
lua_I¡egî
 
i
;

89 
pos
 = 
	`luaL_checköãgî
(
L
, 2);

90 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
e
, 2, "position out of bounds");

91 
i
 = 
e
; i > 
pos
; i--) {

92 
	`lua_gëi
(
L
, 1, 
i
 - 1);

93 
	`lua_£ti
(
L
, 1, 
i
);

98  
	`luaL_îr‹
(
L
, "wrongÇumber ofárgumentsÅo 'insert'");

101 
	`lua_£ti
(
L
, 1, 
pos
);

103 
	}
}

106 
	$åemove
 (
lua_Sèã
 *
L
) {

107 
lua_I¡egî
 
size
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
);

108 
lua_I¡egî
 
pos
 = 
	`luaL_›töãgî
(
L
, 2, 
size
);

109 i‡(
pos
 !
size
)

110 
	`luaL_¨gcheck
(
L
, 1 <
pos
 &&Öo†<
size
 + 1, 1, "position out of bounds");

111 
	`lua_gëi
(
L
, 1, 
pos
);

112  ; 
pos
 < 
size
;Öos++) {

113 
	`lua_gëi
(
L
, 1, 
pos
 + 1);

114 
	`lua_£ti
(
L
, 1, 
pos
);

116 
	`lua_pushnû
(
L
);

117 
	`lua_£ti
(
L
, 1, 
pos
);

119 
	}
}

128 
	$tmove
 (
lua_Sèã
 *
L
) {

129 
lua_I¡egî
 
f
 = 
	`luaL_checköãgî
(
L
, 2);

130 
lua_I¡egî
 
e
 = 
	`luaL_checköãgî
(
L
, 3);

131 
lua_I¡egî
 
t
 = 
	`luaL_checköãgî
(
L
, 4);

132 
â
 = !
	`lua_i¢⁄e‹nû
(
L
, 5) ? 5 : 1;

133 
	`checkèb
(
L
, 1, 
TAB_R
);

134 
	`checkèb
(
L
, 
â
, 
TAB_W
);

135 i‡(
e
 >
f
) {

136 
lua_I¡egî
 
n
, 
i
;

137 
	`luaL_¨gcheck
(
L
, 
f
 > 0 || 
e
 < 
LUA_MAXINTEGER
 + f, 3,

139 
n
 = 
e
 - 
f
 + 1;

140 
	`luaL_¨gcheck
(
L
, 
t
 <
LUA_MAXINTEGER
 - 
n
 + 1, 4,

142 i‡(
t
 > 
e
 ||Å <
f
 || 
â
 != 1) {

143 
i
 = 0; i < 
n
; i++) {

144 
	`lua_gëi
(
L
, 1, 
f
 + 
i
);

145 
	`lua_£ti
(
L
, 
â
, 
t
 + 
i
);

149 
i
 = 
n
 - 1; i >= 0; i--) {

150 
	`lua_gëi
(
L
, 1, 
f
 + 
i
);

151 
	`lua_£ti
(
L
, 
â
, 
t
 + 
i
);

155 
	`lua_pushvÆue
(
L
, 
â
);

157 
	}
}

160 
	$addfõld
 (
lua_Sèã
 *
L
, 
luaL_Buf„r
 *
b
, 
lua_I¡egî
 
i
) {

161 
	`lua_gëi
(
L
, 1, 
i
);

162 i‡(!
	`lua_is°rög
(
L
, -1))

163 
	`luaL_îr‹
(
L
, "invalid value (%s)át index %d inÅable for 'concat'",

164 
	`luaL_ty≥«me
(
L
, -1), 
i
);

165 
	`luaL_addvÆue
(
b
);

166 
	}
}

169 
	$tc⁄ˇt
 (
lua_Sèã
 *
L
) {

170 
luaL_Buf„r
 
b
;

171 
lua_I¡egî
 
œ°
 = 
	`aux_gën
(
L
, 1, 
TAB_R
);

172 
size_t
 
l£p
;

173 c⁄° *
£p
 = 
	`luaL_›é°rög
(
L
, 2, "", &
l£p
);

174 
lua_I¡egî
 
i
 = 
	`luaL_›töãgî
(
L
, 3, 1);

175 
œ°
 = 
	`luaL_›t
(
L
, 
luaL_checköãgî
, 4,Üast);

176 
	`luaL_bufföô
(
L
, &
b
);

177 ; 
i
 < 
œ°
; i++) {

178 
	`addfõld
(
L
, &
b
, 
i
);

179 
	`luaL_addl°rög
(&
b
, 
£p
, 
l£p
);

181 i‡(
i
 =
œ°
)

182 
	`addfõld
(
L
, &
b
, 
i
);

183 
	`luaL_pushªsu…
(&
b
);

185 
	}
}

194 
	$∑ck
 (
lua_Sèã
 *
L
) {

195 
i
;

196 
n
 = 
	`lua_gët›
(
L
);

197 
	`lua_¸óãèbÀ
(
L
, 
n
, 1);

198 
	`lua_ö£π
(
L
, 1);

199 
i
 = 
n
; i >= 1; i--)

200 
	`lua_£ti
(
L
, 1, 
i
);

201 
	`lua_pushöãgî
(
L
, 
n
);

202 
	`lua_£tfõld
(
L
, 1, "n");

204 
	}
}

207 
	$u≈ack
 (
lua_Sèã
 *
L
) {

208 
lua_Unsig√d
 
n
;

209 
lua_I¡egî
 
i
 = 
	`luaL_›töãgî
(
L
, 2, 1);

210 
lua_I¡egî
 
e
 = 
	`luaL_›t
(
L
, 
luaL_checköãgî
, 3, 
	`luaL_Àn
(L, 1));

211 i‡(
i
 > 
e
)  0;

212 
n
 = (
lua_Unsig√d
)
e
 - 
i
;

213 i‡(
n
 >()
INT_MAX
 || !
	`lua_check°ack
(
L
, ()(++n)))

214  
	`luaL_îr‹
(
L
, "too manyÑesultsÅo unpack");

215 ; 
i
 < 
e
; i++) {

216 
	`lua_gëi
(
L
, 1, 
i
);

218 
	`lua_gëi
(
L
, 1, 
e
);

219  ()
n
;

220 
	}
}

241 #i‡!
deföed
(
l_øndomizePivŸ
)

243 
	~<time.h
>

246 
	#sof
(
e
Ë(”Ë/ ())

	)

254 
	$l_øndomizePivŸ
 () {

255 
˛ock_t
 
c
 = 
	`˛ock
();

256 
time_t
 
t
 = 
	`time
(
NULL
);

257 
buff
[
	`sof
(
c
Ë+ sof(
t
)];

258 
i
, 
∫d
 = 0;

259 
	`mem˝y
(
buff
, &
c
, 
	`sof
(c) * ());

260 
	`mem˝y
(
buff
 + 
	`sof
(
c
), &
t
, sof(t) * ());

261 
i
 = 0; i < 
	`sof
(
buff
); i++)

262 
∫d
 +
buff
[
i
];

263  
∫d
;

264 
	}
}

270 
	#RANLIMIT
 100u

	)

273 
	$£t2
 (
lua_Sèã
 *
L
, 
i
, 
j
) {

274 
	`lua_£ti
(
L
, 1, 
i
);

275 
	`lua_£ti
(
L
, 1, 
j
);

276 
	}
}

283 
	$s‹t_comp
 (
lua_Sèã
 *
L
, 
a
, 
b
) {

284 i‡(
	`lua_i¢û
(
L
, 2))

285  
	`lua_com∑ª
(
L
, 
a
, 
b
, 
LUA_OPLT
);

287 
ªs
;

288 
	`lua_pushvÆue
(
L
, 2);

289 
	`lua_pushvÆue
(
L
, 
a
-1);

290 
	`lua_pushvÆue
(
L
, 
b
-2);

291 
	`lua_ˇŒ
(
L
, 2, 1);

292 
ªs
 = 
	`lua_toboﬁón
(
L
, -1);

293 
	`lua_p›
(
L
, 1);

294  
ªs
;

296 
	}
}

306 
	$∑πôi⁄
 (
lua_Sèã
 *
L
, 
lo
,

307 
up
) {

308 
i
 = 
lo
;

309 
j
 = 
up
 - 1;

313 
	`lua_gëi
(
L
, 1, ++
i
), 
	`s‹t_comp
(L, -1, -2)) {

314 i‡(
i
 =
up
 - 1)

315 
	`luaL_îr‹
(
L
, "invalid order function for sorting");

316 
	`lua_p›
(
L
, 1);

320 
	`lua_gëi
(
L
, 1, --
j
), 
	`s‹t_comp
(L, -3, -1)) {

321 i‡(
j
 < 
i
)

322 
	`luaL_îr‹
(
L
, "invalid order function for sorting");

323 
	`lua_p›
(
L
, 1);

326 i‡(
j
 < 
i
) {

328 
	`lua_p›
(
L
, 1);

330 
	`£t2
(
L
, 
up
 - 1, 
i
);

331  
i
;

334 
	`£t2
(
L
, 
i
, 
j
);

336 
	}
}

343 
	$choo£PivŸ
 (
lo
, 
up
,

344 
∫d
) {

345 
r4
 = ()(
up
 - 
lo
) / 4u;

346 
p
 = 
∫d
 % (
r4
 * 2Ë+ (
lo
 +Ñ4);

347 
	`lua_as£π
(
lo
 + 
r4
 <
p
 &&Ö <
up
 -Ñ4);

348  
p
;

349 
	}
}

355 
	$auxs‹t
 (
lua_Sèã
 *
L
, 
lo
, 
up
,

356 
∫d
) {

357 
lo
 < 
up
) {

358 
p
;

359 
n
;

361 
	`lua_gëi
(
L
, 1, 
lo
);

362 
	`lua_gëi
(
L
, 1, 
up
);

363 i‡(
	`s‹t_comp
(
L
, -1, -2))

364 
	`£t2
(
L
, 
lo
, 
up
);

366 
	`lua_p›
(
L
, 2);

367 i‡(
up
 - 
lo
 == 1)

369 i‡(
up
 - 
lo
 < 
RANLIMIT
 || 
∫d
 == 0)

370 
p
 = (
lo
 + 
up
)/2;

372 
p
 = 
	`choo£PivŸ
(
lo
, 
up
, 
∫d
);

373 
	`lua_gëi
(
L
, 1, 
p
);

374 
	`lua_gëi
(
L
, 1, 
lo
);

375 i‡(
	`s‹t_comp
(
L
, -2, -1))

376 
	`£t2
(
L
, 
p
, 
lo
);

378 
	`lua_p›
(
L
, 1);

379 
	`lua_gëi
(
L
, 1, 
up
);

380 i‡(
	`s‹t_comp
(
L
, -1, -2))

381 
	`£t2
(
L
, 
p
, 
up
);

383 
	`lua_p›
(
L
, 2);

385 i‡(
up
 - 
lo
 == 2)

387 
	`lua_gëi
(
L
, 1, 
p
);

388 
	`lua_pushvÆue
(
L
, -1);

389 
	`lua_gëi
(
L
, 1, 
up
 - 1);

390 
	`£t2
(
L
, 
p
, 
up
 - 1);

391 
p
 = 
	`∑πôi⁄
(
L
, 
lo
, 
up
);

393 i‡(
p
 - 
lo
 < 
up
 -Ö) {

394 
	`auxs‹t
(
L
, 
lo
, 
p
 - 1, 
∫d
);

395 
n
 = 
p
 - 
lo
;

396 
lo
 = 
p
 + 1;

399 
	`auxs‹t
(
L
, 
p
 + 1, 
up
, 
∫d
);

400 
n
 = 
up
 - 
p
;

401 
up
 = 
p
 - 1;

403 i‡((
up
 - 
lo
Ë/ 128u > 
n
)

404 
∫d
 = 
	`l_øndomizePivŸ
();

406 
	}
}

409 
	$s‹t
 (
lua_Sèã
 *
L
) {

410 
lua_I¡egî
 
n
 = 
	`aux_gën
(
L
, 1, 
TAB_RW
);

411 i‡(
n
 > 1) {

412 
	`luaL_¨gcheck
(
L
, 
n
 < 
INT_MAX
, 1, "arrayÅoo big");

413 
	`luaL_check°ack
(
L
, 40, "");

414 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 2))

415 
	`luaL_checkty≥
(
L
, 2, 
LUA_TFUNCTION
);

416 
	`lua_£â›
(
L
, 2);

417 
	`auxs‹t
(
L
, 1, ()
n
, 0u);

420 
	}
}

425 c⁄° 
luaL_Reg
 
	gèb_funcs
[] = {

426 {"c⁄ˇt", 
tc⁄ˇt
},

427 #i‡
deföed
(
LUA_COMPAT_MAXN
)

428 {"maxn", 
maxn
},

430 {"ö£π", 
tö£π
},

431 {"∑ck", 
∑ck
},

432 {"u≈ack", 
u≈ack
},

433 {"ªmove", 
åemove
},

434 {"move", 
tmove
},

435 {"s‹t", 
s‹t
},

436 {
NULL
, NULL}

440 
LUAMOD_API
 
	$lua›í_èbÀ
 (
lua_Sèã
 *
L
) {

441 
	`luaL_√wlib
(
L
, 
èb_funcs
);

442 #i‡
	`deföed
(
LUA_COMPAT_UNPACK
)

444 
	`lua_gëfõld
(
L
, -1, "unpack");

445 
	`lua_£tglobÆ
(
L
, "unpack");

448 
	}
}

	@lib/lua/src/ltm.c

7 
	#…m_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lobje˘.h
"

20 
	~"l°©e.h
"

21 
	~"l°rög.h
"

22 
	~"…abÀ.h
"

23 
	~"…m.h
"

24 
	~"lvm.h
"

27 c⁄° 
	gud©©y≥«me
[] = "userdata";

29 
LUAI_DDEF
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
] = {

31 "nû", "boﬁón", 
ud©©y≥«me
, "number",

32 "°rög", "èbÀ", "fun˘i⁄", 
ud©©y≥«me
, "thread",

37 
	$luaT_öô
 (
lua_Sèã
 *
L
) {

38 c⁄° *c⁄° 
luaT_evíäame
[] = {

47 
i
;

48 
i
=0; i<
TM_N
; i++) {

49 
	`G
(
L
)->
tm«me
[
i
] = 
	`luaS_√w
(L, 
luaT_evíäame
[i]);

50 
	`luaC_fix
(
L
, 
	`obj2gco
(
	`G
(L)->
tm«me
[
i
]));

52 
	}
}

59 c⁄° 
TVÆue
 *
	$luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
) {

60 c⁄° 
TVÆue
 *
tm
 = 
	`luaH_gësh‹t°r
(
evíts
, 
íame
);

61 
	`lua_as£π
(
evít
 <
TM_EQ
);

62 i‡(
	`âi¢û
(
tm
)) {

63 
evíts
->
Êags
 |
	`ˇ°_byã
(1u<<
evít
);

64  
NULL
;

66  
tm
;

67 
	}
}

70 c⁄° 
TVÆue
 *
	$luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
o
, 
TMS
 
evít
) {

71 
TabÀ
 *
mt
;

72 
	`ânov
(
o
)) {

73 
LUA_TTABLE
:

74 
mt
 = 
	`hvÆue
(
o
)->
më©abÀ
;

76 
LUA_TUSERDATA
:

77 
mt
 = 
	`uvÆue
(
o
)->
më©abÀ
;

80 
mt
 = 
	`G
(
L
)->mt[
	`ânov
(
o
)];

82  (
mt
 ? 
	`luaH_gësh‹t°r
(mt, 
	`G
(
L
)->
tm«me
[
evít
]Ë: 
luaO_nûobje˘
);

83 
	}
}

86 
	$luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

87 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
) {

88 
±rdiff_t
 
ªsu…
 = 
	`ßve°ack
(
L
, 
p3
);

89 
StkId
 
func
 = 
L
->
t›
;

90 
	`£tobj2s
(
L
, 
func
, 
f
);

91 
	`£tobj2s
(
L
, 
func
 + 1, 
p1
);

92 
	`£tobj2s
(
L
, 
func
 + 2, 
p2
);

93 
L
->
t›
 += 3;

94 i‡(!
ha§es
)

95 
	`£tobj2s
(
L
, L->
t›
++, 
p3
);

97 i‡(
	`isLua
(
L
->
ci
))

98 
	`luaD_ˇŒ
(
L
, 
func
, 
ha§es
);

100 
	`luaD_ˇŒnoyõld
(
L
, 
func
, 
ha§es
);

101 i‡(
ha§es
) {

102 
p3
 = 
	`ª°‹e°ack
(
L
, 
ªsu…
);

103 
	`£tobjs2s
(
L
, 
p3
, --L->
t›
);

105 
	}
}

108 
	$luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

109 
StkId
 
ªs
, 
TMS
 
evít
) {

110 c⁄° 
TVÆue
 *
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p1
, 
evít
);

111 i‡(
	`âi¢û
(
tm
))

112 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
p2
, 
evít
);

113 i‡(
	`âi¢û
(
tm
))  0;

114 
	`luaT_ˇŒTM
(
L
, 
tm
, 
p1
, 
p2
, 
ªs
, 1);

116 
	}
}

119 
	$luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

120 
StkId
 
ªs
, 
TMS
 
evít
) {

121 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, 
ªs
, 
evít
)) {

122 
evít
) {

123 
TM_CONCAT
:

124 
	`luaG_c⁄ˇãº‹
(
L
, 
p1
, 
p2
);

126 
TM_BAND
: 
TM_BOR
: 
TM_BXOR
:

127 
TM_SHL
: 
TM_SHR
: 
TM_BNOT
: {

128 
lua_Numbî
 
dummy
;

129 i‡(
	`t⁄umbî
(
p1
, &
dummy
Ë&&Å⁄umbî(
p2
, &dummy))

130 
	`luaG_toöãº‹
(
L
, 
p1
, 
p2
);

132 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "perform bitwise operation on");

136 
	`luaG_›öãº‹
(
L
, 
p1
, 
p2
, "performárithmetic on");

139 
	}
}

142 
	$luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

143 
TMS
 
evít
) {

144 i‡(!
	`luaT_ˇŒböTM
(
L
, 
p1
, 
p2
, L->
t›
, 
evít
))

147  !
	`l_isÁl£
(
L
->
t›
);

148 
	}
}

	@lib/lua/src/ltm.h

7 #i‚de‡
…m_h


8 
	#…m_h


	)

11 
	~"lobje˘.h
"

19 
	mTM_INDEX
,

20 
	mTM_NEWINDEX
,

21 
	mTM_GC
,

22 
	mTM_MODE
,

23 
	mTM_LEN
,

24 
	mTM_EQ
,

25 
	mTM_ADD
,

26 
	mTM_SUB
,

27 
	mTM_MUL
,

28 
	mTM_MOD
,

29 
	mTM_POW
,

30 
	mTM_DIV
,

31 
	mTM_IDIV
,

32 
	mTM_BAND
,

33 
	mTM_BOR
,

34 
	mTM_BXOR
,

35 
	mTM_SHL
,

36 
	mTM_SHR
,

37 
	mTM_UNM
,

38 
	mTM_BNOT
,

39 
	mTM_LT
,

40 
	mTM_LE
,

41 
	mTM_CONCAT
,

42 
	mTM_CALL
,

43 
	mTM_N


44 } 
	tTMS
;

48 
	#gÁ°tm
(
g
,
ë
,
e
Ë(”tË=
NULL
 ? NULL : \

49 ((
ë
)->
Êags
 & (1u<<(
e
))Ë? 
NULL
 : 
	`luaT_gëtm
”t,É, (
g
)->
tm«me
[e]))

	)

51 
	#Á°tm
(
l
,
ë
,
e
Ë
	`gÁ°tm
(
	`G
÷),Ét,É)

	)

53 
	#ây≥«me
(
x
Ë
luaT_ty≥«mes_
[(xË+ 1]

	)

54 
	#objty≥«me
(
x
Ë
	`ây≥«me
(
	`ânov
(x))

	)

56 
LUAI_DDEC
 c⁄° *c⁄° 
	gluaT_ty≥«mes_
[
LUA_TOTALTAGS
];

59 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtm
 (
TabÀ
 *
evíts
, 
TMS
 
evít
, 
TSåög
 *
íame
);

60 
LUAI_FUNC
 c⁄° 
TVÆue
 *
luaT_gëtmbyobj
 (
lua_Sèã
 *
L
, c⁄° TVÆuê*
o
,

61 
TMS
 
evít
);

62 
LUAI_FUNC
 
luaT_öô
 (
lua_Sèã
 *
L
);

64 
LUAI_FUNC
 
luaT_ˇŒTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
f
, c⁄° TVÆuê*
p1
,

65 c⁄° 
TVÆue
 *
p2
, TVÆuê*
p3
, 
ha§es
);

66 
LUAI_FUNC
 
luaT_ˇŒböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

67 
StkId
 
ªs
, 
TMS
 
evít
);

68 
LUAI_FUNC
 
luaT_åyböTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
, c⁄° TVÆuê*
p2
,

69 
StkId
 
ªs
, 
TMS
 
evít
);

70 
LUAI_FUNC
 
luaT_ˇŒ‹dîTM
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
p1
,

71 c⁄° 
TVÆue
 *
p2
, 
TMS
 
evít
);

	@lib/lua/src/lua-socket.c

68 
	~<°dio.h
>

69 
	~<°dlib.h
>

70 
	~<°döt.h
>

71 
	~<sig«l.h
>

72 
	~<öây≥s.h
>

73 
	~<sys/ty≥s.h
>

74 
	~<uni°d.h
>

75 
	~<°rög.h
>

76 
	~<sys/queue.h
>

77 
	~<√töë/ö.h
>

78 
	~<√t/if.h
>

79 
	~<f˙é.h
>

80 
	~<£tjmp.h
>

81 
	~<°d¨g.h
>

82 
	~<˘y≥.h
>

83 
	~<î∫o.h
>

84 
	~<gë›t.h
>

85 
	~<ãrmios.h
>

86 
	~<sys/io˘l.h
>

87 
	~<libgí.h
>

88 
	~<löux/if_tun.h
>

89 
	~<¨∑/öë.h
>

90 
	~<√tdb.h
>

91 
	~<as£π.h
>

93 
	~<πe_c⁄fig.h
>

94 
	~<πe_vîsi⁄.h
>

96 
	~<πe_log.h
>

97 
	~<πe_èûq.h
>

98 
	~<πe_comm⁄.h
>

99 
	~<πe_mem‹y.h
>

100 
	~<πe_mem˝y.h
>

101 
	~<πe_memz⁄e.h
>

102 
	~<πe_mÆloc.h
>

103 
	~<πe_ól.h
>

104 
	~<πe_≥r_lc‹e.h
>

105 
	~<πe_œunch.h
>

106 
	~<πe_©omic.h
>

107 
	~<πe_cy˛es.h
>

108 
	~<πe_¥e„tch.h
>

109 
	~<πe_lc‹e.h
>

110 
	~<πe_≥r_lc‹e.h
>

111 
	~<πe_bønch_¥edi˘i⁄.h
>

112 
	~<πe_pci.h
>

113 
	~<πe_øndom.h
>

114 
	~<πe_timî.h
>

115 
	~<πe_debug.h
>

116 
	~<πe_ëhî.h
>

117 
	~<πe_ëhdev.h
>

118 
	~<πe_rög.h
>

119 
	~<πe_mempoﬁ.h
>

120 
	~<πe_mbuf.h
>

122 
	#lua_c


	)

123 
	~"lua.h
"

124 
	~"luÆib.h
"

125 
	~"œuxlib.h
"

127 
	~"lua-sockë.h
"

128 
	~"lua_shñl.h
"

130 * 
lua_gë_¥iv©e
(* 
L
);

131 
lua_shñl
(*);

132 
lua_£t_°dfûes
(
lua_Sèã
 * 
L
, 
FILE
 * 
ö
, FILE * 
out
, FILE * 
îr
);

133 
lua_ª£t_°dfûes
(
lua_Sèã
 * 
L
);

134 
execuã_lua_°rög
(
lua_Sèã
 * 
L
, * 
°r
);

135 
execuã_lua_˛o£
(
lua_Sèã
 * 
L
);

138 
	$_sockë_›í
(
luaSîvî_t
 * 
pSîvî
)

140 i‡–
pSîvî
 !
NULL
 ) {

141 
pSîvî
->
ö
 = 
	`fd›í
’Sîvî->
˛õ¡_sockë
, "r");

142 
pSîvî
->
out
 = 
	`fd›í
’Sîvî->
˛õ¡_sockë
, "w");

143 
pSîvî
->
îr
 = 
	`fd›í
’Sîvî->
˛õ¡_sockë
, "w");

145 
	}
}

148 
	$_sockë_˛o£
(
luaSîvî_t
 * 
pSîvî
)

150 i‡–
pSîvî
 !
NULL
 ) {

151 
	`f˛o£
(
pSîvî
->
ö
);

152 
	`f˛o£
(
pSîvî
->
out
);

153 
	`f˛o£
(
pSîvî
->
îr
);

155 
	}
}

158 
	$_gë_°dout
(* 
¨g
)

160 
luaSîvî_t
 * 
s
;

162 i‡–
¨g
 =
NULL
 )

163  
°dout
;

164 
s
 = 
	`luaL_gë¥iv©e
(
¨g
);

165 i‡–(
s
 =
NULL
Ë|| (s->
out
 == NULL) )

166  
°dout
;

167  
s
->
out
;

168 
	}
}

171 
	$_gë_°dö
(* 
¨g
)

173 
luaSîvî_t
 * 
s
;

175 i‡–
¨g
 =
NULL
 )

176  
°dö
;

177 
s
 = 
	`luaL_gë¥iv©e
(
¨g
);

178 i‡–(
s
 =
NULL
Ë|| (s->
ö
 == NULL) )

179  
°dö
;

180  
s
->
ö
;

181 
	}
}

184 
	$_gë_°dîr
(* 
¨g
)

186 
luaSîvî_t
 * 
s
;

188 i‡–
¨g
 =
NULL
 )

189  
°dîr
;

190 
s
 = 
	`luaL_gë¥iv©e
(
¨g
);

191 i‡–(
s
 =
NULL
Ë|| (s->
îr
 == NULL) )

192  
°dîr
;

193  
s
->
îr
;

194 
	}
}

197 
	$_£t_°dfûes
(
lua_Sèã
 * 
L
, 
luaSîvî_t
 * 
pSîvî
)

199 
	`lua_£t_°dfûes
(
L
, 
pSîvî
->
ö
,ÖSîvî->
out
,ÖSîvî->
îr
);

200 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

201 
	}
}

204 
	$_ª£t_°dfûes
(
lua_Sèã
 * 
L
)

206 
	`sig«l
(
SIGPIPE
, 
SIG_DFL
);

207 
	`lua_ª£t_°dfûes
(
L
);

208 
	}
}

223 
	$¥o˚ss_£rvî_ªque°s
–
luaSîvî_t
 * 
pSîvî
 )

225 
sockaddr_ö
 
ùaddr
;

226 
sockÀn_t
 
Àn
;

228 
pSîvî
->
˛õ¡_sockë
 = -1;

230 
Àn
 = (
sockaddr_ö
);

231 i‡–(
pSîvî
->
˛õ¡_sockë
 = 
	`ac˚±
’Sîvî->
£rvî_sockë
, (
sockaddr
 *)&
ùaddr
, &
Àn
)) < 0) {

232 
	`≥º‹
("accept failed");

236 i‡–
pSîvî
->
˛õ¡_sockë
 > 0 ) {

238 
	`_sockë_›í
(
pSîvî
);

239 
	`lua_shñl
(
pSîvî
);

240 
	`_sockë_˛o£
(
pSîvî
);

242 
	`˛o£
(
pSîvî
->
˛õ¡_sockë
);

243 
pSîvî
->
˛õ¡_sockë
 = -1;

247 i‡–
pSîvî
->
£rvî_sockë
 > 0 ) {

248 
	`˛o£
(
pSîvî
->
£rvî_sockë
);

249 
pSîvî
->
£rvî_sockë
 = -1;

251 
	}
}

266 
	$£rvî_¸óã
–* 
¨g
 )

268 
luaSîvî_t
 * 
pSîvî
 = (luaSîvî_à*)
¨g
;

269 * 
îr_msg
 = 
NULL
;

270 
sockaddr_ö
 
ùaddr
;

271 
ho°ít
 * 
pHo°
;

272 
lögî
 = 1;

274 
îr_msg
 = "gethostbyname failed";

275 if–(
pHo°
 = 
	`gëho°by«me
(
pSîvî
->
ho°«me
)Ë=
NULL
 )

276 
îr‹_exô
;

278 
îr_msg
 = "Socket create failed";

279 i‡–(
pSîvî
->
£rvî_sockë
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0 )

280 
îr‹_exô
;

282 
	`mem£t
(&
ùaddr
, 0, (ipaddr));

283 
ùaddr
.
sö_Ámûy
 = 
AF_INET
;

284 
ùaddr
.
sö_p‹t
 = 
	`ht⁄s
(
pSîvî
->
sockë_p‹t
);

285 
ùaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

287 
îr_msg
 = "Setsockopt failed";

288 i‡(
	`£tsock›t
(
pSîvî
->
£rvî_sockë
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
lögî
, (linger)) == -1)

289 
îr‹_exô
;

291 
îr_msg
 = "Bind failed";

292 i‡(
	`böd
(
pSîvî
->
£rvî_sockë
, (
sockaddr
 *Ë&
ùaddr
, (ipaddr)) < 0)

293 
îr‹_exô
;

295 
îr_msg
 = "Listen failed";

296 i‡(
	`li°í
(
pSîvî
->
£rvî_sockë
, 5) < 0)

297 
îr‹_exô
;

299 
	`¥o˚ss_£rvî_ªque°s
(
pSîvî
);

303 
îr‹_exô
:

304 i‡–
pSîvî
->
£rvî_sockë
 != -1 )

305 
	`˛o£
–
pSîvî
->
£rvî_sockë
 );

306 
pSîvî
->
£rvî_sockë
 = -1;

307 i‡–
îr_msg
 ) {

308 
	`≥º‹
(
îr_msg
);

309 
	`fÊush
(
°dout
);

312 
	}
}

327 
	$lua_£rvî
(* 
¨g
) {

329 
	`±hªad_dëach
–
	`±hªad_£lf
() );

331 
	`£rvî_¸óã
((
luaSîvî_t
 *)
¨g
);

333  
NULL
;

334 
	}
}

349 
	$lua_öô_sockë
(
lua_Sèã
 * 
L
, 
±hªad_t
 * 
±hªad
, * 
ho°«me
, 
p‹t
)

351 
luaSîvî_t
 * 
p
;

352 
r
;

354 
p
 = 
	`luaL_gë¥iv©e
(
L
);

355 i‡–
p
 =
NULL
 )

358 
p
->
˛õ¡_sockë
 = -1;

359 
p
->
£rvî_sockë
 = -1;

360 
p
->
sockë_p‹t
 = 
p‹t
;

361 
p
->
ho°«me
 = 
	`°rdup
( (hostname) ? hostname : "localhost" );

364 
r
 = 
	`±hªad_¸óã
(
±hªad
, 
NULL
, 
lua_£rvî
, 
p
);

365 
	`as£π
–
r
 == 0 );

367 
	}
}

382 
	$lua_¸óã_ö°™˚
()

384 
luaSîvî_t
 * 
p
;

385 
lua_Sèã
 * 
L
;

387 
p
 = (
luaSîvî_t
 *)
	`ˇŒoc
(1, (luaServer_t));

388 i‡(
p
 =
NULL
)

389  
NULL
;

391 
L
 = 
	`luaL_√w°©e
();

392 i‡–
L
 =
NULL
 ) {

393 
	`‰ì
(
p
);

394  
NULL
;

397 
p
->
˛õ¡_sockë
 = -1;

398 
p
->
£rvî_sockë
 = -1;

399 
p
->
ö
 = 
NULL
;

400 
p
->
out
 = 
NULL
;

401 
p
->
îr
 = 
NULL
;

403 
	`luaL_£çriv©e
(
L
, 
p
);

406 
	`lua_wrôe°rög
(
LUA_COPYRIGHT
, 
	`°æí
(LUA_COPYRIGHT));

407 
	`lua_wrôñöe
();

409 
	`lua_√wlibs_öô
(
L
);

411  
L
;

412 
	}
}

	@lib/lua/src/lua-socket.h

68 #i‚de‡
_LUA_SOCKET_H_


69 
	#_LUA_SOCKET_H_


	)

71 
	~"lua.h
"

74 
	#MAX_LUA_BUFFER_SIZE
 1024

	)

76 
	sluaSîvî_s
 {

77 
öt32_t
 
	m£rvî_sockë
;

78 
öt32_t
 
	m˛õ¡_sockë
;

79 
öt32_t
 
	msockë_p‹t
;

80 * 
	mout
, * 
	mö
, * 
	mîr
;

81 * 
	mho°«me
;

82 
	md©a
[
MAX_LUA_BUFFER_SIZE
];

83 } 
	tluaSîvî_t
;

85 
_lua_›ílib
(
lua_Sèã
 *
L
);

86 * 
_gë_°dout
(* 
¨g
);

87 * 
_gë_°dö
(* 
¨g
);

88 * 
_gë_°dîr
(* 
¨g
);

89 
_£t_°dfûes
(
lua_Sèã
 * 
L
, 
luaSîvî_t
 * 
pSîvî
);

90 
_ª£t_°dfûes
(
lua_Sèã
 * 
L
);

92 
lua_öô_sockë
(
lua_Sèã
 * 
L
, 
±hªad_t
 * 
±hªad
, * 
ho°«me
, 
p‹t
);

93 * 
lua_¸óã_ö°™˚
();

	@lib/lua/src/lua.c

7 
	#lua_c


	)

9 
	~"Õªfix.h
"

12 
	~<sig«l.h
>

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<°rög.h
>

17 
	~"lua.h
"

19 
	~"œuxlib.h
"

20 
	~"luÆib.h
"

23 #i‡!
deföed
(
LUA_PROMPT
)

24 
	#LUA_PROMPT
 "> "

	)

25 
	#LUA_PROMPT2
 ">> "

	)

28 #i‡!
deföed
(
LUA_PROGNAME
)

29 
	#LUA_PROGNAME
 "lua"

	)

32 #i‡!
deföed
(
LUA_MAXINPUT
)

33 
	#LUA_MAXINPUT
 512

	)

36 #i‡!
deföed
(
LUA_INIT_VAR
)

37 
	#LUA_INIT_VAR
 "LUA_INIT"

	)

40 
	#LUA_INITVARVERSION
 \

41 
LUA_INIT_VAR
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

48 #i‡!
deföed
(
lua_°dö_is_ây
)

50 #i‡
deföed
(
LUA_USE_POSIX
)

52 
	~<uni°d.h
>

53 
	#lua_°dö_is_ây
(Ë
	`ißây
(0)

	)

55 #ñi‡
deföed
(
LUA_USE_WINDOWS
)

57 
	~<io.h
>

58 
	#lua_°dö_is_ây
(Ë
	`_ißây
(
	`_fûío
(
°dö
))

	)

63 
	#lua_°dö_is_ây
(Ë1

	)

76 #i‡!
deföed
(
lua_ªadlöe
)

78 #i‡
deföed
(
LUA_USE_READLINE
)

80 
	~<ªadlöe/ªadlöe.h
>

81 
	~<ªadlöe/hi°‹y.h
>

82 
	#lua_ªadlöe
(
L
,
b
,
p
Ë(()L, ((b)=
	`ªadlöe
’)Ë!
NULL
)

	)

83 
	#lua_ßvñöe
(
L
,
löe
Ë(()L, 
	`add_hi°‹y
÷öe))

	)

84 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

88 
	#lua_ªadlöe
(
L
,
b
,
p
) \

89 (()
L
, 
	`Âuts
(
p
, 
°dout
), 
	`fÊush
(stdout), \

90 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
°dö
Ë!
NULL
Ë

	)

91 
	#lua_ßvñöe
(
L
,
löe
Ë{ ()L; (Óöe; }

	)

92 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

101 
lua_Sèã
 *
	gglobÆL
 = 
NULL
;

103 c⁄° *
	g¥og«me
 = 
LUA_PROGNAME
;

109 
	$l°›
 (
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

110 ()
¨
;

111 
	`lua_£thook
(
L
, 
NULL
, 0, 0);

112 
	`luaL_îr‹
(
L
, "interrupted!");

113 
	}
}

122 
	$œ˘i⁄
 (
i
) {

123 
	`sig«l
(
i
, 
SIG_DFL
);

124 
	`lua_£thook
(
globÆL
, 
l°›
, 
LUA_MASKCALL
 | 
LUA_MASKRET
 | 
LUA_MASKCOUNT
, 1);

125 
	}
}

128 
	$¥öt_ußge
 (c⁄° *
bad›ti⁄
) {

129 
	`lua_wrôe°rögîr‹
("%s: ", 
¥og«me
);

130 i‡(
bad›ti⁄
[1] == 'e' || badoption[1] == 'l')

131 
	`lua_wrôe°rögîr‹
("'%s'Çìd†¨gumít\n", 
bad›ti⁄
);

133 
	`lua_wrôe°rögîr‹
("uƒecognized o±i⁄ '%s'\n", 
bad›ti⁄
);

134 
	`lua_wrôe°rögîr‹
(

145 
¥og«me
);

146 
	}
}

153 
	$l_mesßge
 (c⁄° *
≤ame
, c⁄° *
msg
) {

154 i‡(
≤ame
Ë
	`lua_wrôe°rögîr‹
("%s: ",Öname);

155 
	`lua_wrôe°rögîr‹
("%s\n", 
msg
);

156 
	}
}

164 
	$ªp‹t
 (
lua_Sèã
 *
L
, 
°©us
) {

165 i‡(
°©us
 !
LUA_OK
) {

166 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, -1);

167 
	`l_mesßge
(
¥og«me
, 
msg
);

168 
	`lua_p›
(
L
, 1);

170  
°©us
;

171 
	}
}

177 
	$msgh™dÀr
 (
lua_Sèã
 *
L
) {

178 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 1);

179 i‡(
msg
 =
NULL
) {

180 i‡(
	`luaL_ˇŒmëa
(
L
, 1, "__tostring") &&

181 
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
)

184 
msg
 = 
	`lua_pushf°rög
(
L
, "(error object isá %s value)",

185 
	`luaL_ty≥«me
(
L
, 1));

187 
	`luaL_åa˚back
(
L
, L, 
msg
, 1);

189 
	}
}

196 
	$doˇŒ
 (
lua_Sèã
 *
L
, 
«rg
, 
ƒes
) {

197 
°©us
;

198 
ba£
 = 
	`lua_gët›
(
L
Ë- 
«rg
;

199 
	`lua_pushcfun˘i⁄
(
L
, 
msgh™dÀr
);

200 
	`lua_ö£π
(
L
, 
ba£
);

201 
globÆL
 = 
L
;

202 
	`sig«l
(
SIGINT
, 
œ˘i⁄
);

203 
°©us
 = 
	`lua_pˇŒ
(
L
, 
«rg
, 
ƒes
, 
ba£
);

204 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

205 
	`lua_ªmove
(
L
, 
ba£
);

206  
°©us
;

207 
	}
}

210 
	$¥öt_vîsi⁄
 () {

211 
	`lua_wrôe°rög
(
LUA_COPYRIGHT
, 
	`°æí
(LUA_COPYRIGHT));

212 
	`lua_wrôñöe
();

213 
	}
}

224 
	$¸óã¨gèbÀ
 (
lua_Sèã
 *
L
, **
¨gv
, 
¨gc
, 
s¸ùt
) {

225 
i
, 
«rg
;

226 i‡(
s¸ùt
 =
¨gc
) script = 0;

227 
«rg
 = 
¨gc
 - (
s¸ùt
 + 1);

228 
	`lua_¸óãèbÀ
(
L
, 
«rg
, 
s¸ùt
 + 1);

229 
i
 = 0; i < 
¨gc
; i++) {

230 
	`lua_push°rög
(
L
, 
¨gv
[
i
]);

231 
	`lua_øw£ti
(
L
, -2, 
i
 - 
s¸ùt
);

233 
	`lua_£tglobÆ
(
L
, "arg");

234 
	}
}

237 
	$dochunk
 (
lua_Sèã
 *
L
, 
°©us
) {

238 i‡(
°©us
 =
LUA_OK
Ë°©u†
	`doˇŒ
(
L
, 0, 0);

239  
	`ªp‹t
(
L
, 
°©us
);

240 
	}
}

243 
	$dofûe
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

244  
	`dochunk
(
L
, 
	`luaL_lﬂdfûe
(L, 
«me
));

245 
	}
}

248 
	$do°rög
 (
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
«me
) {

249  
	`dochunk
(
L
, 
	`luaL_lﬂdbuf„r
(L, 
s
, 
	`°æí
(s), 
«me
));

250 
	}
}

257 
	$dﬁibøry
 (
lua_Sèã
 *
L
, c⁄° *
«me
) {

258 
°©us
;

259 
	`lua_gëglobÆ
(
L
, "require");

260 
	`lua_push°rög
(
L
, 
«me
);

261 
°©us
 = 
	`doˇŒ
(
L
, 1, 1);

262 i‡(
°©us
 =
LUA_OK
)

263 
	`lua_£tglobÆ
(
L
, 
«me
);

264  
	`ªp‹t
(
L
, 
°©us
);

265 
	}
}

271 c⁄° *
	$gë_¥om±
 (
lua_Sèã
 *
L
, 
fú°löe
) {

272 c⁄° *
p
;

273 
	`lua_gëglobÆ
(
L
, 
fú°löe
 ? "_PROMPT" : "_PROMPT2");

274 
p
 = 
	`lua_to°rög
(
L
, -1);

275 i‡(
p
 =
NULL
Ë∞(
fú°löe
 ? 
LUA_PROMPT
 : 
LUA_PROMPT2
);

276  
p
;

277 
	}
}

280 
	#EOFMARK
 "<eof>"

	)

281 
	#m¨kÀn
 ((
EOFMARK
)/(Ë- 1)

	)

289 
	$öcom∂ëe
 (
lua_Sèã
 *
L
, 
°©us
) {

290 i‡(
°©us
 =
LUA_ERRSYNTAX
) {

291 
size_t
 
lmsg
;

292 c⁄° *
msg
 = 
	`lua_tﬁ°rög
(
L
, -1, &
lmsg
);

293 i‡(
lmsg
 >
m¨kÀn
 && 
	`°rcmp
(
msg
 +Ümsg - m¨kÀn, 
EOFMARK
) == 0) {

294 
	`lua_p›
(
L
, 1);

299 
	}
}

305 
	$pushlöe
 (
lua_Sèã
 *
L
, 
fú°löe
) {

306 
buf„r
[
LUA_MAXINPUT
];

307 *
b
 = 
buf„r
;

308 
size_t
 
l
;

309 c⁄° *
¥mt
 = 
	`gë_¥om±
(
L
, 
fú°löe
);

310 
ªad°©us
 = 
	`lua_ªadlöe
(
L
, 
b
, 
¥mt
);

311 i‡(
ªad°©us
 == 0)

313 
	`lua_p›
(
L
, 1);

314 
l
 = 
	`°æí
(
b
);

315 i‡(
l
 > 0 && 
b
[l-1] == '\n')

316 
b
[--
l
] = '\0';

317 i‡(
fú°löe
 && 
b
[0] == '=')

318 
	`lua_pushf°rög
(
L
, "ªtu∫ %s", 
b
 + 1);

320 
	`lua_pushl°rög
(
L
, 
b
, 
l
);

321 
	`lua_‰ìlöe
(
L
, 
b
);

323 
	}
}

330 
	$addªtu∫
 (
lua_Sèã
 *
L
) {

331 c⁄° *
löe
 = 
	`lua_to°rög
(
L
, -1);

332 c⁄° *
ªéöe
 = 
	`lua_pushf°rög
(
L
, "ªtu∫ %s;", 
löe
);

333 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
ªéöe
, 
	`°æí
(retline), "=stdin");

334 i‡(
°©us
 =
LUA_OK
) {

335 
	`lua_ªmove
(
L
, -2);

336 i‡(
löe
[0] != '\0')

337 
	`lua_ßvñöe
(
L
, 
löe
);

340 
	`lua_p›
(
L
, 2);

341  
°©us
;

342 
	}
}

348 
	$mu…ûöe
 (
lua_Sèã
 *
L
) {

350 
size_t
 
Àn
;

351 c⁄° *
löe
 = 
	`lua_tﬁ°rög
(
L
, 1, &
Àn
);

352 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
Àn
, "=stdin");

353 i‡(!
	`öcom∂ëe
(
L
, 
°©us
Ë|| !
	`pushlöe
(L, 0)) {

354 
	`lua_ßvñöe
(
L
, 
löe
);

355  
°©us
;

357 
	`lua_pushlôîÆ
(
L
, "\n");

358 
	`lua_ö£π
(
L
, -2);

359 
	`lua_c⁄ˇt
(
L
, 3);

361 
	}
}

370 
	$lﬂdlöe
 (
lua_Sèã
 *
L
) {

371 
°©us
;

372 
	`lua_£â›
(
L
, 0);

373 i‡(!
	`pushlöe
(
L
, 1))

375 i‡((
°©us
 = 
	`addªtu∫
(
L
)Ë!
LUA_OK
)

376 
°©us
 = 
	`mu…ûöe
(
L
);

377 
	`lua_ªmove
(
L
, 1);

378 
	`lua_as£π
(
	`lua_gët›
(
L
) == 1);

379  
°©us
;

380 
	}
}

386 
	$l_¥öt
 (
lua_Sèã
 *
L
) {

387 
n
 = 
	`lua_gët›
(
L
);

388 i‡(
n
 > 0) {

389 
	`luaL_check°ack
(
L
, 
LUA_MINSTACK
, "too manyÑesultsÅoÖrint");

390 
	`lua_gëglobÆ
(
L
, "print");

391 
	`lua_ö£π
(
L
, 1);

392 i‡(
	`lua_pˇŒ
(
L
, 
n
, 0, 0Ë!
LUA_OK
)

393 
	`l_mesßge
(
¥og«me
, 
	`lua_pushf°rög
(
L
, "error calling 'print' (%s)",

394 
	`lua_to°rög
(
L
, -1)));

396 
	}
}

403 
	$doREPL
 (
lua_Sèã
 *
L
) {

404 
°©us
;

405 c⁄° *
ﬁd¥og«me
 = 
¥og«me
;

406 
¥og«me
 = 
NULL
;

407 (
°©us
 = 
	`lﬂdlöe
(
L
)) != -1) {

408 i‡(
°©us
 =
LUA_OK
)

409 
°©us
 = 
	`doˇŒ
(
L
, 0, 
LUA_MULTRET
);

410 i‡(
°©us
 =
LUA_OK
Ë
	`l_¥öt
(
L
);

411 
	`ªp‹t
(
L
, 
°©us
);

413 
	`lua_£â›
(
L
, 0);

414 
	`lua_wrôñöe
();

415 
¥og«me
 = 
ﬁd¥og«me
;

416 
	}
}

422 
	$push¨gs
 (
lua_Sèã
 *
L
) {

423 
i
, 
n
;

424 i‡(
	`lua_gëglobÆ
(
L
, "¨g"Ë!
LUA_TTABLE
)

425 
	`luaL_îr‹
(
L
, "'arg' isÇotáÅable");

426 
n
 = ()
	`luaL_Àn
(
L
, -1);

427 
	`luaL_check°ack
(
L
, 
n
 + 3, "too manyárgumentsÅo script");

428 
i
 = 1; i <
n
; i++)

429 
	`lua_øwgëi
(
L
, -
i
, i);

430 
	`lua_ªmove
(
L
, -
i
);

431  
n
;

432 
	}
}

435 
	$h™dÀ_s¸ùt
 (
lua_Sèã
 *
L
, **
¨gv
) {

436 
°©us
;

437 c⁄° *
‚ame
 = 
¨gv
[0];

438 i‡(
	`°rcmp
(
‚ame
, "-"Ë=0 && såcmp(
¨gv
[-1], "--") != 0)

439 
‚ame
 = 
NULL
;

440 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
‚ame
);

441 i‡(
°©us
 =
LUA_OK
) {

442 
n
 = 
	`push¨gs
(
L
);

443 
°©us
 = 
	`doˇŒ
(
L
, 
n
, 
LUA_MULTRET
);

445  
	`ªp‹t
(
L
, 
°©us
);

446 
	}
}

451 
	#has_îr‹
 1

	)

452 
	#has_i
 2

	)

453 
	#has_v
 4

	)

454 
	#has_e
 8

	)

455 
	#has_E
 16

	)

463 
	$cﬁÀ˘¨gs
 (**
¨gv
, *
fú°
) {

464 
¨gs
 = 0;

465 
i
;

466 
i
 = 1; 
¨gv
[i] !
NULL
; i++) {

467 *
fú°
 = 
i
;

468 i‡(
¨gv
[
i
][0] != '-')

469  
¨gs
;

470 
¨gv
[
i
][1]) {

472 i‡(
¨gv
[
i
][2] != '\0')

473  
has_îr‹
;

474 *
fú°
 = 
i
 + 1;

475  
¨gs
;

477  
¨gs
;

479 i‡(
¨gv
[
i
][2] != '\0')

480  
has_îr‹
;

481 
¨gs
 |
has_E
;

484 
¨gs
 |
has_i
;

486 i‡(
¨gv
[
i
][2] != '\0')

487  
has_îr‹
;

488 
¨gs
 |
has_v
;

491 
¨gs
 |
has_e
;

493 i‡(
¨gv
[
i
][2] == '\0') {

494 
i
++;

495 i‡(
¨gv
[
i
] =
NULL
 ||árgv[i][0] == '-')

496  
has_îr‹
;

500  
has_îr‹
;

503 *
fú°
 = 
i
;

504  
¨gs
;

505 
	}
}

512 
	$ru«rgs
 (
lua_Sèã
 *
L
, **
¨gv
, 
n
) {

513 
i
;

514 
i
 = 1; i < 
n
; i++) {

515 
›ti⁄
 = 
¨gv
[
i
][1];

516 
	`lua_as£π
(
¨gv
[
i
][0] == '-');

517 i‡(
›ti⁄
 == 'e' || option == 'l') {

518 
°©us
;

519 c⁄° *
exåa
 = 
¨gv
[
i
] + 2;

520 i‡(*
exåa
 ='\0'Ëexå®
¨gv
[++
i
];

521 
	`lua_as£π
(
exåa
 !
NULL
);

522 
°©us
 = (
›ti⁄
 == 'e')

523 ? 
	`do°rög
(
L
, 
exåa
, "=(commandÜine)")

524 : 
	`dﬁibøry
(
L
, 
exåa
);

525 i‡(
°©us
 !
LUA_OK
)  0;

529 
	}
}

532 
	$h™dÀ_luaöô
 (
lua_Sèã
 *
L
) {

533 c⁄° *
«me
 = "=" 
LUA_INITVARVERSION
;

534 c⁄° *
öô
 = 
	`gëív
(
«me
 + 1);

535 i‡(
öô
 =
NULL
) {

536 
«me
 = "=" 
LUA_INIT_VAR
;

537 
öô
 = 
	`gëív
(
«me
 + 1);

539 i‡(
öô
 =
NULL
Ë 
LUA_OK
;

540 i‡(
öô
[0] == '@')

541  
	`dofûe
(
L
, 
öô
+1);

543  
	`do°rög
(
L
, 
öô
, 
«me
);

544 
	}
}

551 
	$pmaö
 (
lua_Sèã
 *
L
) {

552 
¨gc
 = ()
	`lua_toöãgî
(
L
, 1);

553 **
¨gv
 = (**)
	`lua_tou£rd©a
(
L
, 2);

554 
s¸ùt
;

555 
¨gs
 = 
	`cﬁÀ˘¨gs
(
¨gv
, &
s¸ùt
);

556 
	`luaL_checkvîsi⁄
(
L
);

557 i‡(
¨gv
[0] &&árgv[0][0]Ë
¥og«me
 =árgv[0];

558 i‡(
¨gs
 =
has_îr‹
) {

559 
	`¥öt_ußge
(
¨gv
[
s¸ùt
]);

562 i‡(
¨gs
 & 
has_v
)

563 
	`¥öt_vîsi⁄
();

564 i‡(
¨gs
 & 
has_E
) {

565 
	`lua_pushboﬁón
(
L
, 1);

566 
	`lua_£tfõld
(
L
, 
LUA_REGISTRYINDEX
, "LUA_NOENV");

568 
	`luaL_›ílibs
(
L
);

569 
	`¸óã¨gèbÀ
(
L
, 
¨gv
, 
¨gc
, 
s¸ùt
);

570 i‡(!(
¨gs
 & 
has_E
)) {

571 i‡(
	`h™dÀ_luaöô
(
L
Ë!
LUA_OK
)

574 i‡(!
	`ru«rgs
(
L
, 
¨gv
, 
s¸ùt
))

576 i‡(
s¸ùt
 < 
¨gc
 &&

577 
	`h™dÀ_s¸ùt
(
L
, 
¨gv
 + 
s¸ùt
Ë!
LUA_OK
)

579 i‡(
¨gs
 & 
has_i
)

580 
	`doREPL
(
L
);

581 i‡(
s¸ùt
 =
¨gc
 && !(
¨gs
 & (
has_e
 | 
has_v
))) {

582 i‡(
	`lua_°dö_is_ây
()) {

583 
	`¥öt_vîsi⁄
();

584 
	`doREPL
(
L
);

586 
	`dofûe
(
L
, 
NULL
);

588 
	`lua_pushboﬁón
(
L
, 1);

590 
	}
}

593 
	$maö
 (
¨gc
, **
¨gv
) {

594 
°©us
, 
ªsu…
;

595 
lua_Sèã
 *
L
 = 
	`luaL_√w°©e
();

596 i‡(
L
 =
NULL
) {

597 
	`l_mesßge
(
¨gv
[0], "cannot create state:ÇotÉnough memory");

598  
EXIT_FAILURE
;

600 
	`lua_pushcfun˘i⁄
(
L
, &
pmaö
);

601 
	`lua_pushöãgî
(
L
, 
¨gc
);

602 
	`lua_pushlightu£rd©a
(
L
, 
¨gv
);

603 
°©us
 = 
	`lua_pˇŒ
(
L
, 2, 1, 0);

604 
ªsu…
 = 
	`lua_toboﬁón
(
L
, -1);

605 
	`ªp‹t
(
L
, 
°©us
);

606 
	`lua_˛o£
(
L
);

607  (
ªsu…
 && 
°©us
 =
LUA_OK
Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
;

608 
	}
}

	@lib/lua/src/lua.h

9 #i‚de‡
lua_h


10 
	#lua_h


	)

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

16 
	~"luac⁄f.h
"

19 
	#LUA_VERSION_MAJOR
 "5"

	)

20 
	#LUA_VERSION_MINOR
 "3"

	)

21 
	#LUA_VERSION_NUM
 503

	)

22 
	#LUA_VERSION_RELEASE
 "2"

	)

24 
	#LUA_VERSION
 "Lu®" 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

25 
	#LUA_RELEASE
 
LUA_VERSION
 "." 
LUA_VERSION_RELEASE


	)

26 
	#LUA_COPYRIGHT
 
LUA_RELEASE
 " C›yrighà(CË1994-2015 Lua.‹g, PUC-Rio"

	)

27 
	#LUA_AUTHORS
 "R. Iîußlimschy, L. H. dêFigueúedo, W. Cñes"

	)

31 
	#LUA_SIGNATURE
 "\x1bLua"

	)

34 
	#LUA_MULTRET
 (-1)

	)

42 
	#LUA_REGISTRYINDEX
 (-
LUAI_MAXSTACK
 - 1000)

	)

43 
	#lua_upvÆueödex
(
i
Ë(
LUA_REGISTRYINDEX
 - (i))

	)

47 
	#LUA_OK
 0

	)

48 
	#LUA_YIELD
 1

	)

49 
	#LUA_ERRRUN
 2

	)

50 
	#LUA_ERRSYNTAX
 3

	)

51 
	#LUA_ERRMEM
 4

	)

52 
	#LUA_ERRGCMM
 5

	)

53 
	#LUA_ERRERR
 6

	)

56 
lua_Sèã
 
	tlua_Sèã
;

62 
	#LUA_TNONE
 (-1)

	)

64 
	#LUA_TNIL
 0

	)

65 
	#LUA_TBOOLEAN
 1

	)

66 
	#LUA_TLIGHTUSERDATA
 2

	)

67 
	#LUA_TNUMBER
 3

	)

68 
	#LUA_TSTRING
 4

	)

69 
	#LUA_TTABLE
 5

	)

70 
	#LUA_TFUNCTION
 6

	)

71 
	#LUA_TUSERDATA
 7

	)

72 
	#LUA_TTHREAD
 8

	)

74 
	#LUA_NUMTAGS
 9

	)

79 
	#LUA_MINSTACK
 20

	)

83 
	#LUA_RIDX_MAINTHREAD
 1

	)

84 
	#LUA_RIDX_GLOBALS
 2

	)

85 
	#LUA_RIDX_LAST
 
LUA_RIDX_GLOBALS


	)

89 
LUA_NUMBER
 
	tlua_Numbî
;

93 
LUA_INTEGER
 
	tlua_I¡egî
;

96 
LUA_UNSIGNED
 
	tlua_Unsig√d
;

99 
LUA_KCONTEXT
 
	tlua_KC⁄ãxt
;

105 (*
	tlua_CFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
);

110 (*
	tlua_KFun˘i⁄
Ë(
	tlua_Sèã
 *
	tL
, 
	t°©us
, 
	tlua_KC⁄ãxt
 
	t˘x
);

116 c⁄° * (*
	tlua_Ródî
Ë(
	tlua_Sèã
 *
	tL
, *
	tud
, 
	tsize_t
 *
	tsz
);

118 (*
	tlua_Wrôî
Ë(
	tlua_Sèã
 *
	tL
, c⁄° *
	tp
, 
	tsize_t
 
	tsz
, *
	tud
);

124 * (*
	tlua_AŒoc
Ë(*
	tud
, *
	t±r
, 
	tsize_t
 
	tosize
, size_à
	tnsize
);

131 #i‡
	`deföed
(
LUA_USER_H
)

132 #ö˛udê
LUA_USER_H


139 c⁄° 
lua_idít
[];

145 
LUA_API
 
lua_Sèã
 *(
lua_√w°©e
Ë(
lua_AŒoc
 
f
, *
ud
);

146 
LUA_API
 (
lua_˛o£
Ë(
lua_Sèã
 *
L
);

147 
LUA_API
 
lua_Sèã
 *(
lua_√wthªad
Ë÷ua_Sèã *
L
);

149 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_©∑nic
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
∑nicf
);

152 
LUA_API
 c⁄° 
lua_Numbî
 *(
lua_vîsi⁄
Ë(
lua_Sèã
 *
L
);

158 
LUA_API
 (
lua_absödex
Ë(
lua_Sèã
 *
L
, 
idx
);

159 
LUA_API
 (
lua_gët›
Ë(
lua_Sèã
 *
L
);

160 
LUA_API
 (
lua_£â›
Ë(
lua_Sèã
 *
L
, 
idx
);

161 
LUA_API
 (
lua_pushvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

162 
LUA_API
 (
lua_rŸ©e
Ë(
lua_Sèã
 *
L
, 
idx
, 
n
);

163 
LUA_API
 (
lua_c›y
Ë(
lua_Sèã
 *
L
, 
‰omidx
, 
toidx
);

164 
LUA_API
 (
lua_check°ack
Ë(
lua_Sèã
 *
L
, 
n
);

166 
LUA_API
 (
lua_xmove
Ë(
lua_Sèã
 *
‰om
,Üua_Sèã *
to
, 
n
);

173 
LUA_API
 (
lua_i¢umbî
Ë(
lua_Sèã
 *
L
, 
idx
);

174 
LUA_API
 (
lua_is°rög
Ë(
lua_Sèã
 *
L
, 
idx
);

175 
LUA_API
 (
lua_iscfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

176 
LUA_API
 (
lua_isöãgî
Ë(
lua_Sèã
 *
L
, 
idx
);

177 
LUA_API
 (
lua_isu£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

178 
LUA_API
 (
lua_ty≥
Ë(
lua_Sèã
 *
L
, 
idx
);

179 
LUA_API
 c⁄° *(
lua_ty≥«me
Ë(
lua_Sèã
 *
L
, 
ç
);

181 
LUA_API
 
	$lua_Numbî
 (
lua_t⁄umbîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

182 
LUA_API
 
	$lua_I¡egî
 (
lua_toöãgîx
Ë(
lua_Sèã
 *
L
, 
idx
, *
i¢um
);

183 
LUA_API
 (
lua_toboﬁón
Ë(
lua_Sèã
 *
L
, 
idx
);

184 
LUA_API
 c⁄° *(
lua_tﬁ°rög
Ë(
lua_Sèã
 *
L
, 
idx
, 
size_t
 *
Àn
);

185 
LUA_API
 
	$size_t
 (
lua_øwÀn
Ë(
lua_Sèã
 *
L
, 
idx
);

186 
LUA_API
 
	$lua_CFun˘i⁄
 (
lua_tocfun˘i⁄
Ë(
lua_Sèã
 *
L
, 
idx
);

187 
LUA_API
 *(
lua_tou£rd©a
Ë(
lua_Sèã
 *
L
, 
idx
);

188 
LUA_API
 
lua_Sèã
 *(
lua_tŸhªad
Ë÷ua_Sèã *
L
, 
idx
);

189 
LUA_API
 c⁄° *(
lua_t›oöãr
Ë(
lua_Sèã
 *
L
, 
idx
);

196 
	#LUA_OPADD
 0

	)

197 
	#LUA_OPSUB
 1

	)

198 
	#LUA_OPMUL
 2

	)

199 
	#LUA_OPMOD
 3

	)

200 
	#LUA_OPPOW
 4

	)

201 
	#LUA_OPDIV
 5

	)

202 
	#LUA_OPIDIV
 6

	)

203 
	#LUA_OPBAND
 7

	)

204 
	#LUA_OPBOR
 8

	)

205 
	#LUA_OPBXOR
 9

	)

206 
	#LUA_OPSHL
 10

	)

207 
	#LUA_OPSHR
 11

	)

208 
	#LUA_OPUNM
 12

	)

209 
	#LUA_OPBNOT
 13

	)

211 
LUA_API
 (
lua_¨ôh
Ë(
lua_Sèã
 *
L
, 
›
);

213 
	#LUA_OPEQ
 0

	)

214 
	#LUA_OPLT
 1

	)

215 
	#LUA_OPLE
 2

	)

217 
LUA_API
 (
lua_øwequÆ
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
);

218 
LUA_API
 (
lua_com∑ª
Ë(
lua_Sèã
 *
L
, 
idx1
, 
idx2
, 
›
);

224 
LUA_API
 (
lua_pushnû
Ë(
lua_Sèã
 *
L
);

225 
LUA_API
 (
lua_pushnumbî
Ë(
lua_Sèã
 *
L
, 
lua_Numbî
 
n
);

226 
LUA_API
 (
lua_pushöãgî
Ë(
lua_Sèã
 *
L
, 
lua_I¡egî
 
n
);

227 
LUA_API
 c⁄° *(
lua_pushl°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
, 
size_t
 
Àn
);

228 
LUA_API
 c⁄° *(
lua_push°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

229 
LUA_API
 c⁄° *(
lua_pushvf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
,

230 
va_li°
 
¨gp
);

231 
LUA_API
 c⁄° *(
lua_pushf°rög
Ë(
lua_Sèã
 *
L
, c⁄° *
fmt
, ...);

232 
LUA_API
 (
lua_pushc˛osuª
Ë(
lua_Sèã
 *
L
, 
lua_CFun˘i⁄
 
‚
, 
n
);

233 
LUA_API
 (
lua_pushboﬁón
Ë(
lua_Sèã
 *
L
, 
b
);

234 
LUA_API
 (
lua_pushlightu£rd©a
Ë(
lua_Sèã
 *
L
, *
p
);

235 
LUA_API
 (
lua_pushthªad
Ë(
lua_Sèã
 *
L
);

241 
LUA_API
 (
lua_gëglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

242 
LUA_API
 (
lua_gëèbÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

243 
LUA_API
 (
lua_gëfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

244 
LUA_API
 (
lua_gëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

245 
LUA_API
 (
lua_øwgë
Ë(
lua_Sèã
 *
L
, 
idx
);

246 
LUA_API
 (
lua_øwgëi
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

247 
LUA_API
 (
lua_øwgëp
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

249 
LUA_API
 (
lua_¸óãèbÀ
Ë(
lua_Sèã
 *
L
, 
«º
, 
ƒec
);

250 
LUA_API
 *(
lua_√wu£rd©a
Ë(
lua_Sèã
 *
L
, 
size_t
 
sz
);

251 
LUA_API
 (
lua_gëmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

252 
LUA_API
 (
lua_gëu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

258 
LUA_API
 (
lua_£tglobÆ
Ë(
lua_Sèã
 *
L
, c⁄° *
«me
);

259 
LUA_API
 (
lua_£âabÀ
Ë(
lua_Sèã
 *
L
, 
idx
);

260 
LUA_API
 (
lua_£tfõld
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
k
);

261 
LUA_API
 (
lua_£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

262 
LUA_API
 (
lua_øw£t
Ë(
lua_Sèã
 *
L
, 
idx
);

263 
LUA_API
 (
lua_øw£ti
Ë(
lua_Sèã
 *
L
, 
idx
, 
lua_I¡egî
 
n
);

264 
LUA_API
 (
lua_øw£ç
Ë(
lua_Sèã
 *
L
, 
idx
, c⁄° *
p
);

265 
LUA_API
 (
lua_£tmë©abÀ
Ë(
lua_Sèã
 *
L
, 
objödex
);

266 
LUA_API
 (
lua_£tu£rvÆue
Ë(
lua_Sèã
 *
L
, 
idx
);

272 
LUA_API
 (
lua_ˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
,

273 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

274 
	#lua_ˇŒ
(
L
,
n
,
r
Ë
	`lua_ˇŒk
(L, (n), (r), 0, 
NULL
)

	)

276 
LUA_API
 (
lua_pˇŒk
Ë(
lua_Sèã
 *
L
, 
«rgs
, 
ƒesu…s
, 
îrfunc
,

277 
lua_KC⁄ãxt
 
˘x
, 
lua_KFun˘i⁄
 
k
);

278 
	#lua_pˇŒ
(
L
,
n
,
r
,
f
Ë
	`lua_pˇŒk
(L, (n), (r), (f), 0, 
NULL
)

	)

280 
LUA_API
 (
lua_lﬂd
Ë(
lua_Sèã
 *
L
, 
lua_Ródî
 
ªadî
, *
dt
,

281 c⁄° *
chunk«me
, c⁄° *
mode
);

283 
LUA_API
 (
lua_dump
Ë(
lua_Sèã
 *
L
, 
lua_Wrôî
 
wrôî
, *
d©a
, 
°rù
);

289 
LUA_API
 (
lua_yõldk
Ë(
lua_Sèã
 *
L
, 
ƒesu…s
, 
lua_KC⁄ãxt
 
˘x
,

290 
lua_KFun˘i⁄
 
k
);

291 
LUA_API
 (
lua_ªsume
Ë(
lua_Sèã
 *
L
,Üua_Sèã *
‰om
, 
«rg
);

292 
LUA_API
 (
lua_°©us
Ë(
lua_Sèã
 *
L
);

293 
LUA_API
 (
lua_isyõldabÀ
Ë(
lua_Sèã
 *
L
);

295 
	#lua_yõld
(
L
,
n
Ë
	`lua_yõldk
(L, (n), 0, 
NULL
)

	)

302 
	#LUA_GCSTOP
 0

	)

303 
	#LUA_GCRESTART
 1

	)

304 
	#LUA_GCCOLLECT
 2

	)

305 
	#LUA_GCCOUNT
 3

	)

306 
	#LUA_GCCOUNTB
 4

	)

307 
	#LUA_GCSTEP
 5

	)

308 
	#LUA_GCSETPAUSE
 6

	)

309 
	#LUA_GCSETSTEPMUL
 7

	)

310 
	#LUA_GCISRUNNING
 9

	)

312 
LUA_API
 (
lua_gc
Ë(
lua_Sèã
 *
L
, 
wh©
, 
d©a
);

319 
LUA_API
 (
lua_îr‹
Ë(
lua_Sèã
 *
L
);

321 
LUA_API
 (
lua_√xt
Ë(
lua_Sèã
 *
L
, 
idx
);

323 
LUA_API
 (
lua_c⁄ˇt
Ë(
lua_Sèã
 *
L
, 
n
);

324 
LUA_API
 (
lua_Àn
Ë(
lua_Sèã
 *
L
, 
idx
);

326 
LUA_API
 
	$size_t
 (
lua_°rögt⁄umbî
Ë(
lua_Sèã
 *
L
, c⁄° *
s
);

328 
LUA_API
 
	$lua_AŒoc
 (
lua_gëÆlocf
Ë(
lua_Sèã
 *
L
, **
ud
);

329 
LUA_API
 (
lua_£èŒocf
Ë(
lua_Sèã
 *
L
, 
lua_AŒoc
 
f
, *
ud
);

339 
	#lua_gëexåa•a˚
(
L
Ë((*)((*)(LË- 
LUA_EXTRASPACE
))

	)

341 
	#lua_t⁄umbî
(
L
,
i
Ë
	`lua_t⁄umbîx
(L,(i),
NULL
)

	)

342 
	#lua_toöãgî
(
L
,
i
Ë
	`lua_toöãgîx
(L,(i),
NULL
)

	)

344 
	#lua_p›
(
L
,
n
Ë
	`lua_£â›
(L, -“)-1)

	)

346 
	#lua_√wèbÀ
(
L
Ë
	`lua_¸óãèbÀ
(L, 0, 0)

	)

348 
	#lua_ªgi°î
(
L
,
n
,
f
Ë(
	`lua_pushcfun˘i⁄
(L, (f)), 
	`lua_£tglobÆ
(L, (n)))

	)

350 
	#lua_pushcfun˘i⁄
(
L
,
f
Ë
	`lua_pushc˛osuª
(L, (f), 0)

	)

352 
	#lua_isfun˘i⁄
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TFUNCTION
)

	)

353 
	#lua_i°abÀ
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTABLE
)

	)

354 
	#lua_i¶ightu£rd©a
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TLIGHTUSERDATA
)

	)

355 
	#lua_i¢û
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNIL
)

	)

356 
	#lua_isboﬁón
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TBOOLEAN
)

	)

357 
	#lua_i°hªad
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TTHREAD
)

	)

358 
	#lua_i¢⁄e
(
L
,
n
Ë(
	`lua_ty≥
(L, (n)Ë=
LUA_TNONE
)

	)

359 
	#lua_i¢⁄e‹nû
(
L
, 
n
Ë(
	`lua_ty≥
(L, (n)Ë<0)

	)

361 
	#lua_pushlôîÆ
(
L
, 
s
Ë
	`lua_push°rög
(L, "" s)

	)

363 
	#lua_pushglobÆèbÀ
(
L
) \

364 
	`lua_øwgëi
(
L
, 
LUA_REGISTRYINDEX
, 
LUA_RIDX_GLOBALS
)

	)

366 
	#lua_to°rög
(
L
,
i
Ë
	`lua_tﬁ°rög
(L, (i), 
NULL
)

	)

369 
	#lua_ö£π
(
L
,
idx
Ë
	`lua_rŸ©e
(L, (idx), 1)

	)

371 
	#lua_ªmove
(
L
,
idx
Ë(
	`lua_rŸ©e
(L, (idx), -1), 
	`lua_p›
(L, 1))

	)

373 
	#lua_ª∂a˚
(
L
,
idx
Ë(
	`lua_c›y
(L, -1, (idx)), 
	`lua_p›
(L, 1))

	)

383 #i‡
	`deföed
(
LUA_COMPAT_APIINTCASTS
)

385 
	#lua_pushunsig√d
(
L
,
n
Ë
	`lua_pushöãgî
(L, (
lua_I¡egî
)“))

	)

386 
	#lua_tounsig√dx
(
L
,
i
,
is
Ë((
lua_Unsig√d
)
	`lua_toöãgîx
(L,i,is))

	)

387 
	#lua_tounsig√d
(
L
,
i
Ë
	`lua_tounsig√dx
(L,(i),
NULL
)

	)

402 
	#LUA_HOOKCALL
 0

	)

403 
	#LUA_HOOKRET
 1

	)

404 
	#LUA_HOOKLINE
 2

	)

405 
	#LUA_HOOKCOUNT
 3

	)

406 
	#LUA_HOOKTAILCALL
 4

	)

412 
	#LUA_MASKCALL
 (1 << 
LUA_HOOKCALL
)

	)

413 
	#LUA_MASKRET
 (1 << 
LUA_HOOKRET
)

	)

414 
	#LUA_MASKLINE
 (1 << 
LUA_HOOKLINE
)

	)

415 
	#LUA_MASKCOUNT
 (1 << 
LUA_HOOKCOUNT
)

	)

417 
lua_Debug
 
	tlua_Debug
;

421 (*
	tlua_Hook
Ë(
	tlua_Sèã
 *
	tL
, 
	tlua_Debug
 *
	t¨
);

424 
LUA_API
 (
lua_gë°ack
Ë(
lua_Sèã
 *
L
, 
Àvñ
, 
lua_Debug
 *
¨
);

425 
LUA_API
 (
lua_gëöfo
Ë(
lua_Sèã
 *
L
, c⁄° *
wh©
, 
lua_Debug
 *
¨
);

426 
LUA_API
 c⁄° *(
lua_gëloˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

427 
LUA_API
 c⁄° *(
lua_£éoˇl
Ë(
lua_Sèã
 *
L
, c⁄° 
lua_Debug
 *
¨
, 
n
);

428 
LUA_API
 c⁄° *(
lua_gëupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

429 
LUA_API
 c⁄° *(
lua_£tupvÆue
Ë(
lua_Sèã
 *
L
, 
funcödex
, 
n
);

431 
LUA_API
 *(
lua_upvÆueid
Ë(
lua_Sèã
 *
L
, 
fidx
, 
n
);

432 
LUA_API
 (
lua_upvÆuejoö
Ë(
lua_Sèã
 *
L
, 
fidx1
, 
n1
,

433 
fidx2
, 
n2
);

435 
LUA_API
 (
lua_£thook
Ë(
lua_Sèã
 *
L
, 
lua_Hook
 
func
, 
mask
, 
cou¡
);

436 
LUA_API
 
	$lua_Hook
 (
lua_gëhook
Ë(
lua_Sèã
 *
L
);

437 
LUA_API
 (
lua_gëhookmask
Ë(
lua_Sèã
 *
L
);

438 
LUA_API
 (
lua_gëhookcou¡
Ë(
lua_Sèã
 *
L
);

441 
	slua_Debug
 {

442 
evít
;

443 c⁄° *
«me
;

444 c⁄° *
«mewh©
;

445 c⁄° *
wh©
;

446 c⁄° *
sour˚
;

447 
cuºíéöe
;

448 
löedeföed
;

449 
œ°löedeföed
;

450 
nups
;

451 
≈¨ams
;

452 
isv¨¨g
;

453 
i°aûˇŒ
;

454 
sh‹t_§c
[
LUA_IDSIZE
];

456 
CÆlInfo
 *
i_ci
;

	@lib/lua/src/lua.hpp

6 
	~"lua.h
"

7 
	~"luÆib.h
"

8 
	~"œuxlib.h
"

	@lib/lua/src/lua_shell.c

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

10 
	~<sig«l.h
>

12 
	#lua_c


	)

14 
	~"lua.h
"

15 
	~"l°©e.h
"

17 
	~"œuxlib.h
"

18 
	~"luÆib.h
"

19 
	~"lua-sockë.h
"

20 
	~"lua_shñl.h
"

22 #i‡!
deföed
(
LUA_PROGNAME
)

23 
	#LUA_PROGNAME
 "lua-shñl"

	)

26 #i‡!
deföed
(
LUA_MAXINPUT
)

27 
	#LUA_MAXINPUT
 1024

	)

30 #i‡!
deföed
(
LUA_INIT
)

31 
	#LUA_INIT
 "LUA_INIT"

	)

34 
	#LUA_INITVERSION
 \

35 
LUA_INIT
 "_" 
LUA_VERSION_MAJOR
 "_" 
LUA_VERSION_MINOR


	)

43 #i‡
deföed
(
LUA_USE_READLINE
)

45 
	~<°dio.h
>

46 
	~<ªadlöe/ªadlöe.h
>

47 
	~<ªadlöe/hi°‹y.h
>

48 
	#lua_ªadlöe
(
L
,
b
Ë(()L, ((b)=
	`ªadlöe
(
NULL
)Ë!NULL)

	)

49 
	#lua_ßvñöe
(
L
,
idx
) \

50 i‡(
	`lua_øwÀn
(
L
,
idx
) > 0) \

51 
	`add_hi°‹y
(
	`lua_to°rög
(
L
, 
idx
));

	)

52 
	#lua_‰ìlöe
(
L
,
b
Ë(()L, 
	`‰ì
(b))

	)

54 #ñi‡!
deföed
(
lua_ªadlöe
)

56 
	#lua_ªadlöe
(
L
,
b
) \

57 (()
L
, 
	`fgës
(
b
, 
LUA_MAXINPUT
, 
	`_gë_°dö
(L)Ë!
NULL
Ë

	)

58 
	#lua_ßvñöe
(
L
,
idx
Ë{ ()L; ()idx; }

	)

59 
	#lua_‰ìlöe
(
L
,
b
Ë{ ()L; ()b; }

	)

63 
lua_Sèã
 *
	gglobÆL
 = 
NULL
;

65 c⁄° *
	g¥og«me
 = 
LUA_PROGNAME
;

67 
	$l°›
(
lua_Sèã
 *
L
, 
lua_Debug
 *
¨
) {

68 (Ë
¨
;

69 
	`lua_£thook
(
L
, 
NULL
, 0, 0);

70 
	`luaL_îr‹
(
L
, "interrupted!");

71 
	}
}

73 
	$œ˘i⁄
(
i
) {

74 
	`sig«l
(
i
, 
SIG_DFL
 );

76 
	`lua_£thook
(
globÆL
, 
l°›
, 
LUA_MASKCALL
 | 
LUA_MASKRET
 | 
LUA_MASKCOUNT
, 1);

77 
	}
}

79 
	$l_mesßge
(
lua_Sèã
 *
L
, c⁄° *
≤ame
, c⁄° *
msg
) {

80 i‡(
≤ame
)

81 
	`lua_wrôe°rögîr‹
("%s: ", 
≤ame
);

82 
	`lua_wrôe°rögîr‹
("%s\n", 
msg
);

83 
	}
}

85 
	$ªp‹t
(
lua_Sèã
 *
L
, 
°©us
) {

86 i‡(
°©us
 !
LUA_OK
 && !
	`lua_i¢û
(
L
, -1)) {

87 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, -1);

88 i‡(
msg
 =
NULL
 )

89 
msg
 = "(error object isÇotá string)";

90 
	`l_mesßge
(
L
, 
¥og«me
, 
msg
);

91 
	`lua_p›
(
L
, 1);

93 
	`lua_gc
(
L
, 
LUA_GCCOLLECT
, 0);

95  
°©us
;

96 
	}
}

99 
	$föÆªp‹t
(
lua_Sèã
 *
L
, 
°©us
) {

100 i‡(
°©us
 !
LUA_OK
) {

101 c⁄° *
msg
 =

102 (
	`lua_ty≥
(
L
, -1Ë=
LUA_TSTRING
Ë? 
	`lua_to°rög
(L, -1Ë: 
NULL
;

103 i‡(
msg
 =
NULL
 )

104 
msg
 = "(error object isÇotá string)";

105 
	`l_mesßge
(
L
, 
¥og«me
, 
msg
);

106 
	`lua_p›
(
L
, 1);

108 
	}
}

110 
	$åa˚back
(
lua_Sèã
 *
L
) {

111 c⁄° *
msg
 = 
	`lua_to°rög
(
L
, 1);

112 i‡(
msg
)

113 
	`luaL_åa˚back
(
L
, L, 
msg
, 1);

114 i‡(!
	`lua_i¢⁄e‹nû
(
L
, 1)) {

115 i‡(!
	`luaL_ˇŒmëa
(
L
, 1, "__tostring"))

116 
	`lua_pushlôîÆ
(
L
, "(noÉrror message)");

119 
	}
}

121 
	$doˇŒ
(
lua_Sèã
 *
L
, 
«rg
, 
ƒes
) {

122 
°©us
;

123 
ba£
 = 
	`lua_gët›
(
L
Ë- 
«rg
;

125 
	`lua_pushcfun˘i⁄
(
L
, 
åa˚back
);

127 
	`lua_ö£π
(
L
, 
ba£
);

128 
globÆL
 = 
L
;

129 
	`sig«l
(
SIGINT
, 
œ˘i⁄
);

130 
°©us
 = 
	`lua_pˇŒ
(
L
, 
«rg
, 
ƒes
, 
ba£
);

131 
	`sig«l
(
SIGINT
, 
SIG_DFL
 );

132 
globÆL
 = 
NULL
;

133 
	`lua_ªmove
(
L
, 
ba£
);

135  
°©us
;

136 
	}
}

138 
	$dofûe
(
lua_Sèã
 *
L
, c⁄° *
«me
) {

139 
°©us
 = 
	`luaL_lﬂdfûe
(
L
, 
«me
);

140 i‡(
°©us
 =
LUA_OK
)

141 
°©us
 = 
	`doˇŒ
(
L
, 0, 0);

142  
	`ªp‹t
(
L
, 
°©us
);

143 
	}
}

145 
	$do°rög
(
lua_Sèã
 *
L
, c⁄° *
s
, c⁄° *
«me
) {

146 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
s
, 
	`°æí
(s), 
«me
);

147 i‡(
°©us
 =
LUA_OK
)

148 
°©us
 = 
	`doˇŒ
(
L
, 0, 0);

149  
	`ªp‹t
(
L
, 
°©us
);

150 
	}
}

152 
	$dﬁibøry
(
lua_Sèã
 *
L
, c⁄° *
«me
) {

153 
°©us
;

154 
	`lua_gëglobÆ
(
L
, "require");

155 
	`lua_push°rög
(
L
, 
«me
);

156 
°©us
 = 
	`doˇŒ
(
L
, 1, 1);

157 i‡(
°©us
 =
LUA_OK
)

158 
	`lua_£tglobÆ
(
L
, 
«me
);

159  
	`ªp‹t
(
L
, 
°©us
);

160 
	}
}

163 
	#EOFMARK
 "<eof>"

	)

164 
	#m¨kÀn
 ((
EOFMARK
)/(Ë- 1)

	)

166 
	$öcom∂ëe
(
lua_Sèã
 *
L
, 
°©us
) {

167 i‡(
°©us
 =
LUA_ERRSYNTAX
) {

168 
size_t
 
lmsg
;

169 c⁄° *
msg
 = 
	`lua_tﬁ°rög
(
L
, -1, &
lmsg
);

170 i‡(
lmsg
 >
m¨kÀn
 && 
	`°rcmp
(
msg
 +Ümsg - m¨kÀn, 
EOFMARK
) == 0) {

171 
	`lua_p›
(
L
, 1);

176 
	}
}

178 
	$pushlöe
(
lua_Sèã
 *
L
, 
fú°löe
) {

179 
buf„r
[
LUA_MAXINPUT
];

180 *
b
 = 
buf„r
;

181 
size_t
 
l
;

183 i‡(
	`lua_ªadlöe
(
L
, 
b
) == 0)

186 
l
 = 
	`°æí
(
b
);

187 i‡(
l
 > 0 && 
b
[l - 1] == '\n')

188 
b
[
l
 - 1] = '\0';

189 i‡(
fú°löe
 && 
b
[0] == '=')

190 
	`lua_pushf°rög
(
L
, "ªtu∫ %s", 
b
 + 1);

192 
	`lua_push°rög
(
L
, 
b
);

193 
	`lua_‰ìlöe
(
L
, 
b
);

196 
	}
}

198 
	$lﬂdlöe
(
lua_Sèã
 *
L
) {

199 
°©us
;

201 
	`lua_£â›
(
L
, 0);

202 i‡(!
	`pushlöe
(
L
, 1))

206 
size_t
 
l
;

207 c⁄° *
löe
 = 
	`lua_tﬁ°rög
(
L
, 1, &
l
);

209 
°©us
 = 
	`luaL_lﬂdbuf„r
(
L
, 
löe
, 
l
, "=stdin");

210 i‡(!
	`öcom∂ëe
(
L
, 
°©us
))

213 i‡(!
	`pushlöe
(
L
, 0))

216 
	`lua_pushlôîÆ
(
L
, "\n");

217 
	`lua_ö£π
(
L
, -2);

218 
	`lua_c⁄ˇt
(
L
, 3);

220 
	`lua_ßvñöe
(
L
, 1);

221 
	`lua_ªmove
(
L
, 1);

222  
°©us
;

223 
	}
}

225 
	$dŸty
(
lua_Sèã
 *
L
) {

226 
°©us
;

227 c⁄° *
ﬁd¥og«me
 = 
¥og«me
;

228 
¥og«me
 = 
NULL
;

230 (
°©us
 = 
	`lﬂdlöe
(
L
)) != -1) {

231 i‡(
°©us
 =
LUA_OK
)

232 
°©us
 = 
	`doˇŒ
(
L
, 0, 
LUA_MULTRET
);

233 
	`ªp‹t
(
L
, 
°©us
);

234 i‡(
°©us
 =
LUA_OK
 && 
	`lua_gët›
(
L
) > 0) {

235 
	`luaL_check°ack
(
L
, 
LUA_MINSTACK
, "too manyÑesultsÅoÖrint");

236 
	`lua_gëglobÆ
(
L
, "print");

237 
	`lua_ö£π
(
L
, 1);

238 i‡(
	`lua_pˇŒ
(
L
, 
	`lua_gët›
(L)-1, 0, 0Ë!
LUA_OK
)

239 
	`l_mesßge
(
L
, 
¥og«me
,

240 
	`lua_pushf°rög
(
L
,

241 "îr‹ cÆlög " 
	`LUA_QL
("print") " (%s)",

242 
	`lua_to°rög
(
L
, -1)));

245 
	`lua_£â›
(
L
, 0);

246 
	`lua_wrôñöe
();

248 
¥og«me
 = 
ﬁd¥og«me
;

249 
	}
}

251 
	$h™dÀ_luaöô
(
lua_Sèã
 *
L
) {

252 c⁄° *
«me
 = "=" 
LUA_INITVERSION
;

253 c⁄° *
öô
 = 
	`gëív
(
«me
 + 1);

254 i‡(
öô
 =
NULL
 ) {

255 
«me
 = "=" 
LUA_INIT
;

256 
öô
 = 
	`gëív
(
«me
 + 1);

258 i‡(
öô
 =
NULL
 )

259  
LUA_OK
;

260 i‡(
öô
[0] == '@')

261  
	`dofûe
(
L
, 
öô
 + 1);

263  
	`do°rög
(
L
, 
öô
, 
«me
);

264 
	}
}

266 
√wlib_t
 
	g√wlibs
[
MAX_NEW_LIBS
];

267 
	g√wlibs_idx
 = 0;

269 
	$lua_√wlib_add
(
√wlib_t
 
n
) {

270 i‡–
√wlibs_idx
 >
MAX_NEW_LIBS
 )

272 
√wlibs
[
√wlibs_idx
++] = 
n
;

274 
	}
}

276 
	$lua_√wlibs_öô
(
lua_Sèã
 * 
L
) {

277 
i
;

279 
i
 = 0; i < 
√wlibs_idx
; i++)

280 
√wlibs
[
i
](
L
);

282 
	}
}

284 
	$pmaö
(
lua_Sèã
 *
L
) {

287 
	`luaL_checkvîsi⁄
(
L
);

289 
	`lua_√wlibs_öô
(
L
);

291 i‡(
	`h™dÀ_luaöô
(
L
Ë!
LUA_OK
)

294 
	`_£t_°dfûes
(
L
, 
	`luaL_gë¥iv©e
(L));

296 
	`dŸty
(
L
);

298 
	`_ª£t_°dfûes
(
L
);

300 
	`lua_pushboﬁón
(
L
, 1);

303 
	}
}

305 
	$lua_shñl
(* 
pSîvî
) {

306 
°©us
, 
ªsu…
;

307 
lua_Sèã
 *
L
;

309 
L
 = 
	`luaL_√w°©e
();

310 i‡(
L
 =
NULL
 ) {

311 
	`l_mesßge
(
L
, "Lua-Shell", "cannot create state:ÇotÉnough memory");

312  
EXIT_FAILURE
;

314 
	`luaL_£çriv©e
(
L
, 
pSîvî
);

317 
	`lua_pushcfun˘i⁄
(
L
, &
pmaö
);

318 
°©us
 = 
	`lua_pˇŒ
(
L
, 0, 1, 0);

319 
ªsu…
 = 
	`lua_toboﬁón
(
L
, -1);

320 
	`föÆªp‹t
(
L
, 
°©us
);

321 
	`lua_˛o£
(
L
);

323  (
ªsu…
 && 
°©us
 =
LUA_OK
Ë? 
EXIT_SUCCESS
 : 
EXIT_FAILURE
;

324 
	}
}

339 
	$execuã_lua_°rög
–
lua_Sèã
 * 
L
, * 
buf„r
 )

341 i‡–(
buf„r
 =
NULL
Ë|| (
L
 == NULL) )

344 i‡–
	`luaL_do°rög
(
L
, 
buf„r
) != 0 ) {

345 
	`Ârötf
(
°dîr
,"%s\n", 
	`lua_to°rög
(
L
,-1));

350 
	}
}

365 
	$execuã_lua_˛o£
(
lua_Sèã
 * 
L
)

367 i‡–
L
 )

368 
	`lua_˛o£
(
L
);

369 
	}
}

371 
LUA_API
 
	$lua_£çriv©e
(
lua_Sèã
 * 
L
, * 
vÆ
) {

372 
L
->
¥iv©e
 = 
vÆ
;

373 
	}
}

375 
LUA_API
 * 
	$lua_gë¥iv©e
(
lua_Sèã
 * 
L
) {

376  
L
->
¥iv©e
;

377 
	}
}

379 
LUALIB_API
 *

380 
	$luaL_gë¥iv©e
(
lua_Sèã
 * 
L
)

382  (
L
 =
NULL
Ë? NULL : 
	`lua_gë¥iv©e
(L);

383 
	}
}

385 
LUALIB_API
 

386 
	$luaL_£çriv©e
(
lua_Sèã
 * 
L
, * 
vÆ
)

388 i‡–
L
 =
NULL
 )

390 
	`lua_£çriv©e
(
L
, 
vÆ
);

392 
	}
}

395 
	$lua_£t_°dfûes
(
lua_Sèã
 * 
L
, * 
ö
, * 
out
, * 
îr
)

397 
	`luaL_gëmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

398 i‡(
	`lua_i¢û
(
L
, -1)) {

399 
	`¥ötf
("luaL_getmetatable()Ñeturned NIL\n");

404 
	`¸óã°dfûe
(
L
, 
ö
, 
IO_INPUT
, "stdin");

405 
	`¸óã°dfûe
(
L
, 
out
, 
IO_OUTPUT
, "stdout");

406 
	`¸óã°dfûe
(
L
, 
îr
, 
NULL
, "stderr");

407 
	}
}

410 
	$lua_ª£t_°dfûes
(
lua_Sèã
 * 
L
)

412 
	`luaL_gëmë©abÀ
(
L
, 
LUA_FILEHANDLE
);

413 i‡(
	`lua_i¢û
(
L
, -1))

417 
	`¸óã°dfûe
(
L
, 
°dö
, 
IO_INPUT
, "stdin");

418 
	`¸óã°dfûe
(
L
, 
°dout
, 
IO_OUTPUT
, "stdout");

419 
	`¸óã°dfûe
(
L
, 
°dîr
, 
NULL
, "stderr");

420 
	}
}

	@lib/lua/src/lua_shell.h

67 #i‚de‡
LUA_SHELL_H_


68 
	#LUA_SHELL_H_


	)

70 
	#lua_c


	)

71 
	~"lua.h
"

72 
	~"œuxlib.h
"

74 
	#IO_PREFIX
 "_IO_"

	)

75 
	#IOPREF_LEN
 ((
IO_PREFIX
)/(Ë- 1)

	)

76 
	#IO_INPUT
 (
IO_PREFIX
 "öput")

	)

77 
	#IO_OUTPUT
 (
IO_PREFIX
 "ouçut")

	)

79 
	#MAX_NEW_LIBS
 16

	)

80 (*
	t√wlib_t
)(
	tlua_Sèã
 * 
	tL
);

82 
	`lua_√wlib_add
(
√wlib_t
 
n
);

83 
	`lua_√wlibs_öô
(
lua_Sèã
 * 
L
);

85 
LUALIB_API
 
	`luaL_£çriv©e
(
lua_Sèã
 * 
L
, * 
vÆ
);

86 
LUALIB_API
 * 
	`luaL_gë¥iv©e
(
lua_Sèã
 * 
L
);

88 
LUA_API
 (
lua_£çriv©e
Ë(
lua_Sèã
 * 
L
, * 
vÆ
) ;

89 
LUA_API
 * (
lua_gë¥iv©e
Ë(
lua_Sèã
 * 
L
);

91 
	`¸óã°dfûe
 (
lua_Sèã
 *
L
, 
FILE
 *
f
, c⁄° *
k
,

92 c⁄° *
‚ame
);

	@lib/lua/src/luac.c

7 
	#luac_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<˘y≥.h
>

13 
	~<î∫o.h
>

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

19 
	~"œuxlib.h
"

21 
	~"lobje˘.h
"

22 
	~"l°©e.h
"

23 
	~"lundump.h
"

25 
PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
);

26 
	#luaU_¥öt
 
PrötFun˘i⁄


	)

28 
	#PROGNAME
 "luac"

	)

29 
	#OUTPUT
 
PROGNAME
 ".out"

	)

31 
	gli°ög
=0;

32 
	gdumpög
=1;

33 
	g°rùpög
=0;

34 
	gOuçut
[]={ 
OUTPUT
 };

35 c⁄° * 
	gouçut
=
Ouçut
;

36 c⁄° * 
	g¥og«me
=
PROGNAME
;

38 
	$Áèl
(c⁄° * 
mesßge
)

40 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

41 
	`exô
(
EXIT_FAILURE
);

42 
	}
}

44 
	$ˇ¬Ÿ
(c⁄° * 
wh©
)

46 
	`Ârötf
(
°dîr
,"%s: c™nŸ %†%s: %s\n",
¥og«me
,
wh©
,
ouçut
,
	`°ªº‹
(
î∫o
));

47 
	`exô
(
EXIT_FAILURE
);

48 
	}
}

50 
	$ußge
(c⁄° * 
mesßge
)

52 i‡(*
mesßge
=='-')

53 
	`Ârötf
(
°dîr
,"%s: uƒecognized o±i⁄ '%s'\n",
¥og«me
,
mesßge
);

55 
	`Ârötf
(
°dîr
,"%s: %s\n",
¥og«me
,
mesßge
);

56 
	`Ârötf
(
°dîr
,

66 ,
¥og«me
,
Ouçut
);

67 
	`exô
(
EXIT_FAILURE
);

68 
	}
}

70 
	#IS
(
s
Ë(
	`°rcmp
(
¨gv
[
i
],s)==0)

	)

72 
	$dﬂrgs
(
¨gc
, * 
¨gv
[])

74 
i
;

75 
vîsi⁄
=0;

76 i‡(
¨gv
[0]!=
NULL
 && *¨gv[0]!=0Ë
¥og«me
=argv[0];

77 
i
=1; i<
¨gc
; i++)

79 i‡(*
¨gv
[
i
]!='-')

81 i‡(
	`IS
("--"))

83 ++
i
;

84 i‡(
vîsi⁄
) ++version;

87 i‡(
	`IS
("-"))

89 i‡(
	`IS
("-l"))

90 ++
li°ög
;

91 i‡(
	`IS
("-o"))

93 
ouçut
=
¨gv
[++
i
];

94 i‡(
ouçut
==
NULL
 || *output==0 || (*output=='-' && output[1]!=0))

95 
	`ußge
("'-o'Çeedsárgument");

96 i‡(
	`IS
("-")Ë
ouçut
=
NULL
;

98 i‡(
	`IS
("-p"))

99 
dumpög
=0;

100 i‡(
	`IS
("-s"))

101 
°rùpög
=1;

102 i‡(
	`IS
("-v"))

103 ++
vîsi⁄
;

105 
	`ußge
(
¨gv
[
i
]);

107 i‡(
i
==
¨gc
 && (
li°ög
 || !
dumpög
))

109 
dumpög
=0;

110 
¨gv
[--
i
]=
Ouçut
;

112 i‡(
vîsi⁄
)

114 
	`¥ötf
("%s\n",
LUA_COPYRIGHT
);

115 i‡(
vîsi⁄
==
¨gc
-1Ë
	`exô
(
EXIT_SUCCESS
);

117  
i
;

118 
	}
}

120 
	#FUNCTION
 "(fun˘i⁄(Înd)();"

	)

122 c⁄° * 
	$ªadî
(
lua_Sèã
 *
L
, *
ud
, 
size_t
 *
size
)

124 
	`UNUSED
(
L
);

125 i‡((*(*)
ud
)--)

127 *
size
=(
FUNCTION
)-1;

128  
FUNCTION
;

132 *
size
=0;

133  
NULL
;

135 
	}
}

137 
	#t›rŸo
(
L
,
i
Ë
	`gë¥Ÿo
(L->
t›
+(i))

	)

139 c⁄° 
PrŸo
* 
	$comböe
(
lua_Sèã
* 
L
, 
n
)

141 i‡(
n
==1)

142  
	`t›rŸo
(
L
,-1);

145 
PrŸo
* 
f
;

146 
i
=
n
;

147 i‡(
	`lua_lﬂd
(
L
,
ªadî
,&
i
,"=(" 
PROGNAME
 ")",
NULL
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

148 
f
=
	`t›rŸo
(
L
,-1);

149 
i
=0; i<
n
; i++)

151 
f
->
p
[
i
]=
	`t›rŸo
(
L
,i-
n
-1);

152 i‡(
f
->
p
[
i
]->
sizeupvÆues
>0Ëf->p[i]->
upvÆues
[0].
ö°ack
=0;

154 
f
->
sizñöeöfo
=0;

155  
f
;

157 
	}
}

159 
	$wrôî
(
lua_Sèã
* 
L
, c⁄° * 
p
, 
size_t
 
size
, * 
u
)

161 
	`UNUSED
(
L
);

162  (
	`fwrôe
(
p
,
size
,1,(
FILE
*)
u
)!=1) && (size!=0);

163 
	}
}

165 
	$pmaö
(
lua_Sèã
* 
L
)

167 
¨gc
=()
	`lua_toöãgî
(
L
,1);

168 ** 
¨gv
=(**)
	`lua_tou£rd©a
(
L
,2);

169 c⁄° 
PrŸo
* 
f
;

170 
i
;

171 i‡(!
	`lua_check°ack
(
L
,
¨gc
)Ë
	`Áèl
("too many input files");

172 
i
=0; i<
¨gc
; i++)

174 c⁄° * 
fûíame
=
	`IS
("-"Ë? 
NULL
 : 
¨gv
[
i
];

175 i‡(
	`luaL_lﬂdfûe
(
L
,
fûíame
)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

177 
f
=
	`comböe
(
L
,
¨gc
);

178 i‡(
li°ög
Ë
	`luaU_¥öt
(
f
,listing>1);

179 i‡(
dumpög
)

181 
FILE
* 
D
(
ouçut
==
NULL
Ë? 
°dout
 : 
	`f›í
(output,"wb");

182 i‡(
D
==
NULL
Ë
	`ˇ¬Ÿ
("open");

183 
	`lua_lock
(
L
);

184 
	`luaU_dump
(
L
,
f
,
wrôî
,
D
,
°rùpög
);

185 
	`lua_u∆ock
(
L
);

186 i‡(
	`„º‹
(
D
)Ë
	`ˇ¬Ÿ
("write");

187 i‡(
	`f˛o£
(
D
)Ë
	`ˇ¬Ÿ
("close");

190 
	}
}

192 
	$maö
(
¨gc
, * 
¨gv
[])

194 
lua_Sèã
* 
L
;

195 
i
=
	`dﬂrgs
(
¨gc
,
¨gv
);

196 
¨gc
-=
i
; 
¨gv
+=i;

197 i‡(
¨gc
<=0Ë
	`ußge
("no input files given");

198 
L
=
	`luaL_√w°©e
();

199 i‡(
L
==
NULL
Ë
	`Áèl
("cannot create state:ÇotÉnough memory");

200 
	`lua_pushcfun˘i⁄
(
L
,&
pmaö
);

201 
	`lua_pushöãgî
(
L
,
¨gc
);

202 
	`lua_pushlightu£rd©a
(
L
,
¨gv
);

203 i‡(
	`lua_pˇŒ
(
L
,2,0,0)!=
LUA_OK
Ë
	`Áèl
(
	`lua_to°rög
(L,-1));

204 
	`lua_˛o£
(
L
);

205  
EXIT_SUCCESS
;

206 
	}
}

214 
	~<˘y≥.h
>

215 
	~<°dio.h
>

217 
	#luac_c


	)

218 
	#LUA_CORE


	)

220 
	~"ldebug.h
"

221 
	~"lobje˘.h
"

222 
	~"l›codes.h
"

224 
	#VOID
(
p
Ë((c⁄° *)’))

	)

226 
	$PrötSåög
(c⁄° 
TSåög
* 
ts
)

228 c⁄° * 
s
=
	`gë°r
(
ts
);

229 
size_t
 
i
,
n
=
	`ts¶í
(
ts
);

230 
	`¥ötf
("%c",'"');

231 
i
=0; i<
n
; i++)

233 
c
=()()
s
[
i
];

234 
c
)

236 '"': 
	`¥ötf
("\\\""); ;

237 '\\': 
	`¥ötf
("\\\\"); ;

238 '\a': 
	`¥ötf
("\\a"); ;

239 '\b': 
	`¥ötf
("\\b"); ;

240 '\f': 
	`¥ötf
("\\f"); ;

241 '\n': 
	`¥ötf
("\\n"); ;

242 '\r': 
	`¥ötf
("\\r"); ;

243 '\t': 
	`¥ötf
("\\t"); ;

244 '\v': 
	`¥ötf
("\\v"); ;

245 : i‡(
	`i•röt
(
c
))

246 
	`¥ötf
("%c",
c
);

248 
	`¥ötf
("\\%03d",
c
);

251 
	`¥ötf
("%c",'"');

252 
	}
}

254 
	$PrötC⁄°™t
(c⁄° 
PrŸo
* 
f
, 
i
)

256 c⁄° 
TVÆue
* 
o
=&
f
->
k
[
i
];

257 
	`ây≥
(
o
))

259 
LUA_TNIL
:

260 
	`¥ötf
("nil");

262 
LUA_TBOOLEAN
:

263 
	`¥ötf
(
	`bvÆue
(
o
) ? "true" : "false");

265 
LUA_TNUMFLT
:

267 
buff
[100];

268 
	`•rötf
(
buff
,
LUA_NUMBER_FMT
,
	`ÊtvÆue
(
o
));

269 
	`¥ötf
("%s",
buff
);

270 i‡(
buff
[
	`°r•n
(buff,"-0123456789")]=='\0'Ë
	`¥ötf
(".0");

273 
LUA_TNUMINT
:

274 
	`¥ötf
(
LUA_INTEGER_FMT
,
	`ivÆue
(
o
));

276 
LUA_TSHRSTR
: 
LUA_TLNGSTR
:

277 
	`PrötSåög
(
	`tsvÆue
(
o
));

280 
	`¥ötf
("?Åy≥=%d",
	`ây≥
(
o
));

283 
	}
}

285 
	#UPVALNAME
(
x
Ë((
f
->
upvÆues
[x].
«me
Ë? 
	`gë°r
(f->upvÆues[x].«meË: "-")

	)

286 
	#MYK
(
x
Ë(-1-(x))

	)

288 
	$PrötCode
(c⁄° 
PrŸo
* 
f
)

290 c⁄° 
In°ru˘i⁄
* 
code
=
f
->code;

291 
pc
,
n
=
f
->
sizecode
;

292 
pc
=0;Öc<
n
;Öc++)

294 
In°ru˘i⁄
 
i
=
code
[
pc
];

295 
OpCode
 
o
=
	`GET_OPCODE
(
i
);

296 
a
=
	`GETARG_A
(
i
);

297 
b
=
	`GETARG_B
(
i
);

298 
c
=
	`GETARG_C
(
i
);

299 
ax
=
	`GETARG_Ax
(
i
);

300 
bx
=
	`GETARG_Bx
(
i
);

301 
sbx
=
	`GETARG_sBx
(
i
);

302 
löe
=
	`gëfun˛öe
(
f
,
pc
);

303 
	`¥ötf
("\t%d\t",
pc
+1);

304 i‡(
löe
>0Ë
	`¥ötf
("[%d]\t",line); printf("[-]\t");

305 
	`¥ötf
("%-9s\t",
luaP_›«mes
[
o
]);

306 
	`gëOpMode
(
o
))

308 
iABC
:

309 
	`¥ötf
("%d",
a
);

310 i‡(
	`gëBMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
b
Ë? (
	`MYK
(
	`INDEXK
(b))) : b);

311 i‡(
	`gëCMode
(
o
)!=
OpArgN
Ë
	`¥ötf
(" %d",
	`ISK
(
c
Ë? (
	`MYK
(
	`INDEXK
(c))) : c);

313 
iABx
:

314 
	`¥ötf
("%d",
a
);

315 i‡(
	`gëBMode
(
o
)==
OpArgK
Ë
	`¥ötf
(" %d",
	`MYK
(
bx
));

316 i‡(
	`gëBMode
(
o
)==
OpArgU
Ë
	`¥ötf
(" %d",
bx
);

318 
iAsBx
:

319 
	`¥ötf
("%d %d",
a
,
sbx
);

321 
iAx
:

322 
	`¥ötf
("%d",
	`MYK
(
ax
));

325 
o
)

327 
OP_LOADK
:

328 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
bx
);

330 
OP_GETUPVAL
:

331 
OP_SETUPVAL
:

332 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

334 
OP_GETTABUP
:

335 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
b
));

336 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

338 
OP_SETTABUP
:

339 
	`¥ötf
("\t; %s",
	`UPVALNAME
(
a
));

340 i‡(
	`ISK
(
b
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); }

341 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
(" "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

343 
OP_GETTABLE
:

344 
OP_SELF
:

345 i‡(
	`ISK
(
c
)Ë{ 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); }

347 
OP_SETTABLE
:

348 
OP_ADD
:

349 
OP_SUB
:

350 
OP_MUL
:

351 
OP_POW
:

352 
OP_DIV
:

353 
OP_IDIV
:

354 
OP_BAND
:

355 
OP_BOR
:

356 
OP_BXOR
:

357 
OP_SHL
:

358 
OP_SHR
:

359 
OP_EQ
:

360 
OP_LT
:

361 
OP_LE
:

362 i‡(
	`ISK
(
b
Ë|| ISK(
c
))

364 
	`¥ötf
("\t; ");

365 i‡(
	`ISK
(
b
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(b)); 
	`¥ötf
("-");

366 
	`¥ötf
(" ");

367 i‡(
	`ISK
(
c
)Ë
	`PrötC⁄°™t
(
f
,
	`INDEXK
(c)); 
	`¥ötf
("-");

370 
OP_JMP
:

371 
OP_FORLOOP
:

372 
OP_FORPREP
:

373 
OP_TFORLOOP
:

374 
	`¥ötf
("\t;Åÿ%d",
sbx
+
pc
+2);

376 
OP_CLOSURE
:

377 
	`¥ötf
("\t; %p",
	`VOID
(
f
->
p
[
bx
]));

379 
OP_SETLIST
:

380 i‡(
c
==0Ë
	`¥ötf
("\t; %d",()
code
[++
pc
]); printf("\t; %d",c);

382 
OP_EXTRAARG
:

383 
	`¥ötf
("\t; "); 
	`PrötC⁄°™t
(
f
,
ax
);

388 
	`¥ötf
("\n");

390 
	}
}

392 
	#SS
(
x
Ë((x==1)?"":"s")

	)

393 
	#S
(
x
Ë()(x),
	`SS
(x)

	)

395 
	$PrötHódî
(c⁄° 
PrŸo
* 
f
)

397 c⁄° * 
s
=
f
->
sour˚
 ? 
	`gë°r
(f->source) : "=?";

398 i‡(*
s
=='@' || *s=='=')

399 
s
++;

400 i‡(*
s
==
LUA_SIGNATURE
[0])

401 
s
="(bstring)";

403 
s
="(string)";

404 
	`¥ötf
("\n%s <%s:%d,%d> (%d instruction%sát %p)\n",

405 (
f
->
löedeföed
==0)?"maö":"fun˘i⁄",
s
,

406 
f
->
löedeföed
,f->
œ°löedeföed
,

407 
	`S
(
f
->
sizecode
),
	`VOID
(f));

408 
	`¥ötf
("%d%sÖaram%s, %d slot%s, %d upvalue%s, ",

409 ()(
f
->
num∑øms
),f->
is_v¨¨g
?"+":"",
	`SS
(f->numparams),

410 
	`S
(
f
->
max°acksize
),S(f->
sizeupvÆues
));

411 
	`¥ötf
("%dÜocal%s, %d constant%s, %d function%s\n",

412 
	`S
(
f
->
sizñocv¨s
),S(f->
sizek
),S(f->
sizï
));

413 
	}
}

415 
	$PrötDebug
(c⁄° 
PrŸo
* 
f
)

417 
i
,
n
;

418 
n
=
f
->
sizek
;

419 
	`¥ötf
("c⁄°™t†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

420 
i
=0; i<
n
; i++)

422 
	`¥ötf
("\t%d\t",
i
+1);

423 
	`PrötC⁄°™t
(
f
,
i
);

424 
	`¥ötf
("\n");

426 
n
=
f
->
sizñocv¨s
;

427 
	`¥ötf
("loˇl†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

428 
i
=0; i<
n
; i++)

430 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

431 
i
,
	`gë°r
(
f
->
locv¨s
[i].
v¨«me
),f->locv¨s[i].
°¨çc
+1,f->locv¨s[i].
ídpc
+1);

433 
n
=
f
->
sizeupvÆues
;

434 
	`¥ötf
("upvÆue†(%dËf‹ %p:\n",
n
,
	`VOID
(
f
));

435 
i
=0; i<
n
; i++)

437 
	`¥ötf
("\t%d\t%s\t%d\t%d\n",

438 
i
,
	`UPVALNAME
(i),
f
->
upvÆues
[i].
ö°ack
,f->upvÆues[i].
idx
);

440 
	}
}

442 
	$PrötFun˘i⁄
(c⁄° 
PrŸo
* 
f
, 
fuŒ
)

444 
i
,
n
=
f
->
sizï
;

445 
	`PrötHódî
(
f
);

446 
	`PrötCode
(
f
);

447 i‡(
fuŒ
Ë
	`PrötDebug
(
f
);

448 
i
=0; i<
n
; i++Ë
	`PrötFun˘i⁄
(
f
->
p
[i],
fuŒ
);

449 
	}
}

	@lib/lua/src/luaconf.h

8 #i‚de‡
luac⁄f_h


9 
	#luac⁄f_h


	)

11 
	~<limôs.h
>

12 
	~<°ddef.h
>

50 #i‡!
deföed
(
LUA_USE_C89
Ë&& deföed(
_WIN32
Ë&& !deföed(
_WIN32_WCE
)

51 
	#LUA_USE_WINDOWS


	)

55 #i‡
deföed
(
LUA_USE_WINDOWS
)

56 
	#LUA_DL_DLL


	)

57 
	#LUA_USE_C89


	)

61 #i‡
deföed
(
LUA_USE_LINUX
)

62 
	#LUA_USE_POSIX


	)

63 
	#LUA_USE_DLOPEN


	)

64 #unde‡
LUA_USE_READLINE


68 #i‡
deföed
(
LUA_USE_MACOSX
)

69 
	#LUA_USE_POSIX


	)

70 
	#LUA_USE_DLOPEN


	)

71 
	#LUA_USE_READLINE


	)

80 #i‡
deföed
(
LUA_USE_C89
Ë&& !deföed(
LUA_USE_WINDOWS
)

81 
	#LUA_C89_NUMBERS


	)

90 #i‡((
INT_MAX
 >> 15) >> 15) >= 1

91 
	#LUAI_BITSINT
 32

	)

94 
	#LUAI_BITSINT
 16

	)

109 
	#LUA_INT_INT
 1

	)

110 
	#LUA_INT_LONG
 2

	)

111 
	#LUA_INT_LONGLONG
 3

	)

114 
	#LUA_FLOAT_FLOAT
 1

	)

115 
	#LUA_FLOAT_DOUBLE
 2

	)

116 
	#LUA_FLOAT_LONGDOUBLE
 3

	)

118 #i‡
deföed
(
LUA_32BITS
)

122 #i‡
LUAI_BITSINT
 >= 32

123 
	#LUA_INT_TYPE
 
LUA_INT_INT


	)

125 
	#LUA_INT_TYPE
 
LUA_INT_LONG


	)

127 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_FLOAT


	)

129 #ñi‡
deföed
(
LUA_C89_NUMBERS
)

133 
	#LUA_INT_TYPE
 
LUA_INT_LONG


	)

134 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_DOUBLE


	)

142 #i‡!
deföed
(
LUA_INT_TYPE
)

143 
	#LUA_INT_TYPE
 
LUA_INT_LONGLONG


	)

146 #i‡!
deföed
(
LUA_FLOAT_TYPE
)

147 
	#LUA_FLOAT_TYPE
 
LUA_FLOAT_DOUBLE


	)

170 
	#LUA_VDIR
 
LUA_VERSION_MAJOR
 "." 
LUA_VERSION_MINOR


	)

171 #i‡
deföed
(
_WIN32
)

176 
	#LUA_LDIR
 "!\\lua\\"

	)

177 
	#LUA_CDIR
 "!\\"

	)

178 
	#LUA_SHRDIR
 "!\\..\\sh¨e\\lua\\" 
LUA_VDIR
 "\\"

	)

179 
	#LUA_PATH_DEFAULT
 \

180 
LUA_LDIR
"?.lua;" LUA_LDIR"?\\init.lua;" \

181 
LUA_CDIR
"?.lua;" LUA_CDIR"?\\init.lua;" \

182 
LUA_SHRDIR
"?.lua;" LUA_SHRDIR"?\\init.lua;" \

183 ".\\?.lua;" ".\\?\\öô.lua"

	)

184 
	#LUA_CPATH_DEFAULT
 \

185 
LUA_CDIR
"?.dll;" \

186 
LUA_CDIR
"..\\lib\\lua\\" 
LUA_VDIR
 "\\?.dll;" \

187 
LUA_CDIR
"lﬂdÆl.dŒ;" ".\\?.dŒ"

	)

191 
	#LUA_ROOT
 "/u§/loˇl/"

	)

192 
	#LUA_LDIR
 
LUA_ROOT
 "sh¨e/lua/" 
LUA_VDIR
 "/"

	)

193 
	#LUA_CDIR
 
LUA_ROOT
 "lib/lua/" 
LUA_VDIR
 "/"

	)

194 
	#LUA_PATH_DEFAULT
 \

195 
LUA_LDIR
"?.lua;" LUA_LDIR"?/init.lua;" \

196 
LUA_CDIR
"?.lua;" LUA_CDIR"?/init.lua;" \

197 "./?.lua;" "./?/öô.lua"

	)

198 
	#LUA_CPATH_DEFAULT
 \

199 
LUA_CDIR
"?.so;" LUA_CDIR"lﬂdÆl.so;" "./?.so"

	)

208 #i‡
deföed
(
_WIN32
)

209 
	#LUA_DIRSEP
 "\\"

	)

211 
	#LUA_DIRSEP
 "/"

	)

232 #i‡
deföed
(
LUA_BUILD_AS_DLL
)

234 #i‡
deföed
(
LUA_CORE
Ë|| deföed(
LUA_LIB
)

235 
	#LUA_API
 
	`__de˛•ec
(
dŒexp‹t
)

	)

237 
	#LUA_API
 
	`__de˛•ec
(
dŒimp‹t
)

	)

242 
	#LUA_API
 

	)

248 
	#LUALIB_API
 
LUA_API


	)

249 
	#LUAMOD_API
 
LUALIB_API


	)

266 #i‡
deföed
(
__GNUC__
Ë&& ((__GNUC__*100 + 
__GNUC_MINOR__
) >= 302) && \

267 
	$deföed
(
__ELF__
)

268 
	#LUAI_FUNC
 
	`__©åibuã__
((
	`visibûôy
("hiddí"))Ë

	)

270 
	#LUAI_FUNC
 

	)

273 
	#LUAI_DDEC
 
LUAI_FUNC


	)

274 
	#LUAI_DDEF


	)

291 #i‡
	`deföed
(
LUA_COMPAT_5_2
)

297 
	#LUA_COMPAT_MATHLIB


	)

302 
	#LUA_COMPAT_BITLIB


	)

307 
	#LUA_COMPAT_IPAIRS


	)

314 
	#LUA_COMPAT_APIINTCASTS


	)

319 #i‡
	`deföed
(
LUA_COMPAT_5_1
)

322 
	#LUA_COMPAT_MATHLIB


	)

323 
	#LUA_COMPAT_APIINTCASTS


	)

329 
	#LUA_COMPAT_UNPACK


	)

335 
	#LUA_COMPAT_LOADERS


	)

341 
	#lua_˝ˇŒ
(
L
,
f
,
u
) \

342 (
	`lua_pushcfun˘i⁄
(
L
, (
f
)), \

343 
	`lua_pushlightu£rd©a
(
L
,(
u
)), \

344 
	`lua_pˇŒ
(
L
,1,0,0))

	)

351 
	#LUA_COMPAT_LOG10


	)

357 
	#LUA_COMPAT_LOADSTRING


	)

362 
	#LUA_COMPAT_MAXN


	)

369 
	#lua_°æí
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

371 
	#lua_objÀn
(
L
,
i
Ë
	`lua_øwÀn
(L, (i))

	)

373 
	#lua_equÆ
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPEQ
)

	)

374 
	#lua_Às°h™
(
L
,
idx1
,
idx2
Ë
	`lua_com∑ª
(L,(idx1),(idx2),
LUA_OPLT
)

	)

380 
	#LUA_COMPAT_MODULE


	)

422 
	#l_Êo‹
(
x
Ë(
	`l_m©h›
(
Êo‹
)(x))

	)

424 
	#lua_numbî2°r
(
s
,
sz
,
n
Ë
	`l_•rötf
((s), sz, 
LUA_NUMBER_FMT
, (n))

	)

434 
	#lua_numbîtoöãgî
(
n
,
p
) \

435 ((
n
Ë>(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

436 (
n
Ë< -(
LUA_NUMBER
)(
LUA_MININTEGER
) && \

437 (*(
p
Ë(
LUA_INTEGER
)(
n
), 1))

	)

442 #i‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_FLOAT


444 
	#LUA_NUMBER
 

	)

446 
	#l_m©hlim
(
n
Ë(
FLT_
##n)

	)

448 
	#LUAI_UACNUMBER
 

	)

450 
	#LUA_NUMBER_FRMLEN
 ""

	)

451 
	#LUA_NUMBER_FMT
 "%.7g"

	)

453 
	#l_m©h›
(
›
Ë›##
f


	)

455 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πof
((s), (p))

	)

458 #ñi‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_LONGDOUBLE


460 
	#LUA_NUMBER
 

	)

462 
	#l_m©hlim
(
n
Ë(
LDBL_
##n)

	)

464 
	#LUAI_UACNUMBER
 

	)

466 
	#LUA_NUMBER_FRMLEN
 "L"

	)

467 
	#LUA_NUMBER_FMT
 "%.19Lg"

	)

469 
	#l_m©h›
(
›
Ë›##
l


	)

471 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πﬁd
((s), (p))

	)

473 #ñi‡
LUA_FLOAT_TYPE
 =
LUA_FLOAT_DOUBLE


475 
	#LUA_NUMBER
 

	)

477 
	#l_m©hlim
(
n
Ë(
DBL_
##n)

	)

479 
	#LUAI_UACNUMBER
 

	)

481 
	#LUA_NUMBER_FRMLEN
 ""

	)

482 
	#LUA_NUMBER_FMT
 "%.14g"

	)

484 
	#l_m©h›
(
›
Ë
	)
op

486 
	#lua_°r2numbî
(
s
,
p
Ë
	`°πod
((s), (p))

	)

513 
	#LUA_INTEGER_FMT
 "%" 
LUA_INTEGER_FRMLEN
 "d"

	)

514 
	#lua_öãgî2°r
(
s
,
sz
,
n
Ë
	`l_•rötf
((s), sz, 
LUA_INTEGER_FMT
, (n))

	)

516 
	#LUAI_UACINT
 
LUA_INTEGER


	)

522 
	#LUA_UNSIGNED
 
LUAI_UACINT


	)

527 #i‡
LUA_INT_TYPE
 =
LUA_INT_INT


529 
	#LUA_INTEGER
 

	)

530 
	#LUA_INTEGER_FRMLEN
 ""

	)

532 
	#LUA_MAXINTEGER
 
INT_MAX


	)

533 
	#LUA_MININTEGER
 
INT_MIN


	)

535 #ñi‡
LUA_INT_TYPE
 =
LUA_INT_LONG


537 
	#LUA_INTEGER
 

	)

538 
	#LUA_INTEGER_FRMLEN
 "l"

	)

540 
	#LUA_MAXINTEGER
 
LONG_MAX


	)

541 
	#LUA_MININTEGER
 
LONG_MIN


	)

543 #ñi‡
LUA_INT_TYPE
 =
LUA_INT_LONGLONG


546 #i‡
	`deföed
(
LLONG_MAX
)

549 
	#LUA_INTEGER
 

	)

550 
	#LUA_INTEGER_FRMLEN
 "Œ"

	)

552 
	#LUA_MAXINTEGER
 
LLONG_MAX


	)

553 
	#LUA_MININTEGER
 
LLONG_MIN


	)

555 #ñi‡
	`deföed
(
LUA_USE_WINDOWS
)

558 
	#LUA_INTEGER
 
__öt64


	)

559 
	#LUA_INTEGER_FRMLEN
 "I64"

	)

561 
	#LUA_MAXINTEGER
 
_I64_MAX


	)

562 
	#LUA_MININTEGER
 
_I64_MIN


	)

590 #i‡!
	`deföed
(
LUA_USE_C89
)

591 
	#l_•rötf
(
s
,
sz
,
f
,
i
Ë
	`¢¥ötf
(s,sz,f,i)

	)

593 
	#l_•rötf
(
s
,
sz
,
f
,
i
Ë(()(sz), 
	`•rötf
(s,f,i))

	)

603 #i‡!
	`deföed
(
LUA_USE_C89
)

604 
	#lua_°rx2numbî
(
s
,
p
Ë
	`lua_°r2numbî
(s,p)

	)

614 #i‡!
	`deföed
(
LUA_USE_C89
)

615 
	#lua_numbî2°rx
(
L
,
b
,
sz
,
f
,
n
Ë
	`l_•rötf
(b,sz,f,n)

	)

625 #i‡
	`deföed
(
LUA_USE_C89
Ë|| (deföed(
HUGE_VAL
Ë&& !deföed(
HUGE_VALF
))

626 #unde‡
l_m©h›


627 #unde‡
lua_°r2numbî


628 
	#l_m©h›
(
›
Ë(
lua_Numbî
)›

	)

629 
	#lua_°r2numbî
(
s
,
p
Ë((
lua_Numbî
)
	`°πod
((s), (p)))

	)

639 
	#LUA_KCONTEXT
 
±rdiff_t


	)

641 #i‡!
	`deföed
(
LUA_USE_C89
Ë&& deföed(
__STDC_VERSION__
) && \

642 
__STDC_VERSION__
 >= 199901L

643 
	~<°döt.h
>

644 #i‡
	`deföed
(
INTPTR_MAX
)

645 #unde‡
LUA_KCONTEXT


646 
	#LUA_KCONTEXT
 
öçå_t


	)

656 #i‡!
	`deföed
(
lua_gëloˇÀde˝oöt
)

657 
	#lua_gëloˇÀde˝oöt
(Ë(
	`loˇÀc⁄v
()->
decimÆ_poöt
[0])

	)

683 #i‡
	`deföed
(
LUA_USE_APICHECK
)

684 
	~<as£π.h
>

685 
	#luai_≠icheck
(
l
,
e
Ë
	`as£π
”)

	)

705 #i‡
LUAI_BITSINT
 >= 32

706 
	#LUAI_MAXSTACK
 1000000

	)

708 
	#LUAI_MAXSTACK
 15000

	)

717 
	#LUA_EXTRASPACE
 ((*))

	)

725 
	#LUA_IDSIZE
 60

	)

735 #i‡
	`deföed
(
LUA_FLOAT_LONGDOUBLE
)

736 
	#LUAL_BUFFERSIZE
 8192

	)

738 
	#LUAL_BUFFERSIZE
 (()(0x80 * (*Ë* (
lua_I¡egî
)))

	)

749 
	#LUA_QL
(
x
Ë"'" x "'"

	)

750 
	#LUA_QS
 
	`LUA_QL
("%s")

	)

769 #i‡
	`deföed
(
LUA_LIB
Ë|| deföed(
lua_c
)

770 
	~<°dio.h
>

771 * 
	`_gë_°dout
(* 
L
);

772 
	#lua_put°rög
(
s
Ë(
	`fwrôe
((s), (), 
	`°æí
(s), 
	`_gë_°dout
(
L
)), 
	`fÊush
(_gë_°dout(L)))

	)

773 
	#lua_wrôe°rög
(
s
,
l
Ë(
	`fwrôe
((s), (), (l), 
	`_gë_°dout
(
L
)), 
	`fÊush
(_gë_°dout(L)))

	)

774 
	#lua_wrôñöe
(Ë(
	`lua_wrôe°rög
("\n", 1), 
	`fÊush
(
	`_gë_°dout
(
L
)))

	)

781 * 
	`_gë_°dîr
(* 
L
);

782 
	#lua_wrôe°rögîr‹
(
s
, 
p
) \

783 (
	`Ârötf
(
	`_gë_°dîr
(
L
), (
s
), (
p
)), 
	`fÊush
(_gë_°dîr(L)))

	)

	@lib/lua/src/lualib.h

8 #i‚de‡
luÆib_h


9 
	#luÆib_h


	)

11 
	~"lua.h
"

15 
LUAMOD_API
 (
lua›í_ba£
Ë(
lua_Sèã
 *
L
);

17 
	#LUA_COLIBNAME
 "c‹outöe"

	)

18 
LUAMOD_API
 (
lua›í_c‹outöe
Ë(
lua_Sèã
 *
L
);

20 
	#LUA_TABLIBNAME
 "èbÀ"

	)

21 
LUAMOD_API
 (
lua›í_èbÀ
Ë(
lua_Sèã
 *
L
);

23 
	#LUA_IOLIBNAME
 "io"

	)

24 
LUAMOD_API
 (
lua›í_io
Ë(
lua_Sèã
 *
L
);

26 
	#LUA_OSLIBNAME
 "os"

	)

27 
LUAMOD_API
 (
lua›í_os
Ë(
lua_Sèã
 *
L
);

29 
	#LUA_STRLIBNAME
 "°rög"

	)

30 
LUAMOD_API
 (
lua›í_°rög
Ë(
lua_Sèã
 *
L
);

32 
	#LUA_UTF8LIBNAME
 "utf8"

	)

33 
LUAMOD_API
 (
lua›í_utf8
Ë(
lua_Sèã
 *
L
);

35 
	#LUA_BITLIBNAME
 "bô32"

	)

36 
LUAMOD_API
 (
lua›í_bô32
Ë(
lua_Sèã
 *
L
);

38 
	#LUA_MATHLIBNAME
 "m©h"

	)

39 
LUAMOD_API
 (
lua›í_m©h
Ë(
lua_Sèã
 *
L
);

41 
	#LUA_DBLIBNAME
 "debug"

	)

42 
LUAMOD_API
 (
lua›í_debug
Ë(
lua_Sèã
 *
L
);

44 
	#LUA_LOADLIBNAME
 "∑ckage"

	)

45 
LUAMOD_API
 (
lua›í_∑ckage
Ë(
lua_Sèã
 *
L
);

49 
LUALIB_API
 (
luaL_›ílibs
Ë(
lua_Sèã
 *
L
);

53 #i‡!
	`deföed
(
lua_as£π
)

54 
	#lua_as£π
(
x
Ë(()0)

	)

	@lib/lua/src/lundump.c

7 
	#lundump_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"ldebug.h
"

18 
	~"ldo.h
"

19 
	~"lfunc.h
"

20 
	~"lmem.h
"

21 
	~"lobje˘.h
"

22 
	~"l°rög.h
"

23 
	~"lundump.h
"

24 
	~"lzio.h
"

27 #i‡!
deföed
(
luai_vîifycode
)

28 
	#luai_vîifycode
(
L
,
b
,
f
Ë

	)

33 
lua_Sèã
 *
	mL
;

34 
ZIO
 *
	mZ
;

35 c⁄° *
	m«me
;

36 } 
	tLﬂdSèã
;

39 
l_n‹ë
 
	$îr‹
(
LﬂdSèã
 *
S
, c⁄° *
why
) {

40 
	`luaO_pushf°rög
(
S
->
L
, "%s: %†¥ecompûed chunk", S->
«me
, 
why
);

41 
	`luaD_throw
(
S
->
L
, 
LUA_ERRSYNTAX
);

42 
	}
}

49 
	#LﬂdVe˘‹
(
S
,
b
,
n
Ë
	`LﬂdBlock
(S,b,“)*((b)[0]))

	)

51 
	$LﬂdBlock
 (
LﬂdSèã
 *
S
, *
b
, 
size_t
 
size
) {

52 i‡(
	`luaZ_ªad
(
S
->
Z
, 
b
, 
size
) != 0)

53 
	`îr‹
(
S
, "truncated");

54 
	}
}

57 
	#LﬂdV¨
(
S
,
x
Ë
	`LﬂdVe˘‹
(S,&x,1)

	)

60 
lu_byã
 
	$LﬂdByã
 (
LﬂdSèã
 *
S
) {

61 
lu_byã
 
x
;

62 
	`LﬂdV¨
(
S
, 
x
);

63  
x
;

64 
	}
}

67 
	$LﬂdI¡
 (
LﬂdSèã
 *
S
) {

68 
x
;

69 
	`LﬂdV¨
(
S
, 
x
);

70  
x
;

71 
	}
}

74 
lua_Numbî
 
	$LﬂdNumbî
 (
LﬂdSèã
 *
S
) {

75 
lua_Numbî
 
x
;

76 
	`LﬂdV¨
(
S
, 
x
);

77  
x
;

78 
	}
}

81 
lua_I¡egî
 
	$LﬂdI¡egî
 (
LﬂdSèã
 *
S
) {

82 
lua_I¡egî
 
x
;

83 
	`LﬂdV¨
(
S
, 
x
);

84  
x
;

85 
	}
}

88 
TSåög
 *
	$LﬂdSåög
 (
LﬂdSèã
 *
S
) {

89 
size_t
 
size
 = 
	`LﬂdByã
(
S
);

90 i‡(
size
 == 0xFF)

91 
	`LﬂdV¨
(
S
, 
size
);

92 i‡(
size
 == 0)

93  
NULL
;

94 i‡(--
size
 <
LUAI_MAXSHORTLEN
) {

95 
buff
[
LUAI_MAXSHORTLEN
];

96 
	`LﬂdVe˘‹
(
S
, 
buff
, 
size
);

97  
	`luaS_√wl°r
(
S
->
L
, 
buff
, 
size
);

100 
TSåög
 *
ts
 = 
	`luaS_¸óã g°robj
(
S
->
L
, 
size
);

101 
	`LﬂdVe˘‹
(
S
, 
	`gë°r
(
ts
), 
size
);

102  
ts
;

104 
	}
}

107 
	$LﬂdCode
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

108 
n
 = 
	`LﬂdI¡
(
S
);

109 
f
->
code
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
In°ru˘i⁄
);

110 
f
->
sizecode
 = 
n
;

111 
	`LﬂdVe˘‹
(
S
, 
f
->
code
, 
n
);

112 
	}
}

115 
LﬂdFun˘i⁄
(
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
);

118 
	$LﬂdC⁄°™ts
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

119 
i
;

120 
n
 = 
	`LﬂdI¡
(
S
);

121 
f
->
k
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
TVÆue
);

122 
f
->
sizek
 = 
n
;

123 
i
 = 0; i < 
n
; i++)

124 
	`£äûvÆue
(&
f
->
k
[
i
]);

125 
i
 = 0; i < 
n
; i++) {

126 
TVÆue
 *
o
 = &
f
->
k
[
i
];

127 
t
 = 
	`LﬂdByã
(
S
);

128 
t
) {

129 
LUA_TNIL
:

130 
	`£äûvÆue
(
o
);

132 
LUA_TBOOLEAN
:

133 
	`£tbvÆue
(
o
, 
	`LﬂdByã
(
S
));

135 
LUA_TNUMFLT
:

136 
	`£tÊtvÆue
(
o
, 
	`LﬂdNumbî
(
S
));

138 
LUA_TNUMINT
:

139 
	`£tivÆue
(
o
, 
	`LﬂdI¡egî
(
S
));

141 
LUA_TSHRSTR
:

142 
LUA_TLNGSTR
:

143 
	`£tsvÆue2n
(
S
->
L
, 
o
, 
	`LﬂdSåög
(S));

146 
	`lua_as£π
(0);

149 
	}
}

152 
	$LﬂdPrŸos
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

153 
i
;

154 
n
 = 
	`LﬂdI¡
(
S
);

155 
f
->
p
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
PrŸo
 *);

156 
f
->
sizï
 = 
n
;

157 
i
 = 0; i < 
n
; i++)

158 
f
->
p
[
i
] = 
NULL
;

159 
i
 = 0; i < 
n
; i++) {

160 
f
->
p
[
i
] = 
	`luaF_√w¥Ÿo
(
S
->
L
);

161 
	`LﬂdFun˘i⁄
(
S
, 
f
->
p
[
i
], f->
sour˚
);

163 
	}
}

166 
	$LﬂdUpvÆues
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

167 
i
, 
n
;

168 
n
 = 
	`LﬂdI¡
(
S
);

169 
f
->
upvÆues
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
UpvÆdesc
);

170 
f
->
sizeupvÆues
 = 
n
;

171 
i
 = 0; i < 
n
; i++)

172 
f
->
upvÆues
[
i
].
«me
 = 
NULL
;

173 
i
 = 0; i < 
n
; i++) {

174 
f
->
upvÆues
[
i
].
ö°ack
 = 
	`LﬂdByã
(
S
);

175 
f
->
upvÆues
[
i
].
idx
 = 
	`LﬂdByã
(
S
);

177 
	}
}

180 
	$LﬂdDebug
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
) {

181 
i
, 
n
;

182 
n
 = 
	`LﬂdI¡
(
S
);

183 
f
->
löeöfo
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, );

184 
f
->
sizñöeöfo
 = 
n
;

185 
	`LﬂdVe˘‹
(
S
, 
f
->
löeöfo
, 
n
);

186 
n
 = 
	`LﬂdI¡
(
S
);

187 
f
->
locv¨s
 = 
	`luaM_√wve˘‹
(
S
->
L
, 
n
, 
LocV¨
);

188 
f
->
sizñocv¨s
 = 
n
;

189 
i
 = 0; i < 
n
; i++)

190 
f
->
locv¨s
[
i
].
v¨«me
 = 
NULL
;

191 
i
 = 0; i < 
n
; i++) {

192 
f
->
locv¨s
[
i
].
v¨«me
 = 
	`LﬂdSåög
(
S
);

193 
f
->
locv¨s
[
i
].
°¨çc
 = 
	`LﬂdI¡
(
S
);

194 
f
->
locv¨s
[
i
].
ídpc
 = 
	`LﬂdI¡
(
S
);

196 
n
 = 
	`LﬂdI¡
(
S
);

197 
i
 = 0; i < 
n
; i++)

198 
f
->
upvÆues
[
i
].
«me
 = 
	`LﬂdSåög
(
S
);

199 
	}
}

202 
	$LﬂdFun˘i⁄
 (
LﬂdSèã
 *
S
, 
PrŸo
 *
f
, 
TSåög
 *
psour˚
) {

203 
f
->
sour˚
 = 
	`LﬂdSåög
(
S
);

204 i‡(
f
->
sour˚
 =
NULL
)

205 
f
->
sour˚
 = 
psour˚
;

206 
f
->
löedeföed
 = 
	`LﬂdI¡
(
S
);

207 
f
->
œ°löedeföed
 = 
	`LﬂdI¡
(
S
);

208 
f
->
num∑øms
 = 
	`LﬂdByã
(
S
);

209 
f
->
is_v¨¨g
 = 
	`LﬂdByã
(
S
);

210 
f
->
max°acksize
 = 
	`LﬂdByã
(
S
);

211 
	`LﬂdCode
(
S
, 
f
);

212 
	`LﬂdC⁄°™ts
(
S
, 
f
);

213 
	`LﬂdUpvÆues
(
S
, 
f
);

214 
	`LﬂdPrŸos
(
S
, 
f
);

215 
	`LﬂdDebug
(
S
, 
f
);

216 
	}
}

219 
	$checklôîÆ
 (
LﬂdSèã
 *
S
, c⁄° *
s
, c⁄° *
msg
) {

220 
buff
[(
LUA_SIGNATURE
Ë+ (
LUAC_DATA
)];

221 
size_t
 
Àn
 = 
	`°æí
(
s
);

222 
	`LﬂdVe˘‹
(
S
, 
buff
, 
Àn
);

223 i‡(
	`memcmp
(
s
, 
buff
, 
Àn
) != 0)

224 
	`îr‹
(
S
, 
msg
);

225 
	}
}

228 
	$fchecksize
 (
LﬂdSèã
 *
S
, 
size_t
 
size
, c⁄° *
äame
) {

229 i‡(
	`LﬂdByã
(
S
Ë!
size
)

230 
	`îr‹
(
S
, 
	`luaO_pushf°rög
(S->
L
, "%†sizêmism©ch in", 
äame
));

231 
	}
}

234 
	#checksize
(
S
,
t
Ë
	`fchecksize
(S,—),#t)

	)

236 
	$checkHódî
 (
LﬂdSèã
 *
S
) {

237 
	`checklôîÆ
(
S
, 
LUA_SIGNATURE
 + 1, "notá");

238 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_VERSION
)

239 
	`îr‹
(
S
, "version mismatch in");

240 i‡(
	`LﬂdByã
(
S
Ë!
LUAC_FORMAT
)

241 
	`îr‹
(
S
, "format mismatch in");

242 
	`checklôîÆ
(
S
, 
LUAC_DATA
, "corrupted");

243 
	`checksize
(
S
, );

244 
	`checksize
(
S
, 
size_t
);

245 
	`checksize
(
S
, 
In°ru˘i⁄
);

246 
	`checksize
(
S
, 
lua_I¡egî
);

247 
	`checksize
(
S
, 
lua_Numbî
);

248 i‡(
	`LﬂdI¡egî
(
S
Ë!
LUAC_INT
)

249 
	`îr‹
(
S
, "endianness mismatch in");

250 i‡(
	`LﬂdNumbî
(
S
Ë!
LUAC_NUM
)

251 
	`îr‹
(
S
, "float format mismatch in");

252 
	}
}

258 
LClosuª
 *
	$luaU_undump
(
lua_Sèã
 *
L
, 
ZIO
 *
Z
, c⁄° *
«me
) {

259 
LﬂdSèã
 
S
;

260 
LClosuª
 *
˛
;

261 i‡(*
«me
 == '@' || *name == '=')

262 
S
.
«me
 =Çame + 1;

263 i‡(*
«me
 =
LUA_SIGNATURE
[0])

264 
S
.
«me
 = "binary string";

266 
S
.
«me
 =Çame;

267 
S
.
L
 = L;

268 
S
.
Z
 = Z;

269 
	`checkHódî
(&
S
);

270 
˛
 = 
	`luaF_√wL˛osuª
(
L
, 
	`LﬂdByã
(&
S
));

271 
	`£t˛LvÆue
(
L
, L->
t›
, 
˛
);

272 
	`luaD_ö˘›
(
L
);

273 
˛
->
p
 = 
	`luaF_√w¥Ÿo
(
L
);

274 
	`LﬂdFun˘i⁄
(&
S
, 
˛
->
p
, 
NULL
);

275 
	`lua_as£π
(
˛
->
nupvÆues
 =˛->
p
->
sizeupvÆues
);

276 
	`luai_vîifycode
(
L
, 
buff
, 
˛
->
p
);

277  
˛
;

278 
	}
}

	@lib/lua/src/lundump.h

7 #i‚de‡
lundump_h


8 
	#lundump_h


	)

10 
	~"Œimôs.h
"

11 
	~"lobje˘.h
"

12 
	~"lzio.h
"

16 
	#LUAC_DATA
 "\x19\x93\r\n\x1a\n"

	)

18 
	#LUAC_INT
 0x5678

	)

19 
	#LUAC_NUM
 
	`ˇ°_num
(370.5)

	)

21 
	#MYINT
(
s
Ë(s[0]-'0')

	)

22 
	#LUAC_VERSION
 (
	`MYINT
(
LUA_VERSION_MAJOR
)*16+MYINT(
LUA_VERSION_MINOR
))

	)

23 
	#LUAC_FORMAT
 0

	)

26 
LUAI_FUNC
 
LClosuª
* 
luaU_undump
 (
lua_Sèã
* 
L
, 
ZIO
* 
Z
, c⁄° * 
«me
);

29 
LUAI_FUNC
 
luaU_dump
 (
lua_Sèã
* 
L
, c⁄° 
PrŸo
* 
f
, 
lua_Wrôî
 
w
,

30 * 
d©a
, 
°rù
);

	@lib/lua/src/lutf8lib.c

7 
	#lutf8lib_c


	)

8 
	#LUA_LIB


	)

10 
	~"Õªfix.h
"

13 
	~<as£π.h
>

14 
	~<limôs.h
>

15 
	~<°dlib.h
>

16 
	~<°rög.h
>

18 
	~"lua.h
"

20 
	~"œuxlib.h
"

21 
	~"luÆib.h
"

23 
	#MAXUNICODE
 0x10FFFF

	)

25 
	#isc⁄t
(
p
Ë((*’Ë& 0xC0Ë=0x80)

	)

30 
lua_I¡egî
 
	$u_po§ñ©
 (
lua_I¡egî
 
pos
, 
size_t
 
Àn
) {

31 i‡(
pos
 >= 0) Öos;

32 i‡(0u - (
size_t
)
pos
 > 
Àn
)  0;

33  (
lua_I¡egî
)
Àn
 + 
pos
 + 1;

34 
	}
}

40 c⁄° *
	$utf8_decode
 (c⁄° *
o
, *
vÆ
) {

41 c⁄° 
limôs
[] = {0xFF, 0x7F, 0x7FF, 0xFFFF};

42 c⁄° *
s
 = (c⁄° *)
o
;

43 
c
 = 
s
[0];

44 
ªs
 = 0;

45 i‡(
c
 < 0x80)

46 
ªs
 = 
c
;

48 
cou¡
 = 0;

49 
c
 & 0x40) {

50 
cc
 = 
s
[++
cou¡
];

51 i‡((
cc
 & 0xC0) != 0x80)

52  
NULL
;

53 
ªs
 = (ª†<< 6Ë| (
cc
 & 0x3F);

54 
c
 <<= 1;

56 
ªs
 |((
c
 & 0x7FË<< (
cou¡
 * 5));

57 i‡(
cou¡
 > 3 || 
ªs
 > 
MAXUNICODE
 ||Ñe†<
limôs
[count])

58  
NULL
;

59 
s
 +
cou¡
;

61 i‡(
vÆ
Ë*vÆ = 
ªs
;

62  (c⁄° *)
s
 + 1;

63 
	}
}

71 
	$utÊí
 (
lua_Sèã
 *
L
) {

72 
n
 = 0;

73 
size_t
 
Àn
;

74 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

75 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

76 
lua_I¡egî
 
posj
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, -1), 
Àn
);

77 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 2,

79 
	`luaL_¨gcheck
(
L
, --
posj
 < (
lua_I¡egî
)
Àn
, 3,

81 
posi
 <
posj
) {

82 c⁄° *
s1
 = 
	`utf8_decode
(
s
 + 
posi
, 
NULL
);

83 i‡(
s1
 =
NULL
) {

84 
	`lua_pushnû
(
L
);

85 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

88 
posi
 = 
s1
 - 
s
;

89 
n
++;

91 
	`lua_pushöãgî
(
L
, 
n
);

93 
	}
}

100 
	$codïoöt
 (
lua_Sèã
 *
L
) {

101 
size_t
 
Àn
;

102 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

103 
lua_I¡egî
 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 2, 1), 
Àn
);

104 
lua_I¡egî
 
po£
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3, 
posi
), 
Àn
);

105 
n
;

106 c⁄° *
£
;

107 
	`luaL_¨gcheck
(
L
, 
posi
 >= 1, 2, "out ofÑange");

108 
	`luaL_¨gcheck
(
L
, 
po£
 <(
lua_I¡egî
)
Àn
, 3, "out ofÑange");

109 i‡(
posi
 > 
po£
)  0;

110 i‡(
po£
 - 
posi
 >
INT_MAX
)

111  
	`luaL_îr‹
(
L
, "string sliceÅooÜong");

112 
n
 = ()(
po£
 - 
posi
) + 1;

113 
	`luaL_check°ack
(
L
, 
n
, "string sliceÅooÜong");

114 
n
 = 0;

115 
£
 = 
s
 + 
po£
;

116 
s
 +
posi
 - 1; s < 
£
;) {

117 
code
;

118 
s
 = 
	`utf8_decode
(s, &
code
);

119 i‡(
s
 =
NULL
)

120  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

121 
	`lua_pushöãgî
(
L
, 
code
);

122 
n
++;

124  
n
;

125 
	}
}

128 
	$pushutfch¨
 (
lua_Sèã
 *
L
, 
¨g
) {

129 
lua_I¡egî
 
code
 = 
	`luaL_checköãgî
(
L
, 
¨g
);

130 
	`luaL_¨gcheck
(
L
, 0 <
code
 && codê<
MAXUNICODE
, 
¨g
, "value out ofÑange");

131 
	`lua_pushf°rög
(
L
, "%U", ()
code
);

132 
	}
}

138 
	$utfch¨
 (
lua_Sèã
 *
L
) {

139 
n
 = 
	`lua_gët›
(
L
);

140 i‡(
n
 == 1)

141 
	`pushutfch¨
(
L
, 1);

143 
i
;

144 
luaL_Buf„r
 
b
;

145 
	`luaL_bufföô
(
L
, &
b
);

146 
i
 = 1; i <
n
; i++) {

147 
	`pushutfch¨
(
L
, 
i
);

148 
	`luaL_addvÆue
(&
b
);

150 
	`luaL_pushªsu…
(&
b
);

153 
	}
}

160 
	$byãoff£t
 (
lua_Sèã
 *
L
) {

161 
size_t
 
Àn
;

162 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

163 
lua_I¡egî
 
n
 = 
	`luaL_checköãgî
(
L
, 2);

164 
lua_I¡egî
 
posi
 = (
n
 >0Ë? 1 : 
Àn
 + 1;

165 
posi
 = 
	`u_po§ñ©
(
	`luaL_›töãgî
(
L
, 3,Öosi), 
Àn
);

166 
	`luaL_¨gcheck
(
L
, 1 <
posi
 && --posò<(
lua_I¡egî
)
Àn
, 3,

168 i‡(
n
 == 0) {

170 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi))Öosi--;

173 i‡(
	`isc⁄t
(
s
 + 
posi
))

174 
	`luaL_îr‹
(
L
, "initialÖosition isá continuation byte");

175 i‡(
n
 < 0) {

176 
n
 < 0 && 
posi
 > 0) {

178 
posi
--;

179 } 
posi
 > 0 && 
	`isc⁄t
(
s
 +Öosi));

180 
n
++;

184 
n
--;

185 
n
 > 0 && 
posi
 < (
lua_I¡egî
)
Àn
) {

187 
posi
++;

188 } 
	`isc⁄t
(
s
 + 
posi
));

189 
n
--;

193 i‡(
n
 == 0)

194 
	`lua_pushöãgî
(
L
, 
posi
 + 1);

196 
	`lua_pushnû
(
L
);

198 
	}
}

201 
	$ôî_aux
 (
lua_Sèã
 *
L
) {

202 
size_t
 
Àn
;

203 c⁄° *
s
 = 
	`luaL_checkl°rög
(
L
, 1, &
Àn
);

204 
lua_I¡egî
 
n
 = 
	`lua_toöãgî
(
L
, 2) - 1;

205 i‡(
n
 < 0)

206 
n
 = 0;

207 i‡(
n
 < (
lua_I¡egî
)
Àn
) {

208 
n
++;

209 
	`isc⁄t
(
s
 + 
n
))Ç++;

211 i‡(
n
 >(
lua_I¡egî
)
Àn
)

214 
code
;

215 c⁄° *
√xt
 = 
	`utf8_decode
(
s
 + 
n
, &
code
);

216 i‡(
√xt
 =
NULL
 || 
	`isc⁄t
(next))

217  
	`luaL_îr‹
(
L
, "invalid UTF-8 code");

218 
	`lua_pushöãgî
(
L
, 
n
 + 1);

219 
	`lua_pushöãgî
(
L
, 
code
);

222 
	}
}

225 
	$ôî_codes
 (
lua_Sèã
 *
L
) {

226 
	`luaL_check°rög
(
L
, 1);

227 
	`lua_pushcfun˘i⁄
(
L
, 
ôî_aux
);

228 
	`lua_pushvÆue
(
L
, 1);

229 
	`lua_pushöãgî
(
L
, 0);

231 
	}
}

235 
	#UTF8PATT
 "[\0-\x7F\xC2-\xF4][\x80-\xBF]*"

	)

238 c⁄° 
luaL_Reg
 
	gfuncs
[] = {

239 {"off£t", 
byãoff£t
},

240 {"codïoöt", 
codïoöt
},

241 {"ch¨", 
utfch¨
},

242 {"Àn", 
utÊí
},

243 {"codes", 
ôî_codes
},

245 {"ch¨∑âîn", 
NULL
},

246 {
NULL
, NULL}

250 
LUAMOD_API
 
	$lua›í_utf8
 (
lua_Sèã
 *
L
) {

251 
	`luaL_√wlib
(
L
, 
funcs
);

252 
	`lua_pushl°rög
(
L
, 
UTF8PATT
, (UTF8PATT)/() - 1);

253 
	`lua_£tfõld
(
L
, -2, "charpattern");

255 
	}
}

	@lib/lua/src/lvm.c

7 
	#lvm_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

12 
	~<Êﬂt.h
>

13 
	~<limôs.h
>

14 
	~<m©h.h
>

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

19 
	~"lua.h
"

21 
	~"ldebug.h
"

22 
	~"ldo.h
"

23 
	~"lfunc.h
"

24 
	~"lgc.h
"

25 
	~"lobje˘.h
"

26 
	~"l›codes.h
"

27 
	~"l°©e.h
"

28 
	~"l°rög.h
"

29 
	~"…abÀ.h
"

30 
	~"…m.h
"

31 
	~"lvm.h
"

35 
	#MAXTAGLOOP
 2000

	)

44 #i‡!
deföed
(
l_ötfôsf
)

47 
	#NBM
 (
	`l_m©hlim
(
MANT_DIG
))

	)

56 #i‡((((
LUA_MAXINTEGER
 >> (
NBM
 / 4)) >> (NBM / 4)) >> (NBM / 4)) \

57 >> (
	gNBM
 - (3 * (NBM / 4)))) > 0

59 
	#l_ötfôsf
(
i
) \

60 (-((
lua_I¡egî
)1 << 
NBM
Ë<(
i
Ë&& (iË<(÷ua_I¡egî)1 << NBM))

	)

72 
	$luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
) {

73 
TVÆue
 
v
;

74 i‡(
	`âisöãgî
(
obj
)) {

75 *
n
 = 
	`ˇ°_num
(
	`ivÆue
(
obj
));

78 i‡(
	`cvt2num
(
obj
) &&

79 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`v¶í
(obj) + 1) {

80 *
n
 = 
	`nvÆue
(&
v
);

85 
	}
}

94 
	$luaV_toöãgî
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
) {

95 
TVÆue
 
v
;

96 
agaö
:

97 i‡(
	`âisÊﬂt
(
obj
)) {

98 
lua_Numbî
 
n
 = 
	`ÊtvÆue
(
obj
);

99 
lua_Numbî
 
f
 = 
	`l_Êo‹
(
n
);

100 i‡(
n
 !
f
) {

101 i‡(
mode
 == 0)  0;

102 i‡(
mode
 > 1)

103 
f
 += 1;

105  
	`lua_numbîtoöãgî
(
f
, 
p
);

107 i‡(
	`âisöãgî
(
obj
)) {

108 *
p
 = 
	`ivÆue
(
obj
);

111 i‡(
	`cvt2num
(
obj
) &&

112 
	`luaO_°r2num
(
	`svÆue
(
obj
), &
v
Ë=
	`v¶í
(obj) + 1) {

113 
obj
 = &
v
;

114 
agaö
;

117 
	}
}

135 
	$f‹limô
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
,Üua_I¡egî 
°ï
,

136 *
°›now
) {

137 *
°›now
 = 0;

138 i‡(!
	`luaV_toöãgî
(
obj
, 
p
, (
°ï
 < 0 ? 2 : 1))) {

139 
lua_Numbî
 
n
;

140 i‡(!
	`t⁄umbî
(
obj
, &
n
))

142 i‡(
	`luai_num…
(0, 
n
)) {

143 *
p
 = 
LUA_MAXINTEGER
;

144 i‡(
°ï
 < 0Ë*
°›now
 = 1;

147 *
p
 = 
LUA_MININTEGER
;

148 i‡(
°ï
 >0Ë*
°›now
 = 1;

152 
	}
}

159 
	$luaV_föishgë
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
, 
StkId
 
vÆ
,

160 c⁄° 
TVÆue
 *
tm
) {

161 
lo›
;

162 
	`lua_as£π
(
tm
 !
NULL
 || !
	`âi°abÀ
(
t
));

163 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

164 i‡(
tm
 =
NULL
) {

165 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_INDEX
)))

166 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

168 i‡(
	`âisfun˘i⁄
(
tm
)) {

169 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 1);

172 
t
 = 
tm
;

173 i‡(
	`luaV_Á°gë
(
L
,
t
,
key
,
tm
,
luaH_gë
)) {

174 
	`£tobj2s
(
L
, 
vÆ
, 
tm
);

179 
	`luaG_ru√º‹
(
L
, "gettable chainÅooÜong;ÖossibleÜoop");

180 
	}
}

187 
	$luaV_föish£t
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

188 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
ﬁdvÆ
) {

189 
lo›
;

190 
lo›
 = 0;Üo› < 
MAXTAGLOOP
;Üoop++) {

191 c⁄° 
TVÆue
 *
tm
;

192 i‡(
ﬁdvÆ
 !
NULL
) {

193 
	`lua_as£π
(
	`âi°abÀ
(
t
Ë&& 
	`âi¢û
(
ﬁdvÆ
));

195 i‡((
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t
)->
më©abÀ
, 
TM_NEWINDEX
)Ë=
NULL
 &&

197 (
ﬁdvÆ
 !
luaO_nûobje˘
 ||

200 (
ﬁdvÆ
 = 
	`luaH_√wkey
(
L
, 
	`hvÆue
(
t
), 
key
), 1))) {

202 
	`£tobj2t
(
L
, 
	`ˇ°
(
TVÆue
 *, 
ﬁdvÆ
), 
vÆ
);

203 
	`övÆid©eTMˇche
(
	`hvÆue
(
t
));

204 
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
t
), 
vÆ
);

210 i‡(
	`âi¢û
(
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
t
, 
TM_NEWINDEX
)))

211 
	`luaG_ty≥îr‹
(
L
, 
t
, "index");

214 i‡(
	`âisfun˘i⁄
(
tm
)) {

215 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t
, 
key
, 
vÆ
, 0);

218 
t
 = 
tm
;

219 i‡(
	`luaV_Á°£t
(
L
, 
t
, 
key
, 
ﬁdvÆ
, 
luaH_gë
, 
vÆ
))

223 
	`luaG_ru√º‹
(
L
, "settable chainÅooÜong;ÖossibleÜoop");

224 
	}
}

234 
	$l_°rcmp
 (c⁄° 
TSåög
 *
ls
, c⁄° TSåög *
rs
) {

235 c⁄° *
l
 = 
	`gë°r
(
ls
);

236 
size_t
 
Œ
 = 
	`ts¶í
(
ls
);

237 c⁄° *
r
 = 
	`gë°r
(
rs
);

238 
size_t
 
Ã
 = 
	`ts¶í
(
rs
);

240 
ãmp
 = 
	`°rcﬁl
(
l
, 
r
);

241 i‡(
ãmp
 != 0)

242  
ãmp
;

244 
size_t
 
Àn
 = 
	`°æí
(
l
);

245 i‡(
Àn
 =
Ã
)

246  (
Àn
 =
Œ
) ? 0 : 1;

247 i‡(
Àn
 =
Œ
)

250 
Àn
++;

251 
l
 +
Àn
; 
Œ
 -Àn; 
r
 +Àn; 
Ã
 -=Üen;

254 
	}
}

267 
	$LTötÊﬂt
 (
lua_I¡egî
 
i
, 
lua_Numbî
 
f
) {

268 #i‡
	`deföed
(
l_ötfôsf
)

269 i‡(!
	`l_ötfôsf
(
i
)) {

270 i‡(
f
 >-
	`ˇ°_num
(
LUA_MININTEGER
))

272 i‡(
f
 > 
	`ˇ°_num
(
LUA_MININTEGER
))

273  (
i
 < 
	`ˇ°
(
lua_I¡egî
, 
f
));

278  
	`luai_num…
(
	`ˇ°_num
(
i
), 
f
);

279 
	}
}

286 
	$LEötÊﬂt
 (
lua_I¡egî
 
i
, 
lua_Numbî
 
f
) {

287 #i‡
	`deföed
(
l_ötfôsf
)

288 i‡(!
	`l_ötfôsf
(
i
)) {

289 i‡(
f
 >-
	`ˇ°_num
(
LUA_MININTEGER
))

291 i‡(
f
 >
	`ˇ°_num
(
LUA_MININTEGER
))

292  (
i
 <
	`ˇ°
(
lua_I¡egî
, 
f
));

297  
	`luai_numÀ
(
	`ˇ°_num
(
i
), 
f
);

298 
	}
}

304 
	$LTnum
 (c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

305 i‡(
	`âisöãgî
(
l
)) {

306 
lua_I¡egî
 
li
 = 
	`ivÆue
(
l
);

307 i‡(
	`âisöãgî
(
r
))

308  
li
 < 
	`ivÆue
(
r
);

310  
	`LTötÊﬂt
(
li
, 
	`ÊtvÆue
(
r
));

313 
lua_Numbî
 
lf
 = 
	`ÊtvÆue
(
l
);

314 i‡(
	`âisÊﬂt
(
r
))

315  
	`luai_num…
(
lf
, 
	`ÊtvÆue
(
r
));

316 i‡(
	`luai_numi¢™
(
lf
))

319  !
	`LEötÊﬂt
(
	`ivÆue
(
r
), 
lf
);

321 
	}
}

327 
	$LEnum
 (c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

328 i‡(
	`âisöãgî
(
l
)) {

329 
lua_I¡egî
 
li
 = 
	`ivÆue
(
l
);

330 i‡(
	`âisöãgî
(
r
))

331  
li
 <
	`ivÆue
(
r
);

333  
	`LEötÊﬂt
(
li
, 
	`ÊtvÆue
(
r
));

336 
lua_Numbî
 
lf
 = 
	`ÊtvÆue
(
l
);

337 i‡(
	`âisÊﬂt
(
r
))

338  
	`luai_numÀ
(
lf
, 
	`ÊtvÆue
(
r
));

339 i‡(
	`luai_numi¢™
(
lf
))

342  !
	`LTötÊﬂt
(
	`ivÆue
(
r
), 
lf
);

344 
	}
}

350 
	$luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

351 
ªs
;

352 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

353  
	`LTnum
(
l
, 
r
);

354 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

355  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) < 0;

356 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LT
)) < 0)

357 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

358  
ªs
;

359 
	}
}

370 
	$luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
) {

371 
ªs
;

372 i‡(
	`âi¢umbî
(
l
Ë&&Åti¢umbî(
r
))

373  
	`LEnum
(
l
, 
r
);

374 i‡(
	`âis°rög
(
l
Ë&&Åtis°rög(
r
))

375  
	`l_°rcmp
(
	`tsvÆue
(
l
),ÅsvÆue(
r
)) <= 0;

376 i‡((
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
l
, 
r
, 
TM_LE
)) >= 0)

377  
ªs
;

379 
L
->
ci
->
ˇŒ°©us
 |
CIST_LEQ
;

380 
ªs
 = 
	`luaT_ˇŒ‹dîTM
(
L
, 
r
, 
l
, 
TM_LT
);

381 
L
->
ci
->
ˇŒ°©us
 ^
CIST_LEQ
;

382 i‡(
ªs
 < 0)

383 
	`luaG_‹dîîr‹
(
L
, 
l
, 
r
);

384  !
ªs
;

386 
	}
}

393 
	$luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
) {

394 c⁄° 
TVÆue
 *
tm
;

395 i‡(
	`ây≥
(
t1
Ë!ây≥(
t2
)) {

396 i‡(
	`ânov
(
t1
Ë!ânov(
t2
Ë||Åäov—1Ë!
LUA_TNUMBER
)

399 
lua_I¡egî
 
i1
, 
i2
;

400  (
	`toöãgî
(
t1
, &
i1
Ë&&Åoöãgî(
t2
, &
i2
) && i1 == i2);

404 
	`ây≥
(
t1
)) {

405 
LUA_TNIL
:  1;

406 
LUA_TNUMINT
:  (
	`ivÆue
(
t1
Ë=ivÆue(
t2
));

407 
LUA_TNUMFLT
:  
	`luai_numeq
(
	`ÊtvÆue
(
t1
), f…vÆue(
t2
));

408 
LUA_TBOOLEAN
:  
	`bvÆue
(
t1
Ë=bvÆue(
t2
);

409 
LUA_TLIGHTUSERDATA
:  
	`pvÆue
(
t1
Ë=pvÆue(
t2
);

410 
LUA_TLCF
:  
	`fvÆue
(
t1
Ë=fvÆue(
t2
);

411 
LUA_TSHRSTR
:  
	`eqshr°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

412 
LUA_TLNGSTR
:  
	`luaS_eq g°r
(
	`tsvÆue
(
t1
),ÅsvÆue(
t2
));

413 
LUA_TUSERDATA
: {

414 i‡(
	`uvÆue
(
t1
Ë=uvÆue(
t2
))  1;

415 i‡(
L
 =
NULL
)  0;

416 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

417 i‡(
tm
 =
NULL
)

418 
tm
 = 
	`Á°tm
(
L
, 
	`uvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

421 
LUA_TTABLE
: {

422 i‡(
	`hvÆue
(
t1
Ë=hvÆue(
t2
))  1;

423 i‡(
L
 =
NULL
)  0;

424 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t1
)->
më©abÀ
, 
TM_EQ
);

425 i‡(
tm
 =
NULL
)

426 
tm
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t2
)->
më©abÀ
, 
TM_EQ
);

430  
	`gcvÆue
(
t1
Ë=gcvÆue(
t2
);

432 i‡(
tm
 =
NULL
)

434 
	`luaT_ˇŒTM
(
L
, 
tm
, 
t1
, 
t2
, L->
t›
, 1);

435  !
	`l_isÁl£
(
L
->
t›
);

436 
	}
}

440 
	#to°rög
(
L
,
o
) \

441 (
	`âis°rög
(
o
Ë|| (
	`cvt2°r
(oË&& (
	`luaO_to°rög
(
L
, o), 1)))

	)

443 
	#i£m±y°r
(
o
Ë(
	`âisshr°rög
(oË&& 
	`tsvÆue
(o)->
shæí
 =0)

	)

446 
	$c›y2buff
 (
StkId
 
t›
, 
n
, *
buff
) {

447 
size_t
 
é
 = 0;

449 
size_t
 
l
 = 
	`v¶í
(
t›
 - 
n
);

450 
	`mem˝y
(
buff
 + 
é
, 
	`svÆue
(
t›
 - 
n
), 
l
 * ());

451 
é
 +
l
;

452 } --
n
 > 0);

453 
	}
}

460 
	$luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
) {

461 
	`lua_as£π
(
tŸÆ
 >= 2);

463 
StkId
 
t›
 = 
L
->top;

464 
n
 = 2;

465 i‡(!(
	`âis°rög
(
t›
-2Ë|| 
	`cvt2°r
—›-2)Ë|| !
	`to°rög
(
L
,Åop-1))

466 
	`luaT_åyböTM
(
L
, 
t›
-2,Å›-1,Å›-2, 
TM_CONCAT
);

467 i‡(
	`i£m±y°r
(
t›
 - 1))

468 
	`ˇ°_void
(
	`to°rög
(
L
, 
t›
 - 2));

469 i‡(
	`i£m±y°r
(
t›
 - 2)) {

470 
	`£tobjs2s
(
L
, 
t›
 - 2,Åop - 1);

474 
size_t
 
é
 = 
	`v¶í
(
t›
 - 1);

475 
TSåög
 *
ts
;

477 
n
 = 1;Ç < 
tŸÆ
 && 
	`to°rög
(
L
, 
t›
 -Ç - 1);Ç++) {

478 
size_t
 
l
 = 
	`v¶í
(
t›
 - 
n
 - 1);

479 i‡(
l
 >(
MAX_SIZE
/()Ë- 
é
)

480 
	`luaG_ru√º‹
(
L
, "stringÜength overflow");

481 
é
 +
l
;

483 i‡(
é
 <
LUAI_MAXSHORTLEN
) {

484 
buff
[
LUAI_MAXSHORTLEN
];

485 
	`c›y2buff
(
t›
, 
n
, 
buff
);

486 
ts
 = 
	`luaS_√wl°r
(
L
, 
buff
, 
é
);

489 
ts
 = 
	`luaS_¸óã g°robj
(
L
, 
é
);

490 
	`c›y2buff
(
t›
, 
n
, 
	`gë°r
(
ts
));

492 
	`£tsvÆue2s
(
L
, 
t›
 - 
n
, 
ts
);

494 
tŸÆ
 -
n
-1;

495 
L
->
t›
 -
n
-1;

496 } 
tŸÆ
 > 1);

497 
	}
}

503 
	$luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
) {

504 c⁄° 
TVÆue
 *
tm
;

505 
	`ây≥
(
rb
)) {

506 
LUA_TTABLE
: {

507 
TabÀ
 *
h
 = 
	`hvÆue
(
rb
);

508 
tm
 = 
	`Á°tm
(
L
, 
h
->
më©abÀ
, 
TM_LEN
);

509 i‡(
tm
) ;

510 
	`£tivÆue
(
ø
, 
	`luaH_gën
(
h
));

513 
LUA_TSHRSTR
: {

514 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
shæí
);

517 
LUA_TLNGSTR
: {

518 
	`£tivÆue
(
ø
, 
	`tsvÆue
(
rb
)->
u
.
 gÀn
);

522 
tm
 = 
	`luaT_gëtmbyobj
(
L
, 
rb
, 
TM_LEN
);

523 i‡(
	`âi¢û
(
tm
))

524 
	`luaG_ty≥îr‹
(
L
, 
rb
, "getÜength of");

528 
	`luaT_ˇŒTM
(
L
, 
tm
, 
rb
,Ñb, 
ø
, 1);

529 
	}
}

538 
lua_I¡egî
 
	$luaV_div
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

539 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

540 i‡(
n
 == 0)

541 
	`luaG_ru√º‹
(
L
, "attemptÅo divide by zero");

542  
	`öt›
(-, 0, 
m
);

545 
lua_I¡egî
 
q
 = 
m
 / 
n
;

546 i‡((
m
 ^ 
n
) < 0 && m %Ç != 0)

547 
q
 -= 1;

548  
q
;

550 
	}
}

558 
lua_I¡egî
 
	$luaV_mod
 (
lua_Sèã
 *
L
, 
lua_I¡egî
 
m
,Üua_I¡egî 
n
) {

559 i‡(
	`l_ˇ°S2U
(
n
) + 1u <= 1u) {

560 i‡(
n
 == 0)

561 
	`luaG_ru√º‹
(
L
, "attemptÅoÖerform 'n%%0'");

565 
lua_I¡egî
 
r
 = 
m
 % 
n
;

566 i‡(
r
 !0 && (
m
 ^ 
n
) < 0)

567 
r
 +
n
;

568  
r
;

570 
	}
}

574 
	#NBITS
 
	`ˇ°_öt
((
lua_I¡egî
Ë* 
CHAR_BIT
)

	)

579 
lua_I¡egî
 
	$luaV_shi·l
 (
lua_I¡egî
 
x
,Üua_I¡egî 
y
) {

580 i‡(
y
 < 0) {

581 i‡(
y
 <-
NBITS
)  0;

582  
	`öt›
(>>, 
x
, -
y
);

585 i‡(
y
 >
NBITS
)  0;

586  
	`öt›
(<<, 
x
, 
y
);

588 
	}
}

596 
LClosuª
 *
	$gëˇched
 (
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
) {

597 
LClosuª
 *
c
 = 
p
->
ˇche
;

598 i‡(
c
 !
NULL
) {

599 
nup
 = 
p
->
sizeupvÆues
;

600 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

601 
i
;

602 
i
 = 0; i < 
nup
; i++) {

603 
TVÆue
 *
v
 = 
uv
[
i
].
ö°ack
 ? 
ba£
 + uv[i].
idx
 : 
ícup
[uv[i].idx]->v;

604 i‡(
c
->
upvÆs
[
i
]->
v
 != v)

605  
NULL
;

608  
c
;

609 
	}
}

618 
	$push˛osuª
 (
lua_Sèã
 *
L
, 
PrŸo
 *
p
, 
UpVÆ
 **
ícup
, 
StkId
 
ba£
,

619 
StkId
 
ø
) {

620 
nup
 = 
p
->
sizeupvÆues
;

621 
UpvÆdesc
 *
uv
 = 
p
->
upvÆues
;

622 
i
;

623 
LClosuª
 *
n˛
 = 
	`luaF_√wL˛osuª
(
L
, 
nup
);

624 
n˛
->
p
 =Ö;

625 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

626 
i
 = 0; i < 
nup
; i++) {

627 i‡(
uv
[
i
].
ö°ack
)

628 
n˛
->
upvÆs
[
i
] = 
	`luaF_födupvÆ
(
L
, 
ba£
 + 
uv
[i].
idx
);

630 
n˛
->
upvÆs
[
i
] = 
ícup
[
uv
[i].
idx
];

631 
n˛
->
upvÆs
[
i
]->
ªfcou¡
++;

634 i‡(!
	`isbœck
(
p
))

635 
p
->
ˇche
 = 
n˛
;

636 
	}
}

642 
	$luaV_föishOp
 (
lua_Sèã
 *
L
) {

643 
CÆlInfo
 *
ci
 = 
L
->ci;

644 
StkId
 
ba£
 = 
ci
->
u
.
l
.base;

645 
In°ru˘i⁄
 
ö°
 = *(
ci
->
u
.
l
.
ßvedpc
 - 1);

646 
OpCode
 
›
 = 
	`GET_OPCODE
(
ö°
);

647 
›
) {

648 
OP_ADD
: 
OP_SUB
: 
OP_MUL
: 
OP_DIV
: 
OP_IDIV
:

649 
OP_BAND
: 
OP_BOR
: 
OP_BXOR
: 
OP_SHL
: 
OP_SHR
:

650 
OP_MOD
: 
OP_POW
:

651 
OP_UNM
: 
OP_BNOT
: 
OP_LEN
:

652 
OP_GETTABUP
: 
OP_GETTABLE
: 
OP_SELF
: {

653 
	`£tobjs2s
(
L
, 
ba£
 + 
	`GETARG_A
(
ö°
), --L->
t›
);

656 
OP_LE
: 
OP_LT
: 
OP_EQ
: {

657 
ªs
 = !
	`l_isÁl£
(
L
->
t›
 - 1);

658 
L
->
t›
--;

659 i‡(
ci
->
ˇŒ°©us
 & 
CIST_LEQ
) {

660 
	`lua_as£π
(
›
 =
OP_LE
);

661 
ci
->
ˇŒ°©us
 ^
CIST_LEQ
;

662 
ªs
 = !res;

664 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_JMP
);

665 i‡(
ªs
 !
	`GETARG_A
(
ö°
))

666 
ci
->
u
.
l
.
ßvedpc
++;

669 
OP_CONCAT
: {

670 
StkId
 
t›
 = 
L
->top - 1;

671 
b
 = 
	`GETARG_B
(
ö°
);

672 
tŸÆ
 = 
	`ˇ°_öt
(
t›
 - 1 - (
ba£
 + 
b
));

673 
	`£tobj2s
(
L
, 
t›
 - 2,Åop);

674 i‡(
tŸÆ
 > 1) {

675 
L
->
t›
 =Åop - 1;

676 
	`luaV_c⁄ˇt
(
L
, 
tŸÆ
);

679 
	`£tobj2s
(
L
, 
ci
->
u
.
l
.
ba£
 + 
	`GETARG_A
(
ö°
), L->
t›
 - 1);

680 
L
->
t›
 = 
ci
->top;

683 
OP_TFORCALL
: {

684 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_TFORLOOP
);

685 
L
->
t›
 = 
ci
->top;

688 
OP_CALL
: {

689 i‡(
	`GETARG_C
(
ö°
) - 1 >= 0)

690 
L
->
t›
 = 
ci
->top;

693 
OP_TAILCALL
: 
OP_SETTABUP
: 
OP_SETTABLE
:

695 : 
	`lua_as£π
(0);

697 
	}
}

714 
	#RA
(
i
Ë(
ba£
+
	`GETARG_A
(i))

	)

715 
	#RB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_B
(i))

	)

716 
	#RC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgR
, 
ba£
+
	`GETARG_C
(i))

	)

717 
	#RKB
(
i
Ë
	`check_exp
(
	`gëBMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

718 
	`ISK
(
	`GETARG_B
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_B(i)Ë: 
ba£
+GETARG_B(i))

	)

719 
	#RKC
(
i
Ë
	`check_exp
(
	`gëCMode
(
	`GET_OPCODE
(i)Ë=
OpArgK
, \

720 
	`ISK
(
	`GETARG_C
(
i
)Ë? 
k
+
	`INDEXK
(GETARG_C(i)Ë: 
ba£
+GETARG_C(i))

	)

724 
	#dojump
(
ci
,
i
,
e
) \

725 { 
a
 = 
	`GETARG_A
(
i
); \

726 i‡(
a
 !0Ë
	`luaF_˛o£
(
L
, 
ci
->
u
.
l
.
ba£
 +á - 1); \

727 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
Ë+ 
e
; }

	)

730 
	#d⁄extjump
(
ci
Ë{ 
i
 = *ci->
u
.
l
.
ßvedpc
; 
	`dojump
(ci, i, 1); }

	)

733 
	#PrŸe˘
(
x
Ë{ {x;}; 
ba£
 = 
ci
->
u
.
l
.ba£; }

	)

735 
	#checkGC
(
L
,
c
) \

736 { 
	`luaC_c⁄dGC
(
L
, L->
t›
 = (
c
), \

737 
	`PrŸe˘
(
L
->
t›
 = 
ci
->top)); \

738 
	`luai_thªadyõld
(
L
); }

	)

741 
	#vmdi•©ch
(
o
Ëo)

	)

742 
	#vmˇ£
(
l
Ël:

	)

743 
	#vmbªak
 

	)

750 
	#gëèbÀPrŸe˘ed
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
aux
; \

751 i‡(
	`luaV_Á°gë
(
L
,
t
,
k
,
aux
,
luaH_gë
)Ë{ 
	`£tobj2s
(L, 
v
,áux); } \

752 
	`PrŸe˘
(
	`luaV_föishgë
(
L
,
t
,
k
,
v
,
aux
)); }

	)

756 
	#£âabÀPrŸe˘ed
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

757 i‡(!
	`luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
,
v
)) \

758 
	`PrŸe˘
(
	`luaV_föish£t
(
L
,
t
,
k
,
v
,
¶Ÿ
)); }

	)

762 
	$luaV_execuã
 (
lua_Sèã
 *
L
) {

763 
CÆlInfo
 *
ci
 = 
L
->ci;

764 
LClosuª
 *
˛
;

765 
TVÆue
 *
k
;

766 
StkId
 
ba£
;

767 
ci
->
ˇŒ°©us
 |
CIST_FRESH
;

768 
√w‰ame
:

769 
	`lua_as£π
(
ci
 =
L
->ci);

770 
˛
 = 
	`˛LvÆue
(
ci
->
func
);

771 
k
 = 
˛
->
p
->k;

772 
ba£
 = 
ci
->
u
.
l
.base;

775 
In°ru˘i⁄
 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

776 
StkId
 
ø
;

777 i‡(
L
->
hookmask
 & (
LUA_MASKLINE
 | 
LUA_MASKCOUNT
))

778 
	`PrŸe˘
(
	`luaG_åa˚exec
(
L
));

780 
ø
 = 
	`RA
(
i
);

781 
	`lua_as£π
(
ba£
 =
ci
->
u
.
l
.base);

782 
	`lua_as£π
(
ba£
 <
L
->
t›
 && L->t› < L->
°ack
 + L->
°acksize
);

783 
	`vmdi•©ch
 (
	`GET_OPCODE
(
i
)) {

784 
	`vmˇ£
(
OP_MOVE
) {

785 
	`£tobjs2s
(
L
, 
ø
, 
	`RB
(
i
));

786 
vmbªak
;

788 
	`vmˇ£
(
OP_LOADK
) {

789 
TVÆue
 *
rb
 = 
k
 + 
	`GETARG_Bx
(
i
);

790 
	`£tobj2s
(
L
, 
ø
, 
rb
);

791 
vmbªak
;

793 
	`vmˇ£
(
OP_LOADKX
) {

794 
TVÆue
 *
rb
;

795 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

796 
rb
 = 
k
 + 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

797 
	`£tobj2s
(
L
, 
ø
, 
rb
);

798 
vmbªak
;

800 
	`vmˇ£
(
OP_LOADBOOL
) {

801 
	`£tbvÆue
(
ø
, 
	`GETARG_B
(
i
));

802 i‡(
	`GETARG_C
(
i
)Ë
ci
->
u
.
l
.
ßvedpc
++;

803 
vmbªak
;

805 
	`vmˇ£
(
OP_LOADNIL
) {

806 
b
 = 
	`GETARG_B
(
i
);

808 
	`£äûvÆue
(
ø
++);

809 } 
b
--);

810 
vmbªak
;

812 
	`vmˇ£
(
OP_GETUPVAL
) {

813 
b
 = 
	`GETARG_B
(
i
);

814 
	`£tobj2s
(
L
, 
ø
, 
˛
->
upvÆs
[
b
]->
v
);

815 
vmbªak
;

817 
	`vmˇ£
(
OP_GETTABUP
) {

818 
TVÆue
 *
upvÆ
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)]->
v
;

819 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

820 
	`gëèbÀPrŸe˘ed
(
L
, 
upvÆ
, 
rc
, 
ø
);

821 
vmbªak
;

823 
	`vmˇ£
(
OP_GETTABLE
) {

824 
StkId
 
rb
 = 
	`RB
(
i
);

825 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

826 
	`gëèbÀPrŸe˘ed
(
L
, 
rb
, 
rc
, 
ø
);

827 
vmbªak
;

829 
	`vmˇ£
(
OP_SETTABUP
) {

830 
TVÆue
 *
upvÆ
 = 
˛
->
upvÆs
[
	`GETARG_A
(
i
)]->
v
;

831 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

832 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

833 
	`£âabÀPrŸe˘ed
(
L
, 
upvÆ
, 
rb
, 
rc
);

834 
vmbªak
;

836 
	`vmˇ£
(
OP_SETUPVAL
) {

837 
UpVÆ
 *
uv
 = 
˛
->
upvÆs
[
	`GETARG_B
(
i
)];

838 
	`£tobj
(
L
, 
uv
->
v
, 
ø
);

839 
	`luaC_upvÆb¨rõr
(
L
, 
uv
);

840 
vmbªak
;

842 
	`vmˇ£
(
OP_SETTABLE
) {

843 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

844 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

845 
	`£âabÀPrŸe˘ed
(
L
, 
ø
, 
rb
, 
rc
);

846 
vmbªak
;

848 
	`vmˇ£
(
OP_NEWTABLE
) {

849 
b
 = 
	`GETARG_B
(
i
);

850 
c
 = 
	`GETARG_C
(
i
);

851 
TabÀ
 *
t
 = 
	`luaH_√w
(
L
);

852 
	`£thvÆue
(
L
, 
ø
, 
t
);

853 i‡(
b
 !0 || 
c
 != 0)

854 
	`luaH_ªsize
(
L
, 
t
, 
	`luaO_fb2öt
(
b
),ÜuaO_fb2öt(
c
));

855 
	`checkGC
(
L
, 
ø
 + 1);

856 
vmbªak
;

858 
	`vmˇ£
(
OP_SELF
) {

859 c⁄° 
TVÆue
 *
aux
;

860 
StkId
 
rb
 = 
	`RB
(
i
);

861 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

862 
TSåög
 *
key
 = 
	`tsvÆue
(
rc
);

863 
	`£tobjs2s
(
L
, 
ø
 + 1, 
rb
);

864 i‡(
	`luaV_Á°gë
(
L
, 
rb
, 
key
, 
aux
, 
luaH_gë°r
)) {

865 
	`£tobj2s
(
L
, 
ø
, 
aux
);

867 
	`PrŸe˘
(
	`luaV_föishgë
(
L
, 
rb
, 
rc
, 
ø
, 
aux
));

868 
vmbªak
;

870 
	`vmˇ£
(
OP_ADD
) {

871 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

872 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

873 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

874 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

875 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

876 
	`£tivÆue
(
ø
, 
	`öt›
(+, 
ib
, 
ic
));

878 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

879 
	`£tÊtvÆue
(
ø
, 
	`luai_numadd
(
L
, 
nb
, 
nc
));

881 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_ADD
)); }

882 
vmbªak
;

884 
	`vmˇ£
(
OP_SUB
) {

885 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

886 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

887 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

888 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

889 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

890 
	`£tivÆue
(
ø
, 
	`öt›
(-, 
ib
, 
ic
));

892 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

893 
	`£tÊtvÆue
(
ø
, 
	`luai_numsub
(
L
, 
nb
, 
nc
));

895 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SUB
)); }

896 
vmbªak
;

898 
	`vmˇ£
(
OP_MUL
) {

899 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

900 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

901 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

902 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

903 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

904 
	`£tivÆue
(
ø
, 
	`öt›
(*, 
ib
, 
ic
));

906 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

907 
	`£tÊtvÆue
(
ø
, 
	`luai_nummul
(
L
, 
nb
, 
nc
));

909 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MUL
)); }

910 
vmbªak
;

912 
	`vmˇ£
(
OP_DIV
) {

913 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

914 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

915 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

916 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

917 
	`£tÊtvÆue
(
ø
, 
	`luai_numdiv
(
L
, 
nb
, 
nc
));

919 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_DIV
)); }

920 
vmbªak
;

922 
	`vmˇ£
(
OP_BAND
) {

923 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

924 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

925 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

926 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

927 
	`£tivÆue
(
ø
, 
	`öt›
(&, 
ib
, 
ic
));

929 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BAND
)); }

930 
vmbªak
;

932 
	`vmˇ£
(
OP_BOR
) {

933 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

934 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

935 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

936 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

937 
	`£tivÆue
(
ø
, 
	`öt›
(|, 
ib
, 
ic
));

939 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BOR
)); }

940 
vmbªak
;

942 
	`vmˇ£
(
OP_BXOR
) {

943 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

944 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

945 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

946 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

947 
	`£tivÆue
(
ø
, 
	`öt›
(^, 
ib
, 
ic
));

949 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_BXOR
)); }

950 
vmbªak
;

952 
	`vmˇ£
(
OP_SHL
) {

953 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

954 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

955 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

956 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

957 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, 
ic
));

959 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHL
)); }

960 
vmbªak
;

962 
	`vmˇ£
(
OP_SHR
) {

963 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

964 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

965 
lua_I¡egî
 
ib
;Üua_I¡egî 
ic
;

966 i‡(
	`toöãgî
(
rb
, &
ib
Ë&&Åoöãgî(
rc
, &
ic
)) {

967 
	`£tivÆue
(
ø
, 
	`luaV_shi·l
(
ib
, -
ic
));

969 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_SHR
)); }

970 
vmbªak
;

972 
	`vmˇ£
(
OP_MOD
) {

973 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

974 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

975 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

976 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

977 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

978 
	`£tivÆue
(
ø
, 
	`luaV_mod
(
L
, 
ib
, 
ic
));

980 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

981 
lua_Numbî
 
m
;

982 
	`luai_nummod
(
L
, 
nb
, 
nc
, 
m
);

983 
	`£tÊtvÆue
(
ø
, 
m
);

985 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_MOD
)); }

986 
vmbªak
;

988 
	`vmˇ£
(
OP_IDIV
) {

989 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

990 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

991 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

992 i‡(
	`âisöãgî
(
rb
Ë&&Åtisöãgî(
rc
)) {

993 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);Üua_I¡egî 
ic
 = ivÆue(
rc
);

994 
	`£tivÆue
(
ø
, 
	`luaV_div
(
L
, 
ib
, 
ic
));

996 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

997 
	`£tÊtvÆue
(
ø
, 
	`luai_numidiv
(
L
, 
nb
, 
nc
));

999 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_IDIV
)); }

1000 
vmbªak
;

1002 
	`vmˇ£
(
OP_POW
) {

1003 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1004 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1005 
lua_Numbî
 
nb
;Üua_Numbî 
nc
;

1006 i‡(
	`t⁄umbî
(
rb
, &
nb
Ë&&Å⁄umbî(
rc
, &
nc
)) {

1007 
	`£tÊtvÆue
(
ø
, 
	`luai_numpow
(
L
, 
nb
, 
nc
));

1009 { 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
, 
rc
, 
ø
, 
TM_POW
)); }

1010 
vmbªak
;

1012 
	`vmˇ£
(
OP_UNM
) {

1013 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1014 
lua_Numbî
 
nb
;

1015 i‡(
	`âisöãgî
(
rb
)) {

1016 
lua_I¡egî
 
ib
 = 
	`ivÆue
(
rb
);

1017 
	`£tivÆue
(
ø
, 
	`öt›
(-, 0, 
ib
));

1019 i‡(
	`t⁄umbî
(
rb
, &
nb
)) {

1020 
	`£tÊtvÆue
(
ø
, 
	`luai_numunm
(
L
, 
nb
));

1023 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_UNM
));

1025 
vmbªak
;

1027 
	`vmˇ£
(
OP_BNOT
) {

1028 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1029 
lua_I¡egî
 
ib
;

1030 i‡(
	`toöãgî
(
rb
, &
ib
)) {

1031 
	`£tivÆue
(
ø
, 
	`öt›
(^, ~
	`l_ˇ°S2U
(0), 
ib
));

1034 
	`PrŸe˘
(
	`luaT_åyböTM
(
L
, 
rb
,Ñb, 
ø
, 
TM_BNOT
));

1036 
vmbªak
;

1038 
	`vmˇ£
(
OP_NOT
) {

1039 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1040 
ªs
 = 
	`l_isÁl£
(
rb
);

1041 
	`£tbvÆue
(
ø
, 
ªs
);

1042 
vmbªak
;

1044 
	`vmˇ£
(
OP_LEN
) {

1045 
	`PrŸe˘
(
	`luaV_objÀn
(
L
, 
ø
, 
	`RB
(
i
)));

1046 
vmbªak
;

1048 
	`vmˇ£
(
OP_CONCAT
) {

1049 
b
 = 
	`GETARG_B
(
i
);

1050 
c
 = 
	`GETARG_C
(
i
);

1051 
StkId
 
rb
;

1052 
L
->
t›
 = 
ba£
 + 
c
 + 1;

1053 
	`PrŸe˘
(
	`luaV_c⁄ˇt
(
L
, 
c
 - 
b
 + 1));

1054 
ø
 = 
	`RA
(
i
);

1055 
rb
 = 
ba£
 + 
b
;

1056 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

1057 
	`checkGC
(
L
, (
ø
 >
rb
 ?Ña + 1 :Ñb));

1058 
L
->
t›
 = 
ci
->top;

1059 
vmbªak
;

1061 
	`vmˇ£
(
OP_JMP
) {

1062 
	`dojump
(
ci
, 
i
, 0);

1063 
vmbªak
;

1065 
	`vmˇ£
(
OP_EQ
) {

1066 
TVÆue
 *
rb
 = 
	`RKB
(
i
);

1067 
TVÆue
 *
rc
 = 
	`RKC
(
i
);

1068 
	`PrŸe˘
(

1069 i‡(
	`luaV_equÆobj
(
L
, 
rb
, 
rc
Ë!
	`GETARG_A
(
i
))

1070 
ci
->
u
.
l
.
ßvedpc
++;

1072 
	`d⁄extjump
(
ci
);

1074 
vmbªak
;

1076 
	`vmˇ£
(
OP_LT
) {

1077 
	`PrŸe˘
(

1078 i‡(
	`luaV_Às°h™
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

1079 
ci
->
u
.
l
.
ßvedpc
++;

1081 
	`d⁄extjump
(
ci
);

1083 
vmbªak
;

1085 
	`vmˇ£
(
OP_LE
) {

1086 
	`PrŸe˘
(

1087 i‡(
	`luaV_Às£quÆ
(
L
, 
	`RKB
(
i
), 
	`RKC
(i)Ë!
	`GETARG_A
(i))

1088 
ci
->
u
.
l
.
ßvedpc
++;

1090 
	`d⁄extjump
(
ci
);

1092 
vmbªak
;

1094 
	`vmˇ£
(
OP_TEST
) {

1095 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
ø
) : !l_isfalse(ra))

1096 
ci
->
u
.
l
.
ßvedpc
++;

1098 
	`d⁄extjump
(
ci
);

1099 
vmbªak
;

1101 
	`vmˇ£
(
OP_TESTSET
) {

1102 
TVÆue
 *
rb
 = 
	`RB
(
i
);

1103 i‡(
	`GETARG_C
(
i
Ë? 
	`l_isÁl£
(
rb
) : !l_isfalse(rb))

1104 
ci
->
u
.
l
.
ßvedpc
++;

1106 
	`£tobjs2s
(
L
, 
ø
, 
rb
);

1107 
	`d⁄extjump
(
ci
);

1109 
vmbªak
;

1111 
	`vmˇ£
(
OP_CALL
) {

1112 
b
 = 
	`GETARG_B
(
i
);

1113 
ƒesu…s
 = 
	`GETARG_C
(
i
) - 1;

1114 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1115 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
ƒesu…s
)) {

1116 i‡(
ƒesu…s
 >= 0)

1117 
L
->
t›
 = 
ci
->top;

1118 
	`PrŸe˘
(()0);

1121 
ci
 = 
L
->ci;

1122 
√w‰ame
;

1124 
vmbªak
;

1126 
	`vmˇ£
(
OP_TAILCALL
) {

1127 
b
 = 
	`GETARG_B
(
i
);

1128 i‡(
b
 !0Ë
L
->
t›
 = 
ø
+b;

1129 
	`lua_as£π
(
	`GETARG_C
(
i
Ë- 1 =
LUA_MULTRET
);

1130 i‡(
	`luaD_¥eˇŒ
(
L
, 
ø
, 
LUA_MULTRET
)) {

1131 
	`PrŸe˘
(()0);

1135 
CÆlInfo
 *
nci
 = 
L
->
ci
;

1136 
CÆlInfo
 *
oci
 = 
nci
->
¥evious
;

1137 
StkId
 
nfunc
 = 
nci
->
func
;

1138 
StkId
 
ofunc
 = 
oci
->
func
;

1140 
StkId
 
lim
 = 
nci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
nfunc
)->
num∑øms
;

1141 
aux
;

1143 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
oci
->
u
.
l
.
ba£
);

1145 
aux
 = 0; 
nfunc
 +áux < 
lim
;áux++)

1146 
	`£tobjs2s
(
L
, 
ofunc
 + 
aux
, 
nfunc
 +áux);

1147 
oci
->
u
.
l
.
ba£
 = 
ofunc
 + (
nci
->u.l.ba£ - 
nfunc
);

1148 
oci
->
t›
 = 
L
->t› = 
ofunc
 + (L->t› - 
nfunc
);

1149 
oci
->
u
.
l
.
ßvedpc
 = 
nci
->u.l.savedpc;

1150 
oci
->
ˇŒ°©us
 |
CIST_TAIL
;

1151 
ci
 = 
L
->cò
oci
;

1152 
	`lua_as£π
(
L
->
t›
 =
oci
->
u
.
l
.
ba£
 + 
	`gë¥Ÿo
(
ofunc
)->
max°acksize
);

1153 
√w‰ame
;

1155 
vmbªak
;

1157 
	`vmˇ£
(
OP_RETURN
) {

1158 
b
 = 
	`GETARG_B
(
i
);

1159 i‡(
˛
->
p
->
sizï
 > 0Ë
	`luaF_˛o£
(
L
, 
ba£
);

1160 
b
 = 
	`luaD_posˇŒ
(
L
, 
ci
, 
ø
, (b !0 ? b - 1 : 
	`ˇ°_öt
(L->
t›
 -Ña)));

1161 i‡(
ci
->
ˇŒ°©us
 & 
CIST_FRESH
)

1164 
ci
 = 
L
->ci;

1165 i‡(
b
Ë
L
->
t›
 = 
ci
->top;

1166 
	`lua_as£π
(
	`isLua
(
ci
));

1167 
	`lua_as£π
(
	`GET_OPCODE
(*((
ci
)->
u
.
l
.
ßvedpc
 - 1)Ë=
OP_CALL
);

1168 
√w‰ame
;

1171 
	`vmˇ£
(
OP_FORLOOP
) {

1172 i‡(
	`âisöãgî
(
ø
)) {

1173 
lua_I¡egî
 
°ï
 = 
	`ivÆue
(
ø
 + 2);

1174 
lua_I¡egî
 
idx
 = 
	`öt›
(+, 
	`ivÆue
(
ø
), 
°ï
);

1175 
lua_I¡egî
 
limô
 = 
	`ivÆue
(
ø
 + 1);

1176 i‡((0 < 
°ï
Ë? (
idx
 <
limô
) : (limit <= idx)) {

1177 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1178 
	`chgivÆue
(
ø
, 
idx
);

1179 
	`£tivÆue
(
ø
 + 3, 
idx
);

1183 
lua_Numbî
 
°ï
 = 
	`ÊtvÆue
(
ø
 + 2);

1184 
lua_Numbî
 
idx
 = 
	`luai_numadd
(
L
, 
	`ÊtvÆue
(
ø
), 
°ï
);

1185 
lua_Numbî
 
limô
 = 
	`ÊtvÆue
(
ø
 + 1);

1186 i‡(
	`luai_num…
(0, 
°ï
Ë? 
	`luai_numÀ
(
idx
, 
limô
)

1187 : 
	`luai_numÀ
(
limô
, 
idx
)) {

1188 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1189 
	`chgÊtvÆue
(
ø
, 
idx
);

1190 
	`£tÊtvÆue
(
ø
 + 3, 
idx
);

1193 
vmbªak
;

1195 
	`vmˇ£
(
OP_FORPREP
) {

1196 
TVÆue
 *
öô
 = 
ø
;

1197 
TVÆue
 *
∂imô
 = 
ø
 + 1;

1198 
TVÆue
 *
p°ï
 = 
ø
 + 2;

1199 
lua_I¡egî
 
ûimô
;

1200 
°›now
;

1201 i‡(
	`âisöãgî
(
öô
Ë&&Åtisöãgî(
p°ï
) &&

1202 
	`f‹limô
(
∂imô
, &
ûimô
, 
	`ivÆue
(
p°ï
), &
°›now
)) {

1204 
lua_I¡egî
 
öôv
 = (
°›now
 ? 0 : 
	`ivÆue
(
öô
));

1205 
	`£tivÆue
(
∂imô
, 
ûimô
);

1206 
	`£tivÆue
(
öô
, 
	`öt›
(-, 
öôv
, 
	`ivÆue
(
p°ï
)));

1209 
lua_Numbî
 
nöô
;Üua_Numbî 
∆imô
;Üua_Numbî 
n°ï
;

1210 i‡(!
	`t⁄umbî
(
∂imô
, &
∆imô
))

1211 
	`luaG_ru√º‹
(
L
, "'for'Üimit must beáÇumber");

1212 
	`£tÊtvÆue
(
∂imô
, 
∆imô
);

1213 i‡(!
	`t⁄umbî
(
p°ï
, &
n°ï
))

1214 
	`luaG_ru√º‹
(
L
, "'for' step must beáÇumber");

1215 
	`£tÊtvÆue
(
p°ï
, 
n°ï
);

1216 i‡(!
	`t⁄umbî
(
öô
, &
nöô
))

1217 
	`luaG_ru√º‹
(
L
, "'for' initial value must beáÇumber");

1218 
	`£tÊtvÆue
(
öô
, 
	`luai_numsub
(
L
, 
nöô
, 
n°ï
));

1220 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1221 
vmbªak
;

1223 
	`vmˇ£
(
OP_TFORCALL
) {

1224 
StkId
 
cb
 = 
ø
 + 3;

1225 
	`£tobjs2s
(
L
, 
cb
+2, 
ø
+2);

1226 
	`£tobjs2s
(
L
, 
cb
+1, 
ø
+1);

1227 
	`£tobjs2s
(
L
, 
cb
, 
ø
);

1228 
L
->
t›
 = 
cb
 + 3;

1229 
	`PrŸe˘
(
	`luaD_ˇŒ
(
L
, 
cb
, 
	`GETARG_C
(
i
)));

1230 
L
->
t›
 = 
ci
->top;

1231 
i
 = *(
ci
->
u
.
l
.
ßvedpc
++);

1232 
ø
 = 
	`RA
(
i
);

1233 
	`lua_as£π
(
	`GET_OPCODE
(
i
Ë=
OP_TFORLOOP
);

1234 
l_tf‹lo›
;

1236 
	`vmˇ£
(
OP_TFORLOOP
) {

1237 
l_tf‹lo›
:

1238 i‡(!
	`âi¢û
(
ø
 + 1)) {

1239 
	`£tobjs2s
(
L
, 
ø
,Ña + 1);

1240 
ci
->
u
.
l
.
ßvedpc
 +
	`GETARG_sBx
(
i
);

1242 
vmbªak
;

1244 
	`vmˇ£
(
OP_SETLIST
) {

1245 
n
 = 
	`GETARG_B
(
i
);

1246 
c
 = 
	`GETARG_C
(
i
);

1247 
œ°
;

1248 
TabÀ
 *
h
;

1249 i‡(
n
 =0Ë¿
	`ˇ°_öt
(
L
->
t›
 - 
ø
) - 1;

1250 i‡(
c
 == 0) {

1251 
	`lua_as£π
(
	`GET_OPCODE
(*
ci
->
u
.
l
.
ßvedpc
Ë=
OP_EXTRAARG
);

1252 
c
 = 
	`GETARG_Ax
(*
ci
->
u
.
l
.
ßvedpc
++);

1254 
h
 = 
	`hvÆue
(
ø
);

1255 
œ°
 = ((
c
-1)*
LFIELDS_PER_FLUSH
Ë+ 
n
;

1256 i‡(
œ°
 > 
h
->
sizóºay
)

1257 
	`luaH_ªsizóºay
(
L
, 
h
, 
œ°
);

1258 ; 
n
 > 0;Ç--) {

1259 
TVÆue
 *
vÆ
 = 
ø
+
n
;

1260 
	`luaH_£töt
(
L
, 
h
, 
œ°
--, 
vÆ
);

1261 
	`luaC_b¨rõrback
(
L
, 
h
, 
vÆ
);

1263 
L
->
t›
 = 
ci
->top;

1264 
vmbªak
;

1266 
	`vmˇ£
(
OP_CLOSURE
) {

1267 
PrŸo
 *
p
 = 
˛
->p->p[
	`GETARG_Bx
(
i
)];

1268 
LClosuª
 *
n˛
 = 
	`gëˇched
(
p
, 
˛
->
upvÆs
, 
ba£
);

1269 i‡(
n˛
 =
NULL
)

1270 
	`push˛osuª
(
L
, 
p
, 
˛
->
upvÆs
, 
ba£
, 
ø
);

1272 
	`£t˛LvÆue
(
L
, 
ø
, 
n˛
);

1273 
	`checkGC
(
L
, 
ø
 + 1);

1274 
vmbªak
;

1276 
	`vmˇ£
(
OP_VARARG
) {

1277 
b
 = 
	`GETARG_B
(
i
) - 1;

1278 
j
;

1279 
n
 = 
	`ˇ°_öt
(
ba£
 - 
ci
->
func
Ë- 
˛
->
p
->
num∑øms
 - 1;

1280 i‡(
n
 < 0)

1281 
n
 = 0;

1282 i‡(
b
 < 0) {

1283 
b
 = 
n
;

1284 
	`PrŸe˘
(
	`luaD_check°ack
(
L
, 
n
));

1285 
ø
 = 
	`RA
(
i
);

1286 
L
->
t›
 = 
ø
 + 
n
;

1288 
j
 = 0; j < 
b
 && j < 
n
; j++)

1289 
	`£tobjs2s
(
L
, 
ø
 + 
j
, 
ba£
 - 
n
 + j);

1290 ; 
j
 < 
b
; j++)

1291 
	`£äûvÆue
(
ø
 + 
j
);

1292 
vmbªak
;

1294 
	`vmˇ£
(
OP_EXTRAARG
) {

1295 
	`lua_as£π
(0);

1296 
vmbªak
;

1300 
	}
}

	@lib/lua/src/lvm.h

7 #i‚de‡
lvm_h


8 
	#lvm_h


	)

11 
	~"ldo.h
"

12 
	~"lobje˘.h
"

13 
	~"…m.h
"

16 #i‡!
deföed
(
LUA_NOCVTN2S
)

17 
	#cvt2°r
(
o
Ë
	`âi¢umbî
(o)

	)

19 
	#cvt2°r
(
o
Ë0

	)

23 #i‡!
deföed
(
LUA_NOCVTS2N
)

24 
	#cvt2num
(
o
Ë
	`âis°rög
(o)

	)

26 
	#cvt2num
(
o
Ë0

	)

35 #i‡!
deföed
(
LUA_FLOORN2I
)

36 
	#LUA_FLOORN2I
 0

	)

40 
	#t⁄umbî
(
o
,
n
) \

41 (
	`âisÊﬂt
(
o
Ë? (*(
n
Ë
	`ÊtvÆue
(o), 1Ë: 
	`luaV_t⁄umbî_
(o,n))

	)

43 
	#toöãgî
(
o
,
i
) \

44 (
	`âisöãgî
(
o
Ë? (*(
i
Ë
	`ivÆue
(o), 1Ë: 
	`luaV_toöãgî
(o,i,
LUA_FLOORN2I
))

	)

46 
	#öt›
(
›
,
v1
,
v2
Ë
	`l_ˇ°U2S
(
	`l_ˇ°S2U
(v1Ë›Ü_ˇ°S2U(v2))

	)

48 
	#luaV_øwequÆobj
(
t1
,
t2
Ë
	`luaV_equÆobj
(
NULL
,t1,t2)

	)

56 
	#luaV_Á°gë
(
L
,
t
,
k
,
aux
,
f
) \

57 (!
	`âi°abÀ
(
t
) \

58 ? (
aux
 = 
NULL
, 0) \

59 : (
aux
 = 
	`f
(
	`hvÆue
(
t
), 
k
), \

60 !
	`âi¢û
(
aux
) ? 1 \

61 : (
aux
 = 
	`Á°tm
(
L
, 
	`hvÆue
(
t
)->
më©abÀ
, 
TM_INDEX
), \

62 
aux
 !
NULL
 ? 0 \

63 : (
aux
 = 
luaO_nûobje˘
, 1)))Ë

	)

68 
	#luaV_gëèbÀ
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
aux
; \

69 i‡(
	`luaV_Á°gë
(
L
,
t
,
k
,
aux
,
luaH_gë
)Ë{ 
	`£tobj2s
(L, 
v
,áux); } \

70 
	`luaV_föishgë
(
L
,
t
,
k
,
v
,
aux
); }

	)

81 
	#luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
f
,
v
) \

82 (!
	`âi°abÀ
(
t
) \

83 ? (
¶Ÿ
 = 
NULL
, 0) \

84 : (
¶Ÿ
 = 
	`f
(
	`hvÆue
(
t
), 
k
), \

85 
	`âi¢û
(
¶Ÿ
) ? 0 \

86 : (
	`luaC_b¨rõrback
(
L
, 
	`hvÆue
(
t
), 
v
), \

87 
	`£tobj2t
(
L
, 
	`ˇ°
(
TVÆue
 *,
¶Ÿ
), 
v
), \

88 1)))

	)

91 
	#luaV_£âabÀ
(
L
,
t
,
k
,
v
Ë{ c⁄° 
TVÆue
 *
¶Ÿ
; \

92 i‡(!
	`luaV_Á°£t
(
L
,
t
,
k
,
¶Ÿ
,
luaH_gë
,
v
)) \

93 
	`luaV_föish£t
(
L
,
t
,
k
,
v
,
¶Ÿ
); }

	)

97 
LUAI_FUNC
 
luaV_equÆobj
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t1
, c⁄° TVÆuê*
t2
);

98 
LUAI_FUNC
 
luaV_Às°h™
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

99 
LUAI_FUNC
 
luaV_Às£quÆ
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
l
, c⁄° TVÆuê*
r
);

100 
LUAI_FUNC
 
luaV_t⁄umbî_
 (c⁄° 
TVÆue
 *
obj
, 
lua_Numbî
 *
n
);

101 
LUAI_FUNC
 
luaV_toöãgî
 (c⁄° 
TVÆue
 *
obj
, 
lua_I¡egî
 *
p
, 
mode
);

102 
LUAI_FUNC
 
luaV_föishgë
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

103 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
tm
);

104 
LUAI_FUNC
 
luaV_föish£t
 (
lua_Sèã
 *
L
, c⁄° 
TVÆue
 *
t
, TVÆuê*
key
,

105 
StkId
 
vÆ
, c⁄° 
TVÆue
 *
ﬁdvÆ
);

106 
LUAI_FUNC
 
luaV_föishOp
 (
lua_Sèã
 *
L
);

107 
LUAI_FUNC
 
luaV_execuã
 (
lua_Sèã
 *
L
);

108 
LUAI_FUNC
 
luaV_c⁄ˇt
 (
lua_Sèã
 *
L
, 
tŸÆ
);

109 
LUAI_FUNC
 
lua_I¡egî
 
luaV_div
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

110 
LUAI_FUNC
 
lua_I¡egî
 
luaV_mod
 (
lua_Sèã
 *
L
,Üua_I¡egî 
x
,Üua_I¡egî 
y
);

111 
LUAI_FUNC
 
lua_I¡egî
 
luaV_shi·l
 (lua_I¡egî 
x
,Üua_I¡egî 
y
);

112 
LUAI_FUNC
 
luaV_objÀn
 (
lua_Sèã
 *
L
, 
StkId
 
ø
, c⁄° 
TVÆue
 *
rb
);

	@lib/lua/src/lzio.c

7 
	#lzio_c


	)

8 
	#LUA_CORE


	)

10 
	~"Õªfix.h
"

13 
	~<°rög.h
>

15 
	~"lua.h
"

17 
	~"Œimôs.h
"

18 
	~"lmem.h
"

19 
	~"l°©e.h
"

20 
	~"lzio.h
"

23 
	$luaZ_fûl
 (
ZIO
 *
z
) {

24 
size_t
 
size
;

25 
lua_Sèã
 *
L
 = 
z
->L;

26 c⁄° *
buff
;

27 
	`lua_u∆ock
(
L
);

28 
buff
 = 
z
->
	`ªadî
(
L
, z->
d©a
, &
size
);

29 
	`lua_lock
(
L
);

30 i‡(
buff
 =
NULL
 || 
size
 == 0)

31  
EOZ
;

32 
z
->
n
 = 
size
 - 1;

33 
z
->
p
 = 
buff
;

34  
	`ˇ°_uch¨
(*(
z
->
p
++));

35 
	}
}

38 
	$luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
, *
d©a
) {

39 
z
->
L
 = L;

40 
z
->
ªadî
 =Ñeader;

41 
z
->
d©a
 = data;

42 
z
->
n
 = 0;

43 
z
->
p
 = 
NULL
;

44 
	}
}

48 
size_t
 
	$luaZ_ªad
 (
ZIO
 *
z
, *
b
, 
size_t
 
n
) {

49 
n
) {

50 
size_t
 
m
;

51 i‡(
z
->
n
 == 0) {

52 i‡(
	`luaZ_fûl
(
z
Ë=
EOZ
)

53  
n
;

55 
z
->
n
++;

56 
z
->
p
--;

59 
m
 = (
n
 <
z
->n) ?Ç : z->n;

60 
	`mem˝y
(
b
, 
z
->
p
, 
m
);

61 
z
->
n
 -
m
;

62 
z
->
p
 +
m
;

63 
b
 = (*)b + 
m
;

64 
n
 -
m
;

67 
	}
}

	@lib/lua/src/lzio.h

8 #i‚de‡
lzio_h


9 
	#lzio_h


	)

11 
	~"lua.h
"

13 
	~"lmem.h
"

16 
	#EOZ
 (-1Ë

	)

18 
Zio
 
	tZIO
;

20 
	#zgëc
(
z
Ë(((z)->
n
--)>0 ? 
	`ˇ°_uch¨
(*(z)->
p
++Ë: 
	`luaZ_fûl
(z))

	)

23 
	sMbuf„r
 {

24 *
	mbuf„r
;

25 
size_t
 
	mn
;

26 
size_t
 
	mbuffsize
;

27 } 
	tMbuf„r
;

29 
	#luaZ_öôbuf„r
(
L
, 
buff
Ë((buff)->
buf„r
 = 
NULL
, (buff)->
buffsize
 = 0)

	)

31 
	#luaZ_buf„r
(
buff
Ë((buff)->
buf„r
)

	)

32 
	#luaZ_sizebuf„r
(
buff
Ë((buff)->
buffsize
)

	)

33 
	#luaZ_bufÊí
(
buff
Ë((buff)->
n
)

	)

35 
	#luaZ_buf‰emove
(
buff
,
i
Ë((buff)->
n
 -(i))

	)

36 
	#luaZ_ª£tbuf„r
(
buff
Ë((buff)->
n
 = 0)

	)

39 
	#luaZ_ªsizebuf„r
(
L
, 
buff
, 
size
) \

40 ((
buff
)->
buf„r
 = 
	`luaM_ªÆlocvch¨
(
L
, (buff)->buffer, \

41 (
buff
)->
buffsize
, 
size
), \

42 (
buff
)->
buffsize
 = 
size
)

	)

44 
	#luaZ_‰ìbuf„r
(
L
, 
buff
Ë
	`luaZ_ªsizebuf„r
(L, buff, 0)

	)

47 
LUAI_FUNC
 
luaZ_öô
 (
lua_Sèã
 *
L
, 
ZIO
 *
z
, 
lua_Ródî
 
ªadî
,

48 *
d©a
);

49 
LUAI_FUNC
 
size_t
 
luaZ_ªad
 (
ZIO
* 
z
, *
b
, size_à
n
);

55 
	sZio
 {

56 
size_t
 
	mn
;

57 c⁄° *
	mp
;

58 
lua_Ródî
 
	mªadî
;

59 *
	md©a
;

60 
lua_Sèã
 *
	mL
;

64 
LUAI_FUNC
 
luaZ_fûl
 (
ZIO
 *
z
);

	@test.c

1 
	~<°dio.h
>

2 
	~<°rög.h
>

3 
	~<°dlib.h
>

4 
	#MAX
 256

	)

7 
	$«mef‹m©
(*
«me
, *
QS
)

9 *
bungÀ
, *
x
;

10 
ñem
[255];

12 *
QS
 = 0;

13 
bungÀ
 = 
	`mÆloc
(
	`°æí
(
«me
) + 3);

14 
	`°r˝y
(
bungÀ
, 
«me
);

15 
x
 = 
	`°πok
(
bungÀ
, ".");

16 
x
 !
NULL
) {

17 i‡(
	`¢¥ötf
(
ñem
, 255, "%c%s", 
	`°æí
(
x
), x) == 255) {

18 
	`puts
("String overflow.");

19 
	`exô
(1);

21 
	`°rˇt
(
QS
, 
ñem
);

22 
x
 = 
	`°πok
(
NULL
, ".");

24 
	`‰ì
(
bungÀ
);

25 
	}
}

28 
	$maö
()

30 
i
;

31 *
«me
 = "www.example.com";

33 *
d°
 = 
	`mÆloc
(
	`°æí
(
«me
)+3);

34 
	`«mef‹m©
(
«me
, 
d°
);

35 
i
 = 0 ; i< 
	`°æí
(
d°
); i++){

36 
	`¥ötf
("d° %d\n", 
d°
[
i
]);

38 
	`¥ötf
("«mêÀngth%d\n", 
	`°æí
(
«me
));

39 
	`¥ötf
("d°Üíghà %d\n", 
	`°æí
(
d°
));

41 
	}
}

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


119 #unde‡
°©ic_as£π


120 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #ifde‡
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #ifde‡
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

77 
	~<bôs/°©.h
>

79 
	#S_IFMT
 
__S_IFMT


	)

80 
	#S_IFDIR
 
__S_IFDIR


	)

81 
	#S_IFCHR
 
__S_IFCHR


	)

82 
	#S_IFBLK
 
__S_IFBLK


	)

83 
	#S_IFREG
 
__S_IFREG


	)

84 #ifde‡
__S_IFIFO


85 
	#S_IFIFO
 
__S_IFIFO


	)

87 #ifde‡
__S_IFLNK


88 
	#S_IFLNK
 
__S_IFLNK


	)

90 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


91 
	#S_IFSOCK
 
__S_IFSOCK


	)

96 
	#S_ISUID
 
__S_ISUID


	)

97 
	#S_ISGID
 
__S_ISGID


	)

99 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


101 
	#S_ISVTX
 
__S_ISVTX


	)

104 
	#S_IRUSR
 
__S_IREAD


	)

105 
	#S_IWUSR
 
__S_IWRITE


	)

106 
	#S_IXUSR
 
__S_IEXEC


	)

108 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

110 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

111 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

112 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

114 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

116 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

117 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

118 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

120 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

123 #ifdef 
__USE_MISC


124 #i‚de‡
R_OK


127 
	#R_OK
 4

	)

128 
	#W_OK
 2

	)

129 
	#X_OK
 1

	)

130 
	#F_OK
 0

	)

135 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


136 
	#SEEK_SET
 0

	)

137 
	#SEEK_CUR
 1

	)

138 
	#SEEK_END
 2

	)

146 
f˙é
 (
__fd
, 
__cmd
, ...);

155 #i‚de‡
__USE_FILE_OFFSET64


156 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

158 #ifde‡
__REDIRECT


159 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

160 
	`__n⁄nuŒ
 ((1));

162 
	#›í
 
›í64


	)

165 #ifde‡
__USE_LARGEFILE64


166 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

169 #ifde‡
__USE_ATFILE


179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

181 
	`__n⁄nuŒ
 ((2));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

185 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

187 
	#›í©
 
›í©64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

192 
	`__n⁄nuŒ
 ((2));

201 #i‚de‡
__USE_FILE_OFFSET64


202 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

204 #ifde‡
__REDIRECT


205 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

206 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

208 
	#¸ót
 
¸ót64


	)

211 #ifde‡
__USE_LARGEFILE64


212 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

215 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

216 && !
deföed
 
__USE_POSIX
))

225 
	#F_ULOCK
 0

	)

226 
	#F_LOCK
 1

	)

227 
	#F_TLOCK
 2

	)

228 
	#F_TEST
 3

	)

230 #i‚de‡
__USE_FILE_OFFSET64


231 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

233 #ifde‡
__REDIRECT


234 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

236 
	#lockf
 
lockf64


	)

239 #ifde‡
__USE_LARGEFILE64


240 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

244 #ifde‡
__USE_XOPEN2K


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

249 
__advi£
Ë
__THROW
;

251 #ifde‡
__REDIRECT_NTH


252 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

253 
__off64_t
 
__Àn
, 
__advi£
),

254 
posix_Ádvi£64
);

256 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

259 #ifde‡
__USE_LARGEFILE64


260 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

261 
__advi£
Ë
__THROW
;

269 #i‚de‡
__USE_FILE_OFFSET64


270 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

272 #ifde‡
__REDIRECT


273 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

274 
__off64_t
 
__Àn
),

275 
posix_ÁŒoˇã64
);

277 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

280 #ifde‡
__USE_LARGEFILE64


281 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

287 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

288 && 
deföed
 
__va_¨g_∑ck_Àn


289 
	~<bôs/f˙é2.h
>

292 
__END_DECLS


	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	~<„©uªs.h
>

31 
	#MB_LEN_MAX
 16

	)

36 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

41 #i‚de‡
_LIMITS_H


42 
	#_LIMITS_H
 1

	)

44 
	~<bôs/w‹dsize.h
>

53 
	#CHAR_BIT
 8

	)

56 
	#SCHAR_MIN
 (-128)

	)

57 
	#SCHAR_MAX
 127

	)

60 
	#UCHAR_MAX
 255

	)

63 #ifde‡
__CHAR_UNSIGNED__


64 
	#CHAR_MIN
 0

	)

65 
	#CHAR_MAX
 
UCHAR_MAX


	)

67 
	#CHAR_MIN
 
SCHAR_MIN


	)

68 
	#CHAR_MAX
 
SCHAR_MAX


	)

72 
	#SHRT_MIN
 (-32768)

	)

73 
	#SHRT_MAX
 32767

	)

76 
	#USHRT_MAX
 65535

	)

79 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

80 
	#INT_MAX
 2147483647

	)

83 
	#UINT_MAX
 4294967295U

	)

86 #i‡
__WORDSIZE
 == 64

87 
	#LONG_MAX
 9223372036854775807L

	)

89 
	#LONG_MAX
 2147483647L

	)

91 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

94 #i‡
__WORDSIZE
 == 64

95 
	#ULONG_MAX
 18446744073709551615UL

	)

97 
	#ULONG_MAX
 4294967295UL

	)

100 #ifde‡
__USE_ISOC99


103 
	#LLONG_MAX
 9223372036854775807LL

	)

104 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

107 
	#ULLONG_MAX
 18446744073709551615ULL

	)

121 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


123 #ö˛ude_√xà<
limôs
.
h
>

129 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


130 #i‚de‡
LLONG_MIN


131 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

133 #i‚de‡
LLONG_MAX


134 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

136 #i‚de‡
ULLONG_MAX


137 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

141 #ifdef 
__USE_POSIX


143 
	~<bôs/posix1_lim.h
>

146 #ifdef 
__USE_POSIX2


147 
	~<bôs/posix2_lim.h
>

150 #ifdef 
__USE_XOPEN


151 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/if_tun.h

16 #i‚de‡
__IF_TUN_H


17 
	#__IF_TUN_H


	)

19 
	~<löux/ty≥s.h
>

20 
	~<löux/if_ëhî.h
>

21 
	~<löux/fûãr.h
>

24 
	#TUN_READQ_SIZE
 500

	)

26 
	#TUN_TUN_DEV
 
IFF_TUN


	)

27 
	#TUN_TAP_DEV
 
IFF_TAP


	)

28 
	#TUN_TYPE_MASK
 0x000f

	)

31 
	#TUNSETNOCSUM
 
	`_IOW
('T', 200, )

	)

32 
	#TUNSETDEBUG
 
	`_IOW
('T', 201, )

	)

33 
	#TUNSETIFF
 
	`_IOW
('T', 202, )

	)

34 
	#TUNSETPERSIST
 
	`_IOW
('T', 203, )

	)

35 
	#TUNSETOWNER
 
	`_IOW
('T', 204, )

	)

36 
	#TUNSETLINK
 
	`_IOW
('T', 205, )

	)

37 
	#TUNSETGROUP
 
	`_IOW
('T', 206, )

	)

38 
	#TUNGETFEATURES
 
	`_IOR
('T', 207, )

	)

39 
	#TUNSETOFFLOAD
 
	`_IOW
('T', 208, )

	)

40 
	#TUNSETTXFILTER
 
	`_IOW
('T', 209, )

	)

41 
	#TUNGETIFF
 
	`_IOR
('T', 210, )

	)

42 
	#TUNGETSNDBUF
 
	`_IOR
('T', 211, )

	)

43 
	#TUNSETSNDBUF
 
	`_IOW
('T', 212, )

	)

44 
	#TUNATTACHFILTER
 
	`_IOW
('T', 213, 
sock_Ârog
)

	)

45 
	#TUNDETACHFILTER
 
	`_IOW
('T', 214, 
sock_Ârog
)

	)

46 
	#TUNGETVNETHDRSZ
 
	`_IOR
('T', 215, )

	)

47 
	#TUNSETVNETHDRSZ
 
	`_IOW
('T', 216, )

	)

48 
	#TUNSETQUEUE
 
	`_IOW
('T', 217, )

	)

49 
	#TUNSETIFINDEX
 
	`_IOW
('T', 218, )

	)

50 
	#TUNGETFILTER
 
	`_IOR
('T', 219, 
sock_Ârog
)

	)

51 
	#TUNSETVNETLE
 
	`_IOW
('T', 220, )

	)

52 
	#TUNGETVNETLE
 
	`_IOR
('T', 221, )

	)

57 
	#TUNSETVNETBE
 
	`_IOW
('T', 222, )

	)

58 
	#TUNGETVNETBE
 
	`_IOR
('T', 223, )

	)

61 
	#IFF_TUN
 0x0001

	)

62 
	#IFF_TAP
 0x0002

	)

63 
	#IFF_NO_PI
 0x1000

	)

65 
	#IFF_ONE_QUEUE
 0x2000

	)

66 
	#IFF_VNET_HDR
 0x4000

	)

67 
	#IFF_TUN_EXCL
 0x8000

	)

68 
	#IFF_MULTI_QUEUE
 0x0100

	)

69 
	#IFF_ATTACH_QUEUE
 0x0200

	)

70 
	#IFF_DETACH_QUEUE
 0x0400

	)

72 
	#IFF_PERSIST
 0x0800

	)

73 
	#IFF_NOFILTER
 0x1000

	)

76 
	#TUN_TX_TIMESTAMP
 1

	)

79 
	#TUN_F_CSUM
 0x01

	)

80 
	#TUN_F_TSO4
 0x02

	)

81 
	#TUN_F_TSO6
 0x04

	)

82 
	#TUN_F_TSO_ECN
 0x08

	)

83 
	#TUN_F_UFO
 0x10

	)

86 
	#TUN_PKT_STRIP
 0x0001

	)

87 
	stun_pi
 {

88 
__u16
 
	mÊags
;

89 
__be16
 
	m¥Ÿo
;

100 
	#TUN_FLT_ALLMULTI
 0x0001

	)

101 
	stun_fûãr
 {

102 
__u16
 
	mÊags
;

103 
__u16
 
	mcou¡
;

104 
__u8
 
	maddr
[0][
ETH_ALEN
];

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

50 
__BEGIN_NAMESPACE_STD


53 
	slc⁄v


57 *
	mdecimÆ_poöt
;

58 *
	mthoußnds_£p
;

64 *
	mgroupög
;

70 *
	möt_cuº_symbﬁ
;

71 *
	mcuºícy_symbﬁ
;

72 *
	mm⁄_decimÆ_poöt
;

73 *
	mm⁄_thoußnds_£p
;

74 *
	mm⁄_groupög
;

75 *
	mposôive_sign
;

76 *
	m√g©ive_sign
;

77 
	möt_‰ac_digôs
;

78 
	m‰ac_digôs
;

80 
	mp_cs_¥e˚des
;

82 
	mp_£p_by_•a˚
;

84 
	mn_cs_¥e˚des
;

86 
	mn_£p_by_•a˚
;

93 
	mp_sign_po¢
;

94 
	mn_sign_po¢
;

95 #ifde‡
__USE_ISOC99


97 
	möt_p_cs_¥e˚des
;

99 
	möt_p_£p_by_•a˚
;

101 
	möt_n_cs_¥e˚des
;

103 
	möt_n_£p_by_•a˚
;

110 
	möt_p_sign_po¢
;

111 
	möt_n_sign_po¢
;

113 
	m__öt_p_cs_¥e˚des
;

114 
	m__öt_p_£p_by_•a˚
;

115 
	m__öt_n_cs_¥e˚des
;

116 
	m__öt_n_£p_by_•a˚
;

117 
	m__öt_p_sign_po¢
;

118 
	m__öt_n_sign_po¢
;

124 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

127 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

129 
__END_NAMESPACE_STD


132 #ifdef 
__USE_XOPEN2K8


145 
	~<xloˇÀ.h
>

151 
__loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

152 
__loˇÀ_t
 
__ba£
Ë
__THROW
;

158 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

159 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

160 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

161 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

162 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

163 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

164 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

165 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

166 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

167 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

168 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

169 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

170 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

171 | 
LC_NUMERIC_MASK
 \

172 | 
LC_TIME_MASK
 \

173 | 
LC_COLLATE_MASK
 \

174 | 
LC_MONETARY_MASK
 \

175 | 
LC_MESSAGES_MASK
 \

176 | 
LC_PAPER_MASK
 \

177 | 
LC_NAME_MASK
 \

178 | 
LC_ADDRESS_MASK
 \

179 | 
LC_TELEPHONE_MASK
 \

180 | 
LC_MEASUREMENT_MASK
 \

181 | 
LC_IDENTIFICATION_MASK
 \

182 )

	)

186 
__loˇÀ_t
 
	$du∂oˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

190 
	$‰ìloˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

197 
__loˇÀ_t
 
	$u£loˇÀ
 (
__loˇÀ_t
 
__d©a£t
Ë
__THROW
;

201 
	#LC_GLOBAL_LOCALE
 ((
__loˇÀ_t
Ë-1L)

	)

205 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/m©h-ve˘‹.h
>

35 
	~<bôs/huge_vÆ.h
>

36 #ifde‡
__USE_ISOC99


37 
	~<bôs/huge_vÆf.h
>

38 
	~<bôs/huge_vÆl.h
>

41 
	~<bôs/öf.h
>

44 
	~<bôs/«n.h
>

48 
	~<bôs/m©hdef.h
>

55 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

57 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

58 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

59 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

61 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

62 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

63 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

65 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

66 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

67 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

68 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

69 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

70 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

71 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

72 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

73 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

74 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

75 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

76 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

78 
	#_MdoubÀ_
 

	)

79 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

80 
	#__MATH_DECLARING_DOUBLE
 1

	)

81 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

82 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

83 
	~<bôs/m©hˇŒs.h
>

84 #unde‡
_MdoubÀ_


85 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


86 #unde‡
_MdoubÀ_END_NAMESPACE


87 #unde‡
__MATH_PRECNAME


88 #unde‡
__MATH_DECLARING_DOUBLE


90 #ifde‡
__USE_ISOC99


96 #i‚de‡
_MÊﬂt_


97 
	#_MÊﬂt_
 

	)

99 
	#_MdoubÀ_
 
_MÊﬂt_


	)

100 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

101 
	#__MATH_DECLARING_DOUBLE
 0

	)

102 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

103 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

104 
	~<bôs/m©hˇŒs.h
>

105 #unde‡
_MdoubÀ_


106 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


107 #unde‡
_MdoubÀ_END_NAMESPACE


108 #unde‡
__MATH_PRECNAME


109 #unde‡
__MATH_DECLARING_DOUBLE


111 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

112 || 
deföed
 
__LDBL_COMPAT
 \

113 || 
deföed
 
_LIBC_TEST


114 #ifde‡
__LDBL_COMPAT


116 #ifde‡
__USE_ISOC99


117 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

118 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

119 #ifde‡
__REDIRECT_NTH


120 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

121 
__∆dbl_√xâow¨df
)

122 
	`__©åibuã__
 ((
__c⁄°__
));

123 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

124 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

125 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

126 (
__x
, 
__y
),

127 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

131 #unde‡
__MATHDECL_1


132 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

133 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

134 
¨gs
, 
Æüs
)

	)

135 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

136 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

142 #i‚de‡
_Ml⁄g_doubÀ_


143 
	#_Ml⁄g_doubÀ_
 

	)

145 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

146 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

147 
	#__MATH_DECLARING_DOUBLE
 0

	)

148 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

149 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

150 
	#__MATH_DECLARE_LDOUBLE
 1

	)

151 
	~<bôs/m©hˇŒs.h
>

152 #unde‡
_MdoubÀ_


153 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


154 #unde‡
_MdoubÀ_END_NAMESPACE


155 #unde‡
__MATH_PRECNAME


156 #unde‡
__MATH_DECLARING_DOUBLE


161 #unde‡
__MATHDECL_1


162 #unde‡
__MATHDECL


163 #unde‡
__MATHCALL


166 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


168 
signgam
;

173 #ifde‡
__USE_ISOC99


211 
FP_NAN
 =

212 
	#FP_NAN
 0

	)

213 
FP_NAN
,

214 
FP_INFINITE
 =

215 
	#FP_INFINITE
 1

	)

216 
FP_INFINITE
,

217 
FP_ZERO
 =

218 
	#FP_ZERO
 2

	)

219 
FP_ZERO
,

220 
FP_SUBNORMAL
 =

221 
	#FP_SUBNORMAL
 3

	)

222 
FP_SUBNORMAL
,

223 
FP_NORMAL
 =

224 
	#FP_NORMAL
 4

	)

225 
FP_NORMAL


233 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

234 && !
deföed
 
__OPTIMIZE_SIZE__


235 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

236 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

237 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


238 
	#Â˛assify
(
x
) \

239 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

241 
	#Â˛assify
(
x
) \

242 ( (
x
) ==  () \

243 ? 
	`__Â˛assifyf
 (
x
) \

244 :  (
x
) ==  () \

245 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

249 #i‡
	`__GNUC_PREREQ
 (4,0)

250 
	#signbô
(
x
) \

251 ( (
x
) ==  () \

252 ? 
	`__buûtö_signbôf
 (
x
) \

253 :  (
x
) ==  () \

254 ? 
	`__buûtö_signbô
 (
x
Ë: 
	`__buûtö_signbôl
 (x))

	)

256 #ifde‡
__NO_LONG_DOUBLE_MATH


257 
	#signbô
(
x
) \

258 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

260 
	#signbô
(
x
) \

261 ( (
x
) ==  () \

262 ? 
	`__signbôf
 (
x
) \

263 :  (
x
) ==  () \

264 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

269 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


270 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

271 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


272 
	#isföôe
(
x
) \

273 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

275 
	#isföôe
(
x
) \

276 ( (
x
) ==  () \

277 ? 
	`__föôef
 (
x
) \

278 :  (
x
) ==  () \

279 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

283 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


284 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

286 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

291 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


292 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

293 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


294 
	#i¢™
(
x
) \

295 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

297 
	#i¢™
(
x
) \

298 ( (
x
) ==  () \

299 ? 
	`__i¢™f
 (
x
) \

300 :  (
x
) ==  () \

301 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

305 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


306 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

307 #ñi‡
deföed
 
__NO_LONG_DOUBLE_MATH


308 
	#isöf
(
x
) \

309 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

311 
	#isöf
(
x
) \

312 ( (
x
) ==  () \

313 ? 
	`__isöff
 (
x
) \

314 :  (
x
) ==  () \

315 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

319 
	#MATH_ERRNO
 1

	)

320 
	#MATH_ERREXCEPT
 2

	)

325 #i‚de‡
__FAST_MATH__


326 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

331 #ifde‡
__USE_GNU


333 #ifde‡
__NO_LONG_DOUBLE_MATH


334 
	#issig«lög
(
x
) \

335 ( (
x
Ë= (Ë? 
	`__issig«lögf
 (xË: 
	`__issig«lög
 (x))

	)

337 
	#issig«lög
(
x
) \

338 ( (
x
) ==  () \

339 ? 
	`__issig«lögf
 (
x
) \

340 :  (
x
) ==  () \

341 ? 
	`__issig«lög
 (
x
Ë: 
	`__issig«lögl
 (x))

	)

345 #ifdef 
__USE_MISC


349 
_IEEE_
 = -1,

350 
_SVID_
,

351 
_XOPEN_
,

352 
_POSIX_
,

353 
_ISOC_


354 } 
	t_LIB_VERSION_TYPE
;

359 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

363 #ifde‡
__USE_MISC


369 #ifde‡
__˝lu•lus


370 
__ex˚±i⁄


372 
ex˚±i⁄


375 
ty≥
;

376 *
«me
;

377 
¨g1
;

378 
¨g2
;

379 
ªtvÆ
;

380 
	}
};

382 #ifde‡
__˝lu•lus


383 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

385 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

388 
	#X_TLOSS
 1.41484755040568800000e+16

	)

391 
	#DOMAIN
 1

	)

392 
	#SING
 2

	)

393 
	#OVERFLOW
 3

	)

394 
	#UNDERFLOW
 4

	)

395 
	#TLOSS
 5

	)

396 
	#PLOSS
 6

	)

399 
	#HUGE
 3.40282347e+38F

	)

403 #ifde‡
__USE_XOPEN


405 
	#MAXFLOAT
 3.40282347e+38F

	)

412 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


413 
	#M_E
 2.7182818284590452354

	)

414 
	#M_LOG2E
 1.4426950408889634074

	)

415 
	#M_LOG10E
 0.43429448190325182765

	)

416 
	#M_LN2
 0.69314718055994530942

	)

417 
	#M_LN10
 2.30258509299404568402

	)

418 
	#M_PI
 3.14159265358979323846

	)

419 
	#M_PI_2
 1.57079632679489661923

	)

420 
	#M_PI_4
 0.78539816339744830962

	)

421 
	#M_1_PI
 0.31830988618379067154

	)

422 
	#M_2_PI
 0.63661977236758134308

	)

423 
	#M_2_SQRTPI
 1.12837916709551257390

	)

424 
	#M_SQRT2
 1.41421356237309504880

	)

425 
	#M_SQRT1_2
 0.70710678118654752440

	)

431 #ifde‡
__USE_GNU


432 
	#M_El
 2.718281828459045235360287471352662498L

	)

433 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

434 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

435 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

436 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

437 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

438 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

439 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

440 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

441 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

442 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

443 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

444 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

451 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


452 
	#__NO_MATH_INLINES
 1

	)

455 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

462 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

463 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

464 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

465 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

466 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

467 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

471 #ifde‡
__USE_EXTERN_INLINES


472 
	~<bôs/m©hölöe.h
>

477 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

478 
	~<bôs/m©h-föôe.h
>

481 #ifde‡
__USE_ISOC99


485 #i‚de‡
isgª©î


486 
	#isgª©î
(
x
, 
y
) \

487 (
__exãnsi⁄__
 \

488 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

489 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

493 #i‚de‡
isgª©îequÆ


494 
	#isgª©îequÆ
(
x
, 
y
) \

495 (
__exãnsi⁄__
 \

496 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

497 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

501 #i‚de‡
i¶ess


502 
	#i¶ess
(
x
, 
y
) \

503 (
__exãnsi⁄__
 \

504 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

505 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

509 #i‚de‡
i¶es£quÆ


510 
	#i¶es£quÆ
(
x
, 
y
) \

511 (
__exãnsi⁄__
 \

512 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

513 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

517 #i‚de‡
i¶essgª©î


518 
	#i¶essgª©î
(
x
, 
y
) \

519 (
__exãnsi⁄__
 \

520 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

521 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

525 #i‚de‡
isun‹dîed


526 
	#isun‹dîed
(
u
, 
v
) \

527 (
__exãnsi⁄__
 \

528 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

529 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

534 
	g__END_DECLS


	@/usr/include/net/if.h

19 #i‚de‡
_NET_IF_H


20 
	#_NET_IF_H
 1

	)

22 
	~<„©uªs.h
>

24 #ifde‡
__USE_MISC


25 
	~<sys/ty≥s.h
>

26 
	~<sys/sockë.h
>

31 
	#IF_NAMESIZE
 16

	)

33 
	sif_«meödex


35 
	mif_ödex
;

36 *
	mif_«me
;

40 #ifde‡
__USE_MISC


44 
	mIFF_UP
 = 0x1,

45 
	#IFF_UP
 
IFF_UP


	)

46 
	mIFF_BROADCAST
 = 0x2,

47 
	#IFF_BROADCAST
 
IFF_BROADCAST


	)

48 
	mIFF_DEBUG
 = 0x4,

49 
	#IFF_DEBUG
 
IFF_DEBUG


	)

50 
	mIFF_LOOPBACK
 = 0x8,

51 
	#IFF_LOOPBACK
 
IFF_LOOPBACK


	)

52 
	mIFF_POINTOPOINT
 = 0x10,

53 
	#IFF_POINTOPOINT
 
IFF_POINTOPOINT


	)

54 
	mIFF_NOTRAILERS
 = 0x20,

55 
	#IFF_NOTRAILERS
 
IFF_NOTRAILERS


	)

56 
	mIFF_RUNNING
 = 0x40,

57 
	#IFF_RUNNING
 
IFF_RUNNING


	)

58 
	mIFF_NOARP
 = 0x80,

59 
	#IFF_NOARP
 
IFF_NOARP


	)

60 
	mIFF_PROMISC
 = 0x100,

61 
	#IFF_PROMISC
 
IFF_PROMISC


	)

64 
	mIFF_ALLMULTI
 = 0x200,

65 
	#IFF_ALLMULTI
 
IFF_ALLMULTI


	)

67 
	mIFF_MASTER
 = 0x400,

68 
	#IFF_MASTER
 
IFF_MASTER


	)

69 
	mIFF_SLAVE
 = 0x800,

70 
	#IFF_SLAVE
 
IFF_SLAVE


	)

72 
	mIFF_MULTICAST
 = 0x1000,

73 
	#IFF_MULTICAST
 
IFF_MULTICAST


	)

75 
	mIFF_PORTSEL
 = 0x2000,

76 
	#IFF_PORTSEL
 
IFF_PORTSEL


	)

77 
	mIFF_AUTOMEDIA
 = 0x4000,

78 
	#IFF_AUTOMEDIA
 
IFF_AUTOMEDIA


	)

79 
	mIFF_DYNAMIC
 = 0x8000

80 
	#IFF_DYNAMIC
 
IFF_DYNAMIC


	)

88 
	siÁddr


90 
sockaddr
 
	miÁ_addr
;

93 
sockaddr
 
	mifu_brﬂdaddr
;

94 
sockaddr
 
	mifu_d°addr
;

95 } 
	miÁ_ifu
;

96 
iÁ˚
 *
	miÁ_iÂ
;

97 
iÁddr
 *
	miÁ_√xt
;

100 
	#iÁ_brﬂdaddr
 
iÁ_ifu
.
ifu_brﬂdaddr


	)

101 
	#iÁ_d°addr
 
iÁ_ifu
.
ifu_d°addr


	)

111 
	sifm≠


113 
	mmem_°¨t
;

114 
	mmem_íd
;

115 
	mba£_addr
;

116 
	múq
;

117 
	mdma
;

118 
	mp‹t
;

126 
	si‰eq


128 
	#IFHWADDRLEN
 6

	)

129 
	#IFNAMSIZ
 
IF_NAMESIZE


	)

132 
	mi‰n_«me
[
IFNAMSIZ
];

133 } 
	mi‰_i‰n
;

137 
sockaddr
 
	mi‰u_addr
;

138 
sockaddr
 
	mi‰u_d°addr
;

139 
sockaddr
 
	mi‰u_brﬂdaddr
;

140 
sockaddr
 
	mi‰u_√tmask
;

141 
sockaddr
 
	mi‰u_hwaddr
;

142 
	mi‰u_Êags
;

143 
	mi‰u_ivÆue
;

144 
	mi‰u_mtu
;

145 
ifm≠
 
	mi‰u_m≠
;

146 
	mi‰u_¶ave
[
IFNAMSIZ
];

147 
	mi‰u_√w«me
[
IFNAMSIZ
];

148 
__ˇddr_t
 
	mi‰u_d©a
;

149 } 
	mi‰_i‰u
;

151 
	#i‰_«me
 
i‰_i‰n
.
i‰n_«me


	)

152 
	#i‰_hwaddr
 
i‰_i‰u
.
i‰u_hwaddr


	)

153 
	#i‰_addr
 
i‰_i‰u
.
i‰u_addr


	)

154 
	#i‰_d°addr
 
i‰_i‰u
.
i‰u_d°addr


	)

155 
	#i‰_brﬂdaddr
 
i‰_i‰u
.
i‰u_brﬂdaddr


	)

156 
	#i‰_√tmask
 
i‰_i‰u
.
i‰u_√tmask


	)

157 
	#i‰_Êags
 
i‰_i‰u
.
i‰u_Êags


	)

158 
	#i‰_mëric
 
i‰_i‰u
.
i‰u_ivÆue


	)

159 
	#i‰_mtu
 
i‰_i‰u
.
i‰u_mtu


	)

160 
	#i‰_m≠
 
i‰_i‰u
.
i‰u_m≠


	)

161 
	#i‰_¶ave
 
i‰_i‰u
.
i‰u_¶ave


	)

162 
	#i‰_d©a
 
i‰_i‰u
.
i‰u_d©a


	)

163 
	#i‰_ifödex
 
i‰_i‰u
.
i‰u_ivÆue


	)

164 
	#i‰_b™dwidth
 
i‰_i‰u
.
i‰u_ivÆue


	)

165 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_ivÆue


	)

166 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_√w«me


	)

167 
	#_IOT_i‰eq
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),16,0,0)

	)

168 
	#_IOT_i‰eq_sh‹t
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

169 
	#_IOT_i‰eq_öt
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

176 
	sifc⁄f


178 
	mifc_Àn
;

181 
__ˇddr_t
 
	mifcu_buf
;

182 
i‰eq
 *
	mifcu_ªq
;

183 } 
	mifc_ifcu
;

185 
	#ifc_buf
 
ifc_ifcu
.
ifcu_buf


	)

186 
	#ifc_ªq
 
ifc_ifcu
.
ifcu_ªq


	)

187 
	#_IOT_ifc⁄f
 
	`_IOT
(
	`_IOTS
(
ifc⁄f
),1,0,0,0,0Ë

	)

190 
__BEGIN_DECLS


193 
	$if_«mëoödex
 (c⁄° *
__i‚ame
Ë
__THROW
;

194 *
	$if_ödext⁄ame
 (
__ifödex
, *
__i‚ame
Ë
__THROW
;

197 
if_«meödex
 *
	$if_«meödex
 (Ë
__THROW
;

200 
	$if_‰ì«meödex
 (
if_«meödex
 *
__±r
Ë
__THROW
;

202 
__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<°döt.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	#__√ed_sigevít_t


	)

37 
	~<bôs/sigöfo.h
>

38 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 
	~<bôs/√tdb.h
>

45 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

46 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

47 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

48 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

49 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

50 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

53 
	g__BEGIN_DECLS


55 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


58 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

61 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

65 
	#HOST_NOT_FOUND
 1

	)

66 
	#TRY_AGAIN
 2

	)

68 
	#NO_RECOVERY
 3

	)

70 
	#NO_DATA
 4

	)

73 #ifde‡
__USE_MISC


74 
	#NETDB_INTERNAL
 -1

	)

75 
	#NETDB_SUCCESS
 0

	)

76 
	#NO_ADDRESS
 
NO_DATA


	)

79 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


81 
	#IPPORT_RESERVED
 1024

	)

84 #ifde‡
__USE_GNU


86 
	#SCOPE_DELIMITER
 '%'

	)

89 #ifde‡
__USE_MISC


92 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

95 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

100 
	sho°ít


102 *
h_«me
;

103 **
h_Æü£s
;

104 
h_addπy≥
;

105 
h_Àngth
;

106 **
h_addr_li°
;

107 #ifde‡
__USE_MISC


108 
	#h_addr
 
h_addr_li°
[0]

	)

117 
	`£tho°ít
 (
__°ay_›í
);

123 
	`ídho°ít
 ();

130 
ho°ít
 *
	`gëho°ít
 ();

137 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

138 
__ty≥
);

144 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

146 #ifde‡
__USE_MISC


155 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

167 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

168 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

169 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

170 *
__ª°ri˘
 
__h_î∫›
);

172 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

173 
__ty≥
,

174 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

176 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

177 *
__ª°ri˘
 
__h_î∫›
);

179 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

180 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

181 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

182 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

183 *
__ª°ri˘
 
__h_î∫›
);

185 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

186 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

187 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

188 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

189 *
__ª°ri˘
 
__h_î∫›
);

198 
	`£äëít
 (
__°ay_›í
);

204 
	`íd√ã¡
 ();

211 
√ã¡
 *
	`gë√ã¡
 ();

218 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

224 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

226 #ifdef 
__USE_MISC


237 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

238 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

239 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

240 *
__ª°ri˘
 
__h_î∫›
);

242 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

243 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

244 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

245 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

246 *
__ª°ri˘
 
__h_î∫›
);

248 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

249 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

250 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

251 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

252 *
__ª°ri˘
 
__h_î∫›
);

257 
	s£rvít


259 *
s_«me
;

260 **
s_Æü£s
;

261 
s_p‹t
;

262 *
s_¥Ÿo
;

270 
	`£t£rvít
 (
__°ay_›í
);

276 
	`íd£rvít
 ();

283 
£rvít
 *
	`gë£rvít
 ();

290 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

297 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

300 #ifdef 
__USE_MISC


308 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

309 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

310 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

312 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

313 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

314 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

315 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

316 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

318 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

319 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

320 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

321 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

326 
	s¥Ÿ€¡


328 *
p_«me
;

329 **
p_Æü£s
;

330 
p_¥Ÿo
;

338 
	`£çrŸ€¡
 (
__°ay_›í
);

344 
	`íd¥Ÿ€¡
 ();

351 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

357 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

363 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

366 #ifdef 
__USE_MISC


374 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

375 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

376 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

378 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

379 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

380 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

381 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

383 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

384 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

385 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

386 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

395 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

403 
	`íd√tgª¡
 ();

412 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

413 **
__ª°ri˘
 
__u£Ω
,

414 **
__ª°ri˘
 
__domaöp
);

423 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

424 c⁄° *
__u£r
, c⁄° *
__domaö
);

432 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

433 **
__ª°ri˘
 
__u£Ω
,

434 **
__ª°ri˘
 
__domaöp
,

435 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

439 #ifde‡
__USE_MISC


451 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

452 c⁄° *
__ª°ri˘
 
__locu£r
,

453 c⁄° *
__ª°ri˘
 
__ªmu£r
,

454 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

463 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

464 c⁄° *
__ª°ri˘
 
__locu£r
,

465 c⁄° *
__ª°ri˘
 
__ªmu£r
,

466 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

467 
ß_Ámûy_t
 
__af
);

479 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

480 c⁄° *
__ª°ri˘
 
__«me
,

481 c⁄° *
__ª°ri˘
 
__∑ss
,

482 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

491 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

492 c⁄° *
__ª°ri˘
 
__«me
,

493 c⁄° *
__ª°ri˘
 
__∑ss
,

494 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

495 
ß_Ámûy_t
 
__af
);

505 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

506 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

515 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

516 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

517 
ß_Ámûy_t
 
__af
);

528 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

529 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

539 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

540 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

541 
ß_Ámûy_t
 
__af
);

551 
	`ºesvp‹t
 (*
__Æp‹t
);

560 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

565 #ifde‡
__USE_XOPEN2K


567 
	saddröfo


569 
ai_Êags
;

570 
ai_Ámûy
;

571 
ai_sockty≥
;

572 
ai_¥Ÿocﬁ
;

573 
sockÀn_t
 
ai_addæí
;

574 
sockaddr
 *
ai_addr
;

575 *
ai_ˇn⁄«me
;

576 
addröfo
 *
ai_√xt
;

579 #ifde‡
__USE_GNU


581 
	sgaicb


583 c⁄° *
¨_«me
;

584 c⁄° *
¨_£rvi˚
;

585 c⁄° 
addröfo
 *
¨_ªque°
;

586 
addröfo
 *
¨_ªsu…
;

588 
__ªtu∫
;

589 
__glibc_ª£rved
[5];

593 
	#GAI_WAIT
 0

	)

594 
	#GAI_NOWAIT
 1

	)

598 
	#AI_PASSIVE
 0x0001

	)

599 
	#AI_CANONNAME
 0x0002

	)

600 
	#AI_NUMERICHOST
 0x0004

	)

601 
	#AI_V4MAPPED
 0x0008

	)

602 
	#AI_ALL
 0x0010

	)

603 
	#AI_ADDRCONFIG
 0x0020

	)

605 #ifde‡
__USE_GNU


606 
	#AI_IDN
 0x0040

	)

609 
	#AI_CANONIDN
 0x0080

	)

610 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

612 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

615 
	#AI_NUMERICSERV
 0x0400

	)

618 
	#EAI_BADFLAGS
 -1

	)

619 
	#EAI_NONAME
 -2

	)

620 
	#EAI_AGAIN
 -3

	)

621 
	#EAI_FAIL
 -4

	)

622 
	#EAI_FAMILY
 -6

	)

623 
	#EAI_SOCKTYPE
 -7

	)

624 
	#EAI_SERVICE
 -8

	)

625 
	#EAI_MEMORY
 -10

	)

626 
	#EAI_SYSTEM
 -11

	)

627 
	#EAI_OVERFLOW
 -12

	)

628 #ifde‡
__USE_GNU


629 
	#EAI_NODATA
 -5

	)

630 
	#EAI_ADDRFAMILY
 -9

	)

631 
	#EAI_INPROGRESS
 -100

	)

632 
	#EAI_CANCELED
 -101

	)

633 
	#EAI_NOTCANCELED
 -102

	)

634 
	#EAI_ALLDONE
 -103

	)

635 
	#EAI_INTR
 -104

	)

636 
	#EAI_IDN_ENCODE
 -105

	)

639 #ifde‡
__USE_MISC


640 
	#NI_MAXHOST
 1025

	)

641 
	#NI_MAXSERV
 32

	)

644 
	#NI_NUMERICHOST
 1

	)

645 
	#NI_NUMERICSERV
 2

	)

646 
	#NI_NOFQDN
 4

	)

647 
	#NI_NAMEREQD
 8

	)

648 
	#NI_DGRAM
 16

	)

649 #ifde‡
__USE_GNU


650 
	#NI_IDN
 32

	)

651 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

653 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

662 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

663 c⁄° *
__ª°ri˘
 
__£rvi˚
,

664 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

665 
addröfo
 **
__ª°ri˘
 
__∑i
);

668 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

671 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

677 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

678 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

679 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

680 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

683 #ifde‡
__USE_GNU


692 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

693 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

703 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

704 c⁄° 
time•ec
 *
__timeout
);

707 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

710 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

713 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<°döt.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‚de‡
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‚de‡
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 #ifde‡
__USE_MISC


217 
uöt16_t
 
	m__u6_addr16
[8];

218 
uöt32_t
 
	m__u6_addr32
[4];

220 } 
	m__ö6_u
;

221 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

222 #ifde‡
__USE_MISC


223 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

224 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

229 c⁄° 
ö6_addr
 
ö6addr_™y
;

230 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

231 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

232 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

234 
	#INET_ADDRSTRLEN
 16

	)

235 
	#INET6_ADDRSTRLEN
 46

	)

239 
	ssockaddr_ö


241 
__SOCKADDR_COMMON
 (
sö_
);

242 
ö_p‹t_t
 
	msö_p‹t
;

243 
ö_addr
 
	msö_addr
;

246 
	msö_zîo
[ (
sockaddr
) -

247 
__SOCKADDR_COMMON_SIZE
 -

248  (
ö_p‹t_t
) -

249  (
ö_addr
)];

252 #i‚de‡
__USE_KERNEL_IPV6_DEFS


254 
	ssockaddr_ö6


256 
__SOCKADDR_COMMON
 (
sö6_
);

257 
ö_p‹t_t
 
	msö6_p‹t
;

258 
uöt32_t
 
	msö6_Êowöfo
;

259 
ö6_addr
 
	msö6_addr
;

260 
uöt32_t
 
	msö6_sc›e_id
;

264 #ifde‡
__USE_MISC


266 
	sù_mªq


269 
ö_addr
 
	mimr_mu…üddr
;

272 
ö_addr
 
	mimr_öãrÁ˚
;

275 
	sù_mªq_sour˚


278 
ö_addr
 
	mimr_mu…üddr
;

281 
ö_addr
 
	mimr_öãrÁ˚
;

284 
ö_addr
 
	mimr_sour˚addr
;

288 #i‚de‡
__USE_KERNEL_IPV6_DEFS


290 
	sùv6_mªq


293 
ö6_addr
 
	mùv6mr_mu…üddr
;

296 
	mùv6mr_öãrÁ˚
;

300 #ifde‡
__USE_MISC


302 
	sgroup_ªq


305 
uöt32_t
 
	mgr_öãrÁ˚
;

308 
sockaddr_°‹age
 
	mgr_group
;

311 
	sgroup_sour˚_ªq


314 
uöt32_t
 
	mg§_öãrÁ˚
;

317 
sockaddr_°‹age
 
	mg§_group
;

320 
sockaddr_°‹age
 
	mg§_sour˚
;

325 
	sù_msfûãr


328 
ö_addr
 
	mimsf_mu…üddr
;

331 
ö_addr
 
	mimsf_öãrÁ˚
;

334 
uöt32_t
 
	mimsf_fmode
;

337 
uöt32_t
 
	mimsf_num§c
;

339 
ö_addr
 
	mimsf_¶i°
[1];

342 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

343 -  (
ö_addr
) \

344 + (
num§c
Ë*  (
ö_addr
))

	)

346 
	sgroup_fûãr


349 
uöt32_t
 
	mgf_öãrÁ˚
;

352 
sockaddr_°‹age
 
	mgf_group
;

355 
uöt32_t
 
	mgf_fmode
;

358 
uöt32_t
 
	mgf_num§c
;

360 
sockaddr_°‹age
 
	mgf_¶i°
[1];

363 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

364 -  (
sockaddr_°‹age
) \

365 + ((
num§c
) \

366 *  (
sockaddr_°‹age
)))

	)

376 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

381 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

382 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

384 
	~<ídün.h
>

387 
	~<bôs/byãsw≠.h
>

389 #ifde‡
__OPTIMIZE__


393 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


396 
	#¡ohl
(
x
Ë(x)

	)

397 
	#¡ohs
(
x
Ë(x)

	)

398 
	#ht⁄l
(
x
Ë(x)

	)

399 
	#ht⁄s
(
x
Ë(x)

	)

401 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


402 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

403 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

404 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

405 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

410 #ifde‡
__GNUC__


411 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

412 (
__exãnsi⁄__
 \

413 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

414 
__a
->
s6_addr32
[0] == 0 \

415 && 
__a
->
s6_addr32
[1] == 0 \

416 && 
__a
->
s6_addr32
[2] == 0 \

417 && 
__a
->
s6_addr32
[3] =0; 
	}
}))

	)

419 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

420 (
__exãnsi⁄__
 \

421 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

422 
__a
->
s6_addr32
[0] == 0 \

423 && 
__a
->
s6_addr32
[1] == 0 \

424 && 
__a
->
s6_addr32
[2] == 0 \

425 && 
__a
->
s6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

427 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

428 (
__exãnsi⁄__
 \

429 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

430 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

432 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

433 (
__exãnsi⁄__
 \

434 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

435 (
__a
->
s6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

437 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

438 (
__exãnsi⁄__
 \

439 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

440 
__a
->
s6_addr32
[0] == 0 \

441 && 
__a
->
s6_addr32
[1] == 0 \

442 && 
__a
->
s6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

444 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
s6_addr32
[0] == 0 \

448 && 
__a
->
s6_addr32
[1] == 0 \

449 && 
__a
->
s6_addr32
[2] == 0 \

450 && 
	`¡ohl
 (
__a
->
s6_addr32
[3]Ë> 1; }))

	)

452 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

453 (
__exãnsi⁄__
 \

454 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

455 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

456 
__a
->
s6_addr32
[0] =
__b
->s6_addr32[0] \

457 && 
__a
->
s6_addr32
[1] =
__b
->s6_addr32[1] \

458 && 
__a
->
s6_addr32
[2] =
__b
->s6_addr32[2] \

459 && 
__a
->
s6_addr32
[3] =
__b
->s6_addr32[3]; }))

	)

461 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

462 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

465 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

467 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

468 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

473 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

474 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

475 =
	`ht⁄l
 (0x„800000))

	)

477 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

478 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

479 =
	`ht⁄l
 (0x„c00000))

	)

481 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

482 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

484 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

486 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

487 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

489 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

490 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

492 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

493 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

499 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

501 #ifde‡
__USE_MISC


503 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

506 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

507 
__THROW
;

511 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

512 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

513 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

515 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

516 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

517 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

519 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

520 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

521 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

523 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

524 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

525 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

527 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

528 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

529 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

532 #ifde‡
__USE_GNU


533 
cmsghdr
;

535 #i‚de‡
__USE_KERNEL_IPV6_DEFS


537 
	sö6_pktöfo


539 
ö6_addr
 
ùi6_addr
;

540 
ùi6_ifödex
;

544 
	sù6_mtuöfo


546 
sockaddr_ö6
 
ù6m_addr
;

547 
uöt32_t
 
ù6m_mtu
;

552 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

553 
__THROW
 
__©åibuã_dïªˇãd__
;

554 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

555 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

556 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

557 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

558 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

559 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

560 
__mu…x
, 
__∂usy
)

561 
__THROW
 
__©åibuã_dïªˇãd__
;

562 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

563 
uöt8_t
 **
__çåp
)

564 
__THROW
 
__©åibuã_dïªˇãd__
;

565 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

566 
uöt8_t
 **
__çåp
, 
__ty≥
)

567 
__THROW
 
__©åibuã_dïªˇãd__
;

571 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

572 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

573 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

574 **
__d©abuÂ
Ë
__THROW
;

575 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

576 
__THROW
;

577 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

578 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

579 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

583 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

584 **
__d©abuÂ
Ë
__THROW
;

585 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

586 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

590 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

591 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

592 
__£gmíts
Ë
__THROW
;

593 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

594 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

595 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

596 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

597 
__THROW
;

603 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

604 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

605 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

606 
__THROW
;

609 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

610 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

611 
uöt32_t
 
__num§c
,

612 c⁄° 
ö_addr
 *
__¶i°
)

613 
__THROW
;

617 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

618 c⁄° 
sockaddr
 *
__group
,

619 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

620 
uöt32_t
 *
__num§c
,

621 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

624 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

627 
uöt32_t
 
__num§c
,

628 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
__END_DECLS


	@/usr/include/pcap/pcap.h

35 #i‚de‡
lib_pˇp_pˇp_h


36 
	#lib_pˇp_pˇp_h


	)

38 #i‡
deföed
(
WIN32
)

39 
	~<pˇp-°döc.h
>

40 #ñi‡
deföed
(
MSDOS
)

41 
	~<sys/ty≥s.h
>

42 
	~<sys/sockë.h
>

44 
	~<sys/ty≥s.h
>

45 
	~<sys/time.h
>

48 #i‚de‡
PCAP_DONT_INCLUDE_PCAP_BPF_H


49 
	~<pˇp/bpf.h
>

52 
	~<°dio.h
>

54 #ifde‡
__˝lu•lus


65 
	#PCAP_VERSION_MAJOR
 2

	)

66 
	#PCAP_VERSION_MINOR
 4

	)

68 
	#PCAP_ERRBUF_SIZE
 256

	)

74 #i‡
BPF_RELEASE
 - 0 < 199406

75 
	tbpf_öt32
;

76 
u_öt
 
	tbpf_u_öt32
;

79 
pˇp
 
	tpˇp_t
;

80 
pˇp_dum≥r
 
	tpˇp_dum≥r_t
;

81 
pˇp_if
 
	tpˇp_if_t
;

82 
pˇp_addr
 
	tpˇp_addr_t
;

122 
	spˇp_fûe_hódî
 {

123 
bpf_u_öt32
 
magic
;

124 
u_sh‹t
 
vîsi⁄_maj‹
;

125 
u_sh‹t
 
vîsi⁄_mö‹
;

126 
bpf_öt32
 
thisz⁄e
;

127 
bpf_u_öt32
 
sigfigs
;

128 
bpf_u_öt32
 
¢≠Àn
;

129 
bpf_u_öt32
 
lökty≥
;

138 
	#LT_FCS_LENGTH_PRESENT
(
x
Ë((xË& 0x04000000)

	)

139 
	#LT_FCS_LENGTH
(
x
Ë(((xË& 0xF0000000Ë>> 28)

	)

140 
	#LT_FCS_DATALINK_EXT
(
x
Ë((((xË& 0xFË<< 28Ë| 0x04000000)

	)

143 
PCAP_D_INOUT
 = 0,

144 
PCAP_D_IN
,

145 
PCAP_D_OUT


146 } 
	tpˇp_dúe˘i⁄_t
;

160 
	spˇp_pkthdr
 {

161 
timevÆ
 
ts
;

162 
bpf_u_öt32
 
ˇ∂í
;

163 
bpf_u_öt32
 
Àn
;

169 
	spˇp_°©
 {

170 
u_öt
 
ps_ªcv
;

171 
u_öt
 
ps_dr›
;

172 
u_öt
 
ps_ifdr›
;

173 #ifde‡
WIN32


174 
u_öt
 
bs_ˇ±
;

178 #ifde‡
MSDOS


182 
	spˇp_°©_ex
 {

183 
u_l⁄g
 
rx_∑ckës
;

184 
u_l⁄g
 
tx_∑ckës
;

185 
u_l⁄g
 
rx_byãs
;

186 
u_l⁄g
 
tx_byãs
;

187 
u_l⁄g
 
rx_îr‹s
;

188 
u_l⁄g
 
tx_îr‹s
;

189 
u_l⁄g
 
rx_dr›≥d
;

190 
u_l⁄g
 
tx_dr›≥d
;

191 
u_l⁄g
 
mu…iˇ°
;

192 
u_l⁄g
 
cﬁlisi⁄s
;

195 
u_l⁄g
 
rx_Àngth_îr‹s
;

196 
u_l⁄g
 
rx_ovî_îr‹s
;

197 
u_l⁄g
 
rx_¸c_îr‹s
;

198 
u_l⁄g
 
rx_‰ame_îr‹s
;

199 
u_l⁄g
 
rx_fifo_îr‹s
;

200 
u_l⁄g
 
rx_mis£d_îr‹s
;

203 
u_l⁄g
 
tx_ab‹ãd_îr‹s
;

204 
u_l⁄g
 
tx_ˇºõr_îr‹s
;

205 
u_l⁄g
 
tx_fifo_îr‹s
;

206 
u_l⁄g
 
tx_hóπbót_îr‹s
;

207 
u_l⁄g
 
tx_wödow_îr‹s
;

214 
	spˇp_if
 {

215 
pˇp_if
 *
√xt
;

216 *
«me
;

217 *
des¸ùti⁄
;

218 
pˇp_addr
 *
addªs£s
;

219 
bpf_u_öt32
 
Êags
;

222 
	#PCAP_IF_LOOPBACK
 0x00000001

	)

223 
	#PCAP_IF_UP
 0x00000002

	)

224 
	#PCAP_IF_RUNNING
 0x00000004

	)

229 
	spˇp_addr
 {

230 
pˇp_addr
 *
√xt
;

231 
sockaddr
 *
addr
;

232 
sockaddr
 *
√tmask
;

233 
sockaddr
 *
brﬂdaddr
;

234 
sockaddr
 *
d°addr
;

237 (*
pˇp_h™dÀr
)(
	tu_ch¨
 *, c⁄° 
	tpˇp_pkthdr
 *,

238 c⁄° 
	tu_ch¨
 *);

246 
	#PCAP_ERROR
 -1

	)

247 
	#PCAP_ERROR_BREAK
 -2

	)

248 
	#PCAP_ERROR_NOT_ACTIVATED
 -3

	)

249 
	#PCAP_ERROR_ACTIVATED
 -4

	)

250 
	#PCAP_ERROR_NO_SUCH_DEVICE
 -5

	)

251 
	#PCAP_ERROR_RFMON_NOTSUP
 -6

	)

252 
	#PCAP_ERROR_NOT_RFMON
 -7

	)

253 
	#PCAP_ERROR_PERM_DENIED
 -8

	)

254 
	#PCAP_ERROR_IFACE_NOT_UP
 -9

	)

255 
	#PCAP_ERROR_CANTSET_TSTAMP_TYPE
 -10

	)

256 
	#PCAP_ERROR_PROMISC_PERM_DENIED
 -11

	)

257 
	#PCAP_ERROR_TSTAMP_PRECISION_NOTSUP
 -12

	)

264 
	#PCAP_WARNING
 1

	)

265 
	#PCAP_WARNING_PROMISC_NOTSUP
 2

	)

266 
	#PCAP_WARNING_TSTAMP_TYPE_NOTSUP
 3

	)

272 
	#PCAP_NETMASK_UNKNOWN
 0xffffffff

	)

274 *
pˇp_lookupdev
(*);

275 
pˇp_looku≤ë
(c⁄° *, 
bpf_u_öt32
 *, bpf_u_int32 *, *);

277 
pˇp_t
 *
pˇp_¸óã
(const *, *);

278 
pˇp_£t_¢≠Àn
(
pˇp_t
 *, );

279 
pˇp_£t_¥omisc
(
pˇp_t
 *, );

280 
pˇp_ˇn_£t_rfm⁄
(
pˇp_t
 *);

281 
pˇp_£t_rfm⁄
(
pˇp_t
 *, );

282 
pˇp_£t_timeout
(
pˇp_t
 *, );

283 
pˇp_£t_t°amp_ty≥
(
pˇp_t
 *, );

284 
pˇp_£t_immedüã_mode
(
pˇp_t
 *, );

285 
pˇp_£t_buf„r_size
(
pˇp_t
 *, );

286 
pˇp_£t_t°amp_¥ecisi⁄
(
pˇp_t
 *, );

287 
pˇp_gë_t°amp_¥ecisi⁄
(
pˇp_t
 *);

288 
pˇp_a˘iv©e
(
pˇp_t
 *);

290 
pˇp_li°_t°amp_ty≥s
(
pˇp_t
 *, **);

291 
pˇp_‰ì_t°amp_ty≥s
(*);

292 
pˇp_t°amp_ty≥_«me_to_vÆ
(const *);

293 c⁄° *
pˇp_t°amp_ty≥_vÆ_to_«me
();

294 c⁄° *
pˇp_t°amp_ty≥_vÆ_to_des¸ùti⁄
();

334 
	#PCAP_TSTAMP_HOST
 0

	)

335 
	#PCAP_TSTAMP_HOST_LOWPREC
 1

	)

336 
	#PCAP_TSTAMP_HOST_HIPREC
 2

	)

337 
	#PCAP_TSTAMP_ADAPTER
 3

	)

338 
	#PCAP_TSTAMP_ADAPTER_UNSYNCED
 4

	)

346 
	#PCAP_TSTAMP_PRECISION_MICRO
 0

	)

347 
	#PCAP_TSTAMP_PRECISION_NANO
 1

	)

349 
pˇp_t
 *
pˇp_›í_live
(const *, , , , *);

350 
pˇp_t
 *
pˇp_›í_dód
(, );

351 
pˇp_t
 *
pˇp_›í_dód_wôh_t°amp_¥ecisi⁄
(, , 
u_öt
);

352 
pˇp_t
 *
pˇp_›í_ofÊöe_wôh_t°amp_¥ecisi⁄
(c⁄° *, 
u_öt
, *);

353 
pˇp_t
 *
pˇp_›í_ofÊöe
(const *, *);

354 #i‡
deföed
(
WIN32
)

355 
pˇp_t
 *
pˇp_h›í_ofÊöe_wôh_t°amp_¥ecisi⁄
(
öçå_t
, 
u_öt
, *);

356 
pˇp_t
 *
pˇp_h›í_ofÊöe
(
öçå_t
, *);

357 #i‡!
deföed
(
LIBPCAP_EXPORTS
)

358 
	#pˇp_f›í_ofÊöe_wôh_t°amp_¥ecisi⁄
(
f
,
p
,
b
) \

359 
	`pˇp_h›í_ofÊöe_wôh_t°amp_¥ecisi⁄
(
	`_gë_osfh™dÀ
(
	`_fûío
(
f
)), 
p
, 
b
)

	)

360 
	#pˇp_f›í_ofÊöe
(
f
,
b
) \

361 
	`pˇp_h›í_ofÊöe
(
	`_gë_osfh™dÀ
(
	`_fûío
(
f
)), 
b
)

	)

363 
pˇp_t
 *
pˇp_f›í_ofÊöe_wôh_t°amp_¥ecisi⁄
(
FILE
 *, 
u_öt
, *);

364 
pˇp_t
 *
pˇp_f›í_ofÊöe
(
FILE
 *, *);

367 
pˇp_t
 *
pˇp_f›í_ofÊöe_wôh_t°amp_¥ecisi⁄
(
FILE
 *, 
u_öt
, *);

368 
pˇp_t
 *
pˇp_f›í_ofÊöe
(
FILE
 *, *);

371 
pˇp_˛o£
(
pˇp_t
 *);

372 
pˇp_lo›
(
pˇp_t
 *, , 
pˇp_h™dÀr
, 
u_ch¨
 *);

373 
pˇp_di•©ch
(
pˇp_t
 *, , 
pˇp_h™dÀr
, 
u_ch¨
 *);

374 c⁄° 
u_ch¨
*

375 
pˇp_√xt
(
pˇp_t
 *, 
pˇp_pkthdr
 *);

376 
pˇp_√xt_ex
(
pˇp_t
 *, 
pˇp_pkthdr
 **, c⁄° 
u_ch¨
 **);

377 
pˇp_bªaklo›
(
pˇp_t
 *);

378 
pˇp_°©s
(
pˇp_t
 *, 
pˇp_°©
 *);

379 
pˇp_£tfûãr
(
pˇp_t
 *, 
bpf_¥ogøm
 *);

380 
pˇp_£tdúe˘i⁄
(
pˇp_t
 *, 
pˇp_dúe˘i⁄_t
);

381 
pˇp_gën⁄block
(
pˇp_t
 *, *);

382 
pˇp_£ä⁄block
(
pˇp_t
 *, , *);

383 
pˇp_öje˘
(
pˇp_t
 *, c⁄° *, 
size_t
);

384 
pˇp_£nd∑ckë
(
pˇp_t
 *, c⁄° 
u_ch¨
 *, );

385 c⁄° *
pˇp_°©u°o°r
();

386 c⁄° *
pˇp_°ªº‹
();

387 *
pˇp_gëîr
(
pˇp_t
 *);

388 
pˇp_≥º‹
(
pˇp_t
 *, *);

389 
pˇp_compûe
(
pˇp_t
 *, 
bpf_¥ogøm
 *, const *, ,

390 
bpf_u_öt32
);

391 
pˇp_compûe_n›ˇp
(, , 
bpf_¥ogøm
 *,

392 c⁄° *, , 
bpf_u_öt32
);

393 
pˇp_‰ìcode
(
bpf_¥ogøm
 *);

394 
pˇp_ofÊöe_fûãr
(c⁄° 
bpf_¥ogøm
 *,

395 c⁄° 
pˇp_pkthdr
 *, c⁄° 
u_ch¨
 *);

396 
pˇp_d©Æök
(
pˇp_t
 *);

397 
pˇp_d©Æök_ext
(
pˇp_t
 *);

398 
pˇp_li°_d©Æöks
(
pˇp_t
 *, **);

399 
pˇp_£t_d©Æök
(
pˇp_t
 *, );

400 
pˇp_‰ì_d©Æöks
(*);

401 
pˇp_d©Æök_«me_to_vÆ
(const *);

402 c⁄° *
pˇp_d©Æök_vÆ_to_«me
();

403 c⁄° *
pˇp_d©Æök_vÆ_to_des¸ùti⁄
();

404 
pˇp_¢≠shŸ
(
pˇp_t
 *);

405 
pˇp_is_sw≠≥d
(
pˇp_t
 *);

406 
pˇp_maj‹_vîsi⁄
(
pˇp_t
 *);

407 
pˇp_mö‹_vîsi⁄
(
pˇp_t
 *);

410 
FILE
 *
pˇp_fûe
(
pˇp_t
 *);

411 
pˇp_fûío
(
pˇp_t
 *);

413 
pˇp_dum≥r_t
 *
pˇp_dump_›í
(
pˇp_t
 *, const *);

414 
pˇp_dum≥r_t
 *
pˇp_dump_f›í
(
pˇp_t
 *, 
FILE
 *
Â
);

415 
pˇp_dum≥r_t
 *
pˇp_dump_›í_≠≥nd
(
pˇp_t
 *, const *);

416 
FILE
 *
pˇp_dump_fûe
(
pˇp_dum≥r_t
 *);

417 
pˇp_dump_·ñl
(
pˇp_dum≥r_t
 *);

418 
pˇp_dump_Êush
(
pˇp_dum≥r_t
 *);

419 
pˇp_dump_˛o£
(
pˇp_dum≥r_t
 *);

420 
pˇp_dump
(
u_ch¨
 *, c⁄° 
pˇp_pkthdr
 *, const u_char *);

422 
pˇp_födÆldevs
(
pˇp_if_t
 **, *);

423 
pˇp_‰ìÆldevs
(
pˇp_if_t
 *);

425 c⁄° *
pˇp_lib_vîsi⁄
();

434 #i‡!
deföed
(
__NëBSD__
Ë&& !deföed(
__QNX__
)

435 
u_öt
 
bpf_fûãr
(c⁄° 
bpf_ö¢
 *, c⁄° 
u_ch¨
 *, u_int, u_int);

437 
bpf_vÆid©e
(c⁄° 
bpf_ö¢
 *
f
, 
Àn
);

438 *
bpf_image
(c⁄° 
bpf_ö¢
 *, );

439 
bpf_dump
(c⁄° 
bpf_¥ogøm
 *, );

441 #i‡
deföed
(
WIN32
)

447 
pˇp_£tbuff
(
pˇp_t
 *
p
, 
dim
);

448 
pˇp_£tmode
(
pˇp_t
 *
p
, 
mode
);

449 
pˇp_£tmötoc›y
(
pˇp_t
 *
p
, 
size
);

450 
Ad≠ãr
 *
pˇp_gë_ad≠ãr
(
pˇp_t
 *
p
);

452 #ifde‡
WPCAP


454 
	~<Wö32-Exãnsi⁄s.h
>

457 
	#MODE_CAPT
 0

	)

458 
	#MODE_STAT
 1

	)

459 
	#MODE_MON
 2

	)

461 #ñi‡
deföed
(
MSDOS
)

467 
pˇp_°©s_ex
 (
pˇp_t
 *, 
pˇp_°©_ex
 *);

468 
pˇp_£t_waô
 (
pˇp_t
 *
p
, (*
yõld
)(), 
waô
);

469 
u_l⁄g
 
pˇp_mac_∑ckës
 ();

477 
pˇp_gë_£À˘abÀ_fd
(
pˇp_t
 *);

481 #ifde‡
__˝lu•lus


	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/regex.h

20 #i‚de‡
_REGEX_H


21 
	#_REGEX_H
 1

	)

23 
	~<sys/ty≥s.h
>

26 #ifde‡
__˝lu•lus


34 
	ts_ªg_t
;

35 
	ta˘ive_ªg_t
;

42 
	tªg_sy¡ax_t
;

44 #ifde‡
__USE_GNU


47 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

52 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

58 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

72 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

80 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

84 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

88 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

92 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

96 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

101 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

105 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

109 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

114 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

118 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

122 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

126 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

132 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

136 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

140 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

144 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

152 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

157 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

161 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

166 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

170 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

174 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

181 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

183 #ifde‡
__USE_GNU


188 
	#RE_SYNTAX_EMACS
 0

	)

190 
	#RE_SYNTAX_AWK
 \

191 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

192 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

193 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

194 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

195 | 
RE_CHAR_CLASSES
 \

196 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

198 
	#RE_SYNTAX_GNU_AWK
 \

199 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

200 | 
RE_INVALID_INTERVAL_ORD
) \

201 & ~(
RE_DOT_NOT_NULL
 | 
RE_CONTEXT_INDEP_OPS
 \

202 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

204 
	#RE_SYNTAX_POSIX_AWK
 \

205 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

206 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
 \

207 | 
RE_INVALID_INTERVAL_ORD
)

	)

209 
	#RE_SYNTAX_GREP
 \

210 (
RE_BK_PLUS_QM
 | 
RE_CHAR_CLASSES
 \

211 | 
RE_HAT_LISTS_NOT_NEWLINE
 | 
RE_INTERVALS
 \

212 | 
RE_NEWLINE_ALT
)

	)

214 
	#RE_SYNTAX_EGREP
 \

215 (
RE_CHAR_CLASSES
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

216 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_HAT_LISTS_NOT_NEWLINE
 \

217 | 
RE_NEWLINE_ALT
 | 
RE_NO_BK_PARENS
 \

218 | 
RE_NO_BK_VBAR
)

	)

220 
	#RE_SYNTAX_POSIX_EGREP
 \

221 (
RE_SYNTAX_EGREP
 | 
RE_INTERVALS
 | 
RE_NO_BK_BRACES
 \

222 | 
RE_INVALID_INTERVAL_ORD
)

	)

225 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

227 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

230 
	#_RE_SYNTAX_POSIX_COMMON
 \

231 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

232 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

234 
	#RE_SYNTAX_POSIX_BASIC
 \

235 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

240 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

241 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

243 
	#RE_SYNTAX_POSIX_EXTENDED
 \

244 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

245 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

246 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

247 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

251 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

252 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

253 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

254 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

255 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

261 #ifde‡
RE_DUP_MAX


262 #unde‡
RE_DUP_MAX


265 
	#RE_DUP_MAX
 (0x7fff)

	)

273 
	#REG_EXTENDED
 1

	)

277 
	#REG_ICASE
 (
REG_EXTENDED
 << 1)

	)

282 
	#REG_NEWLINE
 (
REG_ICASE
 << 1)

	)

286 
	#REG_NOSUB
 (
REG_NEWLINE
 << 1)

	)

296 
	#REG_NOTBOL
 1

	)

299 
	#REG_NOTEOL
 (1 << 1)

	)

303 
	#REG_STARTEND
 (1 << 2)

	)

310 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


311 
	gREG_ENOSYS
 = -1,

314 
	gREG_NOERROR
 = 0,

315 
	gREG_NOMATCH
,

319 
	gREG_BADPAT
,

320 
	gREG_ECOLLATE
,

321 
	gREG_ECTYPE
,

322 
	gREG_EESCAPE
,

323 
	gREG_ESUBREG
,

324 
	gREG_EBRACK
,

325 
	gREG_EPAREN
,

326 
	gREG_EBRACE
,

327 
	gREG_BADBR
,

328 
	gREG_ERANGE
,

329 
	gREG_ESPACE
,

330 
	gREG_BADRPT
,

333 
	gREG_EEND
,

334 
	gREG_ESIZE
,

335 
	gREG_ERPAREN


336 } 
	tªg_îrcode_t
;

344 #i‚de‡
RE_TRANSLATE_TYPE


345 
	#__RE_TRANSLATE_TYPE
 *

	)

346 #ifde‡
__USE_GNU


347 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

351 #ifde‡
__USE_GNU


352 
	#__REPB_PREFIX
(
«me
Ë
	)
name

354 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
name

357 
	sª_∑âîn_buf„r


362 *
__REPB_PREFIX
(
buf„r
);

365 
__REPB_PREFIX
(
Æloˇãd
);

368 
__REPB_PREFIX
(
u£d
);

371 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

376 *
__REPB_PREFIX
(
Á°m≠
);

382 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

385 
size_t
 
	gª_nsub
;

391 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

397 #ifde‡
__USE_GNU


398 
	#REGS_UNALLOCATED
 0

	)

399 
	#REGS_REALLOCATE
 1

	)

400 
	#REGS_FIXED
 2

	)

402 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

406 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

410 
__REPB_PREFIX
(
no_sub
) : 1;

414 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

417 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

420 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

423 
ª_∑âîn_buf„r
 
	tªgex_t
;

426 
	tªgoff_t
;

429 #ifde‡
__USE_GNU


432 
	sª_ªgi°îs


434 
	gnum_ªgs
;

435 
ªgoff_t
 *
	g°¨t
;

436 
ªgoff_t
 *
	gíd
;

443 #i‚de‡
RE_NREGS


444 
	#RE_NREGS
 30

	)

454 
ªgoff_t
 
	grm_so
;

455 
ªgoff_t
 
	grm_eo
;

456 } 
	tªgm©ch_t
;

460 #ifde‡
__USE_GNU


463 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

473 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

474 
ª_∑âîn_buf„r
 *
__buf„r
);

480 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

488 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

489 
__Àngth
, 
__°¨t
, 
__ønge
,

490 
ª_ªgi°îs
 *
__ªgs
);

495 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

496 c⁄° *
__°rög1
, 
__Àngth1
,

497 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

498 
__ønge
, 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

503 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
, c⁄° *
__°rög
,

504 
__Àngth
, 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

508 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

509 c⁄° *
__°rög1
, 
__Àngth1
,

510 c⁄° *
__°rög2
, 
__Àngth2
, 
__°¨t
,

511 
ª_ªgi°îs
 *
__ªgs
, 
__°›
);

526 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

527 
ª_ªgi°îs
 *
__ªgs
,

528 
__num_ªgs
,

529 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

532 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_MISC
)

533 #i‚de‡
_CRAY


535 *
ª_comp
 (const *);

536 
ª_exec
 (const *);

542 #i‚de‡
__ª°ri˘


543 #i‡! (2 < 
__GNUC__
 || (2 =__GNUC__ && 95 <
__GNUC_MINOR__
))

544 #i‡
deföed
 
ª°ri˘
 || 199901L <
__STDC_VERSION__


545 
	#__ª°ri˘
 
ª°ri˘


	)

547 
	#__ª°ri˘


	)

552 #i‚de‡
__ª°ri˘_¨r


553 #i‡(
__GNUC__
 > 3 || (__GNUC__ =3 && 
__GNUC_MINOR__
 >= 1)) \

554 && !
deföed
 
	g__GNUG__


555 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

557 
	#__ª°ri˘_¨r


	)

562 
ªgcomp
 (
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

563 c⁄° *
__ª°ri˘
 
__∑âîn
,

564 
__cÊags
);

566 
ªgexec
 (c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

567 c⁄° *
__ª°ri˘
 
__°rög
, 
size_t
 
__nm©ch
,

568 
ªgm©ch_t
 
__pm©ch
[
__ª°ri˘_¨r
],

569 
__eÊags
);

571 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
__ª°ri˘
 
__¥eg
,

572 *
__ª°ri˘
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

574 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

577 #ifde‡
__˝lu•lus


	@/usr/include/setjmp.h

22 #i‚def 
_SETJMP_H


23 
	#_SETJMP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/sig£t.h
>

34 
	s__jmp_buf_èg


40 
__jmp_buf
 
	m__jmpbuf
;

41 
	m__mask_was_ßved
;

42 
__sig£t_t
 
	m__ßved_mask
;

46 
__BEGIN_NAMESPACE_STD


48 
__jmp_buf_èg
 
	tjmp_buf
[1];

52 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROWNL
;

54 
__END_NAMESPACE_STD


59 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROWNL
;

63 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROWNL
;

67 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

70 
__BEGIN_NAMESPACE_STD


74 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

75 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

77 
__END_NAMESPACE_STD


79 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


83 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

84 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 #ifdef 
__USE_POSIX


92 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

96 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

102 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

103 
__THROWNL
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

108 #i‡
__USE_FORTIFY_LEVEL
 > 0

109 
	~<bôs/£tjmp2.h
>

112 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_MISC


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_MISC


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #ifde‡
__USE_XOPEN2K8


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

166 #ifde‡
__USE_XOPEN


167 #ifde‡
__GNUC__


168 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

170 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

172 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

177 #ifde‡
__USE_MISC


184 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

187 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

190 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

193 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

197 #ifde‡
__USE_MISC


198 
	#NSIG
 
_NSIG


	)

201 #ifde‡
__USE_GNU


202 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

206 #ifde‡
__USE_MISC


207 
__sigh™dÀr_t
 
	tsig_t
;

210 #ifde‡
__USE_POSIX


213 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

222 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

226 
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #ifde‡
__USE_GNU


230 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

234 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

237 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

238 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

243 
	~<bôs/siga˘i⁄.h
>

246 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

247 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

254 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

257 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

258 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

261 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

268 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

269 
	`__n⁄nuŒ
 ((1, 2));

271 #ifde‡
__USE_POSIX199309


276 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

277 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

284 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

285 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

286 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

287 
	`__n⁄nuŒ
 ((1));

291 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

292 
__THROW
;

297 #ifde‡
__USE_MISC


301 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

302 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

306 
	~<bôs/sigc⁄ãxt.h
>

309 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

314 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


315 
	#__√ed_size_t


	)

316 
	~<°ddef.h
>

321 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

323 
	~<bôs/sig°ack.h
>

324 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


326 
	~<sys/uc⁄ãxt.h
>

332 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

333 
__THROW
 
__©åibuã_dïªˇãd__
;

337 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

338 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

342 #ifde‡
__USE_XOPEN_EXTENDED


346 
	$sighﬁd
 (
__sig
Ë
__THROW
;

349 
	$sigªl£
 (
__sig
Ë
__THROW
;

352 
	$sigign‹e
 (
__sig
Ë
__THROW
;

355 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

358 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


361 
	~<bôs/±hªadty≥s.h
>

362 
	~<bôs/sigthªad.h
>

369 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

371 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

375 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/wch¨.h
>

27 
	~<bôs/w‹dsize.h
>

34 #i‚de‡
__öt8_t_deföed


35 
	#__öt8_t_deföed


	)

36 sig√d 
	töt8_t
;

37 
	töt16_t
;

38 
	töt32_t
;

39 #i‡
__WORDSIZE
 == 64

40 
	töt64_t
;

42 
__exãnsi⁄__


43 
	töt64_t
;

48 
	tuöt8_t
;

49 
	tuöt16_t
;

50 #i‚de‡
__uöt32_t_deföed


51 
	tuöt32_t
;

52 
	#__uöt32_t_deföed


	)

54 #i‡
__WORDSIZE
 == 64

55 
	tuöt64_t
;

57 
__exãnsi⁄__


58 
	tuöt64_t
;

65 sig√d 
	töt_Àa°8_t
;

66 
	töt_Àa°16_t
;

67 
	töt_Àa°32_t
;

68 #i‡
__WORDSIZE
 == 64

69 
	töt_Àa°64_t
;

71 
__exãnsi⁄__


72 
	töt_Àa°64_t
;

76 
	tuöt_Àa°8_t
;

77 
	tuöt_Àa°16_t
;

78 
	tuöt_Àa°32_t
;

79 #i‡
__WORDSIZE
 == 64

80 
	tuöt_Àa°64_t
;

82 
__exãnsi⁄__


83 
	tuöt_Àa°64_t
;

90 sig√d 
	töt_Á°8_t
;

91 #i‡
__WORDSIZE
 == 64

92 
	töt_Á°16_t
;

93 
	töt_Á°32_t
;

94 
	töt_Á°64_t
;

96 
	töt_Á°16_t
;

97 
	töt_Á°32_t
;

98 
__exãnsi⁄__


99 
	töt_Á°64_t
;

103 
	tuöt_Á°8_t
;

104 #i‡
__WORDSIZE
 == 64

105 
	tuöt_Á°16_t
;

106 
	tuöt_Á°32_t
;

107 
	tuöt_Á°64_t
;

109 
	tuöt_Á°16_t
;

110 
	tuöt_Á°32_t
;

111 
__exãnsi⁄__


112 
	tuöt_Á°64_t
;

117 #i‡
__WORDSIZE
 == 64

118 #i‚de‡
__öçå_t_deföed


119 
	töçå_t
;

120 
	#__öçå_t_deföed


	)

122 
	tuöçå_t
;

124 #i‚de‡
__öçå_t_deföed


125 
	töçå_t
;

126 
	#__öçå_t_deföed


	)

128 
	tuöçå_t
;

133 #i‡
__WORDSIZE
 == 64

134 
	tötmax_t
;

135 
	tuötmax_t
;

137 
__exãnsi⁄__


138 
	tötmax_t
;

139 
__exãnsi⁄__


140 
	tuötmax_t
;

144 #i‡
__WORDSIZE
 == 64

145 
	#__INT64_C
(
c
Ë¯## 
L


	)

146 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

148 
	#__INT64_C
(
c
Ë¯## 
LL


	)

149 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

155 
	#INT8_MIN
 (-128)

	)

156 
	#INT16_MIN
 (-32767-1)

	)

157 
	#INT32_MIN
 (-2147483647-1)

	)

158 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

160 
	#INT8_MAX
 (127)

	)

161 
	#INT16_MAX
 (32767)

	)

162 
	#INT32_MAX
 (2147483647)

	)

163 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

166 
	#UINT8_MAX
 (255)

	)

167 
	#UINT16_MAX
 (65535)

	)

168 
	#UINT32_MAX
 (4294967295U)

	)

169 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

173 
	#INT_LEAST8_MIN
 (-128)

	)

174 
	#INT_LEAST16_MIN
 (-32767-1)

	)

175 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

176 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

178 
	#INT_LEAST8_MAX
 (127)

	)

179 
	#INT_LEAST16_MAX
 (32767)

	)

180 
	#INT_LEAST32_MAX
 (2147483647)

	)

181 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

184 
	#UINT_LEAST8_MAX
 (255)

	)

185 
	#UINT_LEAST16_MAX
 (65535)

	)

186 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

187 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

191 
	#INT_FAST8_MIN
 (-128)

	)

192 #i‡
__WORDSIZE
 == 64

193 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

194 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

196 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

197 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

199 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

201 
	#INT_FAST8_MAX
 (127)

	)

202 #i‡
__WORDSIZE
 == 64

203 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

204 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

206 
	#INT_FAST16_MAX
 (2147483647)

	)

207 
	#INT_FAST32_MAX
 (2147483647)

	)

209 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINT_FAST8_MAX
 (255)

	)

213 #i‡
__WORDSIZE
 == 64

214 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

215 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

217 
	#UINT_FAST16_MAX
 (4294967295U)

	)

218 
	#UINT_FAST32_MAX
 (4294967295U)

	)

220 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

224 #i‡
__WORDSIZE
 == 64

225 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

226 
	#INTPTR_MAX
 (9223372036854775807L)

	)

227 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

229 
	#INTPTR_MIN
 (-2147483647-1)

	)

230 
	#INTPTR_MAX
 (2147483647)

	)

231 
	#UINTPTR_MAX
 (4294967295U)

	)

236 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

238 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

241 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

247 #i‡
__WORDSIZE
 == 64

248 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

249 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

251 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

252 
	#PTRDIFF_MAX
 (2147483647)

	)

256 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

257 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

260 #i‡
__WORDSIZE
 == 64

261 
	#SIZE_MAX
 (18446744073709551615UL)

	)

263 #ifde‡
__WORDSIZE32_SIZE_ULONG


264 
	#SIZE_MAX
 (4294967295UL)

	)

266 
	#SIZE_MAX
 (4294967295U)

	)

271 #i‚de‡
WCHAR_MIN


273 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

274 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

278 
	#WINT_MIN
 (0u)

	)

279 
	#WINT_MAX
 (4294967295u)

	)

282 
	#INT8_C
(
c
Ë
	)
c

283 
	#INT16_C
(
c
Ë
	)
c

284 
	#INT32_C
(
c
Ë
	)
c

285 #i‡
__WORDSIZE
 == 64

286 
	#INT64_C
(
c
Ë¯## 
L


	)

288 
	#INT64_C
(
c
Ë¯## 
LL


	)

292 
	#UINT8_C
(
c
Ë
	)
c

293 
	#UINT16_C
(
c
Ë
	)
c

294 
	#UINT32_C
(
c
Ë¯## 
U


	)

295 #i‡
__WORDSIZE
 == 64

296 
	#UINT64_C
(
c
Ë¯## 
UL


	)

298 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

302 #i‡
__WORDSIZE
 == 64

303 
	#INTMAX_C
(
c
Ë¯## 
L


	)

304 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

306 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

307 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_MISC


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #ifde‡
__USE_POSIX


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #ifde‡
__USE_POSIX


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #ifde‡
__USE_POSIX2


872 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 c⁄° *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #ifde‡
__USE_POSIX


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_MISC


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #ifde‡
__USE_ISOC99


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_MISC


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__USE_ISOC99


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #ifde‡
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #ifde‡
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_MISC


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	$©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #ifde‡
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #ifde‡
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

758 #ifde‡
__USE_EXTERN_INLINES


759 
	~<bôs/°dlib-b£¨ch.h
>

764 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

766 #ifde‡
__USE_GNU


767 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

768 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

769 
	`__n⁄nuŒ
 ((1, 4));

774 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

775 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
__END_NAMESPACE_STD


778 #ifde‡
__USE_ISOC99


779 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

780 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

784 
__BEGIN_NAMESPACE_STD


788 
div_t
 
	$div
 (
__numî
, 
__díom
)

789 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

790 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

791 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

792 
__END_NAMESPACE_STD


794 #ifde‡
__USE_ISOC99


795 
__BEGIN_NAMESPACE_C99


796 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

797 
__díom
)

798 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

799 
__END_NAMESPACE_C99


803 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

804 || 
deföed
 
__USE_MISC


811 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

812 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

817 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

818 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

823 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

824 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

827 #ifde‡
__USE_MISC


829 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

833 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

834 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

835 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

836 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

841 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

845 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

846 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

852 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

853 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

854 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

855 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

859 
__BEGIN_NAMESPACE_STD


862 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

865 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

866 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

869 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

873 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

874 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

876 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

877 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

878 
__THROW
;

879 
__END_NAMESPACE_STD


882 #ifde‡
__USE_MISC


887 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


898 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

899 *c⁄° *
__ª°ri˘
 
__tokís
,

900 **
__ª°ri˘
 
__vÆuï
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

905 #ifde‡
__USE_XOPEN


907 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

913 #ifde‡
__USE_XOPEN2KXSI


915 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

918 #ifde‡
__USE_XOPEN


923 
	$gø¡±
 (
__fd
Ë
__THROW
;

927 
	$u∆ock±
 (
__fd
Ë
__THROW
;

932 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

935 #ifde‡
__USE_GNU


939 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

940 
__THROW
 
	`__n⁄nuŒ
 ((2));

943 
	`gë±
 ();

946 #ifde‡
__USE_MISC


950 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	~<bôs/°dlib-Êﬂt.h
>

957 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


958 
	~<bôs/°dlib.h
>

960 #ifde‡
__LDBL_COMPAT


961 
	~<bôs/°dlib-ldbl.h
>

965 #unde‡
__√ed_mÆloc_™d_ˇŒoc


967 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


171 *
	$°rdup
 (c⁄° *
__s
)

172 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_XOPEN2K8


179 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

180 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


185 
	#°rdu∑
(
s
) \

186 (
__exãnsi⁄__
 \

188 c⁄° *
__ﬁd
 = (
s
); \

189 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

190 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

191 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

192 
	}
}))

	)

195 
	#°∫du∑
(
s
, 
n
) \

196 (
__exãnsi⁄__
 \

198 c⁄° *
__ﬁd
 = (
s
); \

199 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

200 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

201 
__√w
[
__Àn
] = '\0'; \

202 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

203 }))

	)

206 
	g__BEGIN_NAMESPACE_STD


208 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


211 *
°rchr
 (*
__s
, 
__c
)

212 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

213 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

214 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

216 #ifde‡
__OPTIMIZE__


217 
__exã∫_Æways_ölöe
 *

218 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

223 
__exã∫_Æways_ölöe
 const *

224 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


226  
__buûtö_°rchr
 (
__s
, 
__c
);

231 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

232 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

235 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


238 *
	`°ºchr
 (*
__s
, 
__c
)

239 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

241 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

243 #ifde‡
__OPTIMIZE__


244 
__exã∫_Æways_ölöe
 *

245 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
__exã∫_Æways_ölöe
 const *

251 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


253  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

256 
	}
}

258 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

259 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

261 
__END_NAMESPACE_STD


263 #ifde‡
__USE_GNU


266 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


267 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

268 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

269 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

270 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 
__BEGIN_NAMESPACE_STD


280 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

281 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


290 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

291 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

293 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

295 #ifde‡
__OPTIMIZE__


296 
__exã∫_Æways_ölöe
 *

297 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


299  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

302 
__exã∫_Æways_ölöe
 const *

303 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


305  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

308 
	}
}

310 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

311 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


317 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

318 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

320 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

322 #ifde‡
__OPTIMIZE__


323 
__exã∫_Æways_ölöe
 *

324 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


326  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

329 
__exã∫_Æways_ölöe
 const *

330 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


332  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

335 
	}
}

337 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

338 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

343 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

344 
__THROW
 
	`__n⁄nuŒ
 ((2));

345 
__END_NAMESPACE_STD


349 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

350 c⁄° *
__ª°ri˘
 
__dñim
,

351 **
__ª°ri˘
 
__ßve_±r
)

352 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

353 #ifde‡
__USE_POSIX


354 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

355 **
__ª°ri˘
 
__ßve_±r
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

359 #ifde‡
__USE_GNU


361 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


362 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

363 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

365 c⁄° *
__√edÀ
)

366 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

368 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

369 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 #ifde‡
__USE_GNU


377 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

378 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

379 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

383 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

384 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

387 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

392 
__BEGIN_NAMESPACE_STD


394 
size_t
 
	$°æí
 (c⁄° *
__s
)

395 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 
__END_NAMESPACE_STD


398 #ifdef 
__USE_XOPEN2K8


401 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

402 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

406 
__BEGIN_NAMESPACE_STD


408 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

409 
__END_NAMESPACE_STD


410 #ifde‡
__USE_XOPEN2K


418 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


421 #ifde‡
__REDIRECT_NTH


422 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

423 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

424 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

426 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

427 
__THROW
 
	`__n⁄nuŒ
 ((2));

428 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

433 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

434 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

438 #ifde‡
__USE_XOPEN2K8


440 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

446 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

448 #ifde‡
__USE_MISC


450 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

451 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

457 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

458 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

461 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


464 *
	`ödex
 (*
__s
, 
__c
)

465 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

466 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

467 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

469 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


470 
__exã∫_Æways_ölöe
 *

471 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


473  
	`__buûtö_ödex
 (
__s
, 
__c
);

476 
__exã∫_Æways_ölöe
 const *

477 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


479  
	`__buûtö_ödex
 (
__s
, 
__c
);

482 
	}
}

484 *
	$ödex
 (c⁄° *
__s
, 
__c
)

485 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

489 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


492 *
	`rödex
 (*
__s
, 
__c
)

493 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

495 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

497 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


498 
__exã∫_Æways_ölöe
 *

499 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


501  
	`__buûtö_rödex
 (
__s
, 
__c
);

504 
__exã∫_Æways_ölöe
 const *

505 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


507  
	`__buûtö_rödex
 (
__s
, 
__c
);

510 
	}
}

512 *
	$rödex
 (c⁄° *
__s
, 
__c
)

513 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

518 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

522 #ifdef 
__USE_GNU


523 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

524 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

525 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

530 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

534 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

537 #ifdef 
__USE_GNU


540 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

541 
__loˇÀ_t
 
__loc
)

542 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

544 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

545 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

546 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

549 #ifdef 
__USE_MISC


552 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

553 c⁄° *
__ª°ri˘
 
__dñim
)

554 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifdef 
__USE_XOPEN2K8


559 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

562 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

563 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

570 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 #ifdef 
__USE_GNU


579 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

580 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

583 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

586 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

588 #i‚de‡
ba£«me


593 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


594 "C++" *
	$ba£«me
 (*
__fûíame
)

595 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

596 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

597 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

605 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

606 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

607 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


627 
	~<bôs/°rög.h
>

630 
	~<bôs/°rög2.h
>

633 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


635 
	~<bôs/°rög3.h
>

639 #i‡
deföed
 
__USE_GNU
 && deföed 
__OPTIMIZE__
 \

640 && 
deföed
 
__exã∫_Æways_ölöe
 && 
	$__GNUC_PREREQ
 (3,2)

641 #i‡!
deföed
 
_FORCE_INLINES
 && !deföed 
_HAVE_STRING_ARCH_memp˝y


643 #unde‡
memp˝y


644 #unde‡
__memp˝y


645 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

646 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y_ölöe
 (de°, src,Ç)

	)

648 
__exã∫_Æways_ölöe
 *

649 
	$__memp˝y_ölöe
 (*
__ª°ri˘
 
__de°
,

650 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

652  (*Ë
	`mem˝y
 (
__de°
, 
__§c
, 
__n
) + __n;

653 
	}
}

658 
	g__END_DECLS


	@/usr/include/termios.h

22 #i‚def 
_TERMIOS_H


23 
	#_TERMIOS_H
 1

	)

25 
	~<„©uªs.h
>

26 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


28 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__pid_t_deföed


30 
__pid_t
 
	tpid_t
;

31 
	#__pid_t_deföed


	)

35 
	g__BEGIN_DECLS


39 
	~<bôs/ãrmios.h
>

41 #ifde‡
__USE_MISC


44 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

48 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

51 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

54 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

57 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

59 #ifdef 
__USE_MISC


61 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

66 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

70 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

71 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

74 #ifdef 
__USE_MISC


76 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

80 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

86 
	`tcdøö
 (
__fd
);

90 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

94 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

97 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


99 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

103 #ifde‡
__USE_MISC


104 
	~<sys/âydeÁu…s.h
>

107 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #ifde‡
__USE_POSIX


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_MISC


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_POSIX


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_POSIX


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_MISC


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #i‡
deföed
 
__USE_MISC
 \

785 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

788 
	$ây¶Ÿ
 (Ë
__THROW
;

793 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

794 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

796 #ifde‡
__USE_ATFILE


799 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

800 c⁄° *
__to
, 
__Êags
)

801 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

804 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


806 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

807 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

813 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

817 #ifde‡
__USE_ATFILE


819 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

820 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

823 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

824 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

825 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

829 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

831 #ifde‡
__USE_ATFILE


833 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

834 
__THROW
 
	`__n⁄nuŒ
 ((2));

838 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

842 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

845 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

852 *
	`gëlogö
 ();

853 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


860 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

863 #ifdef 
__USE_MISC


865 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 #ifdef 
__USE_POSIX2


873 
	#__√ed_gë›t


	)

874 
	~<gë›t.h
>

878 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


882 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #i‡
deföed
 
__USE_MISC


889 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

890 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

894 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

900 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

902 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

903 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	$vh™gup
 (Ë
__THROW
;

912 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

920 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

921 
size_t
 
__off£t
, 
__sˇÀ
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1));

928 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

932 *
	$gëu£rshñl
 (Ë
__THROW
;

933 
	$ídu£rshñl
 (Ë
__THROW
;

934 
	$£tu£rshñl
 (Ë
__THROW
;

940 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

944 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

947 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

951 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

959 
	`fsync
 (
__fd
);

962 #ifde‡
__USE_GNU


965 
	$syncfs
 (
__fd
Ë
__THROW
;

969 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


972 
	`gëho°id
 ();

975 
	$sync
 (Ë
__THROW
;

978 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


981 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

986 
	$gëdèbÀsize
 (Ë
__THROW
;

992 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


995 #i‚de‡
__USE_FILE_OFFSET64


996 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 #ifde‡
__REDIRECT_NTH


1000 
	`__REDIRECT_NTH
 (
åunˇã
,

1001 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1002 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1004 
	#åunˇã
 
åunˇã64


	)

1007 #ifde‡
__USE_LARGEFILE64


1008 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1009 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1014 #i‡
deföed
 
__USE_POSIX199309
 \

1015 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1018 #i‚de‡
__USE_FILE_OFFSET64


1019 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1023 
·runˇã64
Ë
__wur
;

1025 
	#·runˇã
 
·runˇã64


	)

1028 #ifde‡
__USE_LARGEFILE64


1029 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1035 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1036 || 
deföed
 
__USE_MISC


1040 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1046 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1050 #ifde‡
__USE_MISC


1061 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1066 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1078 
	#F_ULOCK
 0

	)

1079 
	#F_LOCK
 1

	)

1080 
	#F_TLOCK
 2

	)

1081 
	#F_TEST
 3

	)

1083 #i‚de‡
__USE_FILE_OFFSET64


1084 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1086 #ifde‡
__REDIRECT


1087 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1088 
lockf64
Ë
__wur
;

1090 
	#lockf
 
lockf64


	)

1093 #ifde‡
__USE_LARGEFILE64


1094 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1099 #ifde‡
__USE_GNU


1104 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1105 (
__exãnsi⁄__
 \

1106 ({ 
__ªsu…
; \

1107 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1108 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1109 
__ªsu…
; 
	}
}))

	)

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1121 #ifdef 
__USE_XOPEN


1123 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1124 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1129 
__THROW
 
	`__n⁄nuŒ
 ((1));

1136 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1137 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1143 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1145 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1150 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1151 
	~<bôs/uni°d.h
>

1154 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC11


98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_ISOCXX11


101 #unde‡
__USE_POSIX


102 #unde‡
__USE_POSIX2


103 #unde‡
__USE_POSIX199309


104 #unde‡
__USE_POSIX199506


105 #unde‡
__USE_XOPEN


106 #unde‡
__USE_XOPEN_EXTENDED


107 #unde‡
__USE_UNIX98


108 #unde‡
__USE_XOPEN2K


109 #unde‡
__USE_XOPEN2KXSI


110 #unde‡
__USE_XOPEN2K8


111 #unde‡
__USE_XOPEN2K8XSI


112 #unde‡
__USE_LARGEFILE


113 #unde‡
__USE_LARGEFILE64


114 #unde‡
__USE_FILE_OFFSET64


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__KERNEL_STRICT_NAMES


124 #i‚de‡
_LOOSE_KERNEL_NAMES


125 
	#__KERNEL_STRICT_NAMES


	)

135 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


136 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

137 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

139 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

146 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

147 && !
deföed
 
	g_DEFAULT_SOURCE


152 #unde‡
_DEFAULT_SOURCE


153 
	#_DEFAULT_SOURCE
 1

	)

157 #ifde‡
_GNU_SOURCE


158 #unde‡
_ISOC95_SOURCE


159 
	#_ISOC95_SOURCE
 1

	)

160 #unde‡
_ISOC99_SOURCE


161 
	#_ISOC99_SOURCE
 1

	)

162 #unde‡
_ISOC11_SOURCE


163 
	#_ISOC11_SOURCE
 1

	)

164 #unde‡
_POSIX_SOURCE


165 
	#_POSIX_SOURCE
 1

	)

166 #unde‡
_POSIX_C_SOURCE


167 
	#_POSIX_C_SOURCE
 200809L

	)

168 #unde‡
_XOPEN_SOURCE


169 
	#_XOPEN_SOURCE
 700

	)

170 #unde‡
_XOPEN_SOURCE_EXTENDED


171 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

172 #unde‡
_LARGEFILE64_SOURCE


173 
	#_LARGEFILE64_SOURCE
 1

	)

174 #unde‡
_DEFAULT_SOURCE


175 
	#_DEFAULT_SOURCE
 1

	)

176 #unde‡
_ATFILE_SOURCE


177 
	#_ATFILE_SOURCE
 1

	)

182 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

183 || (!
deföed
 
	g__STRICT_ANSI__
 \

184 && !
deföed
 
	g_ISOC99_SOURCE
 \

185 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

186 && !
deföed
 
	g_XOPEN_SOURCE
))

187 #unde‡
_DEFAULT_SOURCE


188 
	#_DEFAULT_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC11_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

194 
	#__USE_ISOC11
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

200 
	#__USE_ISOC99
 1

	)

204 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

205 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

206 
	#__USE_ISOC95
 1

	)

213 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

214 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

215 
	#__USE_ISOCXX11
 1

	)

221 #ifde‡
_DEFAULT_SOURCE


222 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


223 
	#__USE_POSIX_IMPLICITLY
 1

	)

225 #unde‡
_POSIX_SOURCE


226 
	#_POSIX_SOURCE
 1

	)

227 #unde‡
_POSIX_C_SOURCE


228 
	#_POSIX_C_SOURCE
 200809L

	)

230 #i‡((!
deföed
 
__STRICT_ANSI__
 \

231 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

232 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

233 
	#_POSIX_SOURCE
 1

	)

234 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

235 
	#_POSIX_C_SOURCE
 2

	)

236 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

237 
	#_POSIX_C_SOURCE
 199506L

	)

238 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

239 
	#_POSIX_C_SOURCE
 200112L

	)

241 
	#_POSIX_C_SOURCE
 200809L

	)

243 
	#__USE_POSIX_IMPLICITLY
 1

	)

246 #i‡(
deföed
 
_POSIX_SOURCE
 \

247 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

248 || 
deföed
 
_XOPEN_SOURCE
)

249 
	#__USE_POSIX
 1

	)

252 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


253 
	#__USE_POSIX2
 1

	)

256 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

257 
	#__USE_POSIX199309
 1

	)

260 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

261 
	#__USE_POSIX199506
 1

	)

264 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

265 
	#__USE_XOPEN2K
 1

	)

266 #unde‡
__USE_ISOC95


267 
	#__USE_ISOC95
 1

	)

268 #unde‡
__USE_ISOC99


269 
	#__USE_ISOC99
 1

	)

272 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

273 
	#__USE_XOPEN2K8
 1

	)

274 #unde‡
_ATFILE_SOURCE


275 
	#_ATFILE_SOURCE
 1

	)

278 #ifdef 
_XOPEN_SOURCE


279 
	#__USE_XOPEN
 1

	)

280 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

281 
	#__USE_XOPEN_EXTENDED
 1

	)

282 
	#__USE_UNIX98
 1

	)

283 #unde‡
_LARGEFILE_SOURCE


284 
	#_LARGEFILE_SOURCE
 1

	)

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

286 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

287 
	#__USE_XOPEN2K8
 1

	)

288 
	#__USE_XOPEN2K8XSI
 1

	)

290 
	#__USE_XOPEN2K
 1

	)

291 
	#__USE_XOPEN2KXSI
 1

	)

292 #unde‡
__USE_ISOC95


293 
	#__USE_ISOC95
 1

	)

294 #unde‡
__USE_ISOC99


295 
	#__USE_ISOC99
 1

	)

298 #ifde‡
_XOPEN_SOURCE_EXTENDED


299 
	#__USE_XOPEN_EXTENDED
 1

	)

304 #ifde‡
_LARGEFILE_SOURCE


305 
	#__USE_LARGEFILE
 1

	)

308 #ifde‡
_LARGEFILE64_SOURCE


309 
	#__USE_LARGEFILE64
 1

	)

312 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

313 
	#__USE_FILE_OFFSET64
 1

	)

316 #i‡
deföed
 
_DEFAULT_SOURCE


317 
	#__USE_MISC
 1

	)

320 #ifdef 
_ATFILE_SOURCE


321 
	#__USE_ATFILE
 1

	)

324 #ifdef 
_GNU_SOURCE


325 
	#__USE_GNU
 1

	)

328 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


329 
	#__USE_REENTRANT
 1

	)

332 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

333 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

334 #i‡
_FORTIFY_SOURCE
 > 1

335 
	#__USE_FORTIFY_LEVEL
 2

	)

337 
	#__USE_FORTIFY_LEVEL
 1

	)

340 
	#__USE_FORTIFY_LEVEL
 0

	)

345 
	~<°dc-¥edef.h
>

353 #unde‡
__GNU_LIBRARY__


354 
	#__GNU_LIBRARY__
 6

	)

358 
	#__GLIBC__
 2

	)

359 
	#__GLIBC_MINOR__
 23

	)

361 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

362 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

365 #i‚de‡
__ASSEMBLER__


366 #i‚de‡
_SYS_CDEFS_H


367 
	~<sys/cdefs.h
>

372 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


373 
	#__USE_LARGEFILE
 1

	)

374 
	#__USE_LARGEFILE64
 1

	)

380 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

381 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

382 && 
deföed
 
	g__exã∫_ölöe


383 
	#__USE_EXTERN_INLINES
 1

	)

391 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


150 
	t_IO_lock_t
;

156 
	s_IO_m¨kî
 {

157 
_IO_m¨kî
 *
	m_√xt
;

158 
_IO_FILE
 *
	m_sbuf
;

162 
	m_pos
;

164 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

165 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

166 
	mpublic
:

167 
°ªamm¨kî
(
°ªambuf
 *
sb
);

168 ~
°ªamm¨kî
();

169 
ßvög
(Ë{  
	m_•os
 == -2; }

170 
dñè
(
°ªamm¨kî
&);

171 
dñè
();

176 
	e__codecvt_ªsu…


178 
	m__codecvt_ok
,

179 
	m__codecvt_∑πül
,

180 
	m__codecvt_îr‹
,

181 
	m__codecvt_noc⁄v


184 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


187 
	s_IO_codecvt


189 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

190 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

191 
	m__mb°©e_t
 *,

192 c⁄° 
	mwch¨_t
 *,

193 c⁄° 
	mwch¨_t
 *,

194 c⁄° 
	mwch¨_t
 **, *,

196 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

197 
	m__mb°©e_t
 *, *,

199 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

200 
	m__mb°©e_t
 *,

202 c⁄° **, 
	mwch¨_t
 *,

203 
	mwch¨_t
 *, wchar_t **);

204 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

205 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

206 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

207 c⁄° *, c⁄° *, 
	m_IO_size_t
);

208 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

210 
_IO_ic⁄v_t
 
	m__cd_ö
;

211 
_IO_ic⁄v_t
 
	m__cd_out
;

215 
	s_IO_wide_d©a


217 
wch¨_t
 *
	m_IO_ªad_±r
;

218 
wch¨_t
 *
	m_IO_ªad_íd
;

219 
wch¨_t
 *
	m_IO_ªad_ba£
;

220 
wch¨_t
 *
	m_IO_wrôe_ba£
;

221 
wch¨_t
 *
	m_IO_wrôe_±r
;

222 
wch¨_t
 *
	m_IO_wrôe_íd
;

223 
wch¨_t
 *
	m_IO_buf_ba£
;

224 
wch¨_t
 *
	m_IO_buf_íd
;

226 
wch¨_t
 *
	m_IO_ßve_ba£
;

227 
wch¨_t
 *
	m_IO_backup_ba£
;

229 
wch¨_t
 *
	m_IO_ßve_íd
;

231 
__mb°©e_t
 
	m_IO_°©e
;

232 
__mb°©e_t
 
	m_IO_œ°_°©e
;

233 
_IO_codecvt
 
	m_codecvt
;

235 
wch¨_t
 
	m_sh‹tbuf
[1];

237 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

241 
	s_IO_FILE
 {

242 
	m_Êags
;

243 
	#_IO_fûe_Êags
 
_Êags


	)

247 * 
	m_IO_ªad_±r
;

248 * 
	m_IO_ªad_íd
;

249 * 
	m_IO_ªad_ba£
;

250 * 
	m_IO_wrôe_ba£
;

251 * 
	m_IO_wrôe_±r
;

252 * 
	m_IO_wrôe_íd
;

253 * 
	m_IO_buf_ba£
;

254 * 
	m_IO_buf_íd
;

256 *
	m_IO_ßve_ba£
;

257 *
	m_IO_backup_ba£
;

258 *
	m_IO_ßve_íd
;

260 
_IO_m¨kî
 *
	m_m¨kîs
;

262 
_IO_FILE
 *
	m_chaö
;

264 
	m_fûío
;

266 
	m_blksize
;

268 
	m_Êags2
;

270 
_IO_off_t
 
	m_ﬁd_off£t
;

272 
	#__HAVE_COLUMN


	)

274 
	m_cur_cﬁumn
;

275 sig√d 
	m_vèbÀ_off£t
;

276 
	m_sh‹tbuf
[1];

280 
_IO_lock_t
 *
	m_lock
;

281 #ifde‡
_IO_USE_OLD_IO_FILE


284 
	s_IO_FILE_com∂ëe


286 
_IO_FILE
 
	m_fûe
;

288 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

289 
_IO_off64_t
 
	m_off£t
;

290 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


292 
_IO_codecvt
 *
	m_codecvt
;

293 
_IO_wide_d©a
 *
	m_wide_d©a
;

294 
_IO_FILE
 *
	m_‰ìªs_li°
;

295 *
	m_‰ìªs_buf
;

297 *
	m__∑d1
;

298 *
	m__∑d2
;

299 *
	m__∑d3
;

300 *
	m__∑d4
;

302 
size_t
 
	m__∑d5
;

303 
	m_mode
;

305 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

309 #i‚de‡
__˝lu•lus


310 
_IO_FILE
 
	t_IO_FILE
;

313 
	g_IO_FILE_∂us
;

315 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

316 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

317 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

318 #i‚de‡
_LIBC


319 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

320 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

321 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

323 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

324 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

325 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

333 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

341 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

342 
	tsize_t
 
	t__n
);

350 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

353 
	t__io_˛o£_‚
 (*
	t__cookõ
);

356 #ifde‡
_GNU_SOURCE


358 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

359 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

360 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

361 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

366 
__io_ªad_‚
 *
	mªad
;

367 
__io_wrôe_‚
 *
	mwrôe
;

368 
__io_£ek_‚
 *
	m£ek
;

369 
__io_˛o£_‚
 *
	m˛o£
;

370 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

371 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

373 
	g_IO_cookõ_fûe
;

376 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

377 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

381 #ifde‡
__˝lu•lus


385 
__undîÊow
 (
_IO_FILE
 *);

386 
__uÊow
 (
_IO_FILE
 *);

387 
__ovîÊow
 (
_IO_FILE
 *, );

388 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


389 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

390 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

391 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

394 #i‡ 
__GNUC__
 >= 3

395 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

397 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

400 
	#_IO_gëc_u∆ocked
(
_Â
) \

401 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

402 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

403 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

404 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

405 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

406 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

407 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

409 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

410 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

412 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


413 
	#_IO_gëwc_u∆ocked
(
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

415 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

416 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

417 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

418 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

422 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

423 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

426 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

427 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

429 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

430 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

431 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

432 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

434 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

437 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

438 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

440 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

441 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

442 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

444 #ifde‡
_IO_MTSAFE_IO


445 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

446 
	#_IO_Êockfûe
(
_Â
) \

447 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

448 
	#_IO_fu∆ockfûe
(
_Â
) \

449 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
Ë

	)

453 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

454 
	#_IO_·rylockfûe
(
_Â
Ë

	)

455 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

460 
_IO_va_li°
, *
__ª°ri˘
);

461 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

462 
_IO_va_li°
);

463 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

464 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

466 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

467 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

469 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

471 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


472 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

473 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

474 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

475 #i‡
__GNUC__
 >= 2

478 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


479 
	~<shlib-com∑t.h
>

480 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

481 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

482 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

483 c⁄° 
_IO_°dö_u£d
;

484 
wók_exã∫
 (
_IO_°dö_u£d
);

487 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


488 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

492 
	#_IO_fwide
(
__Â
, 
__mode
) \

493 ({ 
__ªsu…
 = (
__mode
); \

494 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

496 i‡((
__Â
)->
_mode
 == 0) \

498 (
__Â
)->
_mode
 = -1; \

499 
__ªsu…
 = (
__Â
)->
_mode
; \

501 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

502 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

504 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

505 
__ªsu…
; })

	)

508 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

509 
_IO_va_li°
, *
__ª°ri˘
);

510 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

511 
_IO_va_li°
);

512 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

513 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

516 #ifde‡
__LDBL_COMPAT


517 
	~<bôs/libio-ldbl.h
>

520 #ifde‡
__˝lu•lus


	@/usr/include/linux/filter.h

5 #i‚de‡
__LINUX_FILTER_H__


6 
	#__LINUX_FILTER_H__


	)

9 
	~<löux/ty≥s.h
>

10 
	~<löux/bpf_comm⁄.h
>

15 
	#BPF_MAJOR_VERSION
 1

	)

16 
	#BPF_MINOR_VERSION
 1

	)

23 
	ssock_fûãr
 {

24 
__u16
 
	mcode
;

25 
__u8
 
	mjt
;

26 
__u8
 
	mjf
;

27 
__u32
 
	mk
;

30 
	ssock_Ârog
 {

31 
	mÀn
;

32 
sock_fûãr
 *
	mfûãr
;

36 
	#BPF_RVAL
(
code
Ë((codeË& 0x18)

	)

37 
	#BPF_A
 0x10

	)

40 
	#BPF_MISCOP
(
code
Ë((codeË& 0xf8)

	)

41 
	#BPF_TAX
 0x00

	)

42 
	#BPF_TXA
 0x80

	)

47 #i‚de‡
BPF_STMT


48 
	#BPF_STMT
(
code
, 
k
Ë{ ()(code), 0, 0, k }

	)

50 #i‚de‡
BPF_JUMP


51 
	#BPF_JUMP
(
code
, 
k
, 
jt
, 
jf
Ë{ ()(code), jt, jf, k }

	)

57 
	#BPF_MEMWORDS
 16

	)

64 
	#SKF_AD_OFF
 (-0x1000)

	)

65 
	#SKF_AD_PROTOCOL
 0

	)

66 
	#SKF_AD_PKTTYPE
 4

	)

67 
	#SKF_AD_IFINDEX
 8

	)

68 
	#SKF_AD_NLATTR
 12

	)

69 
	#SKF_AD_NLATTR_NEST
 16

	)

70 
	#SKF_AD_MARK
 20

	)

71 
	#SKF_AD_QUEUE
 24

	)

72 
	#SKF_AD_HATYPE
 28

	)

73 
	#SKF_AD_RXHASH
 32

	)

74 
	#SKF_AD_CPU
 36

	)

75 
	#SKF_AD_ALU_XOR_X
 40

	)

76 
	#SKF_AD_VLAN_TAG
 44

	)

77 
	#SKF_AD_VLAN_TAG_PRESENT
 48

	)

78 
	#SKF_AD_PAY_OFFSET
 52

	)

79 
	#SKF_AD_RANDOM
 56

	)

80 
	#SKF_AD_VLAN_TPID
 60

	)

81 
	#SKF_AD_MAX
 64

	)

83 
	#SKF_NET_OFF
 (-0x100000)

	)

84 
	#SKF_LL_OFF
 (-0x200000)

	)

86 
	#BPF_NET_OFF
 
SKF_NET_OFF


	)

87 
	#BPF_LL_OFF
 
SKF_LL_OFF


	)

	@/usr/include/linux/if_ether.h

21 #i‚de‡
_LINUX_IF_ETHER_H


22 
	#_LINUX_IF_ETHER_H


	)

24 
	~<löux/ty≥s.h
>

31 
	#ETH_ALEN
 6

	)

32 
	#ETH_HLEN
 14

	)

33 
	#ETH_ZLEN
 60

	)

34 
	#ETH_DATA_LEN
 1500

	)

35 
	#ETH_FRAME_LEN
 1514

	)

36 
	#ETH_FCS_LEN
 4

	)

42 
	#ETH_P_LOOP
 0x0060

	)

43 
	#ETH_P_PUP
 0x0200

	)

44 
	#ETH_P_PUPAT
 0x0201

	)

45 
	#ETH_P_TSN
 0x22F0

	)

46 
	#ETH_P_IP
 0x0800

	)

47 
	#ETH_P_X25
 0x0805

	)

48 
	#ETH_P_ARP
 0x0806

	)

49 
	#ETH_P_BPQ
 0x08FF

	)

50 
	#ETH_P_IEEEPUP
 0x0a00

	)

51 
	#ETH_P_IEEEPUPAT
 0x0a01

	)

52 
	#ETH_P_BATMAN
 0x4305

	)

53 
	#ETH_P_DEC
 0x6000

	)

54 
	#ETH_P_DNA_DL
 0x6001

	)

55 
	#ETH_P_DNA_RC
 0x6002

	)

56 
	#ETH_P_DNA_RT
 0x6003

	)

57 
	#ETH_P_LAT
 0x6004

	)

58 
	#ETH_P_DIAG
 0x6005

	)

59 
	#ETH_P_CUST
 0x6006

	)

60 
	#ETH_P_SCA
 0x6007

	)

61 
	#ETH_P_TEB
 0x6558

	)

62 
	#ETH_P_RARP
 0x8035

	)

63 
	#ETH_P_ATALK
 0x809B

	)

64 
	#ETH_P_AARP
 0x80F3

	)

65 
	#ETH_P_8021Q
 0x8100

	)

66 
	#ETH_P_IPX
 0x8137

	)

67 
	#ETH_P_IPV6
 0x86DD

	)

68 
	#ETH_P_PAUSE
 0x8808

	)

69 
	#ETH_P_SLOW
 0x8809

	)

70 
	#ETH_P_WCCP
 0x883E

	)

72 
	#ETH_P_MPLS_UC
 0x8847

	)

73 
	#ETH_P_MPLS_MC
 0x8848

	)

74 
	#ETH_P_ATMMPOA
 0x884¯

	)

75 
	#ETH_P_PPP_DISC
 0x8863

	)

76 
	#ETH_P_PPP_SES
 0x8864

	)

77 
	#ETH_P_LINK_CTL
 0x886¯

	)

78 
	#ETH_P_ATMFATE
 0x8884

	)

81 
	#ETH_P_PAE
 0x888E

	)

82 
	#ETH_P_AOE
 0x88A2

	)

83 
	#ETH_P_8021AD
 0x88A8

	)

84 
	#ETH_P_802_EX1
 0x88B5

	)

85 
	#ETH_P_TIPC
 0x88CA

	)

86 
	#ETH_P_8021AH
 0x88E7

	)

87 
	#ETH_P_MVRP
 0x88F5

	)

88 
	#ETH_P_1588
 0x88F7

	)

89 
	#ETH_P_PRP
 0x88FB

	)

90 
	#ETH_P_FCOE
 0x8906

	)

91 
	#ETH_P_TDLS
 0x890D

	)

92 
	#ETH_P_FIP
 0x8914

	)

93 
	#ETH_P_80221
 0x8917

	)

94 
	#ETH_P_LOOPBACK
 0x9000

	)

95 
	#ETH_P_QINQ1
 0x9100

	)

96 
	#ETH_P_QINQ2
 0x9200

	)

97 
	#ETH_P_QINQ3
 0x9300

	)

98 
	#ETH_P_EDSA
 0xDADA

	)

99 
	#ETH_P_AF_IUCV
 0xFBFB

	)

101 
	#ETH_P_802_3_MIN
 0x0600

	)

108 
	#ETH_P_802_3
 0x0001

	)

109 
	#ETH_P_AX25
 0x0002

	)

110 
	#ETH_P_ALL
 0x0003

	)

111 
	#ETH_P_802_2
 0x0004

	)

112 
	#ETH_P_SNAP
 0x0005

	)

113 
	#ETH_P_DDCMP
 0x0006

	)

114 
	#ETH_P_WAN_PPP
 0x0007

	)

115 
	#ETH_P_PPP_MP
 0x0008

	)

116 
	#ETH_P_LOCALTALK
 0x0009

	)

117 
	#ETH_P_CAN
 0x000C

	)

118 
	#ETH_P_CANFD
 0x000D

	)

119 
	#ETH_P_PPPTALK
 0x0010

	)

120 
	#ETH_P_TR_802_2
 0x0011

	)

121 
	#ETH_P_MOBITEX
 0x0015

	)

122 
	#ETH_P_CONTROL
 0x0016

	)

123 
	#ETH_P_IRDA
 0x0017

	)

124 
	#ETH_P_ECONET
 0x0018

	)

125 
	#ETH_P_HDLC
 0x0019

	)

126 
	#ETH_P_ARCNET
 0x001A

	)

127 
	#ETH_P_DSA
 0x001B

	)

128 
	#ETH_P_TRAILER
 0x001C

	)

129 
	#ETH_P_PHONET
 0x00F5

	)

130 
	#ETH_P_IEEE802154
 0x00F6

	)

131 
	#ETH_P_CAIF
 0x00F7

	)

132 
	#ETH_P_XDSA
 0x00F8

	)

138 
	sëhhdr
 {

139 
	mh_de°
[
ETH_ALEN
];

140 
	mh_sour˚
[
ETH_ALEN
];

141 
__be16
 
	mh_¥Ÿo
;

142 } 
__©åibuã__
((
∑cked
));

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/pcap/bpf.h

72 #i‡!
deföed
(
_NET_BPF_H_
Ë&& !deföed(
_NET_BPF_H_INCLUDED
Ë&& !deföed(
_BPF_H_
Ë&& !deföed(
_H_BPF
Ë&& !deföed(
lib_pˇp_bpf_h
)

73 
	#lib_pˇp_bpf_h


	)

75 #ifde‡
__˝lu•lus


80 
	#BPF_RELEASE
 199606

	)

82 #ifde‡
MSDOS


83 
	tbpf_öt32
;

84 
	tbpf_u_öt32
;

86 
	tbpf_öt32
;

87 
u_öt
 
	tbpf_u_öt32
;

96 #i‚de‡
__NëBSD__


97 
	#BPF_ALIGNMENT
 (
bpf_öt32
)

	)

99 
	#BPF_ALIGNMENT
 ()

	)

101 
	#BPF_WORDALIGN
(
x
Ë(((x)+(
BPF_ALIGNMENT
-1))&~(BPF_ALIGNMENT-1))

	)

106 
	sbpf_¥ogøm
 {

107 
u_öt
 
bf_Àn
;

108 
bpf_ö¢
 *
bf_ö¢s
;

133 
	#DLT_NULL
 0

	)

134 
	#DLT_EN10MB
 1

	)

135 
	#DLT_EN3MB
 2

	)

136 
	#DLT_AX25
 3

	)

137 
	#DLT_PRONET
 4

	)

138 
	#DLT_CHAOS
 5

	)

139 
	#DLT_IEEE802
 6

	)

140 
	#DLT_ARCNET
 7

	)

141 
	#DLT_SLIP
 8

	)

142 
	#DLT_PPP
 9

	)

143 
	#DLT_FDDI
 10

	)

154 
	#DLT_ATM_RFC1483
 11

	)

156 #ifde‡
__O≥nBSD__


157 
	#DLT_RAW
 14

	)

159 
	#DLT_RAW
 12

	)

168 #i‡
deföed
(
__NëBSD__
Ë|| deföed(
__FªeBSD__
)

169 #i‚de‡
DLT_SLIP_BSDOS


170 
	#DLT_SLIP_BSDOS
 13

	)

171 
	#DLT_PPP_BSDOS
 14

	)

174 
	#DLT_SLIP_BSDOS
 15

	)

175 
	#DLT_PPP_BSDOS
 16

	)

206 #i‡
deföed
(
__O≥nBSD__
Ë|| deföed(
__NëBSD__
Ë|| deföed(
__Døg⁄Fly__
Ë|| deföed(
__APPLE__
)

207 
	#DLT_PFSYNC
 18

	)

210 
	#DLT_ATM_CLIP
 19

	)

216 
	#DLT_REDBACK_SMARTEDGE
 32

	)

223 
	#DLT_PPP_SERIAL
 50

	)

224 
	#DLT_PPP_ETHER
 51

	)

233 
	#DLT_SYMANTEC_FIREWALL
 99

	)

252 
	#DLT_MATCHING_MIN
 104

	)

268 
	#DLT_C_HDLC
 104

	)

269 
	#DLT_CHDLC
 
DLT_C_HDLC


	)

271 
	#DLT_IEEE802_11
 105

	)

286 
	#DLT_FRELAY
 107

	)

295 #ifde‡
__O≥nBSD__


296 
	#DLT_LOOP
 12

	)

298 
	#DLT_LOOP
 108

	)

306 #ifde‡
__O≥nBSD__


307 
	#DLT_ENC
 13

	)

309 
	#DLT_ENC
 109

	)

322 
	#DLT_LINUX_SLL
 113

	)

327 
	#DLT_LTALK
 114

	)

332 
	#DLT_ECONET
 115

	)

337 
	#DLT_IPFILTER
 116

	)

342 
	#DLT_PFLOG
 117

	)

347 
	#DLT_CISCO_IOS
 118

	)

354 
	#DLT_PRISM_HEADER
 119

	)

360 
	#DLT_AIRONET_HEADER
 120

	)

400 #ifde‡
__FªeBSD__


401 
	#DLT_PFSYNC
 121

	)

403 
	#DLT_HHDLC
 121

	)

414 
	#DLT_IP_OVER_FC
 122

	)

430 
	#DLT_SUNATM
 123

	)

436 
	#DLT_RIO
 124

	)

437 
	#DLT_PCI_EXP
 125

	)

438 
	#DLT_AURORA
 126

	)

445 
	#DLT_IEEE802_11_RADIO
 127

	)

455 
	#DLT_TZSP
 128

	)

468 
	#DLT_ARCNET_LINUX
 129

	)

476 
	#DLT_JUNIPER_MLPPP
 130

	)

477 
	#DLT_JUNIPER_MLFR
 131

	)

478 
	#DLT_JUNIPER_ES
 132

	)

479 
	#DLT_JUNIPER_GGSN
 133

	)

480 
	#DLT_JUNIPER_MFR
 134

	)

481 
	#DLT_JUNIPER_ATM2
 135

	)

482 
	#DLT_JUNIPER_SERVICES
 136

	)

483 
	#DLT_JUNIPER_ATM1
 137

	)

500 
	#DLT_APPLE_IP_OVER_IEEE1394
 138

	)

506 
	#DLT_MTP2_WITH_PHDR
 139

	)

507 
	#DLT_MTP2
 140

	)

508 
	#DLT_MTP3
 141

	)

509 
	#DLT_SCCP
 142

	)

514 
	#DLT_DOCSIS
 143

	)

531 
	#DLT_LINUX_IRDA
 144

	)

536 
	#DLT_IBM_SP
 145

	)

537 
	#DLT_IBM_SN
 146

	)

564 
	#DLT_USER0
 147

	)

565 
	#DLT_USER1
 148

	)

566 
	#DLT_USER2
 149

	)

567 
	#DLT_USER3
 150

	)

568 
	#DLT_USER4
 151

	)

569 
	#DLT_USER5
 152

	)

570 
	#DLT_USER6
 153

	)

571 
	#DLT_USER7
 154

	)

572 
	#DLT_USER8
 155

	)

573 
	#DLT_USER9
 156

	)

574 
	#DLT_USER10
 157

	)

575 
	#DLT_USER11
 158

	)

576 
	#DLT_USER12
 159

	)

577 
	#DLT_USER13
 160

	)

578 
	#DLT_USER14
 161

	)

579 
	#DLT_USER15
 162

	)

591 
	#DLT_IEEE802_11_RADIO_AVS
 163

	)

599 
	#DLT_JUNIPER_MONITOR
 164

	)

604 
	#DLT_BACNET_MS_TP
 165

	)

620 
	#DLT_PPP_PPPD
 166

	)

626 
	#DLT_PPP_WITH_DIRECTION
 
DLT_PPP_PPPD


	)

627 
	#DLT_LINUX_PPP_WITHDIRECTION
 
DLT_PPP_PPPD


	)

635 
	#DLT_JUNIPER_PPPOE
 167

	)

636 
	#DLT_JUNIPER_PPPOE_ATM
 168

	)

638 
	#DLT_GPRS_LLC
 169

	)

639 
	#DLT_GPF_T
 170

	)

640 
	#DLT_GPF_F
 171

	)

646 
	#DLT_GCOM_T1E1
 172

	)

647 
	#DLT_GCOM_SERIAL
 173

	)

654 
	#DLT_JUNIPER_PIC_PEER
 174

	)

662 
	#DLT_ERF_ETH
 175

	)

663 
	#DLT_ERF_POS
 176

	)

671 
	#DLT_LINUX_LAPD
 177

	)

680 
	#DLT_JUNIPER_ETHER
 178

	)

681 
	#DLT_JUNIPER_PPP
 179

	)

682 
	#DLT_JUNIPER_FRELAY
 180

	)

683 
	#DLT_JUNIPER_CHDLC
 181

	)

688 
	#DLT_MFR
 182

	)

696 
	#DLT_JUNIPER_VP
 183

	)

705 
	#DLT_A429
 184

	)

712 
	#DLT_A653_ICM
 185

	)

718 
	#DLT_USB
 186

	)

724 
	#DLT_BLUETOOTH_HCI_H4
 187

	)

730 
	#DLT_IEEE802_16_MAC_CPS
 188

	)

736 
	#DLT_USB_LINUX
 189

	)

745 
	#DLT_CAN20B
 190

	)

751 
	#DLT_IEEE802_15_4_LINUX
 191

	)

757 
	#DLT_PPI
 192

	)

763 
	#DLT_IEEE802_16_MAC_CPS_RADIO
 193

	)

771 
	#DLT_JUNIPER_ISM
 194

	)

779 
	#DLT_IEEE802_15_4
 195

	)

785 
	#DLT_SITA
 196

	)

792 
	#DLT_ERF
 197

	)

799 
	#DLT_RAIF1
 198

	)

806 
	#DLT_IPMB
 199

	)

813 
	#DLT_JUNIPER_ST
 200

	)

819 
	#DLT_BLUETOOTH_HCI_H4_WITH_PHDR
 201

	)

828 
	#DLT_AX25_KISS
 202

	)

835 
	#DLT_LAPD
 203

	)

843 
	#DLT_PPP_WITH_DIR
 204

	)

844 
	#DLT_C_HDLC_WITH_DIR
 205

	)

845 
	#DLT_FRELAY_WITH_DIR
 206

	)

846 
	#DLT_LAPB_WITH_DIR
 207

	)

857 
	#DLT_IPMB_LINUX
 209

	)

863 
	#DLT_FLEXRAY
 210

	)

870 
	#DLT_MOST
 211

	)

877 
	#DLT_LIN
 212

	)

883 
	#DLT_X2E_SERIAL
 213

	)

889 
	#DLT_X2E_XORAYA
 214

	)

900 
	#DLT_IEEE802_15_4_NONASK_PHY
 215

	)

908 
	#DLT_LINUX_EVDEV
 216

	)

915 
	#DLT_GSMTAP_UM
 217

	)

916 
	#DLT_GSMTAP_ABIS
 218

	)

923 
	#DLT_MPLS
 219

	)

929 
	#DLT_USB_LINUX_MMAPPED
 220

	)

935 
	#DLT_DECT
 221

	)

946 
	#DLT_AOS
 222

	)

955 
	#DLT_WIHART
 223

	)

961 
	#DLT_FC_2
 224

	)

975 
	#DLT_FC_2_WITH_FRAME_DELIMS
 225

	)

1023 
	#DLT_IPNET
 226

	)

1032 
	#DLT_CAN_SOCKETCAN
 227

	)

1038 
	#DLT_IPV4
 228

	)

1039 
	#DLT_IPV6
 229

	)

1046 
	#DLT_IEEE802_15_4_NOFCS
 230

	)

1064 
	#DLT_DBUS
 231

	)

1070 
	#DLT_JUNIPER_VS
 232

	)

1071 
	#DLT_JUNIPER_SRX_E2E
 233

	)

1072 
	#DLT_JUNIPER_FIBRECHANNEL
 234

	)

1084 
	#DLT_DVB_CI
 235

	)

1091 
	#DLT_MUX27010
 236

	)

1097 
	#DLT_STANAG_5066_D_PDU
 237

	)

1103 
	#DLT_JUNIPER_ATM_CEMIC
 238

	)

1111 
	#DLT_NFLOG
 239

	)

1121 
	#DLT_NETANALYZER
 240

	)

1132 
	#DLT_NETANALYZER_TRANSPARENT
 241

	)

1139 
	#DLT_IPOIB
 242

	)

1146 
	#DLT_MPEG_2_TS
 243

	)

1154 
	#DLT_NG40
 244

	)

1164 
	#DLT_NFC_LLCP
 245

	)

1173 #i‡!
deföed
(
__FªeBSD__
Ë&& !deföed(
__O≥nBSD__
Ë&& !deföed(
__NëBSD__
Ë&& !deföed(
__Døg⁄Fly__
Ë&& !deföed(
__APPLE__
)

1174 
	#DLT_PFSYNC
 246

	)

1182 
	#DLT_INFINIBAND
 247

	)

1189 
	#DLT_SCTP
 248

	)

1196 
	#DLT_USBPCAP
 249

	)

1204 
	#DLT_RTAC_SERIAL
 250

	)

1211 
	#DLT_BLUETOOTH_LE_LL
 251

	)

1224 
	#DLT_WIRESHARK_UPPER_PDU
 252

	)

1229 
	#DLT_NETLINK
 253

	)

1234 
	#DLT_BLUETOOTH_LINUX_MONITOR
 254

	)

1240 
	#DLT_BLUETOOTH_BREDR_BB
 255

	)

1245 
	#DLT_BLUETOOTH_LE_LL_WITH_PHDR
 256

	)

1250 
	#DLT_PROFIBUS_DL
 257

	)

1296 #ifde‡
__APPLE__


1297 
	#DLT_PKTAP
 
DLT_USER2


	)

1299 
	#DLT_PKTAP
 258

	)

1307 
	#DLT_EPON
 259

	)

1313 
	#DLT_IPMI_HPM_2
 260

	)

1318 
	#DLT_ZWAVE_R1_R2
 261

	)

1319 
	#DLT_ZWAVE_R3
 262

	)

1325 
	#DLT_WATTSTOPPER_DLM
 263

	)

1327 
	#DLT_MATCHING_MAX
 263

	)

1334 
	#DLT_CLASS
(
x
Ë((xË& 0x03ff0000)

	)

1343 
	#DLT_CLASS_NETBSD_RAWAF
 0x02240000

	)

1344 
	#DLT_NETBSD_RAWAF
(
af
Ë(
DLT_CLASS_NETBSD_RAWAF
 | (af))

	)

1345 
	#DLT_NETBSD_RAWAF_AF
(
x
Ë((xË& 0x0000ffff)

	)

1346 
	#DLT_IS_NETBSD_RAWAF
(
x
Ë(
	`DLT_CLASS
(xË=
DLT_CLASS_NETBSD_RAWAF
)

	)

1363 
	#BPF_CLASS
(
code
Ë((codeË& 0x07)

	)

1364 
	#BPF_LD
 0x00

	)

1365 
	#BPF_LDX
 0x01

	)

1366 
	#BPF_ST
 0x02

	)

1367 
	#BPF_STX
 0x03

	)

1368 
	#BPF_ALU
 0x04

	)

1369 
	#BPF_JMP
 0x05

	)

1370 
	#BPF_RET
 0x06

	)

1371 
	#BPF_MISC
 0x07

	)

1374 
	#BPF_SIZE
(
code
Ë((codeË& 0x18)

	)

1375 
	#BPF_W
 0x00

	)

1376 
	#BPF_H
 0x08

	)

1377 
	#BPF_B
 0x10

	)

1379 
	#BPF_MODE
(
code
Ë((codeË& 0xe0)

	)

1380 
	#BPF_IMM
 0x00

	)

1381 
	#BPF_ABS
 0x20

	)

1382 
	#BPF_IND
 0x40

	)

1383 
	#BPF_MEM
 0x60

	)

1384 
	#BPF_LEN
 0x80

	)

1385 
	#BPF_MSH
 0xa0

	)

1390 
	#BPF_OP
(
code
Ë((codeË& 0xf0)

	)

1391 
	#BPF_ADD
 0x00

	)

1392 
	#BPF_SUB
 0x10

	)

1393 
	#BPF_MUL
 0x20

	)

1394 
	#BPF_DIV
 0x30

	)

1395 
	#BPF_OR
 0x40

	)

1396 
	#BPF_AND
 0x50

	)

1397 
	#BPF_LSH
 0x60

	)

1398 
	#BPF_RSH
 0x70

	)

1399 
	#BPF_NEG
 0x80

	)

1400 
	#BPF_MOD
 0x90

	)

1401 
	#BPF_XOR
 0xa0

	)

1408 
	#BPF_JA
 0x00

	)

1409 
	#BPF_JEQ
 0x10

	)

1410 
	#BPF_JGT
 0x20

	)

1411 
	#BPF_JGE
 0x30

	)

1412 
	#BPF_JSET
 0x40

	)

1424 
	#BPF_SRC
(
code
Ë((codeË& 0x08)

	)

1425 
	#BPF_K
 0x00

	)

1426 
	#BPF_X
 0x08

	)

1429 
	#BPF_RVAL
(
code
Ë((codeË& 0x18)

	)

1430 
	#BPF_A
 0x10

	)

1434 
	#BPF_MISCOP
(
code
Ë((codeË& 0xf8)

	)

1435 
	#BPF_TAX
 0x00

	)

1452 
	#BPF_TXA
 0x80

	)

1472 
	sbpf_ö¢
 {

1473 
u_sh‹t
 
code
;

1474 
u_ch¨
 
jt
;

1475 
u_ch¨
 
jf
;

1476 
bpf_u_öt32
 
k
;

1484 
	sbpf_aux_d©a
 {

1485 
u_sh‹t
 
vœn_èg_¥e£¡
;

1486 
u_sh‹t
 
vœn_èg
;

1492 
	#BPF_STMT
(
code
, 
k
Ë{ (
u_sh‹t
)(code), 0, 0, k }

	)

1493 
	#BPF_JUMP
(
code
, 
k
, 
jt
, 
jf
Ë{ (
u_sh‹t
)(code), jt, jf, k }

	)

1495 #i‡
__STDC__
 || 
deföed
(
__˝lu•lus
)

1496 
bpf_vÆid©e
(c⁄° 
bpf_ö¢
 *, );

1497 
u_öt
 
bpf_fûãr
(c⁄° 
bpf_ö¢
 *, c⁄° 
u_ch¨
 *, u_int, u_int);

1498 
u_öt
 
bpf_fûãr_wôh_aux_d©a
(c⁄° 
bpf_ö¢
 *, c⁄° 
u_ch¨
 *, u_öt, u_öt, c⁄° 
bpf_aux_d©a
 *);

1500 
bpf_vÆid©e
();

1501 
u_öt
 
bpf_fûãr
();

1502 
u_öt
 
bpf_fûãr
();

1508 
	#BPF_MEMWORDS
 16

	)

1510 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/linux/bpf_common.h

1 #i‚de‡
__LINUX_BPF_COMMON_H__


2 
	#__LINUX_BPF_COMMON_H__


	)

5 
	#BPF_CLASS
(
code
Ë((codeË& 0x07)

	)

6 
	#BPF_LD
 0x00

	)

7 
	#BPF_LDX
 0x01

	)

8 
	#BPF_ST
 0x02

	)

9 
	#BPF_STX
 0x03

	)

10 
	#BPF_ALU
 0x04

	)

11 
	#BPF_JMP
 0x05

	)

12 
	#BPF_RET
 0x06

	)

13 
	#BPF_MISC
 0x07

	)

16 
	#BPF_SIZE
(
code
Ë((codeË& 0x18)

	)

17 
	#BPF_W
 0x00

	)

18 
	#BPF_H
 0x08

	)

19 
	#BPF_B
 0x10

	)

20 
	#BPF_MODE
(
code
Ë((codeË& 0xe0)

	)

21 
	#BPF_IMM
 0x00

	)

22 
	#BPF_ABS
 0x20

	)

23 
	#BPF_IND
 0x40

	)

24 
	#BPF_MEM
 0x60

	)

25 
	#BPF_LEN
 0x80

	)

26 
	#BPF_MSH
 0xa0

	)

29 
	#BPF_OP
(
code
Ë((codeË& 0xf0)

	)

30 
	#BPF_ADD
 0x00

	)

31 
	#BPF_SUB
 0x10

	)

32 
	#BPF_MUL
 0x20

	)

33 
	#BPF_DIV
 0x30

	)

34 
	#BPF_OR
 0x40

	)

35 
	#BPF_AND
 0x50

	)

36 
	#BPF_LSH
 0x60

	)

37 
	#BPF_RSH
 0x70

	)

38 
	#BPF_NEG
 0x80

	)

39 
	#BPF_MOD
 0x90

	)

40 
	#BPF_XOR
 0xa0

	)

42 
	#BPF_JA
 0x00

	)

43 
	#BPF_JEQ
 0x10

	)

44 
	#BPF_JGT
 0x20

	)

45 
	#BPF_JGE
 0x30

	)

46 
	#BPF_JSET
 0x40

	)

47 
	#BPF_SRC
(
code
Ë((codeË& 0x08)

	)

48 
	#BPF_K
 0x00

	)

49 
	#BPF_X
 0x08

	)

51 #i‚de‡
BPF_MAXINSNS


52 
	#BPF_MAXINSNS
 4096

	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__FD_SETSIZE


22 
	#__FD_SETSIZE
 1024

	)

25 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

26 } 
	t__kî√l_fd_£t
;

29 (*
	t__kî√l_sigh™dÀr_t
)();

32 
	t__kî√l_key_t
;

33 
	t__kî√l_mqd_t
;

35 
	~<asm/posix_ty≥s.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

55 
	#__STDC_ISO_10646__
 201505L

	)

58 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/linux/stddef.h

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

157 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

158 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

159 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

161 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

166 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

169 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

170 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

171 
__END_NAMESPACE_STD


173 #ifde‡
__USE_XOPEN2K8


175 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

178 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

179 
size_t
 
__n
Ë
__THROW
;

183 
	~<xloˇÀ.h
>

185 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
__loˇÀ_t
 
__loc
Ë
__THROW
;

188 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

189 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


195 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

199 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

200 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

201 
__END_NAMESPACE_STD


203 #ifde‡
__USE_XOPEN2K8


209 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

210 
__loˇÀ_t
 
__loc
Ë
__THROW
;

215 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

216 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

219 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

222 
__BEGIN_NAMESPACE_STD


224 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


225 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

226 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

230 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

231 
__THROW
 
__©åibuã_puª__
;

234 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


235 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

236 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

240 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

241 
__THROW
 
__©åibuã_puª__
;

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_GNU


248 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

249 
__THROW
 
__©åibuã_puª__
;

252 
__BEGIN_NAMESPACE_STD


255 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

256 
__THROW
 
__©åibuã_puª__
;

259 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

260 
__THROW
 
__©åibuã_puª__
;

262 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


263 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

265 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

266 c⁄° 
wch¨_t
 *
__ac˚±
)

267 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

269 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

270 
__THROW
 
__©åibuã_puª__
;

273 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


274 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

276 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

277 c⁄° 
wch¨_t
 *
__√edÀ
)

278 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

280 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

281 
__THROW
 
__©åibuã_puª__
;

285 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

287 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

290 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

291 
__END_NAMESPACE_STD


293 #ifde‡
__USE_XOPEN


295 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


296 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

298 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

299 c⁄° 
wch¨_t
 *
__√edÀ
)

300 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

302 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

303 
__THROW
 
__©åibuã_puª__
;

307 #ifde‡
__USE_XOPEN2K8


309 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

310 
__THROW
 
__©åibuã_puª__
;

314 
__BEGIN_NAMESPACE_STD


316 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


317 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

319 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

320 
size_t
 
__n
)

321 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

323 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

328 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

329 
__THROW
 
__©åibuã_puª__
;

332 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

333 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

337 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

338 
__THROW
;

341 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

342 
__END_NAMESPACE_STD


344 #ifde‡
__USE_GNU


347 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

348 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

349 
__THROW
;

353 
__BEGIN_NAMESPACE_STD


356 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

360 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

364 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

368 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

369 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

370 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

373 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

377 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

378 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

379 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

380 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

381 
__END_NAMESPACE_STD


383 #ifde‡
__USE_EXTERN_INLINES


389 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

390 
__exã∫_ölöe
 
wöt_t


391 
	`__NTH
 (
	$btowc
 (
__c
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

393 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

395 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

396 
__exã∫_ölöe
 

397 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

398 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

399 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

401 
__exã∫_ölöe
 
size_t


402 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

403 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

404 {  (
__ps
 !
NULL


405 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

408 
__BEGIN_NAMESPACE_STD


411 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

412 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

418 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

419 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

420 
__END_NAMESPACE_STD


423 #ifdef 
__USE_XOPEN2K8


426 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

427 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

428 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

432 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

433 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

434 
size_t
 
__nwc
, size_à
__Àn
,

435 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

440 #ifde‡
__USE_XOPEN


442 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

446 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

450 
__BEGIN_NAMESPACE_STD


453 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

454 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
__END_NAMESPACE_STD


457 #ifde‡
__USE_ISOC99


458 
__BEGIN_NAMESPACE_C99


460 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

462 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

463 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

464 
__END_NAMESPACE_C99


468 
__BEGIN_NAMESPACE_STD


471 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

476 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

477 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

478 
__THROW
;

479 
__END_NAMESPACE_STD


481 #ifde‡
__USE_ISOC99


482 
__BEGIN_NAMESPACE_C99


485 
__exãnsi⁄__


486 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

487 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

488 
__THROW
;

492 
__exãnsi⁄__


493 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

494 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

495 
__ba£
Ë
__THROW
;

496 
__END_NAMESPACE_C99


499 #ifde‡
__USE_GNU


502 
__exãnsi⁄__


503 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

504 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

505 
__THROW
;

509 
__exãnsi⁄__


510 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

511 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

512 
__ba£
Ë
__THROW
;

515 #ifde‡
__USE_GNU


529 
	~<xloˇÀ.h
>

533 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

534 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

535 
__loˇÀ_t
 
__loc
Ë
__THROW
;

537 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

546 
__exãnsi⁄__


547 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

549 
__ba£
, 
__loˇÀ_t
 
__loc
)

550 
__THROW
;

552 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

553 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

554 
__THROW
;

556 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

557 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

558 
__THROW
;

560 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

561 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

562 
__loˇÀ_t
 
__loc
Ë
__THROW
;

566 #ifde‡
__USE_XOPEN2K8


569 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

570 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

574 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

575 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
;

583 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

586 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


587 
__BEGIN_NAMESPACE_STD


590 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

597 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

598 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

607 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

608 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

609 
__THROW
 ;

615 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

616 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

617 
__gnuc_va_li°
 
__¨g
)

623 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

628 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

629 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

630 
__gnuc_va_li°
 
__¨g
)

631 
__THROW
 ;

638 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

639 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

648 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

649 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

650 
__THROW
 ;

652 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

653 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

654 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

655 #ifde‡
__REDIRECT


659 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

660 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_fwsˇnf
)

663 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

664 
__isoc99_wsˇnf
)

666 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

667 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

668 ...), 
__isoc99_swsˇnf
)

671 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

673 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

674 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

675 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

676 
__THROW
;

677 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

678 
	#wsˇnf
 
__isoc99_wsˇnf


	)

679 
	#swsˇnf
 
__isoc99_swsˇnf


	)

683 
__END_NAMESPACE_STD


686 #ifde‡
__USE_ISOC99


687 
__BEGIN_NAMESPACE_C99


692 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

693 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

694 
__gnuc_va_li°
 
__¨g
)

700 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

704 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

705 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

706 
__gnuc_va_li°
 
__¨g
)

707 
__THROW
 ;

709 #i‡!
deföed
 
__USE_GNU
 \

710 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

711 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

712 #ifde‡
__REDIRECT


713 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

714 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

717 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

718 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

720 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

721 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

725 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

726 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
);

728 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
);

730 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

731 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

732 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

733 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

734 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

735 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

739 
__END_NAMESPACE_C99


743 
__BEGIN_NAMESPACE_STD


748 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

755 
wöt_t
 
	`gëwch¨
 ();

762 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

769 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

777 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

778 
__FILE
 *
__ª°ri˘
 
__°ªam
);

784 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

785 
__FILE
 *
__ª°ri˘
 
__°ªam
);

792 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

793 
__END_NAMESPACE_STD


796 #ifde‡
__USE_GNU


804 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

805 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

813 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

821 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

830 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

831 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

840 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

841 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

850 
__FILE
 *
__ª°ri˘
 
__°ªam
);

854 
__BEGIN_NAMESPACE_C99


858 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

859 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

861 
__END_NAMESPACE_C99


863 #ifde‡
__USE_GNU


864 
	~<xloˇÀ.h
>

868 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

869 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

870 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

871 
__loˇÀ_t
 
__loc
Ë
__THROW
;

880 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


881 
	#__√ed_iswxxx


	)

882 
	~<w˘y≥.h
>

886 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


887 
	~<bôs/wch¨2.h
>

890 #ifde‡
__LDBL_COMPAT


891 
	~<bôs/wch¨-ldbl.h
>

894 
__END_DECLS


902 #unde‡
__√ed_mb°©e_t


903 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
282
6834
app/cmd-functions.c
app/cmd-functions.h
app/lpktgenlib.c
app/lpktgenlib.h
app/pktgen-arp.c
app/pktgen-arp.h
app/pktgen-capture.c
app/pktgen-capture.h
app/pktgen-cmds.c
app/pktgen-cmds.h
app/pktgen-constants.h
app/pktgen-cpu.c
app/pktgen-cpu.h
app/pktgen-display.c
app/pktgen-display.h
app/pktgen-dns.c
app/pktgen-dns.h
app/pktgen-dump.c
app/pktgen-dump.h
app/pktgen-ether.c
app/pktgen-ether.h
app/pktgen-gre.c
app/pktgen-gre.h
app/pktgen-gtpu.c
app/pktgen-gtpu.h
app/pktgen-ipv4.c
app/pktgen-ipv4.h
app/pktgen-ipv6.c
app/pktgen-ipv6.h
app/pktgen-log.c
app/pktgen-log.h
app/pktgen-main.c
app/pktgen-main.h
app/pktgen-pcap.c
app/pktgen-pcap.h
app/pktgen-port-cfg.c
app/pktgen-port-cfg.h
app/pktgen-random.c
app/pktgen-random.h
app/pktgen-range.c
app/pktgen-range.h
app/pktgen-seq.c
app/pktgen-seq.h
app/pktgen-stats.c
app/pktgen-stats.h
app/pktgen-tcp.c
app/pktgen-tcp.h
app/pktgen-udp.c
app/pktgen-udp.h
app/pktgen-vlan.c
app/pktgen-vlan.h
app/pktgen.c
app/pktgen.h
app/t/commands.t.c
app/t/helpers/fake_impl.c
app/t/helpers/test_helpers.h
app/t/libtap/tap.c
app/t/libtap/tap.h
app/t/lpktgenlib.t.c
app/t/pktgen-arp.t.c
app/t/pktgen-capture.t.c
app/t/pktgen-cmds.t.c
app/t/pktgen-cpu.t.c
app/t/pktgen-dump.t.c
app/t/pktgen-ether.t.c
app/t/pktgen-gre.t.c
app/t/pktgen-ipv4.t.c
app/t/pktgen-ipv6.t.c
app/t/pktgen-main.t.c
app/t/pktgen-pcap.t.c
app/t/pktgen-port-cfg.t.c
app/t/pktgen-random.t.c
app/t/pktgen-range.t.c
app/t/pktgen-seq.t.c
app/t/pktgen-stats.t.c
app/t/pktgen-tcp.t.c
app/t/pktgen-udp.t.c
app/t/pktgen-vlan.t.c
app/t/pktgen.t.c
app/xorshift128plus.h
gui/pktgen-gui.c
gui/pktgen-gui.h
lib/archive/lua-5.3.0/src/lapi.c
lib/archive/lua-5.3.0/src/lapi.h
lib/archive/lua-5.3.0/src/lauxlib.c
lib/archive/lua-5.3.0/src/lauxlib.h
lib/archive/lua-5.3.0/src/lbaselib.c
lib/archive/lua-5.3.0/src/lbitlib.c
lib/archive/lua-5.3.0/src/lcode.c
lib/archive/lua-5.3.0/src/lcode.h
lib/archive/lua-5.3.0/src/lcorolib.c
lib/archive/lua-5.3.0/src/lctype.c
lib/archive/lua-5.3.0/src/lctype.h
lib/archive/lua-5.3.0/src/ldblib.c
lib/archive/lua-5.3.0/src/ldebug.c
lib/archive/lua-5.3.0/src/ldebug.h
lib/archive/lua-5.3.0/src/ldo.c
lib/archive/lua-5.3.0/src/ldo.h
lib/archive/lua-5.3.0/src/ldump.c
lib/archive/lua-5.3.0/src/lfunc.c
lib/archive/lua-5.3.0/src/lfunc.h
lib/archive/lua-5.3.0/src/lgc.c
lib/archive/lua-5.3.0/src/lgc.h
lib/archive/lua-5.3.0/src/linit.c
lib/archive/lua-5.3.0/src/liolib.c
lib/archive/lua-5.3.0/src/llex.c
lib/archive/lua-5.3.0/src/llex.h
lib/archive/lua-5.3.0/src/llimits.h
lib/archive/lua-5.3.0/src/lmathlib.c
lib/archive/lua-5.3.0/src/lmem.c
lib/archive/lua-5.3.0/src/lmem.h
lib/archive/lua-5.3.0/src/loadlib.c
lib/archive/lua-5.3.0/src/lobject.c
lib/archive/lua-5.3.0/src/lobject.h
lib/archive/lua-5.3.0/src/lopcodes.c
lib/archive/lua-5.3.0/src/lopcodes.h
lib/archive/lua-5.3.0/src/loslib.c
lib/archive/lua-5.3.0/src/lparser.c
lib/archive/lua-5.3.0/src/lparser.h
lib/archive/lua-5.3.0/src/lprefix.h
lib/archive/lua-5.3.0/src/lstate.c
lib/archive/lua-5.3.0/src/lstate.h
lib/archive/lua-5.3.0/src/lstring.c
lib/archive/lua-5.3.0/src/lstring.h
lib/archive/lua-5.3.0/src/lstrlib.c
lib/archive/lua-5.3.0/src/ltable.c
lib/archive/lua-5.3.0/src/ltable.h
lib/archive/lua-5.3.0/src/ltablib.c
lib/archive/lua-5.3.0/src/ltm.c
lib/archive/lua-5.3.0/src/ltm.h
lib/archive/lua-5.3.0/src/lua-socket.c
lib/archive/lua-5.3.0/src/lua-socket.h
lib/archive/lua-5.3.0/src/lua.c
lib/archive/lua-5.3.0/src/lua.h
lib/archive/lua-5.3.0/src/lua.hpp
lib/archive/lua-5.3.0/src/lua_shell.c
lib/archive/lua-5.3.0/src/lua_shell.h
lib/archive/lua-5.3.0/src/luac.c
lib/archive/lua-5.3.0/src/luaconf.h
lib/archive/lua-5.3.0/src/lualib.h
lib/archive/lua-5.3.0/src/lundump.c
lib/archive/lua-5.3.0/src/lundump.h
lib/archive/lua-5.3.0/src/lutf8lib.c
lib/archive/lua-5.3.0/src/lvm.c
lib/archive/lua-5.3.0/src/lvm.h
lib/archive/lua-5.3.0/src/lzio.c
lib/archive/lua-5.3.0/src/lzio.h
lib/common/wr_cksum.c
lib/common/wr_cksum.h
lib/common/wr_copyright_info.c
lib/common/wr_copyright_info.h
lib/common/wr_core_info.c
lib/common/wr_core_info.h
lib/common/wr_coremap.c
lib/common/wr_coremap.h
lib/common/wr_cycles.h
lib/common/wr_inet.h
lib/common/wr_l2p.c
lib/common/wr_l2p.h
lib/common/wr_lscpu.c
lib/common/wr_lscpu.h
lib/common/wr_mbuf.h
lib/common/wr_pcap.c
lib/common/wr_pcap.h
lib/common/wr_port_config.c
lib/common/wr_port_config.h
lib/common/wr_scrn.c
lib/common/wr_scrn.h
lib/common/wr_utils.c
lib/common/wr_utils.h
lib/lua/src/lapi.c
lib/lua/src/lapi.h
lib/lua/src/lauxlib.c
lib/lua/src/lauxlib.h
lib/lua/src/lbaselib.c
lib/lua/src/lbitlib.c
lib/lua/src/lcode.c
lib/lua/src/lcode.h
lib/lua/src/lcorolib.c
lib/lua/src/lctype.c
lib/lua/src/lctype.h
lib/lua/src/ldblib.c
lib/lua/src/ldebug.c
lib/lua/src/ldebug.h
lib/lua/src/ldo.c
lib/lua/src/ldo.h
lib/lua/src/ldump.c
lib/lua/src/lfunc.c
lib/lua/src/lfunc.h
lib/lua/src/lgc.c
lib/lua/src/lgc.h
lib/lua/src/linit.c
lib/lua/src/liolib.c
lib/lua/src/llex.c
lib/lua/src/llex.h
lib/lua/src/llimits.h
lib/lua/src/lmathlib.c
lib/lua/src/lmem.c
lib/lua/src/lmem.h
lib/lua/src/loadlib.c
lib/lua/src/lobject.c
lib/lua/src/lobject.h
lib/lua/src/lopcodes.c
lib/lua/src/lopcodes.h
lib/lua/src/loslib.c
lib/lua/src/lparser.c
lib/lua/src/lparser.h
lib/lua/src/lprefix.h
lib/lua/src/lstate.c
lib/lua/src/lstate.h
lib/lua/src/lstring.c
lib/lua/src/lstring.h
lib/lua/src/lstrlib.c
lib/lua/src/ltable.c
lib/lua/src/ltable.h
lib/lua/src/ltablib.c
lib/lua/src/ltm.c
lib/lua/src/ltm.h
lib/lua/src/lua-socket.c
lib/lua/src/lua-socket.h
lib/lua/src/lua.c
lib/lua/src/lua.h
lib/lua/src/lua.hpp
lib/lua/src/lua_shell.c
lib/lua/src/lua_shell.h
lib/lua/src/luac.c
lib/lua/src/luaconf.h
lib/lua/src/lualib.h
lib/lua/src/lundump.c
lib/lua/src/lundump.h
lib/lua/src/lutf8lib.c
lib/lua/src/lvm.c
lib/lua/src/lvm.h
lib/lua/src/lzio.c
lib/lua/src/lzio.h
test.c
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/libgen.h
/usr/include/limits.h
/usr/include/linux/if_tun.h
/usr/include/locale.h
/usr/include/math.h
/usr/include/net/if.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pcap/pcap.h
/usr/include/poll.h
/usr/include/regex.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/linux/filter.h
/usr/include/linux/if_ether.h
/usr/include/linux/types.h
/usr/include/pcap/bpf.h
/usr/include/rpc/netdb.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/linux/bpf_common.h
/usr/include/linux/posix_types.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/linux/stddef.h
/usr/include/wchar.h
/usr/include/wctype.h
